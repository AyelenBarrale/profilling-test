v8-version,9,4,146,19,-node.13,0
v8-platform,macos,macos
shared-library,/usr/local/bin/node,0x10831b000,0x109703447,137469952
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x7ff81f2ebfd0,0x7ff81f4acba8,519606272
shared-library,/usr/lib/libobjc.A.dylib,0x7ff81f132b80,0x7ff81f158fc3,519606272
shared-library,/usr/lib/liboah.dylib,0x7ff82a086390,0x7ff82a08beaa,519606272
shared-library,/usr/lib/libfakelink.dylib,0x7ff82a0b9e30,0x7ff82a0bcbc5,519606272
shared-library,/usr/lib/libicucore.A.dylib,0x7ff821647280,0x7ff82186163a,519606272
shared-library,/usr/lib/libSystem.B.dylib,0x7ff82a0b873b,0x7ff82a0b8cf0,519606272
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x7ff82a0bdc46,0x7ff82a0bdebe,519606272
shared-library,/usr/lib/libc++abi.dylib,0x7ff81f251060,0x7ff81f262e20,519606272
shared-library,/usr/lib/libc++.1.dylib,0x7ff81f1fbe60,0x7ff81f246170,519606272
shared-library,/usr/lib/system/libcache.dylib,0x7ff82a0b2aa8,0x7ff82a0b549e,519606272
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x7ff82a06f090,0x7ff82a078eec,519606272
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x7ff82a097ff0,0x7ff82a09cadd,519606272
shared-library,/usr/lib/system/libcopyfile.dylib,0x7ff82a08da10,0x7ff82a095440,519606272
shared-library,/usr/lib/system/libcorecrypto.dylib,0x7ff81f02c840,0x7ff81f09b240,519606272
shared-library,/usr/lib/system/libdispatch.dylib,0x7ff81f0eb310,0x7ff81f1207cd,519606272
shared-library,/usr/lib/system/libdyld.dylib,0x7ff81f2a9d70,0x7ff81f2b3fc0,519606272
shared-library,/usr/lib/system/libkeymgr.dylib,0x7ff82a0a9ae9,0x7ff82a0a9f18,519606272
shared-library,/usr/lib/system/libmacho.dylib,0x7ff82a04d4a0,0x7ff82a051959,519606272
shared-library,/usr/lib/system/libquarantine.dylib,0x7ff8296e40f4,0x7ff8296e5cf8,519606272
shared-library,/usr/lib/system/libremovefile.dylib,0x7ff82a0a7920,0x7ff82a0a8d9b,519606272
shared-library,/usr/lib/system/libsystem_asl.dylib,0x7ff824202478,0x7ff824216715,519606272
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x7ff81efda2c6,0x7ff81efda834,519606272
shared-library,/usr/lib/system/libsystem_c.dylib,0x7ff81f16efb0,0x7ff81f1f0456,519606272
shared-library,/usr/lib/system/libsystem_collections.dylib,0x7ff82a09ffee,0x7ff82a0a39dc,519606272
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x7ff8288cb060,0x7ff8288cd8c8,519606272
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x7ff827b8d2ac,0x7ff827ba32c0,519606272
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x7ff829d8be10,0x7ff829d8f420,519606272
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x7ff8218d01b0,0x7ff8218d6433,519606272
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x7ff82a0aaf68,0x7ff82a0b01ae,519606272
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x7ff81f16bfb3,0x7ff81f16dc7c,519606272
shared-library,/usr/lib/system/libsystem_info.dylib,0x7ff81f2c0100,0x7ff81f2e59d8,519606272
shared-library,/usr/lib/system/libsystem_m.dylib,0x7ff829feb280,0x7ff82a02003c,519606272
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x7ff81f0bf4f0,0x7ff81f0e1950,519606272
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x7ff82419ec36,0x7ff8241afbf6,519606272
shared-library,/usr/lib/system/libsystem_notify.dylib,0x7ff821cf7d54,0x7ff821d04ed6,519606272
shared-library,/usr/lib/system/libsystem_product_info_filter.dylib,0x7ff8301e9000,0x7ff8301e9000,519606272
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x7ff8288ce820,0x7ff8288d2422,519606272
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x7ff82a0a4f8c,0x7ff82a0a6520,519606272
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x7ff81f2667c0,0x7ff81f28c07b,519606272
shared-library,/usr/lib/system/libsystem_platform.dylib,0x7ff81f2b6040,0x7ff81f2bd07f,519606272
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x7ff81f29e108,0x7ff81f2a6817,519606272
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x7ff825a52d74,0x7ff825a584ce,519606272
shared-library,/usr/lib/system/libsystem_trace.dylib,0x7ff81f0137a0,0x7ff81f028323,519606272
shared-library,/usr/lib/system/libunwind.dylib,0x7ff82a07f5c0,0x7ff82a08448a,519606272
shared-library,/usr/lib/system/libxpc.dylib,0x7ff81efdcce0,0x7ff81f004061,519606272
shared-library-end
profiler,begin,1000
tick,0x7ff81f266af6,1774,0,0x0,6
tick,0x109703448,2944,0,0x0,6
new,CodeRange,0x10dce5000,0
new,MemoryChunk,0x3ba9a7e40000,262144
new,MemoryChunk,0x3ba9c2600000,262144
new,MemoryChunk,0x3ba94af00000,262144
new,MemoryChunk,0x3ba9c1f00000,262144
new,MemoryChunk,0x3ba92c480000,262144
heap-capacity,1031072
tick,0x7ff81f29f7c4,4279,0,0x0,6
heap-available,2198652736
new,MemoryChunk,0x3ba960940000,262144
new,MemoryChunk,0x3ba9267c0000,262144
new,MemoryChunk,0x3ba999200000,262144
new,MemoryChunk,0x3ba95c900000,262144
tick,0x7ff81f268cda,5572,0,0x0,1
new,MemoryChunk,0x3ba9691c0000,262144
new,MemoryChunk,0x3ba985fc0000,262144
tick,0x108ac1792,6855,0,0x0,6
new,MemoryChunk,0x3ba95fd40000,262144
new,MemoryChunk,0x10dd00000,262144
tick,0x108ac1795,7926,0,0x0,6
new,MemoryChunk,0x3ba987e40000,262144
tick,0x108ac20f6,9193,0,0x0,6
code-creation,Builtin,2,10347,0x108dc8aa0,1340,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,10381,0x108dc8fe0,452,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,10477,0x108dc91c0,620,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,10502,0x108dc9440,208,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,10517,0x108dc9520,352,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,10531,0x108dc96a0,116,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,10544,0x108dc9720,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,10557,0x108dc9760,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,10571,0x108dc98e0,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,10585,0x108dc9aa0,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,10598,0x108dc9c60,104,CallBoundFunction
code-creation,Builtin,2,10610,0x108dc9ce0,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,10623,0x108dc9d60,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,10636,0x108dc9de0,120,Call_ReceiverIsAny
code-creation,Builtin,2,10648,0x108dc9e60,988,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,10671,0x108dca240,984,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,10686,0x108dca620,1072,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,10702,0x108dcaa60,1072,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,10716,0x108dcaea0,1072,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,10730,0x108dcb2e0,1072,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,10743,0x108dcb720,944,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,10757,0x108dcbae0,944,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,10772,0x108dcbea0,944,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,10785,0x108dcc260,736,CallProxy
code-creation,Builtin,2,10796,0x108dcc560,148,CallVarargs
code-creation,Builtin,2,10807,0x108dcc600,940,CallWithSpread
code-creation,Builtin,2,10819,0x108dcc9c0,1948,CallWithSpread_Baseline
code-creation,Builtin,2,10831,0x108dcd160,1920,CallWithSpread_WithFeedback
code-creation,Builtin,2,10844,0x108dcd900,864,CallWithArrayLike
code-creation,Builtin,2,10859,0x108dcdc80,1812,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,10872,0x108dce3a0,156,CallForwardVarargs
code-creation,Builtin,2,10926,0x108dce440,156,CallFunctionForwardVarargs
code-creation,Builtin,2,10946,0x108dce4e0,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,10960,0x108dce580,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,10979,0x108dce680,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,10998,0x108dce7c0,28,ConstructFunction
code-creation,Builtin,2,11017,0x108dce7e0,104,ConstructBoundFunction
code-creation,Builtin,2,11032,0x108dce860,28,ConstructedNonConstructable
code-creation,Builtin,2,11048,0x108dce880,100,Construct
code-creation,Builtin,2,11063,0x108dce900,148,ConstructVarargs
code-creation,Builtin,2,11103,0x108dce9a0,964,ConstructWithSpread
code-creation,Builtin,2,11117,0x108dced80,1740,ConstructWithSpread_Baseline
code-creation,Builtin,2,11133,0x108dcf460,1756,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,11147,0x108dcfb40,920,ConstructWithArrayLike
code-creation,Builtin,2,11162,0x108dcfee0,1644,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,11179,0x108dd0560,196,ConstructForwardVarargs
code-creation,Builtin,2,11195,0x108dd0640,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,11212,0x108dd0720,792,Construct_Baseline
code-creation,Builtin,2,11227,0x108dd0a40,812,Construct_WithFeedback
code-creation,Builtin,2,11242,0x108dd0d80,476,JSConstructStubGeneric
code-creation,Builtin,2,11255,0x108dd0f60,376,JSBuiltinsConstructStub
code-creation,Builtin,2,11267,0x108dd10e0,676,FastNewObject
code-creation,Builtin,2,11279,0x108dd13a0,292,FastNewClosure
code-creation,Builtin,2,11290,0x108dd14e0,720,ConstructProxy
code-creation,Builtin,2,11304,0x108dd17c0,192,JSEntry
code-creation,Builtin,2,11319,0x108dd18a0,192,JSConstructEntry
code-creation,Builtin,2,11333,0x108dd1980,192,JSRunMicrotasksEntry
code-creation,Builtin,2,11349,0x108dd1a60,96,JSEntryTrampoline
code-creation,Builtin,2,11363,0x108dd1ae0,96,JSConstructEntryTrampoline
code-creation,Builtin,2,11379,0x108dd1b60,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,11391,0x108dd1c80,1116,StringCodePointAt
code-creation,Builtin,2,11403,0x108dd20e0,1548,StringFromCodePointAt
code-creation,Builtin,2,11415,0x108dd2700,544,StringEqual
code-creation,Builtin,2,11426,0x108dd2940,276,StringGreaterThan
code-creation,Builtin,2,11440,0x108dd2a60,276,StringGreaterThanOrEqual
code-creation,Builtin,2,11453,0x108dd2b80,276,StringLessThan
code-creation,Builtin,2,11465,0x108dd2ca0,276,StringLessThanOrEqual
code-creation,Builtin,2,11477,0x108dd2dc0,2492,StringSubstring
code-creation,Builtin,2,11488,0x108dd3780,80,OrderedHashTableHealIndex
code-creation,Builtin,2,11503,0x108dd37e0,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,11519,0x108dd3c80,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,11537,0x108dd3ce0,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,11557,0x108dd3d40,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,11578,0x108dd3da0,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,11597,0x108dd3e00,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,11616,0x108dd3e60,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,11649,0x108dd3ec0,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,11669,0x108dd3f20,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,11684,0x108dd4000,52,InterpreterOnStackReplacement
code-creation,Builtin,2,11700,0x108dd4040,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,11716,0x108dd42a0,56,BaselineOnStackReplacement
code-creation,Builtin,2,11732,0x108dd42e0,84,BaselineLeaveFrame
code-creation,Builtin,2,11747,0x108dd4340,212,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,11764,0x108dd4420,220,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,11782,0x108dd4500,188,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,11800,0x108dd45c0,1000,CompileLazy
code-creation,Builtin,2,11816,0x108dd49c0,72,CompileLazyDeoptimizedCode
code-creation,Builtin,2,11833,0x108dd4a20,252,InstantiateAsmJs
code-creation,Builtin,2,11849,0x108dd4b20,32,NotifyDeoptimized
code-creation,Builtin,2,11866,0x108dd4b60,784,DeoptimizationEntry_Eager
code-creation,Builtin,2,11882,0x108dd4e80,784,DeoptimizationEntry_Soft
code-creation,Builtin,2,11895,0x108dd51a0,784,DeoptimizationEntry_Bailout
code-creation,Builtin,2,11912,0x108dd54c0,784,DeoptimizationEntry_Lazy
code-creation,Builtin,2,11929,0x108dd57e0,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,11945,0x108dd5820,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,11959,0x108dd5860,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,11972,0x108dd58a0,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,12005,0x108dd5900,288,CallApiCallback
code-creation,Builtin,2,12018,0x108dd5a40,272,CallApiGetter
code-creation,Builtin,2,12032,0x108dd5b60,12,HandleApiCall
code-creation,Builtin,2,12044,0x108dd5b80,12,HandleApiCallAsFunction
code-creation,Builtin,2,12056,0x108dd5ba0,12,HandleApiCallAsConstructor
code-creation,Builtin,2,12069,0x108dd5bc0,64,AllocateInYoungGeneration
code-creation,Builtin,2,12082,0x108dd5c20,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,12097,0x108dd5c60,64,AllocateInOldGeneration
code-creation,Builtin,2,12110,0x108dd5cc0,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,12123,0x108dd5d00,424,CopyFastSmiOrObjectElements
code-creation,Builtin,2,12142,0x108dd5ec0,496,GrowFastDoubleElements
code-creation,Builtin,2,12157,0x108dd60c0,396,GrowFastSmiOrObjectElements
code-creation,Builtin,2,12173,0x108dd6260,388,DebugBreakTrampoline
code-creation,Builtin,2,12188,0x108dd6400,180,ToNumber
code-creation,Builtin,2,12202,0x108dd64c0,292,ToNumber_Baseline
code-creation,Builtin,2,12217,0x108dd6600,360,ToNumeric_Baseline
code-creation,Builtin,2,12232,0x108dd6780,104,PlainPrimitiveToNumber
code-creation,Builtin,2,12247,0x108dd6800,212,ToNumberConvertBigInt
code-creation,Builtin,2,12260,0x108dd68e0,132,Typeof
code-creation,Builtin,2,12270,0x108dd6980,104,BigIntToI64
code-creation,Builtin,2,12282,0x108dd6a00,4,BigIntToI32Pair
code-creation,Builtin,2,12293,0x108dd6a20,232,I64ToBigInt
code-creation,Builtin,2,12307,0x108dd6b20,4,I32PairToBigInt
code-creation,Builtin,2,12322,0x108dd6b40,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,12338,0x108dd6bc0,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,12351,0x108dd7c60,15704,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,12364,0x108ddb9c0,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,12376,0x108ddbae0,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,12389,0x108ddbb20,12,LoadIC_StringLength
code-creation,Builtin,2,12403,0x108ddbb40,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,12416,0x108ddbb60,3056,LoadIC_NoFeedback
code-creation,Builtin,2,12429,0x108ddc760,32,StoreGlobalIC_Slow
code-creation,Builtin,2,12441,0x108ddc7a0,7284,StoreIC_NoFeedback
code-creation,Builtin,2,12454,0x108dde420,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,12483,0x108dde4e0,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,12495,0x108dde540,240,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,12508,0x108dde640,240,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,12523,0x108dde740,240,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,12540,0x108dde840,240,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,12555,0x108dde940,13924,StoreFastElementIC_Standard
code-creation,Builtin,2,12567,0x108de1fc0,9660,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,12581,0x108de4580,13104,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,12597,0x108de78c0,6160,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,12613,0x108de90e0,8468,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,12627,0x108deb200,19332,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,12641,0x108defda0,8468,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,12656,0x108df1ec0,11028,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,12673,0x108df49e0,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,12696,0x108df4d00,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,12710,0x108df4dc0,72,HasIndexedInterceptorIC
code-creation,Builtin,2,12722,0x108df4e20,88,DynamicCheckMapsTrampoline
code-creation,Builtin,2,12734,0x108df4e80,260,DynamicCheckMaps
code-creation,Builtin,2,12745,0x108df4fa0,88,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,12762,0x108df5000,224,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,12775,0x108df5100,148,EnqueueMicrotask
code-creation,Builtin,2,12786,0x108df51a0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,12814,0x108df51c0,3504,RunMicrotasks
code-creation,Builtin,2,12826,0x108df5f80,2624,HasProperty
code-creation,Builtin,2,12837,0x108df69e0,1144,DeleteProperty
code-creation,Builtin,2,12851,0x108df6e60,1972,CopyDataProperties
code-creation,Builtin,2,12862,0x108df7620,9156,SetDataProperties
code-creation,Builtin,2,12874,0x108df9a00,28,Abort
code-creation,Builtin,2,12884,0x108df9a20,28,AbortCSAAssert
code-creation,Builtin,2,12898,0x108df9a40,12,EmptyFunction
code-creation,Builtin,2,12912,0x108df9a60,12,Illegal
code-creation,Builtin,2,12925,0x108df9a80,12,StrictPoisonPillThrower
code-creation,Builtin,2,12940,0x108df9aa0,12,UnsupportedThrower
code-creation,Builtin,2,12955,0x108df9ac0,64,ReturnReceiver
code-creation,Builtin,2,12969,0x108df9b20,28,ArrayConstructor
code-creation,Builtin,2,12983,0x108df9b40,404,ArrayConstructorImpl
code-creation,Builtin,2,12997,0x108df9ce0,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,13015,0x108df9dc0,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,13032,0x108df9ea0,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,13050,0x108df9f60,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,13069,0x108dfa020,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,13087,0x108dfa0e0,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,13105,0x108dfa1a0,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,13124,0x108dfa260,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,13142,0x108dfa320,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,13160,0x108dfa540,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,13178,0x108dfa740,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,13197,0x108dfa900,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,13215,0x108dfaaa0,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,13234,0x108dfac60,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,13252,0x108dfae00,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,13271,0x108dfafe0,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,13290,0x108dfb180,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,13306,0x108dfb1e0,12,ArrayConcat
code-creation,Builtin,2,13319,0x108dfb200,12,ArrayPrototypeFill
code-creation,Builtin,2,13334,0x108dfb220,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,13349,0x108dfb5e0,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,13364,0x108dfb680,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,13379,0x108dfb760,548,ArrayIncludes
code-creation,Builtin,2,13393,0x108dfb9a0,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,13408,0x108dfbd00,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,13423,0x108dfbd80,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,13438,0x108dfbe00,552,ArrayIndexOf
code-creation,Builtin,2,13452,0x108dfc040,12,ArrayPop
code-creation,Builtin,2,13465,0x108dfc060,616,ArrayPrototypePop
code-creation,Builtin,2,13480,0x108dfc2e0,12,ArrayPush
code-creation,Builtin,2,13493,0x108dfc300,2412,ArrayPrototypePush
code-creation,Builtin,2,13508,0x108dfcc80,12,ArrayShift
code-creation,Builtin,2,13521,0x108dfcca0,12,ArrayUnshift
code-creation,Builtin,2,13535,0x108dfccc0,944,CloneFastJSArray
code-creation,Builtin,2,13549,0x108dfd080,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,13565,0x108dfd920,968,ExtractFastJSArray
code-creation,Builtin,2,13579,0x108dfdd00,260,ArrayPrototypeEntries
code-creation,Builtin,2,13594,0x108dfde20,248,ArrayPrototypeKeys
code-creation,Builtin,2,13608,0x108dfdf20,260,ArrayPrototypeValues
code-creation,Builtin,2,13623,0x108dfe040,4424,ArrayIteratorPrototypeNext
code-creation,Builtin,2,13651,0x108dff1a0,4164,FlattenIntoArray
code-creation,Builtin,2,13666,0x108e00200,4164,FlatMapIntoArray
code-creation,Builtin,2,13680,0x108e01260,372,ArrayPrototypeFlat
code-creation,Builtin,2,13695,0x108e013e0,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,13710,0x108e015a0,12,ArrayBufferConstructor
code-creation,Builtin,2,13735,0x108e015c0,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,13753,0x108e015e0,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,13768,0x108e01600,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,13784,0x108e01620,804,AsyncFunctionEnter
code-creation,Builtin,2,13798,0x108e01960,132,AsyncFunctionReject
code-creation,Builtin,2,13813,0x108e01a00,128,AsyncFunctionResolve
code-creation,Builtin,2,13827,0x108e01aa0,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,13843,0x108e01ac0,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,13858,0x108e025c0,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,13873,0x108e030c0,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,13889,0x108e03180,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,13905,0x108e03240,12,BigIntConstructor
code-creation,Builtin,2,13919,0x108e03260,12,BigIntAsUintN
code-creation,Builtin,2,13933,0x108e03280,12,BigIntAsIntN
code-creation,Builtin,2,13946,0x108e032a0,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,13962,0x108e032c0,12,BigIntPrototypeToString
code-creation,Builtin,2,13976,0x108e032e0,12,BigIntPrototypeValueOf
code-creation,Builtin,2,13991,0x108e03300,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,14007,0x108e03320,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,14024,0x108e03340,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,14040,0x108e03360,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,14056,0x108e03380,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,14071,0x108e033a0,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,14086,0x108e033c0,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,14102,0x108e033e0,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,14118,0x108e03400,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,14133,0x108e03420,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,14148,0x108e03440,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,14164,0x108e03460,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,14181,0x108e03480,12,CallSitePrototypeGetThis
code-creation,Builtin,2,14196,0x108e034a0,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,14211,0x108e034c0,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,14226,0x108e034e0,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,14242,0x108e03500,12,CallSitePrototypeIsEval
code-creation,Builtin,2,14256,0x108e03520,12,CallSitePrototypeIsNative
code-creation,Builtin,2,14271,0x108e03540,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,14287,0x108e03560,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,14302,0x108e03580,12,CallSitePrototypeToString
code-creation,Builtin,2,14320,0x108e035a0,12,ConsoleDebug
code-creation,Builtin,2,14334,0x108e035c0,12,ConsoleError
code-creation,Builtin,2,14348,0x108e035e0,12,ConsoleInfo
code-creation,Builtin,2,14362,0x108e03600,12,ConsoleLog
code-creation,Builtin,2,14376,0x108e03620,12,ConsoleWarn
code-creation,Builtin,2,14389,0x108e03640,12,ConsoleDir
code-creation,Builtin,2,14403,0x108e03660,12,ConsoleDirXml
code-creation,Builtin,2,14417,0x108e03680,12,ConsoleTable
code-creation,Builtin,2,14431,0x108e036a0,12,ConsoleTrace
code-creation,Builtin,2,14444,0x108e036c0,12,ConsoleGroup
code-creation,Builtin,2,14458,0x108e036e0,12,ConsoleGroupCollapsed
code-creation,Builtin,2,14473,0x108e03700,12,ConsoleGroupEnd
code-creation,Builtin,2,14487,0x108e03720,12,ConsoleClear
code-creation,Builtin,2,14501,0x108e03740,12,ConsoleCount
code-creation,Builtin,2,14514,0x108e03760,12,ConsoleCountReset
code-creation,Builtin,2,14528,0x108e03780,12,ConsoleAssert
code-creation,Builtin,2,14556,0x108e037a0,12,ConsoleProfile
code-creation,Builtin,2,14570,0x108e037c0,12,ConsoleProfileEnd
code-creation,Builtin,2,14585,0x108e037e0,12,ConsoleTime
code-creation,Builtin,2,14598,0x108e03800,12,ConsoleTimeLog
code-creation,Builtin,2,14612,0x108e03820,12,ConsoleTimeEnd
code-creation,Builtin,2,14627,0x108e03840,12,ConsoleTimeStamp
code-creation,Builtin,2,14641,0x108e03860,12,ConsoleContext
code-creation,Builtin,2,14655,0x108e03880,12,DataViewConstructor
code-creation,Builtin,2,14669,0x108e038a0,12,DateConstructor
code-creation,Builtin,2,14683,0x108e038c0,220,DatePrototypeGetDate
code-creation,Builtin,2,14697,0x108e039a0,220,DatePrototypeGetDay
code-creation,Builtin,2,14712,0x108e03a80,220,DatePrototypeGetFullYear
code-creation,Builtin,2,14727,0x108e03b60,220,DatePrototypeGetHours
code-creation,Builtin,2,14749,0x108e03c40,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,14766,0x108e03d20,220,DatePrototypeGetMinutes
code-creation,Builtin,2,14781,0x108e03e00,220,DatePrototypeGetMonth
code-creation,Builtin,2,14795,0x108e03ee0,220,DatePrototypeGetSeconds
code-creation,Builtin,2,14810,0x108e03fc0,124,DatePrototypeGetTime
code-creation,Builtin,2,14825,0x108e04040,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,14840,0x108e04120,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,14855,0x108e04200,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,14870,0x108e042e0,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,14885,0x108e043c0,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,14900,0x108e044a0,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,14916,0x108e04580,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,14931,0x108e04660,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,14946,0x108e04740,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,14961,0x108e04820,124,DatePrototypeValueOf
code-creation,Builtin,2,14976,0x108e048a0,352,DatePrototypeToPrimitive
code-creation,Builtin,2,14991,0x108e04a20,12,DatePrototypeGetYear
code-creation,Builtin,2,15005,0x108e04a40,12,DatePrototypeSetYear
code-creation,Builtin,2,15020,0x108e04a60,12,DateNow
code-creation,Builtin,2,15033,0x108e04a80,12,DateParse
code-creation,Builtin,2,15047,0x108e04aa0,12,DatePrototypeSetDate
code-creation,Builtin,2,15061,0x108e04ac0,12,DatePrototypeSetFullYear
code-creation,Builtin,2,15076,0x108e04ae0,12,DatePrototypeSetHours
code-creation,Builtin,2,15091,0x108e04b00,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,15106,0x108e04b20,12,DatePrototypeSetMinutes
code-creation,Builtin,2,15121,0x108e04b40,12,DatePrototypeSetMonth
code-creation,Builtin,2,15135,0x108e04b60,12,DatePrototypeSetSeconds
code-creation,Builtin,2,15150,0x108e04b80,12,DatePrototypeSetTime
code-creation,Builtin,2,15165,0x108e04ba0,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,15179,0x108e04bc0,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,15195,0x108e04be0,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,15210,0x108e04c00,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,15225,0x108e04c20,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,15240,0x108e04c40,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,15255,0x108e04c60,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,15270,0x108e04c80,12,DatePrototypeToDateString
code-creation,Builtin,2,15285,0x108e04ca0,12,DatePrototypeToISOString
code-creation,Builtin,2,15300,0x108e04cc0,12,DatePrototypeToUTCString
code-creation,Builtin,2,15315,0x108e04ce0,12,DatePrototypeToString
code-creation,Builtin,2,15330,0x108e04d00,12,DatePrototypeToTimeString
code-creation,Builtin,2,15345,0x108e04d20,12,DatePrototypeToJson
code-creation,Builtin,2,15359,0x108e04d40,12,DateUTC
code-creation,Builtin,2,15373,0x108e04d60,12,ErrorConstructor
code-creation,Builtin,2,15387,0x108e04d80,12,ErrorCaptureStackTrace
code-creation,Builtin,2,15401,0x108e04da0,12,ErrorPrototypeToString
code-creation,Builtin,2,15416,0x108e04dc0,12,FunctionConstructor
code-creation,Builtin,2,15430,0x108e04de0,68,FunctionPrototypeApply
code-creation,Builtin,2,15445,0x108e04e40,12,FunctionPrototypeBind
code-creation,Builtin,2,15473,0x108e04e60,32,FunctionPrototypeCall
code-creation,Builtin,2,15489,0x108e04ea0,12,FunctionPrototypeToString
code-creation,Builtin,2,15504,0x108e04ec0,192,CreateIterResultObject
code-creation,Builtin,2,15519,0x108e04fa0,788,CreateGeneratorObject
code-creation,Builtin,2,15534,0x108e052c0,12,GeneratorFunctionConstructor
code-creation,Builtin,2,15549,0x108e052e0,412,GeneratorPrototypeNext
code-creation,Builtin,2,15564,0x108e05480,420,GeneratorPrototypeReturn
code-creation,Builtin,2,15579,0x108e05640,424,GeneratorPrototypeThrow
code-creation,Builtin,2,15593,0x108e05800,12,AsyncFunctionConstructor
code-creation,Builtin,2,15608,0x108e05820,368,SuspendGeneratorBaseline
code-creation,Builtin,2,15623,0x108e059a0,88,ResumeGeneratorBaseline
code-creation,Builtin,2,15638,0x108e05a00,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,15655,0x108e05a40,12,GlobalDecodeURI
code-creation,Builtin,2,15669,0x108e05a60,12,GlobalDecodeURIComponent
code-creation,Builtin,2,15684,0x108e05a80,12,GlobalEncodeURI
code-creation,Builtin,2,15698,0x108e05aa0,12,GlobalEncodeURIComponent
code-creation,Builtin,2,15712,0x108e05ac0,12,GlobalEscape
code-creation,Builtin,2,15726,0x108e05ae0,12,GlobalUnescape
code-creation,Builtin,2,15740,0x108e05b00,12,GlobalEval
code-creation,Builtin,2,15761,0x108e05b20,132,GlobalIsFinite
code-creation,Builtin,2,15777,0x108e05bc0,124,GlobalIsNaN
code-creation,Builtin,2,15790,0x108e05c40,12,JsonParse
code-creation,Builtin,2,15804,0x108e05c60,12,JsonStringify
code-creation,Builtin,2,15818,0x108e05c80,4608,LoadIC
code-creation,Builtin,2,15831,0x108e06ea0,4296,LoadIC_Megamorphic
code-creation,Builtin,2,15845,0x108e07f80,4520,LoadIC_Noninlined
code-creation,Builtin,2,15860,0x108e09140,44,LoadICTrampoline
code-creation,Builtin,2,15874,0x108e09180,24,LoadICBaseline
code-creation,Builtin,2,15888,0x108e091a0,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,15903,0x108e091e0,7380,LoadSuperIC
code-creation,Builtin,2,15917,0x108e0aec0,24,LoadSuperICBaseline
code-creation,Builtin,2,15931,0x108e0aee0,8132,KeyedLoadIC
code-creation,Builtin,2,15945,0x108e0cec0,13076,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,15959,0x108e101e0,44,KeyedLoadICTrampoline
code-creation,Builtin,2,15974,0x108e10220,24,KeyedLoadICBaseline
code-creation,Builtin,2,15989,0x108e10240,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,16004,0x108e10280,5064,StoreGlobalIC
code-creation,Builtin,2,16018,0x108e11660,44,StoreGlobalICTrampoline
code-creation,Builtin,2,16033,0x108e116a0,24,StoreGlobalICBaseline
code-creation,Builtin,2,16048,0x108e116c0,5304,StoreIC
code-creation,Builtin,2,16061,0x108e12b80,44,StoreICTrampoline
code-creation,Builtin,2,16075,0x108e12bc0,24,StoreICBaseline
code-creation,Builtin,2,16089,0x108e12be0,5740,KeyedStoreIC
code-creation,Builtin,2,16103,0x108e14260,44,KeyedStoreICTrampoline
code-creation,Builtin,2,16118,0x108e142a0,24,KeyedStoreICBaseline
code-creation,Builtin,2,16132,0x108e142c0,404,StoreInArrayLiteralIC
code-creation,Builtin,2,16147,0x108e14460,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,16162,0x108e14480,140,LookupContextBaseline
code-creation,Builtin,2,16177,0x108e14520,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,16193,0x108e145c0,3244,LoadGlobalIC
code-creation,Builtin,2,16207,0x108e15280,3224,LoadGlobalICInsideTypeof
code-creation,Builtin,2,16222,0x108e15f20,44,LoadGlobalICTrampoline
code-creation,Builtin,2,16236,0x108e15f60,24,LoadGlobalICBaseline
code-creation,Builtin,2,16251,0x108e15f80,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,16267,0x108e15fc0,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,16282,0x108e15fe0,140,LookupGlobalICBaseline
code-creation,Builtin,2,16297,0x108e16080,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,16313,0x108e16120,2056,CloneObjectIC
code-creation,Builtin,2,16327,0x108e16940,24,CloneObjectICBaseline
code-creation,Builtin,2,16342,0x108e16960,1988,CloneObjectIC_Slow
code-creation,Builtin,2,16356,0x108e17140,2764,KeyedHasIC
code-creation,Builtin,2,16383,0x108e17c20,24,KeyedHasICBaseline
code-creation,Builtin,2,16398,0x108e17c40,2620,KeyedHasIC_Megamorphic
code-creation,Builtin,2,16413,0x108e18680,1428,IterableToList
code-creation,Builtin,2,16427,0x108e18c20,1228,IterableToFixedArray
code-creation,Builtin,2,16441,0x108e19100,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,16457,0x108e19400,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,16473,0x108e19440,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,16489,0x108e194c0,976,IterableToFixedArrayForWasm
code-creation,Builtin,2,16504,0x108e198a0,1616,StringListFromIterable
code-creation,Builtin,2,16519,0x108e19f00,1220,FindOrderedHashMapEntry
code-creation,Builtin,2,16534,0x108e1a3e0,4156,MapConstructor
code-creation,Builtin,2,16548,0x108e1b420,1960,MapPrototypeSet
code-creation,Builtin,2,16562,0x108e1bbe0,1524,MapPrototypeDelete
code-creation,Builtin,2,16576,0x108e1c1e0,204,MapPrototypeGet
code-creation,Builtin,2,16590,0x108e1c2c0,164,MapPrototypeHas
code-creation,Builtin,2,16604,0x108e1c380,12,MapPrototypeClear
code-creation,Builtin,2,16619,0x108e1c3a0,284,MapPrototypeEntries
code-creation,Builtin,2,16633,0x108e1c4c0,144,MapPrototypeGetSize
code-creation,Builtin,2,16648,0x108e1c560,492,MapPrototypeForEach
code-creation,Builtin,2,16662,0x108e1c760,284,MapPrototypeKeys
code-creation,Builtin,2,16677,0x108e1c880,284,MapPrototypeValues
code-creation,Builtin,2,16691,0x108e1c9a0,1048,MapIteratorPrototypeNext
code-creation,Builtin,2,16706,0x108e1cdc0,1176,MapIteratorToList
code-creation,Builtin,2,16720,0x108e1d260,12,NumberPrototypeToExponential
code-creation,Builtin,2,16735,0x108e1d280,12,NumberPrototypeToFixed
code-creation,Builtin,2,16750,0x108e1d2a0,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,16773,0x108e1d2c0,12,NumberPrototypeToPrecision
code-creation,Builtin,2,16790,0x108e1d2e0,328,SameValue
code-creation,Builtin,2,16803,0x108e1d440,204,SameValueNumbersOnly
code-creation,Builtin,2,16818,0x108e1d520,792,Add_Baseline
code-creation,Builtin,2,16832,0x108e1d840,828,Subtract_Baseline
code-creation,Builtin,2,16846,0x108e1db80,808,Multiply_Baseline
code-creation,Builtin,2,16860,0x108e1dec0,832,Divide_Baseline
code-creation,Builtin,2,16874,0x108e1e220,764,Modulus_Baseline
code-creation,Builtin,2,16888,0x108e1e520,804,Exponentiate_Baseline
code-creation,Builtin,2,16903,0x108e1e860,708,BitwiseAnd_Baseline
code-creation,Builtin,2,16918,0x108e1eb40,700,BitwiseOr_Baseline
code-creation,Builtin,2,16932,0x108e1ee00,708,BitwiseXor_Baseline
code-creation,Builtin,2,16946,0x108e1f0e0,720,ShiftLeft_Baseline
code-creation,Builtin,2,16961,0x108e1f3c0,720,ShiftRight_Baseline
code-creation,Builtin,2,16975,0x108e1f6a0,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,16990,0x108e1fa00,720,Add_WithFeedback
code-creation,Builtin,2,17005,0x108e1fce0,780,Subtract_WithFeedback
code-creation,Builtin,2,17019,0x108e20000,776,Multiply_WithFeedback
code-creation,Builtin,2,17034,0x108e20320,804,Divide_WithFeedback
code-creation,Builtin,2,17049,0x108e20660,724,Modulus_WithFeedback
code-creation,Builtin,2,17063,0x108e20940,760,Exponentiate_WithFeedback
code-creation,Builtin,2,17078,0x108e20c40,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,17093,0x108e20f00,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,17108,0x108e211c0,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,17123,0x108e21480,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,17137,0x108e21740,692,ShiftRight_WithFeedback
code-creation,Builtin,2,17152,0x108e21a00,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,17168,0x108e21d40,1696,Equal_Baseline
code-creation,Builtin,2,17182,0x108e22400,908,StrictEqual_Baseline
code-creation,Builtin,2,17196,0x108e227a0,1264,LessThan_Baseline
code-creation,Builtin,2,17210,0x108e22ca0,1264,GreaterThan_Baseline
code-creation,Builtin,2,17225,0x108e231a0,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,17243,0x108e236a0,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,17259,0x108e23ba0,1624,Equal_WithFeedback
code-creation,Builtin,2,17273,0x108e24200,940,StrictEqual_WithFeedback
code-creation,Builtin,2,17302,0x108e245c0,1240,LessThan_WithFeedback
code-creation,Builtin,2,17317,0x108e24aa0,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,17332,0x108e24f80,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,17348,0x108e25460,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,17363,0x108e25940,332,BitwiseNot_Baseline
code-creation,Builtin,2,17378,0x108e25aa0,460,Decrement_Baseline
code-creation,Builtin,2,17392,0x108e25c80,464,Increment_Baseline
code-creation,Builtin,2,17407,0x108e25e60,488,Negate_Baseline
code-creation,Builtin,2,17421,0x108e26060,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,17436,0x108e261a0,440,Decrement_WithFeedback
code-creation,Builtin,2,17450,0x108e26360,444,Increment_WithFeedback
code-creation,Builtin,2,17465,0x108e26520,472,Negate_WithFeedback
code-creation,Builtin,2,17479,0x108e26700,252,ObjectAssign
code-creation,Builtin,2,17493,0x108e26800,864,ObjectCreate
code-creation,Builtin,2,17507,0x108e26b80,12,ObjectDefineGetter
code-creation,Builtin,2,17521,0x108e26ba0,12,ObjectDefineProperties
code-creation,Builtin,2,17536,0x108e26bc0,12,ObjectDefineProperty
code-creation,Builtin,2,17551,0x108e26be0,12,ObjectDefineSetter
code-creation,Builtin,2,17565,0x108e26c00,1512,ObjectEntries
code-creation,Builtin,2,17579,0x108e27200,12,ObjectFreeze
code-creation,Builtin,2,17593,0x108e27220,5592,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,17608,0x108e28800,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,17624,0x108e28820,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,17639,0x108e28a80,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,17654,0x108e28aa0,164,ObjectHasOwn
code-creation,Builtin,2,17668,0x108e28b60,388,ObjectIs
code-creation,Builtin,2,17681,0x108e28d00,12,ObjectIsFrozen
code-creation,Builtin,2,17695,0x108e28d20,12,ObjectIsSealed
code-creation,Builtin,2,17709,0x108e28d40,536,ObjectKeys
code-creation,Builtin,2,17723,0x108e28f60,12,ObjectLookupGetter
code-creation,Builtin,2,17737,0x108e28f80,12,ObjectLookupSetter
code-creation,Builtin,2,17751,0x108e28fa0,2264,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,17767,0x108e29880,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,17789,0x108e29960,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,17807,0x108e29980,12,ObjectPrototypeGetProto
code-creation,Builtin,2,17822,0x108e299a0,12,ObjectPrototypeSetProto
code-creation,Builtin,2,17837,0x108e299c0,12,ObjectSeal
code-creation,Builtin,2,17850,0x108e299e0,1108,ObjectToString
code-creation,Builtin,2,17864,0x108e29e40,1280,ObjectValues
code-creation,Builtin,2,17878,0x108e2a360,280,OrdinaryHasInstance
code-creation,Builtin,2,17893,0x108e2a480,344,InstanceOf
code-creation,Builtin,2,17906,0x108e2a5e0,628,InstanceOf_WithFeedback
code-creation,Builtin,2,17921,0x108e2a860,648,InstanceOf_Baseline
code-creation,Builtin,2,17936,0x108e2ab00,268,ForInEnumerate
code-creation,Builtin,2,17949,0x108e2ac20,148,ForInPrepare
code-creation,Builtin,2,17963,0x108e2acc0,2576,ForInFilter
code-creation,Builtin,2,17977,0x108e2b6e0,52,ReflectApply
code-creation,Builtin,2,17991,0x108e2b720,60,ReflectConstruct
code-creation,Builtin,2,18005,0x108e2b760,12,ReflectDefineProperty
code-creation,Builtin,2,18019,0x108e2b780,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,18035,0x108e2b7a0,12,ReflectOwnKeys
code-creation,Builtin,2,18049,0x108e2b7c0,12,ReflectSet
code-creation,Builtin,2,18063,0x108e2b7e0,12,RegExpCapture1Getter
code-creation,Builtin,2,18077,0x108e2b800,12,RegExpCapture2Getter
code-creation,Builtin,2,18092,0x108e2b820,12,RegExpCapture3Getter
code-creation,Builtin,2,18107,0x108e2b840,12,RegExpCapture4Getter
code-creation,Builtin,2,18121,0x108e2b860,12,RegExpCapture5Getter
code-creation,Builtin,2,18136,0x108e2b880,12,RegExpCapture6Getter
code-creation,Builtin,2,18151,0x108e2b8a0,12,RegExpCapture7Getter
code-creation,Builtin,2,18165,0x108e2b8c0,12,RegExpCapture8Getter
code-creation,Builtin,2,18180,0x108e2b8e0,12,RegExpCapture9Getter
code-creation,Builtin,2,18194,0x108e2b900,2212,RegExpConstructor
code-creation,Builtin,2,18222,0x108e2c1c0,12,RegExpInputGetter
code-creation,Builtin,2,18237,0x108e2c1e0,12,RegExpInputSetter
code-creation,Builtin,2,18251,0x108e2c200,12,RegExpLastMatchGetter
code-creation,Builtin,2,18266,0x108e2c220,12,RegExpLastParenGetter
code-creation,Builtin,2,18281,0x108e2c240,12,RegExpLeftContextGetter
code-creation,Builtin,2,18296,0x108e2c260,908,RegExpPrototypeCompile
code-creation,Builtin,2,18310,0x108e2c600,12,RegExpPrototypeToString
code-creation,Builtin,2,18325,0x108e2c620,12,RegExpRightContextGetter
code-creation,Builtin,2,18340,0x108e2c640,248,RegExpExecAtom
code-creation,Builtin,2,18354,0x108e2c740,1024,RegExpExecInternal
code-creation,Builtin,2,18368,0x108e2cb60,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,18384,0x108e2cb80,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,18399,0x108e2cba0,2676,SetConstructor
code-creation,Builtin,2,18413,0x108e2d620,1276,SetPrototypeHas
code-creation,Builtin,2,18428,0x108e2db20,1708,SetPrototypeAdd
code-creation,Builtin,2,18442,0x108e2e1e0,1476,SetPrototypeDelete
code-creation,Builtin,2,18456,0x108e2e7c0,12,SetPrototypeClear
code-creation,Builtin,2,18470,0x108e2e7e0,284,SetPrototypeEntries
code-creation,Builtin,2,18485,0x108e2e900,144,SetPrototypeGetSize
code-creation,Builtin,2,18499,0x108e2e9a0,444,SetPrototypeForEach
code-creation,Builtin,2,18514,0x108e2eb60,284,SetPrototypeValues
code-creation,Builtin,2,18528,0x108e2ec80,984,SetIteratorPrototypeNext
code-creation,Builtin,2,18543,0x108e2f060,1104,SetOrSetIteratorToList
code-creation,Builtin,2,18558,0x108e2f4c0,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,18574,0x108e2f4e0,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,18589,0x108e2f500,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,18605,0x108e2f520,1280,AtomicsLoad
code-creation,Builtin,2,18619,0x108e2fa40,1008,AtomicsStore
code-creation,Builtin,2,18632,0x108e2fe40,1704,AtomicsExchange
code-creation,Builtin,2,18647,0x108e30500,2092,AtomicsCompareExchange
code-creation,Builtin,2,18661,0x108e30d40,1804,AtomicsAdd
code-creation,Builtin,2,18675,0x108e31460,1804,AtomicsSub
code-creation,Builtin,2,18689,0x108e31b80,1804,AtomicsAnd
code-creation,Builtin,2,18702,0x108e322a0,1804,AtomicsOr
code-creation,Builtin,2,18716,0x108e329c0,1804,AtomicsXor
code-creation,Builtin,2,18729,0x108e330e0,12,AtomicsNotify
code-creation,Builtin,2,18743,0x108e33100,12,AtomicsIsLockFree
code-creation,Builtin,2,18758,0x108e33120,12,AtomicsWait
code-creation,Builtin,2,18771,0x108e33140,12,AtomicsWaitAsync
code-creation,Builtin,2,18785,0x108e33160,12,StringFromCodePoint
code-creation,Builtin,2,18807,0x108e33180,1428,StringFromCharCode
code-creation,Builtin,2,18823,0x108e33720,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,18838,0x108e33740,4360,StringPrototypeMatchAll
code-creation,Builtin,2,18853,0x108e34860,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,18868,0x108e34880,1228,StringPrototypeReplace
code-creation,Builtin,2,18883,0x108e34d60,2896,StringPrototypeSplit
code-creation,Builtin,2,18898,0x108e358c0,12,StringRaw
code-creation,Builtin,2,18911,0x108e358e0,12,SymbolConstructor
code-creation,Builtin,2,18925,0x108e35900,12,SymbolFor
code-creation,Builtin,2,18939,0x108e35920,12,SymbolKeyFor
code-creation,Builtin,2,18953,0x108e35940,88,TypedArrayBaseConstructor
code-creation,Builtin,2,18968,0x108e359a0,256,TypedArrayConstructor
code-creation,Builtin,2,18982,0x108e35ac0,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,18998,0x108e35ae0,884,TypedArrayPrototypeByteLength
code-creation,Builtin,2,19013,0x108e35e60,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,19029,0x108e35fe0,588,TypedArrayPrototypeLength
code-creation,Builtin,2,19044,0x108e36240,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,19059,0x108e36260,12,TypedArrayPrototypeFill
code-creation,Builtin,2,19074,0x108e36280,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,19089,0x108e362a0,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,19104,0x108e362c0,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,19120,0x108e362e0,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,19148,0x108e36300,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,19165,0x108e36440,10648,TypedArrayPrototypeMap
code-creation,Builtin,2,19180,0x108e38de0,792,GenericJSToWasmWrapper
code-creation,Builtin,2,19194,0x108e39100,148,WasmCompileLazy
code-creation,Builtin,2,19208,0x108e391a0,168,WasmDebugBreak
code-creation,Builtin,2,19222,0x108e39260,16,WasmOnStackReplace
code-creation,Builtin,2,19237,0x108e39280,140,WasmFloat32ToNumber
code-creation,Builtin,2,19251,0x108e39320,152,WasmFloat64ToNumber
code-creation,Builtin,2,19266,0x108e393c0,4,WasmI32AtomicWait32
code-creation,Builtin,2,19280,0x108e393e0,4,WasmI64AtomicWait32
code-creation,Builtin,2,19295,0x108e39400,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,19310,0x108e39420,4316,WeakMapConstructor
code-creation,Builtin,2,19324,0x108e3a500,196,WeakMapLookupHashIndex
code-creation,Builtin,2,19339,0x108e3a5e0,220,WeakMapGet
code-creation,Builtin,2,19353,0x108e3a6c0,176,WeakMapPrototypeHas
code-creation,Builtin,2,19367,0x108e3a780,204,WeakMapPrototypeSet
code-creation,Builtin,2,19382,0x108e3a860,144,WeakMapPrototypeDelete
code-creation,Builtin,2,19396,0x108e3a900,2876,WeakSetConstructor
code-creation,Builtin,2,19411,0x108e3b440,176,WeakSetPrototypeHas
code-creation,Builtin,2,19425,0x108e3b500,204,WeakSetPrototypeAdd
code-creation,Builtin,2,19453,0x108e3b5e0,144,WeakSetPrototypeDelete
code-creation,Builtin,2,19467,0x108e3b680,372,WeakCollectionDelete
code-creation,Builtin,2,19481,0x108e3b800,768,WeakCollectionSet
code-creation,Builtin,2,19495,0x108e3bb20,296,AsyncGeneratorResolve
code-creation,Builtin,2,19509,0x108e3bc60,100,AsyncGeneratorReject
code-creation,Builtin,2,19523,0x108e3bce0,2760,AsyncGeneratorYield
code-creation,Builtin,2,19537,0x108e3c7c0,2872,AsyncGeneratorReturn
code-creation,Builtin,2,19551,0x108e3d300,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,19566,0x108e3d440,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,19581,0x108e3d460,1016,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,19596,0x108e3d860,1024,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,19610,0x108e3dc80,1024,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,19625,0x108e3e0a0,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,19640,0x108e3eb60,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,19654,0x108e3f620,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,19670,0x108e3f6a0,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,19685,0x108e3f740,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,19700,0x108e3f7c0,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,19716,0x108e3f840,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,19732,0x108e3f8c0,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,19747,0x108e3f960,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,19763,0x108e3ffa0,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,19778,0x108e40660,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,19793,0x108e40d20,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,19815,0x108e40da0,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,19836,0x108e40e80,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,19854,0x108e40f60,204,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,19871,0x108e41040,396,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,19888,0x108e411e0,396,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,19905,0x108e41380,220,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,19922,0x108e41460,220,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,19942,0x108e41540,204,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,19960,0x108e41620,396,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,19990,0x108e417c0,396,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,20007,0x108e41960,4,DirectCEntry
code-creation,Builtin,2,20020,0x108e41980,1096,StringAdd_CheckNone
code-creation,Builtin,2,20034,0x108e41de0,2480,SubString
code-creation,Builtin,2,20047,0x108e427a0,16,StackCheck
code-creation,Builtin,2,20061,0x108e427c0,84,DoubleToI
code-creation,Builtin,2,20074,0x108e42820,2236,GetProperty
code-creation,Builtin,2,20087,0x108e430e0,2308,GetPropertyWithReceiver
code-creation,Builtin,2,20101,0x108e43a00,15844,SetProperty
code-creation,Builtin,2,20114,0x108e47800,13404,SetPropertyInLiteral
code-creation,Builtin,2,20128,0x108e4ac60,8,MemCopyUint8Uint8
code-creation,Builtin,2,20142,0x108e4ac80,8,MemMove
code-creation,Builtin,2,20155,0x108e4aca0,12,IsTraceCategoryEnabled
code-creation,Builtin,2,20169,0x108e4acc0,12,Trace
code-creation,Builtin,2,20182,0x108e4ace0,12,FinalizationRegistryUnregister
code-creation,Builtin,2,20197,0x108e4ad00,416,AsyncModuleEvaluate
code-creation,Builtin,2,20211,0x108e4aec0,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,20225,0x108e4aee0,12,CallAsyncModuleRejected
code-creation,Builtin,2,20240,0x108e4af00,260,AggregateErrorConstructor
code-creation,Builtin,2,20254,0x108e4b020,856,ArrayPrototypeAt
code-creation,Builtin,2,20268,0x108e4b380,656,ArrayPrototypeConcat
code-creation,Builtin,2,20282,0x108e4b620,5820,ArrayPrototypeCopyWithin
code-creation,Builtin,2,20296,0x108e4cce0,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,20312,0x108e4cdc0,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,20327,0x108e4d040,3256,ArrayEveryLoopContinuation
code-creation,Builtin,2,20342,0x108e4dd00,1464,ArrayEvery
code-creation,Builtin,2,20355,0x108e4e2c0,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,20371,0x108e4e3e0,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,20386,0x108e4e7c0,3560,ArrayFilterLoopContinuation
code-creation,Builtin,2,20401,0x108e4f5c0,4248,ArrayFilter
code-creation,Builtin,2,20415,0x108e50660,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,20432,0x108e50740,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,20445,0x108e50780,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,20459,0x108e508c0,528,ArrayFindLoopContinuation
code-creation,Builtin,2,20473,0x108e50ae0,1460,ArrayPrototypeFind
code-creation,Builtin,2,20486,0x108e510a0,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,20503,0x108e51180,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,20519,0x108e511c0,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,20538,0x108e51300,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,20554,0x108e51520,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,20569,0x108e51ae0,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,20584,0x108e51cc0,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,20598,0x108e52380,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,20614,0x108e52560,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,20628,0x108e52c20,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,20645,0x108e52d00,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,20662,0x108e52de0,3144,ArrayForEachLoopContinuation
code-creation,Builtin,2,20678,0x108e53a40,1328,ArrayForEach
code-creation,Builtin,2,20691,0x108e53f80,3572,ArrayFrom
code-creation,Builtin,2,20704,0x108e54d80,148,ArrayIsArray
code-creation,Builtin,2,20717,0x108e54e20,408,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,20734,0x108e54fc0,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,20751,0x108e55000,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,20768,0x108e550a0,312,ConvertToLocaleString
code-creation,Builtin,2,20784,0x108e551e0,748,JoinStackPush
code-creation,Builtin,2,20797,0x108e554e0,268,JoinStackPop
code-creation,Builtin,2,20811,0x108e55600,6620,ArrayPrototypeJoin
code-creation,Builtin,2,20832,0x108e56fe0,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,20861,0x108e584e0,236,ArrayPrototypeToString
code-creation,Builtin,2,20876,0x108e585e0,5924,TypedArrayPrototypeJoin
tick,0x7ff81f269ae6,20899,0,0x0,6
tick,0x7ff81f269ae6,20925,0,0x0,6
tick,0x7ff81f269ae6,20935,0,0x0,6
tick,0x108af2364,20944,0,0x0,6
tick,0x7ff81f213c81,20952,0,0x0,6
tick,0x7ff81f269ae6,20960,0,0x0,6
tick,0x7ff81f269ae6,20971,0,0x0,6
tick,0x7ff81f269ae6,20982,0,0x0,6
tick,0x7ff81f269ae6,20990,0,0x0,6
tick,0x7ff81f269ae6,21000,0,0x0,6
tick,0x7ff81f269ae6,21009,0,0x0,6
code-creation,Builtin,2,21022,0x108e59d20,4640,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,21039,0x108e5af60,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,21051,0x108e5be60,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,21064,0x108e5bf80,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,21076,0x108e5c080,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,21089,0x108e5c2a0,3188,ArrayMapLoopContinuation
code-creation,Builtin,2,21100,0x108e5cf20,3904,ArrayMap
code-creation,Builtin,2,21110,0x108e5de80,1000,ArrayOf
code-creation,Builtin,2,21120,0x108e5e280,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,21134,0x108e5e440,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,21147,0x108e5e520,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,21160,0x108e5e600,3204,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,21172,0x108e5f2a0,2000,ArrayReduceRight
code-creation,Builtin,2,21183,0x108e5fa80,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,21196,0x108e5fb40,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,21208,0x108e5fc20,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,21221,0x108e5fd00,3216,ArrayReduceLoopContinuation
code-creation,Builtin,2,21233,0x108e609a0,1604,ArrayReduce
code-creation,Builtin,2,21243,0x108e61000,3208,ArrayPrototypeReverse
code-creation,Builtin,2,21254,0x108e61ca0,3604,ArrayPrototypeShift
code-creation,Builtin,2,21265,0x108e62ac0,5172,ArrayPrototypeSlice
code-creation,Builtin,2,21276,0x108e63f00,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,21289,0x108e63fe0,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,21301,0x108e64240,3244,ArraySomeLoopContinuation
code-creation,Builtin,2,21313,0x108e64f00,1448,ArraySome
code-creation,Builtin,2,21323,0x108e654c0,14208,ArrayPrototypeSplice
code-creation,Builtin,2,21334,0x108e68c60,3268,ArrayPrototypeUnshift
code-creation,Builtin,2,21345,0x108e69940,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,21357,0x108e69aa0,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,21370,0x108e69c00,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,21382,0x108e69ce0,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,21395,0x108e69e40,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,21408,0x108e69f20,96,ArrayBufferIsView
code-creation,Builtin,2,21419,0x108e69fa0,396,ToInteger
code-creation,Builtin,2,21429,0x108e6a140,3068,FastCreateDataProperty
code-creation,Builtin,2,21440,0x108e6ad40,676,CheckNumberInRange
code-creation,Builtin,2,21451,0x108e6b000,584,CheckSameObject
code-creation,Builtin,2,21462,0x108e6b260,904,BooleanConstructor
code-creation,Builtin,2,21472,0x108e6b600,164,BooleanPrototypeToString
code-creation,Builtin,2,21484,0x108e6b6c0,156,BooleanPrototypeValueOf
code-creation,Builtin,2,21495,0x108e6b760,1180,BigIntAddNoThrow
code-creation,Builtin,2,21506,0x108e6bc00,1276,BigIntAdd
code-creation,Builtin,2,21516,0x108e6c100,1180,BigIntSubtractNoThrow
code-creation,Builtin,2,21527,0x108e6c5a0,1276,BigIntSubtract
code-creation,Builtin,2,21537,0x108e6caa0,284,BigIntUnaryMinus
code-creation,Builtin,2,21548,0x108e6cbc0,1356,ToString
code-creation,Builtin,2,21558,0x108e6d120,156,StringPrototypeToString
code-creation,Builtin,2,21569,0x108e6d1c0,156,StringPrototypeValueOf
code-creation,Builtin,2,21581,0x108e6d260,2452,StringToList
code-creation,Builtin,2,21610,0x108e6dc00,1012,StringPrototypeCharAt
code-creation,Builtin,2,21622,0x108e6e000,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,21634,0x108e6e2c0,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,21646,0x108e6e7e0,400,StringPrototypeConcat
code-creation,Builtin,2,21657,0x108e6e980,992,StringConstructor
code-creation,Builtin,2,21667,0x108e6ed80,1432,StringAddConvertLeft
code-creation,Builtin,2,21678,0x108e6f320,1460,StringAddConvertRight
code-creation,Builtin,2,21689,0x108e6f8e0,812,StringCharAt
code-creation,Builtin,2,21700,0x108e6fc20,16,FastNewClosureBaseline
code-creation,Builtin,2,21711,0x108e6fc40,196,FastNewFunctionContextEval
code-creation,Builtin,2,21722,0x108e6fd20,196,FastNewFunctionContextFunction
code-creation,Builtin,2,21734,0x108e6fe00,248,CreateRegExpLiteral
code-creation,Builtin,2,21745,0x108e6ff00,1080,CreateShallowArrayLiteral
code-creation,Builtin,2,21757,0x108e70340,496,CreateEmptyArrayLiteral
code-creation,Builtin,2,21768,0x108e70540,1724,CreateShallowObjectLiteral
code-creation,Builtin,2,21780,0x108e70c00,384,ObjectConstructor
code-creation,Builtin,2,21790,0x108e70da0,176,CreateEmptyLiteralObject
code-creation,Builtin,2,21802,0x108e70e60,532,NumberConstructor
code-creation,Builtin,2,21813,0x108e71080,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,21825,0x108e710e0,64,StringToNumber
code-creation,Builtin,2,21835,0x108e71140,184,NonNumberToNumber
code-creation,Builtin,2,21845,0x108e71200,240,NonNumberToNumeric
code-creation,Builtin,2,21856,0x108e71300,36,ToNumeric
code-creation,Builtin,2,21866,0x108e71340,1180,NumberToString
code-creation,Builtin,2,21877,0x108e717e0,92,ToBoolean
code-creation,Builtin,2,21886,0x108e71840,96,ToBooleanForBaselineJump
code-creation,Builtin,2,21898,0x108e718c0,728,ToLength
code-creation,Builtin,2,21908,0x108e71ba0,1308,ToName
code-creation,Builtin,2,21917,0x108e720c0,756,ToObject
code-creation,Builtin,2,21927,0x108e723c0,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,21939,0x108e724a0,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,21951,0x108e72580,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,21963,0x108e72660,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,21975,0x108e727a0,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,21986,0x108e728e0,216,FastConsoleAssert
code-creation,Builtin,2,21997,0x108e729c0,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,22009,0x108e72a80,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,22021,0x108e72be0,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,22033,0x108e72d40,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,22044,0x108e72f80,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,22055,0x108e731c0,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,22067,0x108e73460,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,22082,0x108e73700,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,22094,0x108e73a40,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,22105,0x108e73d00,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,22129,0x108e74060,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,22148,0x108e74400,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,22161,0x108e747e0,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,22173,0x108e74be0,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,22184,0x108e74fa0,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,22196,0x108e75360,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,22210,0x108e75780,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,22229,0x108e75ba0,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,22241,0x108e75fe0,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,22253,0x108e76420,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,22264,0x108e76840,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,22280,0x108e76ca0,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,22294,0x108e77060,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,22306,0x108e77420,828,FinalizationRegistryConstructor
code-creation,Builtin,2,22332,0x108e77760,1136,FinalizationRegistryRegister
code-creation,Builtin,2,22348,0x108e77be0,644,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,22364,0x108e77e80,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,22376,0x108e77fe0,924,FastFunctionPrototypeBind
code-creation,Builtin,2,22387,0x108e78380,88,IncBlockCounter
code-creation,Builtin,2,22398,0x108e783e0,236,GetTemplateObject
code-creation,Builtin,2,22412,0x108e784e0,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,22427,0x108e78500,92,ForInNext
code-creation,Builtin,2,22438,0x108e78560,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,22449,0x108e78600,116,GetIteratorWithFeedback
code-creation,Builtin,2,22461,0x108e78680,100,GetIteratorBaseline
code-creation,Builtin,2,22472,0x108e78700,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,22487,0x108e78820,1076,CallIteratorWithFeedback
code-creation,Builtin,2,22502,0x108e78c60,288,MathAbs
code-creation,Builtin,2,22515,0x108e78da0,428,MathCeil
code-creation,Builtin,2,22528,0x108e78f60,432,MathFloor
code-creation,Builtin,2,22541,0x108e79120,488,MathRound
code-creation,Builtin,2,22551,0x108e79320,428,MathTrunc
code-creation,Builtin,2,22561,0x108e794e0,364,MathPow
code-creation,Builtin,2,22571,0x108e79660,396,MathMax
code-creation,Builtin,2,22581,0x108e79800,404,MathMin
code-creation,Builtin,2,22590,0x108e799a0,320,MathAcos
code-creation,Builtin,2,22603,0x108e79b00,320,MathAcosh
code-creation,Builtin,2,22616,0x108e79c60,320,MathAsin
code-creation,Builtin,2,22629,0x108e79dc0,320,MathAsinh
code-creation,Builtin,2,22641,0x108e79f20,320,MathAtan
code-creation,Builtin,2,22652,0x108e7a080,412,MathAtan2
code-creation,Builtin,2,22662,0x108e7a220,320,MathAtanh
code-creation,Builtin,2,22672,0x108e7a380,320,MathCbrt
code-creation,Builtin,2,22682,0x108e7a4e0,168,MathClz32
code-creation,Builtin,2,22692,0x108e7a5a0,320,MathCos
code-creation,Builtin,2,22705,0x108e7a700,320,MathCosh
code-creation,Builtin,2,22718,0x108e7a860,320,MathExp
code-creation,Builtin,2,22730,0x108e7a9c0,320,MathExpm1
code-creation,Builtin,2,22740,0x108e7ab20,272,MathFround
code-creation,Builtin,2,22750,0x108e7ac40,304,MathImul
code-creation,Builtin,2,22760,0x108e7ad80,320,MathLog
code-creation,Builtin,2,22770,0x108e7aee0,320,MathLog1p
code-creation,Builtin,2,22783,0x108e7b040,320,MathLog10
code-creation,Builtin,2,22796,0x108e7b1a0,320,MathLog2
code-creation,Builtin,2,22806,0x108e7b300,320,MathSin
code-creation,Builtin,2,22816,0x108e7b460,180,MathSign
code-creation,Builtin,2,22826,0x108e7b520,320,MathSinh
code-creation,Builtin,2,22836,0x108e7b680,268,MathSqrt
code-creation,Builtin,2,22848,0x108e7b7a0,320,MathTan
code-creation,Builtin,2,22860,0x108e7b900,320,MathTanh
code-creation,Builtin,2,22870,0x108e7ba60,1056,MathHypot
code-creation,Builtin,2,22880,0x108e7bea0,324,MathRandom
code-creation,Builtin,2,22890,0x108e7c000,2952,NumberPrototypeToString
code-creation,Builtin,2,22904,0x108e7cba0,136,NumberIsFinite
code-creation,Builtin,2,22917,0x108e7cc40,340,NumberIsInteger
code-creation,Builtin,2,22931,0x108e7cda0,116,NumberIsNaN
code-creation,Builtin,2,22941,0x108e7ce20,372,NumberIsSafeInteger
code-creation,Builtin,2,22952,0x108e7cfa0,156,NumberPrototypeValueOf
code-creation,Builtin,2,22964,0x108e7d040,196,NumberParseFloat
code-creation,Builtin,2,22977,0x108e7d120,248,ParseInt
code-creation,Builtin,2,22990,0x108e7d220,84,NumberParseInt
code-creation,Builtin,2,23004,0x108e7d280,860,Add
code-creation,Builtin,2,23016,0x108e7d5e0,424,Subtract
code-creation,Builtin,2,23029,0x108e7d7a0,608,Multiply
code-creation,Builtin,2,23042,0x108e7da20,532,Divide
code-creation,Builtin,2,23055,0x108e7dc40,592,Modulus
code-creation,Builtin,2,23067,0x108e7dea0,524,Exponentiate
code-creation,Builtin,2,23081,0x108e7e0c0,344,Negate
code-creation,Builtin,2,23093,0x108e7e220,112,BitwiseNot
code-creation,Builtin,2,23107,0x108e7e2a0,112,Decrement
code-creation,Builtin,2,23119,0x108e7e320,112,Increment
tick,0x7ff81f269ae6,23145,0,0x0,6
tick,0x7ff81f268e26,23173,0,0x0,6
code-creation,Builtin,2,23237,0x108e7e3a0,392,ShiftLeft
code-creation,Builtin,2,23309,0x108e7e540,392,ShiftRight
code-creation,Builtin,2,23322,0x108e7e6e0,508,ShiftRightLogical
code-creation,Builtin,2,23334,0x108e7e8e0,388,BitwiseAnd
code-creation,Builtin,2,23344,0x108e7ea80,388,BitwiseOr
code-creation,Builtin,2,23354,0x108e7ec20,388,BitwiseXor
code-creation,Builtin,2,23365,0x108e7edc0,796,LessThan
code-creation,Builtin,2,23375,0x108e7f0e0,796,LessThanOrEqual
code-creation,Builtin,2,23385,0x108e7f400,796,GreaterThan
code-creation,Builtin,2,23395,0x108e7f720,796,GreaterThanOrEqual
code-creation,Builtin,2,23407,0x108e7fa40,860,Equal
code-creation,Builtin,2,23416,0x108e7fda0,348,StrictEqual
code-creation,Builtin,2,23426,0x108e7ff00,3132,ObjectFromEntries
code-creation,Builtin,2,23451,0x108e80b40,756,CreateObjectWithoutProperties
code-creation,Builtin,2,23463,0x108e80e40,144,ObjectIsExtensible
code-creation,Builtin,2,23473,0x108e80ee0,148,ObjectPreventExtensions
code-creation,Builtin,2,23484,0x108e80f80,144,ObjectGetPrototypeOf
code-creation,Builtin,2,23495,0x108e81020,300,ObjectSetPrototypeOf
code-creation,Builtin,2,23505,0x108e81160,80,ObjectPrototypeToString
code-creation,Builtin,2,23516,0x108e811c0,96,ObjectPrototypeValueOf
code-creation,Builtin,2,23527,0x108e81240,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,23539,0x108e81300,860,FulfillPromise
code-creation,Builtin,2,23549,0x108e81660,980,RejectPromise
code-creation,Builtin,2,23559,0x108e81a40,2412,NewPromiseCapability
code-creation,Builtin,2,23570,0x108e823c0,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,23582,0x108e82480,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,23593,0x108e82520,1412,PerformPromiseThen
code-creation,Builtin,2,23604,0x108e82ac0,648,PromiseReject
code-creation,Builtin,2,23614,0x108e82d60,292,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,23625,0x108e82ea0,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,23638,0x108e82f20,4556,PromiseAll
code-creation,Builtin,2,23647,0x108e84100,4876,PromiseAllSettled
code-creation,Builtin,2,23658,0x108e85420,1100,PromiseAllResolveElementClosure
code-creation,Builtin,2,23669,0x108e85880,1388,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,23682,0x108e85e00,1396,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,23694,0x108e86380,1172,PromiseAnyRejectElementClosure
code-creation,Builtin,2,23705,0x108e86820,2368,PromiseAny
code-creation,Builtin,2,23715,0x108e87180,2908,PromiseConstructor
code-creation,Builtin,2,23725,0x108e87ce0,296,PromisePrototypeCatch
code-creation,Builtin,2,23736,0x108e87e20,88,PromiseValueThunkFinally
code-creation,Builtin,2,23747,0x108e87e80,84,PromiseThrowerFinally
code-creation,Builtin,2,23758,0x108e87ee0,904,PromiseCatchFinally
code-creation,Builtin,2,23769,0x108e88280,904,PromiseThenFinally
code-creation,Builtin,2,23779,0x108e88620,1700,PromisePrototypeFinally
code-creation,Builtin,2,23790,0x108e88ce0,1336,PromiseRace
code-creation,Builtin,2,23800,0x108e89220,268,PromiseFulfillReactionJob
code-creation,Builtin,2,23811,0x108e89340,364,PromiseRejectReactionJob
code-creation,Builtin,2,23822,0x108e894c0,156,PromiseResolveTrampoline
code-creation,Builtin,2,23833,0x108e89560,656,PromiseResolve
code-creation,Builtin,2,23843,0x108e89800,712,ResolvePromise
code-creation,Builtin,2,23853,0x108e89ae0,2220,PromisePrototypeThen
code-creation,Builtin,2,23864,0x108e8a3a0,1144,PromiseResolveThenableJob
code-creation,Builtin,2,23875,0x108e8a820,448,ProxyConstructor
code-creation,Builtin,2,23885,0x108e8aa00,1760,ProxyDeleteProperty
code-creation,Builtin,2,23896,0x108e8b100,2112,ProxyGetProperty
code-creation,Builtin,2,23906,0x108e8b960,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,23917,0x108e8bda0,1668,ProxyHasProperty
code-creation,Builtin,2,23927,0x108e8c440,760,ProxyIsExtensible
code-creation,Builtin,2,23937,0x108e8c740,800,ProxyPreventExtensions
code-creation,Builtin,2,23948,0x108e8ca80,1148,ProxyRevocable
code-creation,Builtin,2,23959,0x108e8cf00,120,ProxyRevoke
code-creation,Builtin,2,23969,0x108e8cf80,2216,ProxySetProperty
code-creation,Builtin,2,23992,0x108e8d840,1292,ProxySetPrototypeOf
code-creation,Builtin,2,24004,0x108e8dd60,208,ReflectIsExtensible
code-creation,Builtin,2,24014,0x108e8de40,212,ReflectPreventExtensions
code-creation,Builtin,2,24026,0x108e8df20,188,ReflectGetPrototypeOf
code-creation,Builtin,2,24036,0x108e8dfe0,292,ReflectSetPrototypeOf
code-creation,Builtin,2,24047,0x108e8e120,284,ReflectGet
code-creation,Builtin,2,24057,0x108e8e240,160,ReflectDeleteProperty
code-creation,Builtin,2,24068,0x108e8e300,148,ReflectHas
code-creation,Builtin,2,24077,0x108e8e3a0,5108,RegExpPrototypeExecSlow
code-creation,Builtin,2,24088,0x108e8f7a0,5100,RegExpPrototypeExec
code-creation,Builtin,2,24099,0x108e90ba0,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,24110,0x108e914e0,9384,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,24122,0x108e939a0,8796,RegExpMatchFast
code-creation,Builtin,2,24132,0x108e95c00,3592,RegExpPrototypeMatch
code-creation,Builtin,2,24142,0x108e96a20,6304,RegExpReplace
code-creation,Builtin,2,24152,0x108e982e0,524,RegExpPrototypeReplace
code-creation,Builtin,2,24163,0x108e98500,1400,RegExpSearchFast
code-creation,Builtin,2,24174,0x108e98a80,1640,RegExpPrototypeSearch
code-creation,Builtin,2,24184,0x108e99100,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,24195,0x108e991e0,5784,RegExpSplit
code-creation,Builtin,2,24205,0x108e9a880,476,RegExpPrototypeSplit
code-creation,Builtin,2,24216,0x108e9aa60,2236,RegExpPrototypeTest
code-creation,Builtin,2,24227,0x108e9b320,1348,RegExpPrototypeTestFast
code-creation,Builtin,2,24238,0x108e9b880,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,24249,0x108e9b980,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,24261,0x108e9ba80,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,24272,0x108e9bb80,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,24284,0x108e9bc80,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,24295,0x108e9bd80,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,24306,0x108e9be80,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,24318,0x108e9bfa0,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,24329,0x108e9c0c0,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,24340,0x108e9c9a0,1500,StringPrototypeAt
code-creation,Builtin,2,24350,0x108e9cf80,2992,StringPrototypeEndsWith
code-creation,Builtin,2,24361,0x108e9db40,480,CreateHTML
code-creation,Builtin,2,24371,0x108e9dd40,164,StringPrototypeAnchor
code-creation,Builtin,2,24382,0x108e9de00,128,StringPrototypeBig
code-creation,Builtin,2,24427,0x108e9dea0,128,StringPrototypeBlink
code-creation,Builtin,2,24441,0x108e9df40,128,StringPrototypeBold
code-creation,Builtin,2,24452,0x108e9dfe0,168,StringPrototypeFontcolor
code-creation,Builtin,2,24463,0x108e9e0a0,168,StringPrototypeFontsize
code-creation,Builtin,2,24474,0x108e9e160,128,StringPrototypeFixed
code-creation,Builtin,2,24485,0x108e9e200,128,StringPrototypeItalics
code-creation,Builtin,2,24495,0x108e9e2a0,168,StringPrototypeLink
code-creation,Builtin,2,24506,0x108e9e360,128,StringPrototypeSmall
code-creation,Builtin,2,24516,0x108e9e400,128,StringPrototypeStrike
code-creation,Builtin,2,24527,0x108e9e4a0,128,StringPrototypeSub
code-creation,Builtin,2,24537,0x108e9e540,128,StringPrototypeSup
code-creation,Builtin,2,24553,0x108e9e5e0,1028,StringPrototypeIncludes
code-creation,Builtin,2,24569,0x108e9ea00,628,StringPrototypeIndexOf
code-creation,Builtin,2,24583,0x108e9ec80,344,StringPrototypeIterator
code-creation,Builtin,2,24597,0x108e9ede0,2028,StringIteratorPrototypeNext
code-creation,Builtin,2,24611,0x108e9f5e0,1304,StringPrototypeMatch
code-creation,Builtin,2,24625,0x108e9fb00,1304,StringPrototypeSearch
code-creation,Builtin,2,24637,0x108ea0020,824,StringPrototypePadStart
code-creation,Builtin,2,24651,0x108ea0360,824,StringPrototypePadEnd
code-creation,Builtin,2,24666,0x108ea06a0,120,StringRepeat
code-creation,Builtin,2,24679,0x108ea0720,400,StringPrototypeRepeat
code-creation,Builtin,2,24695,0x108ea08c0,10964,StringPrototypeReplaceAll
code-creation,Builtin,2,24710,0x108ea33a0,3384,StringPrototypeSlice
code-creation,Builtin,2,24738,0x108ea40e0,3004,StringPrototypeStartsWith
code-creation,Builtin,2,24753,0x108ea4ca0,3324,StringPrototypeSubstr
code-creation,Builtin,2,24766,0x108ea59a0,3260,StringPrototypeSubstring
code-creation,Builtin,2,24780,0x108ea6660,6904,StringPrototypeTrim
code-creation,Builtin,2,24794,0x108ea8160,6316,StringPrototypeTrimStart
code-creation,Builtin,2,24808,0x108ea9a20,5840,StringPrototypeTrimEnd
code-creation,Builtin,2,24823,0x108eab100,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,24839,0x108eab1c0,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,24853,0x108eab260,172,SymbolPrototypeToString
code-creation,Builtin,2,24869,0x108eab320,156,SymbolPrototypeValueOf
code-creation,Builtin,2,24884,0x108eab3c0,832,TypedArrayPrototypeAt
code-creation,Builtin,2,24899,0x108eab720,10004,CreateTypedArray
code-creation,Builtin,2,24914,0x108eade40,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,24928,0x108eae240,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,24944,0x108eae3c0,3508,TypedArrayPrototypeFilter
code-creation,Builtin,2,24959,0x108eaf180,996,TypedArrayPrototypeFind
code-creation,Builtin,2,24973,0x108eaf580,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,24992,0x108eaf980,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,25008,0x108eafb40,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,25024,0x108eb0000,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,25041,0x108eb01c0,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,25056,0x108eb06a0,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,25072,0x108eb0a20,2352,TypedArrayFrom
code-creation,Builtin,2,25086,0x108eb1360,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,25101,0x108eb14e0,1028,TypedArrayOf
code-creation,Builtin,2,25115,0x108eb1900,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,25130,0x108eb1cc0,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,25144,0x108eb2080,2496,TypedArrayPrototypeSet
code-creation,Builtin,2,25160,0x108eb2a60,3028,TypedArrayPrototypeSlice
code-creation,Builtin,2,25175,0x108eb3640,992,TypedArrayPrototypeSome
code-creation,Builtin,2,25189,0x108eb3a40,1052,TypedArrayMergeSort
code-creation,Builtin,2,25204,0x108eb3e60,1616,TypedArrayPrototypeSort
code-creation,Builtin,2,25219,0x108eb44c0,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,25234,0x108eb4f80,372,TypedArrayPrototypeValues
code-creation,Builtin,2,25248,0x108eb5100,956,WeakRefConstructor
code-creation,Builtin,2,25263,0x108eb54c0,184,WeakRefDeref
code-creation,Builtin,2,25277,0x108eb5580,680,NewSloppyArgumentsElements
code-creation,Builtin,2,25291,0x108eb5840,296,NewStrictArgumentsElements
code-creation,Builtin,2,25305,0x108eb5980,320,NewRestArgumentsElements
tick,0x7ff81f269ae6,25326,0,0x0,6
code-creation,Builtin,2,25350,0x108eb5ae0,1388,FastNewSloppyArguments
code-creation,Builtin,2,25369,0x108eb6060,524,FastNewStrictArguments
code-creation,Builtin,2,25381,0x108eb6280,556,FastNewRestArguments
code-creation,Builtin,2,25392,0x108eb64c0,676,StringSlowFlatten
code-creation,Builtin,2,25403,0x108eb6780,2000,StringIndexOf
code-creation,Builtin,2,25414,0x108eb6f60,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,25425,0x108eb6f80,20,TestHelperPlus1
code-creation,Builtin,2,25436,0x108eb6fa0,20,TestHelperPlus2
code-creation,Builtin,2,25446,0x108eb6fc0,96,NewSmiBox
code-creation,Builtin,2,25456,0x108eb7040,24,ReturnTwoValues
code-creation,Builtin,2,25478,0x108eb7060,32,Load_FastSmiElements_0
code-creation,Builtin,2,25494,0x108eb70a0,32,Load_FastObjectElements_0
code-creation,Builtin,2,25506,0x108eb70e0,144,Load_FastDoubleElements_0
code-creation,Builtin,2,25517,0x108eb7180,32,Store_FastSmiElements_0
code-creation,Builtin,2,25528,0x108eb71c0,92,Store_FastObjectElements_0
code-creation,Builtin,2,25539,0x108eb7220,48,Store_FastDoubleElements_0
code-creation,Builtin,2,25553,0x108eb7260,36,Delete_FastSmiElements_0
code-creation,Builtin,2,25567,0x108eb72a0,36,Delete_FastObjectElements_0
code-creation,Builtin,2,25580,0x108eb72e0,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,25610,0x108eb7320,308,SortCompareDefault
code-creation,Builtin,2,25621,0x108eb7460,92,SortCompareUserFn
code-creation,Builtin,2,25635,0x108eb74c0,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,25650,0x108eb74e0,308,Copy
code-creation,Builtin,2,25660,0x108eb7620,5732,MergeAt
code-creation,Builtin,2,25670,0x108eb8ca0,792,GallopLeft
code-creation,Builtin,2,25680,0x108eb8fc0,832,GallopRight
code-creation,Builtin,2,25689,0x108eb9320,3820,ArrayTimSort
code-creation,Builtin,2,25703,0x108eba220,2096,ArrayPrototypeSort
code-creation,Builtin,2,25716,0x108ebaa60,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,25727,0x108ebaae0,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,25738,0x108ebab60,76,WasmTaggedToFloat64
code-creation,Builtin,2,25749,0x108ebabc0,72,WasmMemoryGrow
code-creation,Builtin,2,25759,0x108ebac20,100,WasmTableInit
code-creation,Builtin,2,25772,0x108ebaca0,100,WasmTableCopy
code-creation,Builtin,2,25784,0x108ebad20,84,WasmTableFill
code-creation,Builtin,2,25797,0x108ebad80,72,WasmTableGrow
code-creation,Builtin,2,25810,0x108ebade0,144,WasmTableGet
code-creation,Builtin,2,25823,0x108ebae80,236,WasmTableSet
code-creation,Builtin,2,25836,0x108ebaf80,88,WasmRefFunc
code-creation,Builtin,2,25849,0x108ebafe0,144,WasmAllocateFixedArray
code-creation,Builtin,2,25862,0x108ebb080,44,WasmThrow
code-creation,Builtin,2,25875,0x108ebb0c0,52,WasmRethrow
code-creation,Builtin,2,25888,0x108ebb100,44,WasmTriggerTierUp
code-creation,Builtin,2,25902,0x108ebb140,32,WasmStackGuard
code-creation,Builtin,2,25915,0x108ebb180,32,WasmStackOverflow
code-creation,Builtin,2,25928,0x108ebb1c0,40,WasmTraceMemory
code-creation,Builtin,2,25941,0x108ebb200,32,WasmTraceEnter
code-creation,Builtin,2,25954,0x108ebb240,40,WasmTraceExit
code-creation,Builtin,2,25967,0x108ebb280,332,WasmAllocateJSArray
code-creation,Builtin,2,25981,0x108ebb3e0,104,WasmAllocatePair
code-creation,Builtin,2,25994,0x108ebb460,64,WasmAllocateRtt
code-creation,Builtin,2,26006,0x108ebb4c0,72,WasmAllocateFreshRtt
code-creation,Builtin,2,26020,0x108ebb520,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,26034,0x108ebb5a0,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,26046,0x108ebb640,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,26057,0x108ebb700,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,26068,0x108ebb7c0,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,26079,0x108ebb840,60,WasmArrayCopy
code-creation,Builtin,2,26092,0x108ebb880,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,26107,0x108ebb980,52,WasmSubtypeCheck
code-creation,Builtin,2,26120,0x108ebb9c0,8,WasmInt32ToNumber
code-creation,Builtin,2,26134,0x108ebb9e0,116,WasmUint32ToNumber
code-creation,Builtin,2,26147,0x108ebba60,144,UintPtr53ToNumber
code-creation,Builtin,2,26160,0x108ebbb00,96,WasmAtomicNotify
code-creation,Builtin,2,26173,0x108ebbb80,116,WasmI32AtomicWait64
code-creation,Builtin,2,26187,0x108ebbc00,116,WasmI64AtomicWait64
code-creation,Builtin,2,26200,0x108ebbc80,580,WasmGetOwnProperty
code-creation,Builtin,2,26213,0x108ebbee0,40,WasmTrap
code-creation,Builtin,2,26225,0x108ebbf20,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,26239,0x108ebbf40,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,26253,0x108ebbf60,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,26264,0x108ebbf80,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,26275,0x108ebbfa0,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,26287,0x108ebbfc0,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,26298,0x108ebbfe0,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,26312,0x108ebc000,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,26326,0x108ebc020,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,26340,0x108ebc040,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,26352,0x108ebc060,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,26364,0x108ebc080,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,26375,0x108ebc0a0,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,26402,0x108ebc0c0,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,26414,0x108ebc0e0,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,26425,0x108ebc100,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,26436,0x108ebc120,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,26449,0x108ebc1e0,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,26463,0x108ebc200,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,26489,0x108ebc280,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,26501,0x108ebc300,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,26513,0x108ebc320,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,26525,0x108ebc400,248,LoadJoinTypedElement_BigInt64Elements_0
tick,0x7ff81f269ae6,26558,0,0x0,6
code-creation,Builtin,2,26584,0x108ebc500,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,26602,0x108ebc520,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,26614,0x108ebc540,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,26626,0x108ebc560,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,26637,0x108ebc580,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,26652,0x108ebc620,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,26664,0x108ebc640,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,26677,0x108ebc680,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,26689,0x108ebc6c0,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,26700,0x108ebc700,2668,Load_GenericElementsAccessor_0
code-creation,Builtin,2,26715,0x108ebd180,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,26728,0x108ebd1a0,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,26740,0x108ebd1e0,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,26751,0x108ebd200,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,26766,0x108ebd2c0,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,26780,0x108ebd380,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,26791,0x108ebd400,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,26804,0x108ebd440,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,26816,0x108ebd4e0,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,26829,0x108ebd560,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,26842,0x108ebd580,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,26854,0x108ebd620,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,26868,0x108ebd640,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,26884,0x108ebd660,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,26899,0x108ebd8e0,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,26914,0x108ebd9c0,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,26929,0x108ebda00,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,26943,0x108ebdae0,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,26958,0x108ebdbe0,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,26973,0x108ebdc20,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,26988,0x108ebdd00,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,27002,0x108ebdd20,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,27016,0x108ebdd40,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,27031,0x108ebde00,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,27045,0x108ebde20,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,27059,0x108ebde40,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,27074,0x108ebdf00,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,27088,0x108ebdf20,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,27102,0x108ebdf40,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,27130,0x108ebe000,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,27149,0x108ebe020,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,27164,0x108ebe040,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,27179,0x108ebe100,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,27193,0x108ebe1a0,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,27208,0x108ebe260,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,27223,0x108ebe320,12,CollatorConstructor
code-creation,Builtin,2,27236,0x108ebe340,12,CollatorInternalCompare
code-creation,Builtin,2,27249,0x108ebe360,12,CollatorPrototypeCompare
code-creation,Builtin,2,27262,0x108ebe380,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,27276,0x108ebe3a0,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,27290,0x108ebe3c0,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,27304,0x108ebe3e0,12,DatePrototypeToLocaleString
code-creation,Builtin,2,27318,0x108ebe400,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,27332,0x108ebe420,12,DateTimeFormatConstructor
code-creation,Builtin,2,27345,0x108ebe440,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,27359,0x108ebe460,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,27373,0x108ebe480,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,27387,0x108ebe4a0,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,27402,0x108ebe4c0,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,27416,0x108ebe4e0,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,27431,0x108ebe500,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,27445,0x108ebe520,12,DisplayNamesConstructor
code-creation,Builtin,2,27458,0x108ebe540,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,27472,0x108ebe560,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,27486,0x108ebe580,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,27500,0x108ebe5a0,12,IntlGetCanonicalLocales
code-creation,Builtin,2,27513,0x108ebe5c0,12,ListFormatConstructor
code-creation,Builtin,2,27526,0x108ebe5e0,224,ListFormatPrototypeFormat
code-creation,Builtin,2,27540,0x108ebe6e0,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,27554,0x108ebe7e0,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,27570,0x108ebe800,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,27582,0x108ebe820,12,LocaleConstructor
code-creation,Builtin,2,27592,0x108ebe840,12,LocalePrototypeBaseName
code-creation,Builtin,2,27602,0x108ebe860,12,LocalePrototypeCalendar
code-creation,Builtin,2,27613,0x108ebe880,12,LocalePrototypeCalendars
code-creation,Builtin,2,27624,0x108ebe8a0,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,27634,0x108ebe8c0,12,LocalePrototypeCollation
code-creation,Builtin,2,27645,0x108ebe8e0,12,LocalePrototypeCollations
code-creation,Builtin,2,27656,0x108ebe900,12,LocalePrototypeHourCycle
code-creation,Builtin,2,27677,0x108ebe920,12,LocalePrototypeHourCycles
code-creation,Builtin,2,27692,0x108ebe940,12,LocalePrototypeLanguage
code-creation,Builtin,2,27705,0x108ebe960,12,LocalePrototypeMaximize
code-creation,Builtin,2,27719,0x108ebe980,12,LocalePrototypeMinimize
code-creation,Builtin,2,27732,0x108ebe9a0,12,LocalePrototypeNumeric
code-creation,Builtin,2,27745,0x108ebe9c0,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,27759,0x108ebe9e0,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,27773,0x108ebea00,12,LocalePrototypeRegion
code-creation,Builtin,2,27786,0x108ebea20,12,LocalePrototypeScript
code-creation,Builtin,2,27799,0x108ebea40,12,LocalePrototypeTextInfo
code-creation,Builtin,2,27813,0x108ebea60,12,LocalePrototypeTimeZones
code-creation,Builtin,2,27826,0x108ebea80,12,LocalePrototypeToString
code-creation,Builtin,2,27839,0x108ebeaa0,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,27852,0x108ebeac0,12,NumberFormatConstructor
code-creation,Builtin,2,27866,0x108ebeae0,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,27880,0x108ebeb00,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,27907,0x108ebeb20,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,27921,0x108ebeb40,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,27936,0x108ebeb60,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,27950,0x108ebeb80,12,PluralRulesConstructor
code-creation,Builtin,2,27963,0x108ebeba0,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,27977,0x108ebebc0,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,27991,0x108ebebe0,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,28005,0x108ebec00,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,28019,0x108ebec20,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,28033,0x108ebec40,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,28048,0x108ebec60,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,28063,0x108ebec80,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,28077,0x108ebeca0,12,SegmenterConstructor
code-creation,Builtin,2,28090,0x108ebecc0,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,28104,0x108ebece0,12,SegmenterPrototypeSegment
code-creation,Builtin,2,28117,0x108ebed00,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,28131,0x108ebed20,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,28144,0x108ebed40,12,SegmentsPrototypeContaining
code-creation,Builtin,2,28158,0x108ebed60,12,SegmentsPrototypeIterator
code-creation,Builtin,2,28172,0x108ebed80,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,28185,0x108ebeda0,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,28199,0x108ebedc0,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,28213,0x108ebede0,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,28227,0x108ebeec0,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,28241,0x108ebeee0,632,StringToLowerCaseIntl
code-creation,Builtin,2,28254,0x108ebf160,12,V8BreakIteratorConstructor
code-creation,Builtin,2,28268,0x108ebf180,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,28282,0x108ebf1a0,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,28296,0x108ebf1c0,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,28310,0x108ebf1e0,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,28324,0x108ebf200,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,28338,0x108ebf220,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,28352,0x108ebf240,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,28366,0x108ebf260,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,28380,0x108ebf280,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,28393,0x108ebf2a0,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,28407,0x108ebf2c0,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,28422,0x108ebf2e0,12,V8BreakIteratorSupportedLocalesOf
tick,0x7ff81f268e26,28443,0,0x0,6
tick,0x7ff81f29ed3e,28467,0,0x0,6
code-creation,BytecodeHandler,0,28479,0x108ebf300,24,Wide
code-creation,BytecodeHandler,0,28493,0x108ebf320,24,ExtraWide
code-creation,BytecodeHandler,0,28503,0x108ebf340,104,DebugBreakWide
code-creation,BytecodeHandler,0,28514,0x108ebf3c0,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,28525,0x108ebf440,164,DebugBreak0
code-creation,BytecodeHandler,0,28536,0x108ebf500,104,DebugBreak1
code-creation,BytecodeHandler,0,28546,0x108ebf580,104,DebugBreak2
code-creation,BytecodeHandler,0,28557,0x108ebf600,104,DebugBreak3
code-creation,BytecodeHandler,0,28567,0x108ebf680,104,DebugBreak4
code-creation,BytecodeHandler,0,28577,0x108ebf700,104,DebugBreak5
code-creation,BytecodeHandler,0,28587,0x108ebf780,104,DebugBreak6
code-creation,BytecodeHandler,0,28598,0x108ebf800,32,Ldar
code-creation,BytecodeHandler,0,28607,0x108ebf840,68,LdaZero
code-creation,BytecodeHandler,0,28617,0x108ebf8a0,76,LdaSmi
code-creation,BytecodeHandler,0,28627,0x108ebf900,68,LdaUndefined
code-creation,BytecodeHandler,0,28637,0x108ebf960,68,LdaNull
code-creation,BytecodeHandler,0,28647,0x108ebf9c0,68,LdaTheHole
code-creation,BytecodeHandler,0,28675,0x108ebfa20,20,LdaTrue
code-creation,BytecodeHandler,0,28685,0x108ebfa40,20,LdaFalse
code-creation,BytecodeHandler,0,28695,0x108ebfa60,76,LdaConstant
code-creation,BytecodeHandler,0,28706,0x108ebfac0,132,LdaContextSlot
code-creation,BytecodeHandler,0,28716,0x108ebfb60,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,28728,0x108ebfc00,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,28739,0x108ebfc60,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,28751,0x108ebfcc0,32,Star
code-creation,BytecodeHandler,0,28760,0x108ebfd00,40,Mov
code-creation,BytecodeHandler,0,28770,0x108ebfd40,40,PushContext
code-creation,BytecodeHandler,0,28780,0x108ebfd80,36,PopContext
code-creation,BytecodeHandler,0,28790,0x108ebfdc0,48,TestReferenceEqual
code-creation,BytecodeHandler,0,28801,0x108ebfe00,52,TestUndetectable
code-creation,BytecodeHandler,0,28812,0x108ebfe40,36,TestNull
code-creation,BytecodeHandler,0,28822,0x108ebfe80,36,TestUndefined
code-creation,BytecodeHandler,0,28832,0x108ebfec0,336,TestTypeOf
code-creation,BytecodeHandler,0,28842,0x108ec0020,6036,LdaGlobal
code-creation,BytecodeHandler,0,28852,0x108ec17c0,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,28864,0x108ec2980,168,StaGlobal
code-creation,BytecodeHandler,0,28874,0x108ec2a40,156,StaContextSlot
code-creation,BytecodeHandler,0,28884,0x108ec2ae0,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,28895,0x108ec2b60,124,LdaLookupSlot
code-creation,BytecodeHandler,0,28906,0x108ec2be0,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,28920,0x108ec2ce0,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,28931,0x108ec3fa0,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,28942,0x108ec4020,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,28955,0x108ec4120,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,28984,0x108ec53c0,220,StaLookupSlot
code-creation,BytecodeHandler,0,28997,0x108ec54a0,5204,LdaNamedProperty
code-creation,BytecodeHandler,0,29011,0x108ec6900,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,29025,0x108ec69c0,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,29039,0x108ec6aa0,160,LdaModuleVariable
code-creation,BytecodeHandler,0,29053,0x108ec6b60,292,StaModuleVariable
code-creation,BytecodeHandler,0,29067,0x108ec6ca0,172,StaNamedProperty
code-creation,BytecodeHandler,0,29080,0x108ec6d60,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,29094,0x108ec6e20,164,StaKeyedProperty
code-creation,BytecodeHandler,0,29108,0x108ec6ee0,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,29122,0x108ec6fa0,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,29136,0x108ec7080,160,CollectTypeProfile
code-creation,BytecodeHandler,0,29149,0x108ec7140,1028,Add
code-creation,BytecodeHandler,0,29162,0x108ec7560,1064,Sub
code-creation,BytecodeHandler,0,29175,0x108ec79a0,1024,Mul
code-creation,BytecodeHandler,0,29186,0x108ec7dc0,988,Div
code-creation,BytecodeHandler,0,29196,0x108ec81a0,912,Mod
code-creation,BytecodeHandler,0,29206,0x108ec8540,960,Exp
code-creation,BytecodeHandler,0,29215,0x108ec8920,876,BitwiseOr
code-creation,BytecodeHandler,0,29225,0x108ec8ca0,888,BitwiseXor
code-creation,BytecodeHandler,0,29238,0x108ec9020,888,BitwiseAnd
code-creation,BytecodeHandler,0,29250,0x108ec93a0,900,ShiftLeft
code-creation,BytecodeHandler,0,29260,0x108ec9740,900,ShiftRight
code-creation,BytecodeHandler,0,29270,0x108ec9ae0,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,29281,0x108ec9ee0,960,AddSmi
code-creation,BytecodeHandler,0,29291,0x108eca2c0,1000,SubSmi
code-creation,BytecodeHandler,0,29303,0x108eca6c0,916,MulSmi
code-creation,BytecodeHandler,0,29315,0x108ecaa60,920,DivSmi
code-creation,BytecodeHandler,0,29326,0x108ecae00,816,ModSmi
code-creation,BytecodeHandler,0,29335,0x108ecb140,868,ExpSmi
code-creation,BytecodeHandler,0,29345,0x108ecb4c0,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,29355,0x108ecb6c0,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,29368,0x108ecb8c0,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,29395,0x108ecbac0,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,29406,0x108ecbcc0,488,ShiftRightSmi
code-creation,BytecodeHandler,0,29416,0x108ecbec0,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,29427,0x108ecc160,656,Inc
code-creation,BytecodeHandler,0,29440,0x108ecc400,656,Dec
code-creation,BytecodeHandler,0,29451,0x108ecc6a0,640,Negate
code-creation,BytecodeHandler,0,29461,0x108ecc940,480,BitwiseNot
code-creation,BytecodeHandler,0,29471,0x108eccb40,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,29482,0x108eccbc0,36,LogicalNot
code-creation,BytecodeHandler,0,29492,0x108eccc00,208,TypeOf
code-creation,BytecodeHandler,0,29505,0x108eccce0,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,29518,0x108eccd60,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,29529,0x108eccde0,40,GetSuperConstructor
code-creation,BytecodeHandler,0,29540,0x108ecce20,1120,CallAnyReceiver
code-creation,BytecodeHandler,0,29551,0x108ecd2a0,1120,CallProperty
code-creation,BytecodeHandler,0,29561,0x108ecd720,1008,CallProperty0
code-creation,BytecodeHandler,0,29574,0x108ecdb20,1024,CallProperty1
code-creation,BytecodeHandler,0,29587,0x108ecdf40,1036,CallProperty2
code-creation,BytecodeHandler,0,29600,0x108ece360,1000,CallUndefinedReceiver
code-creation,BytecodeHandler,0,29615,0x108ece760,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,29629,0x108eceb80,1016,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,29640,0x108ecef80,1032,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,29652,0x108ecf3a0,1120,CallWithSpread
code-creation,BytecodeHandler,0,29662,0x108ecf820,124,CallRuntime
code-creation,BytecodeHandler,0,29673,0x108ecf8a0,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,29686,0x108ecf940,80,CallJSRuntime
code-creation,BytecodeHandler,0,29700,0x108ecf9a0,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,29713,0x108ecfe80,1016,Construct
code-creation,BytecodeHandler,0,29726,0x108ed0280,536,ConstructWithSpread
code-creation,BytecodeHandler,0,29740,0x108ed04a0,1936,TestEqual
code-creation,BytecodeHandler,0,29752,0x108ed0c40,1064,TestEqualStrict
code-creation,BytecodeHandler,0,29765,0x108ed1080,1624,TestLessThan
code-creation,BytecodeHandler,0,29778,0x108ed16e0,1624,TestGreaterThan
code-creation,BytecodeHandler,0,29792,0x108ed1d40,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,29805,0x108ed23a0,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,29819,0x108ed2a00,856,TestInstanceOf
code-creation,BytecodeHandler,0,29832,0x108ed2d60,156,TestIn
code-creation,BytecodeHandler,0,29845,0x108ed2e00,112,ToName
code-creation,BytecodeHandler,0,29858,0x108ed2e80,212,ToNumber
code-creation,BytecodeHandler,0,29870,0x108ed2f60,232,ToNumeric
code-creation,BytecodeHandler,0,29883,0x108ed3060,112,ToObject
code-creation,BytecodeHandler,0,29896,0x108ed30e0,116,ToString
code-creation,BytecodeHandler,0,29908,0x108ed3160,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,29922,0x108ed3300,1460,CreateArrayLiteral
code-creation,BytecodeHandler,0,29935,0x108ed38c0,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,29949,0x108ed3920,792,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,29964,0x108ed3c40,2160,CreateObjectLiteral
code-creation,BytecodeHandler,0,29986,0x108ed44c0,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,30001,0x108ed45c0,168,CloneObject
code-creation,BytecodeHandler,0,30014,0x108ed4680,212,GetTemplateObject
code-creation,BytecodeHandler,0,30028,0x108ed4760,328,CreateClosure
code-creation,BytecodeHandler,0,30041,0x108ed48c0,120,CreateBlockContext
code-creation,BytecodeHandler,0,30055,0x108ed4940,132,CreateCatchContext
code-creation,BytecodeHandler,0,30069,0x108ed49e0,256,CreateFunctionContext
code-creation,BytecodeHandler,0,30084,0x108ed4b00,256,CreateEvalContext
code-creation,BytecodeHandler,0,30097,0x108ed4c20,132,CreateWithContext
code-creation,BytecodeHandler,0,30111,0x108ed4cc0,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,30126,0x108ed5300,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,30153,0x108ed5560,632,CreateRestParameter
code-creation,BytecodeHandler,0,30167,0x108ed57e0,424,JumpLoop
code-creation,BytecodeHandler,0,30180,0x108ed59a0,44,Jump
code-creation,BytecodeHandler,0,30193,0x108ed59e0,56,JumpConstant
code-creation,BytecodeHandler,0,30206,0x108ed5a20,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,30220,0x108ed5a80,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,30234,0x108ed5ae0,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,30249,0x108ed5b40,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,30264,0x108ed5ba0,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,30278,0x108ed5c00,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,30294,0x108ed5c60,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,30308,0x108ed5cc0,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,30323,0x108ed5d20,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,30339,0x108ed5dc0,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,30354,0x108ed5e60,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,30368,0x108ed5f00,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,30384,0x108ed5fa0,64,JumpIfTrue
code-creation,BytecodeHandler,0,30398,0x108ed6000,64,JumpIfFalse
code-creation,BytecodeHandler,0,30411,0x108ed6060,64,JumpIfNull
code-creation,BytecodeHandler,0,30426,0x108ed60c0,64,JumpIfNotNull
code-creation,BytecodeHandler,0,30440,0x108ed6120,64,JumpIfUndefined
code-creation,BytecodeHandler,0,30454,0x108ed6180,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,30469,0x108ed61e0,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,30484,0x108ed6240,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,30498,0x108ed62a0,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,30514,0x108ed6320,464,ForInEnumerate
code-creation,BytecodeHandler,0,30527,0x108ed6500,252,ForInPrepare
code-creation,BytecodeHandler,0,30540,0x108ed6600,60,ForInContinue
code-creation,BytecodeHandler,0,30555,0x108ed6640,256,ForInNext
code-creation,BytecodeHandler,0,30569,0x108ed6760,48,ForInStep
code-creation,BytecodeHandler,0,30582,0x108ed67a0,36,SetPendingMessage
code-creation,BytecodeHandler,0,30596,0x108ed67e0,116,Throw
code-creation,BytecodeHandler,0,30610,0x108ed6860,116,ReThrow
code-creation,BytecodeHandler,0,30623,0x108ed68e0,112,Return
code-creation,BytecodeHandler,0,30636,0x108ed6960,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,30652,0x108ed6a40,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,30667,0x108ed6ae0,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,30682,0x108ed6b80,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,30699,0x108ed6c20,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,30714,0x108ed6ca0,500,SuspendGenerator
code-creation,BytecodeHandler,0,30727,0x108ed6ea0,128,ResumeGenerator
code-creation,BytecodeHandler,0,30742,0x108ed6f40,152,GetIterator
code-creation,BytecodeHandler,0,30756,0x108ed6fe0,116,Debugger
code-creation,BytecodeHandler,0,30770,0x108ed7060,124,IncBlockCounter
code-creation,BytecodeHandler,0,30785,0x108ed70e0,56,Abort
code-creation,BytecodeHandler,0,30797,0x108ed7120,32,Star0
code-creation,BytecodeHandler,0,30812,0x108ed7160,60,Illegal
code-creation,BytecodeHandler,0,30826,0x108ed71a0,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,30841,0x108ed7220,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,30855,0x108ed72a0,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,30869,0x108ed7320,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,30884,0x108ed73a0,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,30899,0x108ed7420,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,30914,0x108ed74a0,32,Ldar.Wide
code-creation,BytecodeHandler,0,30928,0x108ed74e0,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,30941,0x108ed7520,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,30956,0x108ed7560,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,30972,0x108ed75c0,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,31000,0x108ed7620,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,31025,0x108ed7660,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,31042,0x108ed76a0,32,Star.Wide
code-creation,BytecodeHandler,0,31053,0x108ed76e0,40,Mov.Wide
code-creation,BytecodeHandler,0,31063,0x108ed7720,40,PushContext.Wide
code-creation,BytecodeHandler,0,31074,0x108ed7760,36,PopContext.Wide
code-creation,BytecodeHandler,0,31088,0x108ed77a0,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,31103,0x108ed77e0,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,31116,0x108ed8a20,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,31131,0x108ed9c20,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,31144,0x108ed9ce0,156,StaContextSlot.Wide
code-creation,BytecodeHandler,0,31158,0x108ed9d80,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,31173,0x108ed9e00,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,31186,0x108ed9ea0,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,31201,0x108ed9fa0,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,31215,0x108edb2a0,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,31230,0x108edb340,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,31246,0x108edb440,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,31262,0x108edc720,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,31275,0x108edc800,5208,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,31290,0x108eddc60,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,31304,0x108eddd20,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,31318,0x108eddde0,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,31332,0x108eddea0,296,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,31346,0x108eddfe0,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,31360,0x108ede0a0,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,31375,0x108ede160,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,31389,0x108ede220,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,31403,0x108ede2e0,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,31418,0x108ede3c0,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,31432,0x108ede480,984,Add.Wide
code-creation,BytecodeHandler,0,31444,0x108ede860,1020,Sub.Wide
code-creation,BytecodeHandler,0,31457,0x108edec60,972,Mul.Wide
code-creation,BytecodeHandler,0,31483,0x108edf040,988,Div.Wide
code-creation,BytecodeHandler,0,31496,0x108edf420,916,Mod.Wide
code-creation,BytecodeHandler,0,31508,0x108edf7c0,984,Exp.Wide
code-creation,BytecodeHandler,0,31521,0x108edfba0,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,31534,0x108edff40,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,31547,0x108ee02e0,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,31559,0x108ee0680,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,31572,0x108ee0a40,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,31585,0x108ee0e00,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,31599,0x108ee1220,916,AddSmi.Wide
code-creation,BytecodeHandler,0,31611,0x108ee15c0,960,SubSmi.Wide
code-creation,BytecodeHandler,0,31624,0x108ee19a0,912,MulSmi.Wide
code-creation,BytecodeHandler,0,31636,0x108ee1d40,920,DivSmi.Wide
code-creation,BytecodeHandler,0,31649,0x108ee20e0,816,ModSmi.Wide
code-creation,BytecodeHandler,0,31662,0x108ee2420,868,ExpSmi.Wide
code-creation,BytecodeHandler,0,31674,0x108ee27a0,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,31687,0x108ee29a0,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,31700,0x108ee2ba0,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,31714,0x108ee2da0,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,31727,0x108ee2fa0,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,31740,0x108ee31a0,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,31754,0x108ee3440,616,Inc.Wide
code-creation,BytecodeHandler,0,31766,0x108ee36c0,616,Dec.Wide
code-creation,BytecodeHandler,0,31791,0x108ee3940,648,Negate.Wide
code-creation,BytecodeHandler,0,31804,0x108ee3be0,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,31817,0x108ee3de0,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,31831,0x108ee3e60,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,31845,0x108ee3ee0,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,31859,0x108ee3f20,1124,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,31873,0x108ee43a0,1124,CallProperty.Wide
code-creation,BytecodeHandler,0,31885,0x108ee4820,1012,CallProperty0.Wide
code-creation,BytecodeHandler,0,31899,0x108ee4c20,1024,CallProperty1.Wide
code-creation,BytecodeHandler,0,31912,0x108ee5040,1036,CallProperty2.Wide
code-creation,BytecodeHandler,0,31925,0x108ee5460,1004,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,31940,0x108ee5860,1044,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,31954,0x108ee5c80,1020,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,31968,0x108ee6080,1036,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,31982,0x108ee64a0,1124,CallWithSpread.Wide
code-creation,BytecodeHandler,0,31995,0x108ee6920,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,32009,0x108ee69c0,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,32029,0x108ee6a80,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,32043,0x108ee6ae0,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,32057,0x108ee6fc0,960,Construct.Wide
code-creation,BytecodeHandler,0,32070,0x108ee73a0,472,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,32084,0x108ee7580,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,32096,0x108ee7d40,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,32110,0x108ee8180,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,32123,0x108ee8780,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,32136,0x108ee8d80,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,32150,0x108ee9380,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,32164,0x108ee9980,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,32177,0x108ee9d00,160,TestIn.Wide
code-creation,BytecodeHandler,0,32190,0x108ee9dc0,116,ToName.Wide
code-creation,BytecodeHandler,0,32203,0x108ee9e40,216,ToNumber.Wide
code-creation,BytecodeHandler,0,32215,0x108ee9f20,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,32228,0x108eea020,116,ToObject.Wide
code-creation,BytecodeHandler,0,32241,0x108eea0a0,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,32255,0x108eea240,1372,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,32269,0x108eea7a0,792,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,32283,0x108eeaac0,2060,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,32297,0x108eeb2e0,172,CloneObject.Wide
code-creation,BytecodeHandler,0,32310,0x108eeb3a0,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,32324,0x108eeb460,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,32337,0x108eeb5c0,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,32351,0x108eeb640,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,32365,0x108eeb6e0,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,32379,0x108eeb800,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,32392,0x108eeb920,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,32406,0x108eeb9c0,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,32419,0x108eebb80,44,Jump.Wide
code-creation,BytecodeHandler,0,32431,0x108eebbc0,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,32444,0x108eebc00,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,32458,0x108eebc60,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,32472,0x108eebcc0,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,32486,0x108eebd20,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,32501,0x108eebd80,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,32516,0x108eebde0,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,32529,0x108eebe40,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,32555,0x108eebea0,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,32570,0x108eebf00,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,32584,0x108eebfa0,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,32599,0x108eec040,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,32613,0x108eec0e0,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,32627,0x108eec180,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,32640,0x108eec1e0,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,32653,0x108eec240,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,32666,0x108eec2a0,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,32679,0x108eec300,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,32692,0x108eec360,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,32706,0x108eec3c0,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,32720,0x108eec420,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,32734,0x108eec480,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,32748,0x108eec500,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,32761,0x108eec6e0,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,32774,0x108eec7e0,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,32787,0x108eec820,260,ForInNext.Wide
code-creation,BytecodeHandler,0,32800,0x108eec940,48,ForInStep.Wide
code-creation,BytecodeHandler,0,32813,0x108eec980,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,32827,0x108eeca20,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,32841,0x108eecae0,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,32855,0x108eecb60,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,32869,0x108eecd80,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,32882,0x108eece20,156,GetIterator.Wide
code-creation,BytecodeHandler,0,32895,0x108eecec0,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,32912,0x108eecf60,56,Abort.Wide
code-creation,BytecodeHandler,0,32925,0x108eecfa0,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,32938,0x108eed020,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,32952,0x108eed0a0,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,32965,0x108eed120,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,32978,0x108eed1a0,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,32992,0x108eed220,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,33005,0x108eed2a0,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,33018,0x108eed2e0,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,33031,0x108eed300,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,33045,0x108eed340,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33059,0x108eed3a0,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33073,0x108eed400,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33088,0x108eed440,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33103,0x108eed480,28,Star.ExtraWide
code-creation,BytecodeHandler,0,33116,0x108eed4a0,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,33129,0x108eed4e0,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,33142,0x108eed520,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,33155,0x108eed560,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,33169,0x108eed5a0,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,33183,0x108eee7e0,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,33197,0x108eef9e0,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,33211,0x108eefaa0,152,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33225,0x108eefb40,108,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33239,0x108eefbc0,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,33253,0x108eefc60,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,33271,0x108eefd60,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,33305,0x108ef1060,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,33321,0x108ef1100,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,33336,0x108ef1200,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,33352,0x108ef24e0,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,33366,0x108ef25c0,5188,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,33380,0x108ef3a20,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,33395,0x108ef3ae0,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,33409,0x108ef3b80,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,33423,0x108ef3c40,292,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,33437,0x108ef3d80,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,33465,0x108ef3e40,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,33479,0x108ef3f00,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,33492,0x108ef3fc0,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,33506,0x108ef4080,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,33520,0x108ef4160,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,33534,0x108ef4220,980,Add.ExtraWide
code-creation,BytecodeHandler,0,33546,0x108ef4600,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,33559,0x108ef4a00,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,33571,0x108ef4de0,988,Div.ExtraWide
code-creation,BytecodeHandler,0,33583,0x108ef51c0,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,33596,0x108ef5560,980,Exp.ExtraWide
code-creation,BytecodeHandler,0,33608,0x108ef5940,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,33620,0x108ef5ce0,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,33633,0x108ef6080,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,33646,0x108ef6420,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,33659,0x108ef67e0,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,33672,0x108ef6ba0,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,33685,0x108ef6fc0,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,33698,0x108ef7360,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,33710,0x108ef7740,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,33723,0x108ef7ae0,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,33735,0x108ef7e80,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,33748,0x108ef81c0,868,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,33760,0x108ef8540,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,33774,0x108ef8740,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,33787,0x108ef8940,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,33800,0x108ef8b40,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,33813,0x108ef8d40,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,33827,0x108ef8f40,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,33841,0x108ef91e0,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,33853,0x108ef9460,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,33865,0x108ef96e0,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,33878,0x108ef9980,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,33891,0x108ef9b80,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,33905,0x108ef9c00,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,33919,0x108ef9c80,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,33933,0x108ef9cc0,1120,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,33946,0x108efa140,1120,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,33959,0x108efa5c0,1004,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,33973,0x108efa9c0,1020,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,33986,0x108efadc0,1032,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,34000,0x108efb1e0,1000,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,34025,0x108efb5e0,1044,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,34040,0x108efba00,1016,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,34054,0x108efbe00,1028,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,34068,0x108efc220,1120,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,34082,0x108efc6a0,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,34095,0x108efc740,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,34109,0x108efc800,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,34122,0x108efc860,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,34136,0x108efcd40,956,Construct.ExtraWide
code-creation,BytecodeHandler,0,34149,0x108efd100,468,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,34162,0x108efd2e0,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,34176,0x108efdaa0,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,34189,0x108efdee0,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,34202,0x108efe4e0,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,34216,0x108efeae0,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,34230,0x108eff0e0,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,34244,0x108eff6e0,860,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,34257,0x108effa40,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,34270,0x108effae0,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,34283,0x108effb60,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,34303,0x108effc40,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,34316,0x108effd40,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,34329,0x108effdc0,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,34343,0x108efff60,1368,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,34359,0x108f004c0,792,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,34374,0x108f007e0,2060,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,34388,0x108f01000,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,34401,0x108f010c0,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,34417,0x108f01180,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,34431,0x108f012e0,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,34445,0x108f01360,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,34461,0x108f01400,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,34476,0x108f01520,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,34490,0x108f01640,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,34505,0x108f016e0,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,34519,0x108f018a0,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,34531,0x108f018e0,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,34544,0x108f01920,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,34558,0x108f01980,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,34573,0x108f019e0,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,34589,0x108f01a40,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,34604,0x108f01aa0,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,34620,0x108f01b00,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,34635,0x108f01b60,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,34649,0x108f01bc0,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,34665,0x108f01c20,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,34681,0x108f01cc0,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,34696,0x108f01d60,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,34711,0x108f01e00,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,34726,0x108f01ea0,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,34751,0x108f01f00,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,34766,0x108f01f60,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,34779,0x108f01fc0,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,34793,0x108f02020,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,34806,0x108f02080,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,34822,0x108f020e0,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,34837,0x108f02140,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,34850,0x108f021a0,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,34864,0x108f02220,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,34878,0x108f02400,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,34893,0x108f02500,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,34907,0x108f02540,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,34920,0x108f02660,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,34935,0x108f026a0,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,34950,0x108f02740,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,34965,0x108f02800,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,34981,0x108f02880,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,34995,0x108f02aa0,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,35009,0x108f02b20,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,35022,0x108f02bc0,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,35035,0x108f02c40,56,Abort.ExtraWide
tick,0x1083563a6,35057,0,0x0,6
tick,0x7ff81f180d0a,35076,0,0x0,6
tick,0x7ff81f213c45,35084,0,0x0,6
tick,0x7ff81f269ae6,35091,0,0x0,6
tick,0x7ff81f213c30,35098,0,0x0,6
tick,0x1097041ec,35105,0,0x0,6
tick,0x7ff81f269a5e,35559,0,0x0,1
new,MemoryChunk,0x3ba975240000,262144
new,MemoryChunk,0x3ba95eb40000,262144
tick,0x109431dc4,36857,0,0x0,5
new,MemoryChunk,0x3ba910e80000,262144
tick,0x108ac1792,38120,0,0x0,5
new,MemoryChunk,0x3ba995f00000,262144
tick,0x108acb365,39436,0,0x0,5
tick,0x1085801c0,40996,0,0x0,6
code-creation,Eval,10,41581,0x3ba995f3bce6,5, node:internal/main/run_main_module:1:1,0x3ba995f3bba0,~
script-source,91,node:internal/main/run_main_module,'use strict';\n\nconst {\n  prepareMainThreadExecution\n} = require('internal/bootstrap/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n
code-source-info,0x3ba995f3bce6,91,0,632,C0O0C4O632,,
code-creation,Function,10,41701,0x3ba995f3bd8e,58, node:internal/main/run_main_module:1:1,0x3ba995f3bc60,~
code-source-info,0x3ba995f3bd8e,91,0,632,C0O56C3O56C8O25C13O102C15O102C19O137C22O560C25O560C30O598C35O605C40O622C47O626C51O606C57O631,,
code-creation,LazyCompile,10,42190,0x3ba995f3bfce,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3ba96094f8f8,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - NativeModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/loaders') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\n});\n\n\n// internalBindingAllowlist contains the name of internalBinding modules\n// that are allowed for access via process.binding()... This is used\n// to provide a transition path for modules that are being moved over to\n// internalBinding.\nconst internalBindingAllowlist = new SafeSet([\n  'async_wrap'\x2C\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'crypto'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'http_parser'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'natives'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'signal_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'url'\x2C\n  'util'\x2C\n  'uv'\x2C\n  'v8'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'util'\x2C\n]);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = ObjectCreate(null);\n\n  process.binding = function binding(module) {\n    module = String(module);\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (internalBindingAllowlist.has(module)) {\n      if (runtimeDeprecatedList.has(module)) {\n        runtimeDeprecatedList.delete(module);\n        process.emitWarning(\n          `Access to process.binding('${module}') is deprecated.`\x2C\n          'DeprecationWarning'\x2C\n          'DEP0111');\n      }\n      if (legacyWrapperList.has(module)) {\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\n      }\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n// Set up internalBinding() in the closure.\n/**\n * @type {InternalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = ObjectCreate(null);\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst loaderId = 'internal/bootstrap/loaders';\nconst {\n  moduleIds\x2C\n  compileFunction\n} = internalBinding('native_module');\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass NativeModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C NativeModule>}\n  */\n  static map = new SafeMap(\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the native module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\n      // Do not expose this to user land even with --expose-internals.\n      if (id !== loaderId) {\n        mod.canBeRequiredByUsers = true;\n      }\n    }\n  }\n\n  static exists(id) {\n    return NativeModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    const mod = NativeModule.map.get(id);\n    return mod && mod.canBeRequiredByUsers;\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!this.canBeRequiredByUsers) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    this.getESMFacade();\n    this.syncExports();\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const { ModuleWrap } = internalBinding('module_wrap');\n    const url = `node:${this.id}`;\n    const nativeModule = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    ArrayPrototypePush(exportsKeys\x2C 'default');\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        nativeModule.syncExports();\n        this.setExport('default'\x2C nativeModule.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : nativeModuleRequire;\n\n      const fn = compileFunction(id);\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  NativeModule\x2C\n  require: nativeModuleRequire\n};\n\nfunction nativeModuleRequire(id) {\n  if (id === loaderId) {\n    return loaderExports;\n  }\n\n  const mod = NativeModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (!NativeModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return nativeModuleRequire(request);\n}\n\n// Pass the exports back to C++ land for C++ internals to use.\nreturn loaderExports;\n
code-source-info,0x3ba995f3bfce,9,10315,10658,C0O10324C2O10335C4O10331C9O10351C13O10372C14O10392C19O10405C24O10409C29O10409C35O10550C37O10560C47O10608C60O10566C65O10560C66O10629C71O10629C75O10656,,
tick,0x7ff81f174132,43349,0,0x0,3,0x108a8eb80,0x3ba995f3bd91
code-creation,LazyCompile,10,43443,0x3ba995f3ccde,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3ba96094f828,~
code-source-info,0x3ba995f3ccde,9,9528,10089,C0O9546C6O9561C12O9590C16O9598C17O9626C22O9634C23O9647C30O9690C37O9721C45O9690C63O9820C70O9820C75O9855C89O9890C103O9847C108O9928C109O9940C124O9970C126O9983C141O10003C152O10022C160O10054C165O10003C170O10077C174O10085,,
tick,0x1085cff20,43581,0,0x0,0,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba995f3bd91
code-creation,Eval,10,44005,0x3ba995f3dc66,5, node:internal/bootstrap/pre_execution:1:1,0x3ba995f3d8c0,~
script-source,92,node:internal/bootstrap/pre_execution,'use strict';\n\nconst {\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  noGlobalSearchPaths\x2C\n  shouldNotRegisterESMLoader\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\n\nconst { Buffer } = require('buffer');\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\nconst assert = require('internal/assert');\n\nfunction prepareMainThreadExecution(expandArgv1 = false) {\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\n  // this toggle from the snapshot.\n  reconnectZeroFillToggle();\n\n  // Patch the process object with legacy properties and normalizations\n  patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupPerfHooks();\n  setupInspectorHooks();\n  setupWarningHandler();\n\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd.\n  if (process.env.NODE_V8_COVERAGE) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n\n\n  setupDebugEnv();\n\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n  setupStacktracePrinterOnSigint();\n\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n  initializeReportSignalHandlers();  // Main-thread-only.\n\n  initializeHeapSnapshotSignalHandlers();\n\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n  // spawned by our child_process module\x2C then initialize IPC.\n  // This attaches some internal event listeners and creates:\n  // process.send()\x2C process.channel\x2C process.connected\x2C\n  // process.disconnect().\n  setupChildProcessIpcChannel();\n\n  // Load policy from disk and parse it.\n  initializePolicy();\n\n  // If this is a worker in cluster mode\x2C start up the communication\n  // channel. This needs to be done before any user code gets executed\n  // (including preload modules).\n  initializeClusterIPC();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n  initializeWASI();\n  initializeCJSLoader();\n  initializeESMLoader();\n\n  const CJSLoader = require('internal/modules/cjs/loader');\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\n  loadPreloadModules();\n  initializeFrozenIntrinsics();\n}\n\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  // TODO(joyeecheung): snapshot fast APIs (which need to work with\n  // array buffers\x2C whose connection with C++ needs to be rebuilt after\n  // deserialization).\n  const {\n    hrtime\x2C\n    hrtimeBigInt\n  } = require('internal/process/per_thread').getFastAPIs(binding);\n\n  process.hrtime = hrtime;\n  process.hrtime.bigint = hrtimeBigInt;\n\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    enumerable: true\x2C\n    configurable: false\x2C\n    value: process.argv[0]\n  });\n  process.argv[0] = process.execPath;\n\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      process.argv[1] = path.resolve(process.argv[1]);\n    } catch {}\n  }\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n  }\n}\n\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage to a specified file.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  const { report } = require('internal/process/report');\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    enumerable: false\x2C\n    configurable: true\x2C\n    get() {\n      return report;\n    }\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  const { addSignalHandler } = require('internal/process/report');\n\n  addSignalHandler();\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  process.on(signal\x2C () => {\n    writeHeapSnapshot();\n  });\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupPerfHooks() {\n  require('internal/perf/performance').refreshTimeOrigin();\n  require('internal/perf/utils').refreshTimeOrigin();\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n\n  // Create global.process and global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePolicy() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = new URL(`file://${experimentalPolicy}`);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    require('internal/process/policy')\n      .setup(src\x2C manifestURL.href);\n  }\n}\n\nfunction initializeWASI() {\n  const { NativeModule } = require('internal/bootstrap/loaders');\n  const mod = NativeModule.map.get('wasi');\n  mod.canBeRequiredByUsers =\n    getOptionValue('--experimental-wasi-unstable-preview1');\n}\n\nfunction initializeCJSLoader() {\n  const CJSLoader = require('internal/modules/cjs/loader');\n  if (!noGlobalSearchPaths) {\n    CJSLoader.Module._initPaths();\n  }\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  CJSLoader.Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\nfunction initializeESMLoader() {\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\n\n  if (shouldNotRegisterESMLoader) return;\n\n  const {\n    setImportModuleDynamicallyCallback\x2C\n    setInitializeImportMetaObjectCallback\n  } = internalBinding('module_wrap');\n  const esm = require('internal/process/esm_loader');\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const { setSourceMapsEnabled } =\n    require('internal/source_map/source_map_cache');\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\n                        'ExperimentalWarning');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nmodule.exports = {\n  patchProcessObject\x2C\n  setupCoverageHooks\x2C\n  setupWarningHandler\x2C\n  setupDebugEnv\x2C\n  setupPerfHooks\x2C\n  prepareMainThreadExecution\x2C\n  initializeDeprecations\x2C\n  initializeESMLoader\x2C\n  initializeFrozenIntrinsics\x2C\n  initializeSourceMapsHandlers\x2C\n  loadPreloadModules\x2C\n  setupTraceCategoryState\x2C\n  setupInspectorHooks\x2C\n  initializeReport\x2C\n  initializeCJSLoader\x2C\n  initializeWASI\n};\n
code-source-info,0x3ba995f3dc66,92,0,15975,C0O0C4O15975,,
code-creation,Function,10,45613,0x3ba995f3e76e,435, node:internal/bootstrap/pre_execution:1:1,0x3ba995f3dbe0,~
code-source-info,0x3ba995f3e76e,92,0,15975,C0O0C193O25C199O43C205O67C211O78C217O93C223O122C229O235C235O235C240O162C246O180C252O203C258O300C264O300C269O272C275O348C281O348C286O337C292O409C298O409C303O435C308O375C314O458C320O458C324O458C326O15578C333O15599C339O15621C345O15643C351O15666C357O15683C363O15701C369O15731C375O15757C381O15780C387O15810C393O15842C399O15864C405O15891C411O15914C417O15934C423O15957C429O15593C434O15974,,
tick,0x7ff81f269ae6,45714,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba995f3bd91
new,MemoryChunk,0x3ba9c5ac0000,262144
code-creation,Eval,10,45907,0x3ba9c5ac1166,5, node:internal/options:1:1,0x3ba995f3fec0,~
script-source,93,node:internal/options,'use strict';\n\nconst {\n  getOptions\x2C\n  noGlobalSearchPaths\x2C\n  shouldNotRegisterESMLoader\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsMap;\nlet aliasesMap;\n\n// getOptions() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getOptionsFromBinding() {\n  if (!optionsMap) {\n    ({ options: optionsMap } = getOptions());\n  }\n  return optionsMap;\n}\n\nfunction getAliasesFromBinding() {\n  if (!aliasesMap) {\n    ({ aliases: aliasesMap } = getOptions());\n  }\n  return aliasesMap;\n}\n\nfunction getOptionValue(optionName) {\n  const options = getOptionsFromBinding();\n  if (optionName.startsWith('--no-')) {\n    const option = options.get('--' + optionName.slice(5));\n    return option && !option.value;\n  }\n  return options.get(optionName)?.value;\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  get options() {\n    return getOptionsFromBinding();\n  }\x2C\n  get aliases() {\n    return getAliasesFromBinding();\n  }\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  noGlobalSearchPaths\x2C\n  shouldNotRegisterESMLoader\x2C\n};\n
code-source-info,0x3ba9c5ac1166,93,0,1664,C0O0C4O1664,,
code-creation,Function,10,46114,0x3ba9c5ac14f6,150, node:internal/options:1:1,0x3ba910ebffc0,~
code-source-info,0x3ba9c5ac14f6,93,0,1664,C0O0C43O94C46O94C51O25C57O39C62O62C67O153C68O153C70O164C71O164C73O180C74O180C76O1429C83O1568C89O1586C95O1610C101O1633C144O1444C149O1663,,
tick,0x7ff81f29ecbe,46201,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba995f3e859,0x3ba995f3cd45,0x3ba995f3c015,0x3ba995f3bd91
code-creation,LazyCompile,10,46225,0x3ba9c5ac19b6,69,internalBinding node:internal/bootstrap/loaders:164:45,0x3ba96094f378,~
code-source-info,0x3ba9c5ac19b6,9,5115,5353,C0O5140C7O5150C11O5164C15O5201C25O5228C30O5226C37O5262C48O5281C56O5317C61O5262C66O5338C68O5349,,
code-creation,LazyCompile,10,46553,0x3ba9c5ac211e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:23:36,0x3ba995f3dc98,~
code-source-info,0x3ba9c5ac211e,92,522,2411,C10O665C15O665C18O767C21O767C25O802C28O802C31O831C34O831C37O851C40O851C43O876C46O876C49O1079C52O1091C57O1095C63O1119C66O1127C77O1183C82O1187C87O1156C91O1148C95O1214C98O1214C101O1306C104O1306C107O1412C110O1412C113O1434C116O1434C119O1493C122O1493C125O1816C128O1816C131O1891C134O1891C137O2088C140O2088C143O2115C146O2115C149O2149C152O2149C155O2177C158O2177C161O2197C164O2197C167O2222C170O2222C173O2266C179O2266C184O2308C189O2326C195O2308C199O2356C202O2356C205O2380C208O2380C212O2410,,
code-creation,LazyCompile,10,46707,0x3ba9c5ac334e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x3ba999231cd0,~
script-source,19,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\n} = internalBinding('buffer');\nconst {\n  untransferable_object_private_symbol\x2C\n  setHiddenValue\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\n};\n
code-source-info,0x3ba9c5ac334e,19,30717,30757,C0O30724C5O30735C11O30733C18O30756,,
tick,0x7ff81f29ee4e,49664,0,0x0,3,0x108a8eb80,0x3ba9c5ac212d,0x3ba995f3bd9d
tick,0x7ff81f174126,49686,0,0x0,3,0x108a8eb80,0x3ba9c5ac212d,0x3ba995f3bd9d
tick,0x108af3948,49729,0,0x0,3,0x108a8eb80,0x3ba9c5ac2133,0x3ba995f3bd9d
code-creation,LazyCompile,10,49845,0x3ba9c5ac5b9e,432,patchProcessObject node:internal/bootstrap/pre_execution:82:28,0x3ba995f3dce8,~
code-source-info,0x3ba9c5ac5b9e
code-creation,LazyCompile,10,50092,0x3ba9c5ac622e,113,getFastAPIs node:internal/process/per_thread:57:21,0x3ba99923de80,~
script-source,23,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst constants = internalBinding('constants').os.signals;\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\n\nfunction getFastAPIs(binding) {\n  const {\n    hrtime: _hrtime\n  } = binding.getFastAPIs();\n\n  // The 3 entries filled in by the original process.hrtime contains\n  // the upper/lower 32 bits of the second part of the value\x2C\n  // and the remaining nanoseconds of the value.\n  const hrValues = new Uint32Array(_hrtime.buffer);\n\n  function hrtime(time) {\n    _hrtime.hrtime();\n\n    if (time !== undefined) {\n      validateArray(time\x2C 'time');\n      if (time.length !== 2) {\n        throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n      }\n\n      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n      const nsec = hrValues[2] - time[1];\n      const needsBorrow = nsec < 0;\n      return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n    }\n\n    return [\n      hrValues[0] * 0x100000000 + hrValues[1]\x2C\n      hrValues[2]\x2C\n    ];\n  }\n\n  // Use a BigUint64Array in the closure because this is actually a bit\n  // faster than simply returning a BigInt from C++ in V8 7.1.\n  const hrBigintValues = new BigUint64Array(_hrtime.buffer\x2C 0\x2C 1);\n  function hrtimeBigInt() {\n    _hrtime.hrtimeBigInt();\n    return hrBigintValues[0];\n  }\n\n  return {\n    hrtime\x2C\n    hrtimeBigInt\x2C\n  };\n}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  function exit(code) {\n    if (code || code === 0)\n      process.exitCode = code;\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || 0);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || 0);\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw errnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\n    };\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvironment }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { options\x2C aliases } = require('internal/options');\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvironment) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  NodeEnvironmentFlagsSet.prototype.keys =\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\n    NodeEnvironmentFlagsSet.prototype.values;\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  getFastAPIs\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\n};\n
code-source-info,0x3ba9c5ac622e,23,1229,2412,C0O1229C24O1285C29O1285C34O1263C40O1500C50O1524C57O1500C62O1500C64O2232C74O2259C86O2232C91O2232C93O2367C100O2380C106O2392C112O2410,,
tick,0x7ff81f29ed3e,51233,0,0x0,3,0x108a8eb80,0x3ba9c5ac5bc6,0x3ba9c5ac2133,0x3ba995f3bd9d
code-creation,LazyCompile,10,51446,0x3ba9c5ac78fe,175,resolve node:path:1091:10,0x3ba95c928450,~
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C 'path');\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instancee\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n\n      validateString(path\x2C 'path');\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [ext]\n   * @returns {string}\n   */\n  basename(path\x2C ext) {\n    if (ext !== undefined)\n      validateString(ext\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path)\n        return '';\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0x3ba9c5ac78fe,35,33782,34692,C0O33782C3O33817C6O33848C8O33878C12O33885C16O33898C18O33892C25O33902C27O33946C28O33948C35O33959C42O33965C45O33965C49O33984C57O33984C62O34058C68O34065C73O34082C75O34107C87O34133C92O34155C99O34182C107O34221C109O34217C113O33921C118O33860C121O34437C126O34483C137O34452C143O34569C147O34599C152O34610C156O34625C157O34656C163O34663C174O34688,,
tick,0x7ff81f213c52,55701,0,0x0,3,0x108a8eb80,0x3ba9c5ac5c83,0x3ba9c5ac2133,0x3ba995f3bd9d
tick,0x1083563b1,55723,0,0x0,3,0x108a8eb80,0x3ba9c5ac5c83,0x3ba9c5ac2133,0x3ba995f3bd9d
tick,0x10882c792,55732,0,0x0,3,0x108a8eb80,0x3ba9c5ac5c83,0x3ba9c5ac2133,0x3ba995f3bd9d
code-creation,LazyCompile,10,55742,0x3ba9c5acab36,30,validateString node:internal/validators:117:24,0x3ba999219ef8,~
script-source,17,node:internal/validators,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeTest\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n    ERR_INVALID_CALLBACK\x2C\n  }\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isArrayBufferView\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\n  return value;\n}\n\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n);\n\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (!isInt32(value)) {\n      if (typeof value !== 'number') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n      }\n      if (!NumberIsInteger(value)) {\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n      }\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\n);\n\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\n  if (!isUint32(value)) {\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    const min = positive ? 1 : 0;\n    // 2 ** 32 === 4294967296\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\n  }\n  if (positive && value === 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\n  }\n});\n\nfunction validateString(value\x2C name) {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n}\n\nfunction validateNumber(value\x2C name) {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n}\n\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\nfunction validateBoolean(value\x2C name) {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n}\n\n/**\n * @param {unknown} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean\x2C\n *   allowFunction?: boolean\x2C\n *   nullable?: boolean\n * }} [options]\n */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options) => {\n    const useDefaultOptions = options == null;\n    const allowArray = useDefaultOptions ? false : options.allowArray;\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\n    const nullable = useDefaultOptions ? false : options.nullable;\n    if ((!nullable && value === null) ||\n        (!allowArray && ArrayIsArray(value)) ||\n        (typeof value !== 'object' && (\n          !allowFunction || typeof value !== 'function'\n        ))) {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n    }\n  });\n\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\nfunction validateSignalName(signal\x2C name = 'signal') {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n}\n\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\nfunction validateEncoding(data\x2C encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n}\n\n// Check that the port number is not NaN when coerced to a number\x2C\n// is an integer and that it falls within the legal range of port numbers.\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n}\n\nconst validateCallback = hideStackFrames((callback) => {\n  if (typeof callback !== 'function')\n    throw new ERR_INVALID_CALLBACK(callback);\n});\n\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateCallback\x2C\n  validateAbortSignal\x2C\n};\n
code-source-info,0x3ba9c5acab36,17,3398,3507,C0O3416C6O3451C22O3457C27O3451C29O3506,,
tick,0x7ff81f213c52,56545,0,0x0,3,0x108a8eb80,0x3ba9c5ac7937,0x3ba9c5ac5c83,0x3ba9c5ac2133,0x3ba995f3bd9d
code-creation,LazyCompile,10,56588,0x3ba9c5acb496,13, node:path:1082:10,0x3ba95c928400,~
code-source-info,0x3ba9c5acb496,35,33631,33650,C0O33645C3O33645C8O33645C12O33650,,
code-creation,LazyCompile,10,56659,0x3ba9c5acb596,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3ba95fd4d3e8,~
script-source,90,node:internal/bootstrap/switches/does_own_process_state,'use strict';\n\nconst credentials = internalBinding('credentials');\nconst rawMethods = internalBinding('process_methods');\n\nprocess.abort = rawMethods.abort;\nprocess.umask = wrappedUmask;\nprocess.chdir = wrappedChdir;\nprocess.cwd = wrappedCwd;\n\nif (credentials.implementsPosixCredentials) {\n  const wrapped = wrapPosixCredentialSetters(credentials);\n\n  process.initgroups = wrapped.initgroups;\n  process.setgroups = wrapped.setgroups;\n  process.setegid = wrapped.setegid;\n  process.seteuid = wrapped.seteuid;\n  process.setgid = wrapped.setgid;\n  process.setuid = wrapped.setuid;\n}\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst {\n  parseFileMode\x2C\n  validateArray\x2C\n  validateString\n} = require('internal/validators');\n\nfunction wrapPosixCredentialSetters(credentials) {\n  const {\n    codes: {\n      ERR_INVALID_ARG_TYPE\x2C\n      ERR_UNKNOWN_CREDENTIAL\n    }\n  } = require('internal/errors');\n  const {\n    validateUint32\n  } = require('internal/validators');\n\n  const {\n    initgroups: _initgroups\x2C\n    setgroups: _setgroups\x2C\n    setegid: _setegid\x2C\n    seteuid: _seteuid\x2C\n    setgid: _setgid\x2C\n    setuid: _setuid\n  } = credentials;\n\n  function initgroups(user\x2C extraGroup) {\n    validateId(user\x2C 'user');\n    validateId(extraGroup\x2C 'extraGroup');\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\n    const result = _initgroups(user\x2C extraGroup);\n    if (result === 1) {\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\n    } else if (result === 2) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\n    }\n  }\n\n  function setgroups(groups) {\n    validateArray(groups\x2C 'groups');\n    for (let i = 0; i < groups.length; i++) {\n      validateId(groups[i]\x2C `groups[${i}]`);\n    }\n    // Result is 0 on success. A positive integer indicates that the\n    // corresponding group was not found.\n    const result = _setgroups(groups);\n    if (result > 0) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\n    }\n  }\n\n  function wrapIdSetter(type\x2C method) {\n    return function(id) {\n      validateId(id\x2C 'id');\n      if (typeof id === 'number') id |= 0;\n      // Result is 0 on success\x2C 1 if credential is unknown.\n      const result = method(id);\n      if (result === 1) {\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\n      }\n    };\n  }\n\n  function validateId(id\x2C name) {\n    if (typeof id === 'number') {\n      validateUint32(id\x2C name);\n    } else if (typeof id !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\n    }\n  }\n\n  return {\n    initgroups\x2C\n    setgroups\x2C\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\n    setuid: wrapIdSetter('User'\x2C _setuid)\n  };\n}\n\n// Cache the working directory to prevent lots of lookups. If the working\n// directory is changed by `chdir`\x2C it'll be updated.\nlet cachedCwd = '';\n\nfunction wrappedChdir(directory) {\n  validateString(directory\x2C 'directory');\n  rawMethods.chdir(directory);\n  // Mark cache that it requires an update.\n  cachedCwd = '';\n}\n\nfunction wrappedUmask(mask) {\n  if (mask !== undefined) {\n    mask = parseFileMode(mask\x2C 'mask');\n  }\n  return rawMethods.umask(mask);\n}\n\nfunction wrappedCwd() {\n  if (cachedCwd === '')\n    cachedCwd = rawMethods.cwd();\n  return cachedCwd;\n}\n
code-source-info,0x3ba9c5acb596,90,3341,3425,C0O3348C7O3362C12O3374C17O3397C22O3397C29O3384C35O3406C39O3423,,
code-creation,LazyCompile,10,57231,0x3ba9c5acbbfe,442,normalizeString node:path:66:25,0x3ba95c927f68,~
code-source-info,0x3ba9c5acbbfe
code-creation,LazyCompile,10,57366,0x3ba9c5acbf7e,8,isPosixPathSeparator node:path:56:30,0x3ba95c927ec8,~
code-source-info,0x3ba9c5acbf7e,35,1854,1902,C0O1865C2O1881C4O1877C7O1900,,
tick,0x7ff81f2b6061,57433,0,0x0,3,0x108a8eb80,0x3ba9c5ac7987,0x3ba9c5ac5c83,0x3ba9c5ac2133,0x3ba995f3bd9d
code-creation,LazyCompile,10,57508,0x3ba9c5acc3f6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x3ba995f3dd38,~
code-source-info,0x3ba9c5acc3f6,92,4316,4541,C16O4368C21O4368C26O4394C28O4411C36O4441C43O4504C49O4522C56O4411C62O4540,,
code-creation,LazyCompile,10,57579,0x3ba9c5acc576,82,getOptionValue node:internal/options:32:24,0x3ba9c5ac1238,~
code-source-info,0x3ba9c5acc576,93,720,960,C0O753C3O753C7O795C15O795C22O845C30O867C38O867C43O854C47O845C53O882C55O907C60O913C61O935C66O935C74O950C81O958,,
code-creation,LazyCompile,10,57634,0x3ba9c5acc8f6,33,getOptionsFromBinding node:internal/options:18:31,0x3ba9c5ac1198,~
code-source-info,0x3ba9c5acc8f6,93,467,565,C0O474C6O497C11O524C15O509C28O545C32O563,,
code-creation,LazyCompile,10,57976,0x3ba9c5acccd6,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:222:33,0x3ba995f3dfe0,~
code-source-info,0x3ba9c5acccd6,92,6784,7011,C0O6826C6O6826C11O6799C16O6898C22O6898C27O6869C32O6940C35O6965C40O6940C45O7010,,
code-creation,LazyCompile,10,58051,0x3ba9c5acce6e,77,toggleTraceCategoryState node:internal/process/per_thread:385:34,0x3ba99923e470,~
code-source-info,0x3ba9c5acce6e,23,11040,11337,C0O11064C4O11093C10O11128C16O11159C21O11203C26O11204C33O11149C39O11228C44O11249C49O11249C55O11268C61O11300C66O11321C71O11321C76O11336,,
code-creation,LazyCompile,10,58108,0x3ba9c5acd01e,42,setupPerfHooks node:internal/bootstrap/pre_execution:228:24,0x3ba995f3e030,~
code-source-info,0x3ba9c5acd01e,92,7036,7156,C0O7043C6O7043C11O7079C16O7080C20O7103C26O7103C31O7133C36O7134C41O7155,,
code-creation,LazyCompile,10,58170,0x3ba9c5acd19e,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x3ba985fc26d0,~
script-source,70,node:internal/perf/performance,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  EventTarget\x2C\n} = require('internal/event_target');\n\nconst { now } = require('internal/perf/utils');\n\nconst {\n  mark\x2C\n  measure\x2C\n  clearMarkTimings\x2C\n} = require('internal/perf/usertiming');\nconst {\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n} = require('internal/perf/observe');\n\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\nconst nodeTiming = require('internal/perf/nodetiming');\nconst timerify = require('internal/perf/timerify');\nconst { customInspectSymbol: kInspect } = require('internal/util');\nconst { inspect } = require('util');\n\nconst {\n  getTimeOriginTimestamp\n} = internalBinding('performance');\n\nclass Performance extends EventTarget {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `Performance ${inspect({\n      nodeTiming: this.nodeTiming\x2C\n      timeOrigin: this.timeOrigin\x2C\n    }\x2C opts)}`;\n  }\n}\n\nfunction toJSON() {\n  return {\n    nodeTiming: this.nodeTiming\x2C\n    timeOrigin: this.timeOrigin\x2C\n    eventLoopUtilization: this.eventLoopUtilization()\n  };\n}\n\nfunction clearMarks(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearMarkTimings(name);\n  clearEntriesFromBuffer('mark'\x2C name);\n}\n\nfunction clearMeasures(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  clearEntriesFromBuffer('measure'\x2C name);\n}\n\nfunction getEntries() {\n  return filterBufferMapByNameAndType();\n}\n\nfunction getEntriesByName(name) {\n  if (name !== undefined) {\n    name = `${name}`;\n  }\n  return filterBufferMapByNameAndType(name\x2C undefined);\n}\n\nfunction getEntriesByType(type) {\n  if (type !== undefined) {\n    type = `${type}`;\n  }\n  return filterBufferMapByNameAndType(undefined\x2C type);\n}\n\nclass InternalPerformance extends EventTarget {}\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\n\nObjectDefineProperties(Performance.prototype\x2C {\n  clearMarks: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMarks\x2C\n  }\x2C\n  clearMeasures: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: clearMeasures\x2C\n  }\x2C\n  eventLoopUtilization: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: eventLoopUtilization\x2C\n  }\x2C\n  getEntries: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntries\x2C\n  }\x2C\n  getEntriesByName: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByName\x2C\n  }\x2C\n  getEntriesByType: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: getEntriesByType\x2C\n  }\x2C\n  mark: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: mark\x2C\n  }\x2C\n  measure: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: measure\x2C\n  }\x2C\n  nodeTiming: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: nodeTiming\x2C\n  }\x2C\n  now: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: now\x2C\n  }\x2C\n  timerify: {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: timerify\x2C\n  }\x2C\n  // This would be updated during pre-execution in case\n  // the process is launched from a snapshot.\n  // TODO(joyeecheung): we may want to warn about access to\n  // this during snapshot building.\n  timeOrigin: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  }\x2C\n  toJSON: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: toJSON\x2C\n  }\n});\n\nfunction refreshTimeOrigin() {\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: getTimeOriginTimestamp()\x2C\n  });\n}\n\nmodule.exports = {\n  InternalPerformance\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0x3ba9c5acd19e,70,3755,3912,C0O3762C7O3783C10O3795C25O3879C28O3879C35O3762C41O3911,,
tick,0x7ff81f180b8b,58634,0,0x0,3,0x108a8eb80,0x3ba9c5acd02e,0x3ba9c5ac2140,0x3ba995f3bd9d
code-creation,LazyCompile,10,58665,0x3ba9c5acd8ae,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x3ba95c93b3e8,~
script-source,41,node:internal/perf/utils,'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones\x2C\n  getTimeOrigin\x2C\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now\x2C\n  getMilestoneTimestamp\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0x3ba9c5acd8ae,41,525,563,C0O532C5O545C11O543C18O562,,
code-creation,LazyCompile,10,58818,0x3ba9c5acdb1e,62,setupInspectorHooks node:internal/bootstrap/pre_execution:233:29,0x3ba995f3e080,~
code-source-info,0x3ba9c5acdb1e,92,7186,7739,C0O7529C6O7533C11O7558C17O7623C23O7623C28O7593C33O7607C38O7669C44O7669C49O7697C54O7698C61O7738,,
code-creation,Eval,10,58969,0x3ba9c5acdece,5, node:internal/inspector_async_hook:1:1,0x3ba9c5acdd18,~
script-source,94,node:internal/inspector_async_hook,'use strict';\n\nlet hook;\nlet config;\n\nconst {\n  SafeSet\x2C\n} = primordials;\n\nfunction lazyHookCreation() {\n  const inspector = internalBinding('inspector');\n  const { createHook } = require('async_hooks');\n  config = internalBinding('config');\n\n  hook = createHook({\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\n    // therefore we mark all tasks as recurring. Based on the discussion\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\n    // this should be fine as long as we call asyncTaskCanceled() too.\n      const recurring = true;\n      if (type === 'PROMISE')\n        this.promiseIds.add(asyncId);\n      else\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\n    }\x2C\n\n    before(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskStarted(asyncId);\n    }\x2C\n\n    after(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskFinished(asyncId);\n    }\x2C\n\n    destroy(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return this.promiseIds.delete(asyncId);\n      inspector.asyncTaskCanceled(asyncId);\n    }\x2C\n  });\n\n  hook.promiseIds = new SafeSet();\n}\n\nfunction enable() {\n  if (hook === undefined) lazyHookCreation();\n  if (config.bits < 64) {\n    // V8 Inspector stores task ids as (void*) pointers.\n    // async_hooks store ids as 64bit numbers.\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\n    // ids on 32bit platforms.\n    process.emitWarning(\n      'Warning: Async stack traces in debugger are not available ' +\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\n      {\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\n      });\n  } else {\n    hook.enable();\n  }\n}\n\nfunction disable() {\n  if (hook === undefined) lazyHookCreation();\n  hook.disable();\n}\n\nmodule.exports = {\n  enable\x2C\n  disable\n};\n
code-source-info,0x3ba9c5acdece,94,0,1972,C0O0C4O1972,,
code-creation,Function,10,59182,0x3ba9c5ace0ee,79, node:internal/inspector_async_hook:1:1,0x3ba9c5acde48,~
code-source-info,0x3ba9c5ace0ee,94,0,1972,C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1971,,
code-creation,LazyCompile,10,59299,0x3ba9c5ace5e6,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x3ba995f3dd88,~
code-source-info,0x3ba9c5ace5e6,92,4571,4768,C0O4606C6O4606C11O4590C16O4645C24O4649C33O4693C38O4697C45O4714C50O4729C53O4737C61O4737C68O4767,,
code-creation,LazyCompile,10,59420,0x3ba9c5ace746,20,addListener node:events:486:58,0x3ba960972ce0,~
script-source,13,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  Boolean\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\nconst kRejection = SymbolFor('nodejs.rejection');\nconst { inspect } = require('internal/util/inspect');\n\nlet spliceOne;\n\nconst {\n  AbortError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNHANDLED_ERROR\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst kCapture = Symbol('kCapture');\nconst kErrorMonitor = Symbol('events.errorMonitor');\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\nconst kMaxEventTargetListenersWarned =\n  Symbol('events.maxEventTargetListenersWarned');\n\n/**\n * Creates a new `EventEmitter` instance.\n * @param {{ captureRejections?: boolean; }} [opts]\n * @returns {EventEmitter}\n */\nfunction EventEmitter(opts) {\n  EventEmitter.init.call(this\x2C opts);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\nmodule.exports.on = on;\nmodule.exports.getEventListeners = getEventListeners;\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.captureRejectionSymbol = kRejection;\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\n  get() {\n    return EventEmitter.prototype[kCapture];\n  }\x2C\n  set(value) {\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\n\n    EventEmitter.prototype[kCapture] = value;\n  }\x2C\n  enumerable: true\n});\n\nEventEmitter.errorMonitor = kErrorMonitor;\n\n// The default for captureRejections is false\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\n  value: false\x2C\n  writable: true\x2C\n  enumerable: false\n});\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\nlet isEventTarget;\n\nfunction checkListener(listener) {\n  validateFunction(listener\x2C 'listener');\n}\n\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\n  enumerable: true\x2C\n  get: function() {\n    return defaultMaxListeners;\n  }\x2C\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\n                                 'a non-negative number'\x2C\n                                 arg);\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nObjectDefineProperties(EventEmitter\x2C {\n  kMaxEventTargetListeners: {\n    value: kMaxEventTargetListeners\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n  kMaxEventTargetListenersWarned: {\n    value: kMaxEventTargetListenersWarned\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\n});\n\n/**\n * Sets the max listeners.\n * @param {number} n\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\n * @returns {void}\n */\nEventEmitter.setMaxListeners =\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n    if (eventTargets.length === 0) {\n      defaultMaxListeners = n;\n    } else {\n      if (isEventTarget === undefined)\n        isEventTarget = require('internal/event_target').isEventTarget;\n\n      for (let i = 0; i < eventTargets.length; i++) {\n        const target = eventTargets[i];\n        if (isEventTarget(target)) {\n          target[kMaxEventTargetListeners] = n;\n          target[kMaxEventTargetListenersWarned] = false;\n        } else if (typeof target.setMaxListeners === 'function') {\n          target.setMaxListeners(n);\n        } else {\n          throw new ERR_INVALID_ARG_TYPE(\n            'eventTargets'\x2C\n            ['EventEmitter'\x2C 'EventTarget']\x2C\n            target);\n        }\n      }\n    }\n  };\n\nEventEmitter.init = function(opts) {\n\n  if (this._events === undefined ||\n      this._events === ObjectGetPrototypeOf(this)._events) {\n    this._events = ObjectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n\n\n  if (opts?.captureRejections) {\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\n    this[kCapture] = Boolean(opts.captureRejections);\n  } else {\n    // Assigning the kCapture property directly saves an expensive\n    // prototype lookup in a very sensitive hot path.\n    this[kCapture] = EventEmitter.prototype[kCapture];\n  }\n};\n\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\n  if (!that[kCapture]) {\n    return;\n  }\n\n  // Handle Promises/A+ spec\x2C then could be a getter\n  // that throws on second use.\n  try {\n    const then = promise.then;\n\n    if (typeof then === 'function') {\n      then.call(promise\x2C undefined\x2C function(err) {\n        // The callback is called with nextTick to avoid a follow-up\n        // rejection from this promise.\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\n      });\n    }\n  } catch (err) {\n    that.emit('error'\x2C err);\n  }\n}\n\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\n  if (typeof ee[kRejection] === 'function') {\n    ee[kRejection](err\x2C type\x2C ...args);\n  } else {\n    // We have to disable the capture rejections mechanism\x2C otherwise\n    // we might end up in an infinite loop.\n    const prev = ee[kCapture];\n\n    // If the error handler throws\x2C it is not catcheable and it\n    // will end up in 'uncaughtException'. We restore the previous\n    // value of kCapture in case the uncaughtException is present\n    // and the exception is handled.\n    try {\n      ee[kCapture] = false;\n      ee.emit('error'\x2C err);\n    } finally {\n      ee[kCapture] = prev;\n    }\n  }\n}\n\n/**\n * Increases the max listeners of the event emitter.\n * @param {number} n\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\n/**\n * Returns the current max listener value for the event emitter.\n * @returns {number}\n */\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\n// Returns the length and line number of the first sequence of `a` that fully\n// appears in `b` with a length of at least 4.\nfunction identicalSequenceRange(a\x2C b) {\n  for (let i = 0; i < a.length - 3; i++) {\n    // Find the first entry of b that matches the current entry of a.\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\n    if (pos !== -1) {\n      const rest = b.length - pos;\n      if (rest > 3) {\n        let len = 1;\n        const maxLen = MathMin(a.length - i\x2C rest);\n        // Count the number of consecutive entries.\n        while (maxLen > len && a[i + len] === b[pos + len]) {\n          len++;\n        }\n        if (len > 3) {\n          return [len\x2C i];\n        }\n      }\n    }\n  }\n\n  return [0\x2C 0];\n}\n\nfunction enhanceStackTrace(err\x2C own) {\n  let ctorInfo = '';\n  try {\n    const { name } = this.constructor;\n    if (name !== 'EventEmitter')\n      ctorInfo = ` on ${name} instance`;\n  } catch {}\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n  const errStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\n  const ownStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\n\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\n  if (len > 0) {\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\n                         '    [... lines matching original stack trace ...]');\n  }\n\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\n}\n\n/**\n * Synchronously calls each of the listeners registered\n * for the event.\n * @param {string | symbol} type\n * @param {...any} [args]\n * @returns {boolean}\n */\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\n  let doError = (type === 'error');\n\n  const events = this._events;\n  if (events !== undefined) {\n    if (doError && events[kErrorMonitor] !== undefined)\n      this.emit(kErrorMonitor\x2C ...args);\n    doError = (doError && events.error === undefined);\n  } else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    let er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      try {\n        const capture = {};\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\n          configurable: true\n        });\n      } catch {}\n\n      // Note: The comments on the `throw` lines are intentional\x2C they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n\n    let stringifiedEr;\n    try {\n      stringifiedEr = inspect(er);\n    } catch {\n      stringifiedEr = er;\n    }\n\n    // At least give some kind of context to the user\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  const handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    const result = handler.apply(this\x2C args);\n\n    // We check if result is undefined first because that\n    // is the most common case so we do not pay any perf\n    // penalty\n    if (result !== undefined && result !== null) {\n      addCatch(this\x2C result\x2C type\x2C args);\n    }\n  } else {\n    const len = handler.length;\n    const listeners = arrayClone(handler);\n    for (let i = 0; i < len; ++i) {\n      const result = listeners[i].apply(this\x2C args);\n\n      // We check if result is undefined first because that\n      // is the most common case so we do not pay any perf\n      // penalty.\n      // This code is duplicated because extracting it away\n      // would make it non-inlineable.\n      if (result !== undefined && result !== null) {\n        addCatch(this\x2C result\x2C type\x2C args);\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\n  let m;\n  let events;\n  let existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = ObjectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners\x2C first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit('newListener'\x2C type\x2C\n                  listener.listener ?? listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element\x2C need to change to array.\n      existing = events[type] =\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\n      // If we've already got an array\x2C just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\n                          `${existing.length} ${String(type)} listeners ` +\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\n                          'emitter.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      process.emitWarning(w);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Adds a listener to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n  return _addListener(this\x2C type\x2C listener\x2C false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n/**\n * Adds the `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependListener =\n    function prependListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type\x2C this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target\x2C arguments);\n  }\n}\n\nfunction _onceWrap(target\x2C type\x2C listener) {\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\n  const wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\n/**\n * Adds a one-time `listener` function to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.once = function once(type\x2C listener) {\n  checkListener(listener);\n\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n  return this;\n};\n\n/**\n * Adds a one-time `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type\x2C listener) {\n      checkListener(listener);\n\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n\n/**\n * Removes the specified `listener` from the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeListener =\n    function removeListener(type\x2C listener) {\n      checkListener(listener);\n\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      const list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = ObjectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        let position = -1;\n\n        for (let i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          if (spliceOne === undefined)\n            spliceOne = require('internal/util').spliceOne;\n          spliceOne(list\x2C position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener'\x2C type\x2C listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n/**\n * Removes all listeners from the event emitter. (Only\n * removes listeners for a specific event name if specified\n * as `type`).\n * @param {string | symbol} [type]\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      // Not listening for removeListener\x2C no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = ObjectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = ObjectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // Emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        for (const key of ReflectOwnKeys(events)) {\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = ObjectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      const listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target\x2C type\x2C unwrap) {\n  const events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  const evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener);\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this\x2C type\x2C true);\n};\n\n/**\n * Returns a copy of the array of listeners and wrappers for\n * the event name specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this\x2C type\x2C false);\n};\n\n/**\n * Returns the number of listeners listening to the event name\n * specified as `type`.\n * @deprecated since v3.2.0\n * @param {EventEmitter} emitter\n * @param {string | symbol} type\n * @returns {number}\n */\nEventEmitter.listenerCount = function(emitter\x2C type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  }\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\n/**\n * Returns the number of listeners listening to event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {number}\n */\nfunction listenerCount(type) {\n  const events = this._events;\n\n  if (events !== undefined) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Returns an array listing the events for which\n * the emitter has registered listeners.\n * @returns {any[]}\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr) {\n  // At least since V8 8.3\x2C this implementation is faster than the previous\n  // which always used a simple for-loop\n  switch (arr.length) {\n    case 2: return [arr[0]\x2C arr[1]];\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\n  }\n  return ArrayPrototypeSlice(arr);\n}\n\nfunction unwrapListeners(arr) {\n  const ret = arrayClone(arr);\n  for (let i = 0; i < ret.length; ++i) {\n    const orig = ret[i].listener;\n    if (typeof orig === 'function')\n      ret[i] = orig;\n  }\n  return ret;\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nfunction getEventListeners(emitterOrTarget\x2C type) {\n  // First check if EventEmitter\n  if (typeof emitterOrTarget.listeners === 'function') {\n    return emitterOrTarget.listeners(type);\n  }\n  // Require event target lazily to avoid always loading it\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\n  if (isEventTarget(emitterOrTarget)) {\n    const root = emitterOrTarget[kEvents].get(type);\n    const listeners = [];\n    let handler = root?.next;\n    while (handler?.listener !== undefined) {\n      const listener = handler.listener?.deref ?\n        handler.listener.deref() : handler.listener;\n      listeners.push(listener);\n      handler = handler.next;\n    }\n    return listeners;\n  }\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Creates a `Promise` that is fulfilled when the emitter\n * emits the given event.\n * @param {EventEmitter} emitter\n * @param {string} name\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {Promise}\n */\nasync function once(emitter\x2C name\x2C options = {}) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError();\n  return new Promise((resolve\x2C reject) => {\n    const errorListener = (err) => {\n      emitter.removeListener(name\x2C resolver);\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      reject(err);\n    };\n    const resolver = (...args) => {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error'\x2C errorListener);\n      }\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      resolve(args);\n    };\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\n    if (name !== 'error' && typeof emitter.once === 'function') {\n      emitter.once('error'\x2C errorListener);\n    }\n    function abortListener() {\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\n      reject(new AbortError());\n    }\n    if (signal != null) {\n      eventTargetAgnosticAddListener(\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\n    }\n  });\n}\n\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value\x2C done) {\n  return { value\x2C done };\n}\n\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.removeListener === 'function') {\n    emitter.removeListener(name\x2C listener);\n  } else if (typeof emitter.removeEventListener === 'function') {\n    emitter.removeEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags?.once) {\n      emitter.once(name\x2C listener);\n    } else {\n      emitter.on(name\x2C listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters\x2C we do not listen to `error` events here.\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\n/**\n * Returns an `AsyncIterator` that iterates `event` events.\n * @param {EventEmitter} emitter\n * @param {string | symbol} event\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {AsyncIterator}\n */\nfunction on(emitter\x2C event\x2C options) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError();\n\n  const unconsumedEvents = [];\n  const unconsumedPromises = [];\n  let error = null;\n  let finished = false;\n\n  const iterator = ObjectSetPrototypeOf({\n    next() {\n      // First\x2C we consume all unread events\n      const value = unconsumedEvents.shift();\n      if (value) {\n        return PromiseResolve(createIterResult(value\x2C false));\n      }\n\n      // Then we error\x2C if an error happened\n      // This happens one time if at all\x2C because after 'error'\n      // we stop listening\n      if (error) {\n        const p = PromiseReject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished\x2C resolve to done\n      if (finished) {\n        return PromiseResolve(createIterResult(undefined\x2C true));\n      }\n\n      // Wait until an event happens\n      return new Promise(function(resolve\x2C reject) {\n        unconsumedPromises.push({ resolve\x2C reject });\n      });\n    }\x2C\n\n    return() {\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n\n      if (signal) {\n        eventTargetAgnosticRemoveListener(\n          signal\x2C\n          'abort'\x2C\n          abortListener\x2C\n          { once: true });\n      }\n\n      finished = true;\n\n      for (const promise of unconsumedPromises) {\n        promise.resolve(createIterResult(undefined\x2C true));\n      }\n\n      return PromiseResolve(createIterResult(undefined\x2C true));\n    }\x2C\n\n    throw(err) {\n      if (!err || !(err instanceof Error)) {\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\n                                       'Error'\x2C err);\n      }\n      error = err;\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\n    }\x2C\n\n    [SymbolAsyncIterator]() {\n      return this;\n    }\n  }\x2C AsyncIteratorPrototype);\n\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\n  if (event !== 'error' && typeof emitter.on === 'function') {\n    emitter.on('error'\x2C errorHandler);\n  }\n\n  if (signal) {\n    eventTargetAgnosticAddListener(\n      signal\x2C\n      'abort'\x2C\n      abortListener\x2C\n      { once: true });\n  }\n\n  return iterator;\n\n  function abortListener() {\n    errorHandler(new AbortError());\n  }\n\n  function eventHandler(...args) {\n    const promise = ArrayPrototypeShift(unconsumedPromises);\n    if (promise) {\n      promise.resolve(createIterResult(args\x2C false));\n    } else {\n      unconsumedEvents.push(args);\n    }\n  }\n\n  function errorHandler(err) {\n    finished = true;\n\n    const toError = ArrayPrototypeShift(unconsumedPromises);\n\n    if (toError) {\n      toError.reject(err);\n    } else {\n      // The next time we call next()\n      error = err;\n    }\n\n    iterator.return();\n  }\n}\n
code-source-info,0x3ba9c5ace746,13,14192,14264,C0O14213C14O14220C19O14262,,
tick,0x1083565ba,62176,0,0x0,3,0x108a8eb80,0x3ba9c5ace623,0x3ba9c5ac214c,0x3ba995f3bd9d
tick,0x7ff81f267316,62197,0,0x0,3,0x108a8eb80,0x3ba9c5ace623,0x3ba9c5ac214c,0x3ba995f3bd9d
code-creation,LazyCompile,10,62285,0x3ba9c5ad09a6,387,_addListener node:events:418:22,0x3ba960972c40,~
code-source-info,0x3ba9c5ad09a
code-creation,LazyCompile,10,62383,0x3ba9c5ad0cde,15,checkListener node:events:127:23,0x3ba9609725a0,~
code-source-info,0x3ba9c5ad0cde,13,3670,3726,C0O3685C8O3685C14O3725,,
tick,0x1087eb22f,62426,0,0x0,3,0x108a8eb80,0x3ba9c5ace754,0x3ba9c5ace623,0x3ba9c5ac214c,0x3ba995f3bd9d
code-creation,LazyCompile,10,62464,0x3ba9c5ad0dce,30, node:internal/validators:235:42,0x3ba99921a390,~
code-source-info,0x3ba9c5ad0dce,17,7207,7323,C0O7228C6O7265C22O7271C27O7265C29O7322,,
code-creation,LazyCompile,10,62620,0x3ba9c5ad1066,380,emit node:events:340:44,0x3ba960972b80,~
code-source-info,0x3ba9c5ad
code-creation,LazyCompile,10,62758,0x3ba9c5ad1406,172,startListeningIfSignal node:internal/process/signal:22:32,0x3ba95fd4be98,~
script-source,89,node:internal/process/signal,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n} = require('internal/errors');\n\nconst { signals } = internalBinding('constants').os;\n\nlet Signal;\nconst signalWraps = new SafeMap();\n\nfunction isSignal(event) {\n  return typeof event === 'string' && signals[event] !== undefined;\n}\n\n// Detect presence of a listener for the special signal types\nfunction startListeningIfSignal(type) {\n  if (isSignal(type) && !signalWraps.has(type)) {\n    if (Signal === undefined)\n      Signal = internalBinding('signal_wrap').Signal;\n    const wrap = new Signal();\n\n    wrap.unref();\n\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\n\n    const signum = signals[type];\n    const err = wrap.start(signum);\n    if (err) {\n      wrap.close();\n      throw errnoException(err\x2C 'uv_signal_start');\n    }\n\n    signalWraps.set(type\x2C wrap);\n  }\n}\n\nfunction stopListeningIfSignal(type) {\n  const wrap = signalWraps.get(type);\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\n    wrap.close();\n    signalWraps.delete(type);\n  }\n}\n\nmodule.exports = {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\n};\n
code-source-info,0x3ba9c5ad1406,89,429,904,C0O440C3O444C11O463C14O475C19O475C26O492C32O524C38O533C43O563C50O531C56O589C61O589C67O613C72O613C76O627C78O643C84O673C98O643C103O641C107O721C114O728C118O757C123O757C129O776C131O798C136O798C140O813C148O819C153O813C154O870C159O882C164O882C171O903,,
code-creation,LazyCompile,10,62954,0x3ba9c5ad17c6,19,isSignal node:internal/process/signal:17:18,0x3ba95fd4bce0,~
code-source-info,0x3ba9c5ad17c6,89,255,334,C0O267C8O303C13O310C17O318C18O332,,
code-creation,LazyCompile,10,63018,0x3ba9c5ad1966,75,setupDebugEnv node:internal/bootstrap/pre_execution:194:23,0x3ba995f3def0,~
code-source-info,0x3ba9c5ad1966,92,6034,6244,C0O6041C6O6041C11O6074C19O6102C24O6106C29O6075C34O6121C42O6125C48O6169C54O6169C59O6206C64O6219C69O6220C74O6243,,
code-creation,LazyCompile,10,63114,0x3ba9c5ad1cfe,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x3ba95c93a790,~
script-source,40,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = ObjectCreate(null);\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 0: return debug();\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 0: return debug();\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\n};\n
code-source-info,0x3ba9c5ad1cfe,40,546,991,C0O561C7O574C14O572C20O596C31O709C44O709C51O753C62O754C69O782C80O783C88O833C100O848C116O833C121O833C123O871C132O883C144O959C151O971C158O990,,
tick,0x108cf63b0,63556,0,0x0,0,0x108a97160,0x3ba9c5acc5c7,0x3ba9c5ad1990,0x3ba9c5ac2180,0x3ba995f3bd9d
new,MemoryChunk,0x10dd40000,262144
code-creation,Function,11,63621,0x10dd43060,572,getOptionValue node:internal/options:32:24,0x3ba9c5ac1238,^
code-source-info,0x10dd43060,93,720,960,,,
code-creation,Function,11,63659,0x10dd43300,116,isPosixPathSeparator node:path:56:30,0x3ba95c927ec8,^
code-source-info,0x10dd43300,35,1854,1902,,,
code-creation,Function,11,63731,0x10dd433e0,3076,normalizeString node:path:66:25,0x3ba95c927f68,^
code-source-info,0x10dd433e0,35,2161,4085,,,
code-creation,LazyCompile,10,63789,0x3ba9c5ad264e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:173:40,0x3ba995f3de28,~
code-source-info,0x3ba9c5ad264e,92,5598,5784,C0O5605C8O5610C14O5650C15O5657C16O5691C22O5691C27O5672C32O5741C38O5774C43O5774C48O5783,,
code-creation,LazyCompile,10,63883,0x3ba9c5ad28be,62,initializeReport node:internal/bootstrap/pre_execution:183:26,0x3ba995f3de78,~
code-source-info,0x3ba9c5ad28be,92,5811,6010,C0O5811C8O5837C16O5837C21O5826C27O5875C42O5896C47O5968C55O5875C61O6009,,
code-creation,Eval,10,64070,0x3ba9c5ad2e3e,5, node:internal/process/report:1:1,0x3ba9c5ad2c38,~
script-source,95,node:internal/process/report,'use strict';\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_SYNTHETIC\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateSignalName\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst nr = internalBinding('report');\nconst {\n  JSONParse\x2C\n} = primordials;\nconst report = {\n  writeReport(file\x2C err) {\n    if (typeof file === 'object' && file !== null) {\n      err = file;\n      file = undefined;\n    } else if (file !== undefined && typeof file !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\n    } else if (err === undefined) {\n      err = new ERR_SYNTHETIC();\n    } else {\n      validateObject(err\x2C 'err');\n    }\n\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\n  }\x2C\n  getReport(err) {\n    if (err === undefined)\n      err = new ERR_SYNTHETIC();\n    else\n      validateObject(err\x2C 'err');\n\n    return JSONParse(nr.getReport(err));\n  }\x2C\n  get directory() {\n    return nr.getDirectory();\n  }\x2C\n  set directory(dir) {\n    validateString(dir\x2C 'directory');\n    nr.setDirectory(dir);\n  }\x2C\n  get filename() {\n    return nr.getFilename();\n  }\x2C\n  set filename(name) {\n    validateString(name\x2C 'filename');\n    nr.setFilename(name);\n  }\x2C\n  get compact() {\n    return nr.getCompact();\n  }\x2C\n  set compact(b) {\n    validateBoolean(b\x2C 'compact');\n    nr.setCompact(b);\n  }\x2C\n  get signal() {\n    return nr.getSignal();\n  }\x2C\n  set signal(sig) {\n    validateSignalName(sig\x2C 'signal');\n    removeSignalHandler();\n    addSignalHandler(sig);\n    nr.setSignal(sig);\n  }\x2C\n  get reportOnFatalError() {\n    return nr.shouldReportOnFatalError();\n  }\x2C\n  set reportOnFatalError(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnFatalError(trigger);\n  }\x2C\n  get reportOnSignal() {\n    return nr.shouldReportOnSignal();\n  }\x2C\n  set reportOnSignal(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnSignal(trigger);\n    removeSignalHandler();\n    addSignalHandler();\n  }\x2C\n  get reportOnUncaughtException() {\n    return nr.shouldReportOnUncaughtException();\n  }\x2C\n  set reportOnUncaughtException(trigger) {\n    validateBoolean(trigger\x2C 'trigger');\n\n    nr.setReportOnUncaughtException(trigger);\n  }\n};\n\nfunction addSignalHandler(sig) {\n  if (nr.shouldReportOnSignal()) {\n    if (typeof sig !== 'string')\n      sig = nr.getSignal();\n\n    process.on(sig\x2C signalHandler);\n  }\n}\n\nfunction removeSignalHandler() {\n  const sig = nr.getSignal();\n\n  if (sig)\n    process.removeListener(sig\x2C signalHandler);\n}\n\nfunction signalHandler(sig) {\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\n}\n\nmodule.exports = {\n  addSignalHandler\x2C\n  report\n};\n
code-source-info,0x3ba9c5ad2e3e,95,0,2623,C0O0C4O2623,,
code-creation,Function,10,64363,0x3ba9c5ad3956,315, node:internal/process/report:1:1,0x3ba9c5ad2db8,~
code-source-info,0x3ba9c5ad3956,95,0,2623,C0O0C51O66C54O66C59O92C64O24C70O48C76O189C79O189C84O110C90O129C96O147C102O169C108O232C111O232C115O232C117O269C123O312C128O316C136O756C290O2572C297O2593C303O2613C309O2587C314O2622,,
code-creation,LazyCompile,10,64599,0x3ba9c5ad5696,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:202:40,0x3ba995f3df40,~
code-source-info,0x3ba9c5ad5696,92,6345,6441,C0O6381C6O6381C11O6360C16O6420C20O6440,,
code-creation,LazyCompile,10,64670,0x3ba9c5ad57de,57,addSignalHandler node:internal/process/report:97:26,0x3ba9c5ad2e70,~
code-source-info,0x3ba9c5ad57de,95,2222,2368,C0O2232C5O2239C10O2239C16O2269C22O2304C27O2313C32O2313C38O2331C41O2339C49O2339C56O2367,,
code-creation,LazyCompile,10,64736,0x3ba9c5ad5d9e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:208:46,0x3ba995f3df90,~
code-source-info,0x3ba9c5ad5d9e,92,6488,6750,C0O6488C8O6510C18O6510C23O6554C25O6571C26O6578C27O6582C35O6582C40O6612C45O6613C50O6673C58O6673C63O6651C69O6691C74O6699C79O6702C84O6699C91O6749,,
tick,0x7ff81f22f193,64820,0,0x0,3,0x108a8eb80,0x3ba9c5ac2198,0x3ba995f3bd9d
code-creation,LazyCompile,10,64849,0x3ba9c5ad602e,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:338:37,0x3ba995f3e160,~
code-source-info,0x3ba9c5ad602e,92,10502,11031,C0O10509C3O10521C8O10525C14O10563C20O10563C25O10607C33O10630C38O10634C46O10607C52O10660C53O10670C57O10660C61O10751C64O10766C73O10824C76O10832C81O10836C90O10883C93O10898C102O10940C108O10940C113O10964C118O10965C124O11004C127O11019C132O11004C137O11030,,
code-creation,LazyCompile,10,64999,0x3ba9c5ad6426,455,initializePolicy node:internal/bootstrap/pre_execution:366:26,0x3ba995f3e200,~
code-source-info,0x3ba9c5ad6426,92,11330,13128,C0O11364C10O11364C15O11407C17O11437C21O11445C35O11445C41O11570C49O11570C55O11547C60O11562C65O11689C67O11706C75O11710C81O11725C87O11726C94O11766C100O11798C108O11780C116O11855C120O11877C126O11877C132O11855C138O11891C149O11907C153O11921C161O11935C167O11993C175O11993C180O12027C190O12027C197O12102C207O12102C212O12144C214O12197C222O12197C227O12275C235O12275C241O12243C246O12255C251O12324C257O12324C263O12374C269O12374C275O12433C277O12459C279O12483C283O12464C288O12573C290O12589C295O12524C300O12552C305O12615C311O12651C317O12651C322O12692C328O12692C334O12721C340O12741C344O12728C349O12761C356O12808C358O12837C360O12878C366O12900C376O12900C383O12878C389O12492C394O12446C397O12935C401O12962C415O12968C420O12962C421O13051C429O13051C435O13092C441O13116C447O13093C454O13127,,
code-creation,LazyCompile,10,65123,0x3ba9c5ad6816,63,initializeClusterIPC node:internal/bootstrap/pre_execution:357:30,0x3ba995f3e1b0,~
code-source-info,0x3ba9c5ad6816,92,11062,11303,C0O11069C3O11081C10O11085C18O11100C23O11104C29O11142C35O11142C40O11174C45O11174C49O11263C52O11278C62O11302,,
code-creation,LazyCompile,10,65181,0x3ba9c5ad6986,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:461:38,0x3ba995f3e340,~
code-source-info,0x3ba9c5ad6986,92,14819,14968,C0O14863C6O14863C11O14834C16O14914C21O14943C26O14967,,
code-creation,Eval,10,65450,0x3ba9c5ad7306,5, node:internal/source_map/source_map_cache:1:1,0x3ba9c5ad6fa0,~
script-source,96,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\nfunction ObjectGetValueSafe(obj\x2C key) {\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\n}\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\nconst fs = require('fs');\nconst { getOptionValue } = require('internal/options');\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\nconst {\n  normalizeReferrerURL\x2C\n} = require('internal/modules/cjs/helpers');\nconst { validateBoolean } = require('internal/validators');\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst cjsSourceMapCache = new IterableWeakMap();\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\nlet SourceMap;\n\nlet sourceMapsEnabled;\nfunction getSourceMapsEnabled() {\n  if (sourceMapsEnabled === undefined) {\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n  }\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  const {\n    setSourceMapsEnabled\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  setSourceMapsEnabled(val);\n  if (val) {\n    const {\n      prepareStackTrace\n    } = require('internal/source_map/prepare_stack_trace');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      prepareStackTrace\x2C\n    } = require('internal/errors');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  try {\n    filename = normalizeReferrerURL(filename);\n  } catch (err) {\n    // This is most likely an [eval]-wrapper\x2C which is currently not\n    // supported.\n    debug(err.stack);\n    return;\n  }\n  const match = StringPrototypeMatch(\n    content\x2C\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\n  );\n  if (match) {\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\n    const url = data ? null : match.groups.sourceMappingURL;\n    if (cjsModuleInstance) {\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\n        filename\x2C\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    } else {\n      // If there is no cjsModuleInstance assume we are in a\n      // "modules/esm" context.\n      esmSourceMapCache.set(filename\x2C {\n        lineLengths: lineLengths(content)\x2C\n        data\x2C\n        url\n      });\n    }\n  }\n}\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err.stack);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\n  // account in coverage calculations.\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\n    return line.length;\n  });\n}\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err.stack);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err.stack);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = ObjectCreate(null);\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of cjsSourceMapCache) {\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\n      url: ObjectGetValueSafe(value\x2C 'url')\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL) {\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let sourceMap = esmSourceMapCache.get(sourceURL);\n  if (sourceMap === undefined) {\n    for (const value of cjsSourceMapCache) {\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\n      if (sourceURL === filename) {\n        sourceMap = {\n          data: ObjectGetValueSafe(value\x2C 'data')\n        };\n      }\n    }\n  }\n  if (sourceMap && sourceMap.data) {\n    return new SourceMap(sourceMap.data);\n  }\n  return undefined;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0x3ba9c5ad7306,96,0,7654,C0O0C4O7654,,
code-creation,Function,10,66226,0x3ba9c5ad797e,435, node:internal/source_map/source_map_cache:1:1,0x3ba9c5ad7280,~
code-source-info,0x3ba9c5ad797e,96,0,7654,C0O0C152O25C158O46C164O59C170O75C176O89C182O123C188O156C194O179C199O190C205O214C211O526C217O526C222O515C228O557C234O557C239O590C252O591C258O557C260O653C266O653C270O653C272O695C278O695C283O676C289O752C295O752C300O732C305O832C311O832C316O806C322O901C328O901C333O881C339O1137C341O1137C346O1137C348O1264C350O1264C355O1264C357O1325C363O1325C368O1287C374O1302C380O1317C386O1354C387O1354C389O1370C390O1370C392O7518C399O7539C405O7556C411O7580C417O7604C423O7627C429O7533C434O7653,,
tick,0x108599b38,66329,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ad698c,0x3ba9c5ac21b0,0x3ba995f3bd9d
code-creation,LazyCompile,10,66419,0x3ba9c5ad8766,82,debuglog node:internal/util/debuglog:71:18,0x3ba95c93aac8,~
code-source-info,0x3ba9c5ad8766,40,2232,3279,C0O2232C28O2357C32O2357C34O2789C35O2789C37O2811C41O2811C43O2899C48O3128C58O3149C63O3174C74O3128C79O3263C81O3277,,
code-creation,Eval,10,66604,0x3ba9c5ad8ce6,5, node:internal/util/iterable_weak_map:1:1,0x3ba9c5ad8a98,~
script-source,97,node:internal/util/iterable_weak_map,'use strict';\n\nconst {\n  ObjectFreeze\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SymbolIterator\x2C\n} = primordials;\n\n// This class is modified from the example code in the WeakRefs specification:\n// https://github.com/tc39/proposal-weakrefs\n// Licensed under ECMA's MIT-style license\x2C see:\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\nclass IterableWeakMap {\n  #weakMap = new SafeWeakMap();\n  #refSet = new SafeSet();\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\n\n  set(key\x2C value) {\n    const entry = this.#weakMap.get(key);\n    if (entry) {\n      // If there's already an entry for the object represented by "key"\x2C\n      // the value can be updated without creating a new WeakRef:\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\n    } else {\n      const ref = new SafeWeakRef(key);\n      this.#weakMap.set(key\x2C { value\x2C ref });\n      this.#refSet.add(ref);\n      this.#finalizationGroup.register(key\x2C {\n        set: this.#refSet\x2C\n        ref\n      }\x2C ref);\n    }\n  }\n\n  get(key) {\n    return this.#weakMap.get(key)?.value;\n  }\n\n  has(key) {\n    return this.#weakMap.has(key);\n  }\n\n  delete(key) {\n    const entry = this.#weakMap.get(key);\n    if (!entry) {\n      return false;\n    }\n    this.#weakMap.delete(key);\n    this.#refSet.delete(entry.ref);\n    this.#finalizationGroup.unregister(entry.ref);\n    return true;\n  }\n\n  [SymbolIterator]() {\n    const iterator = this.#refSet[SymbolIterator]();\n\n    const next = () => {\n      const result = iterator.next();\n      if (result.done) return result;\n      const key = result.value.deref();\n      if (key == null) return next();\n      const { value } = this.#weakMap.get(key);\n      return { done: false\x2C value };\n    };\n\n    return {\n      [SymbolIterator]() { return this; }\x2C\n      next\x2C\n    };\n  }\n}\n\nfunction cleanup({ set\x2C ref }) {\n  set.delete(ref);\n}\n\nObjectFreeze(IterableWeakMap.prototype);\n\nmodule.exports = {\n  IterableWeakMap\x2C\n};\n
code-source-info,0x3ba9c5ad8ce6,97,0,1958,C0O0C4O1958,,
code-creation,Function,10,66835,0x3ba9c5ad9446,196, node:internal/util/iterable_weak_map:1:1,0x3ba9c5ad8c60,~
code-source-info,0x3ba9c5ad9446,97,0,1958,C0O0C26O25C31O41C37O69C43O80C49O95C55O110C134O1392C168O1904C173O1875C177O1917C184O1938C190O1932C195O1957,,
code-creation,Function,10,66866,0x3ba9c5ad95c6,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x3ba9c5ad8f70,~
code-source-info,0x3ba9c5ad95c6,97,399,516,C3O410C10O410C27O441C34O441C48O479C62O479C74O516,,
code-creation,Eval,10,67205,0x3ba9c5ada28e,5, node:internal/modules/cjs/helpers:1:1,0x3ba9c5ad9fd8,~
script-source,98,node:internal/modules/cjs/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\n} = require('internal/errors').codes;\nconst { NativeModule } = require('internal/bootstrap/loaders');\n\nconst { validateString } = require('internal/validators');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\n\nconst { getOptionValue } = require('internal/options');\nconst userConditions = getOptionValue('--conditions');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\nconst cjsConditions = new SafeSet([\n  'require'\x2C\n  'node'\x2C\n  ...addonConditions\x2C\n  ...userConditions\x2C\n]);\n\nfunction loadNativeModule(filename\x2C request) {\n  const mod = NativeModule.map.get(filename);\n  if (mod?.canBeRequiredByUsers) {\n    debug('load native module %s'\x2C request);\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\n    mod.compileForPublicLoader();\n    return mod;\n  }\n}\n\n// Invoke with makeRequireFunction(module) where |module| is the Module object\n// to use as the context for the require() function.\n// Use redirects to set up a mapping from a policy and restrict dependencies\nconst urlToFileCache = new SafeMap();\nfunction makeRequireFunction(mod\x2C redirects) {\n  const Module = mod.constructor;\n\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = cjsConditions;\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        if (destination.protocol === 'node:') {\n          const specifier = destination.pathname;\n          const mod = loadNativeModule(specifier\x2C href);\n          if (mod && mod.canBeRequiredByUsers) {\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (destination.protocol === 'file:') {\n          let filepath;\n          if (urlToFileCache.has(href)) {\n            filepath = urlToFileCache.get(href);\n          } else {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod.require(filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\n        ));\n      }\n      return mod.require(specifier);\n    };\n  } else {\n    require = function require(path) {\n      return mod.require(path);\n    };\n  }\n\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  require.main = process.mainModule;\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('internal/modules/cjs/loader').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      get: () => {\n        const lib = dummyModule.require(name);\n\n        // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n        delete object[name];\n        ObjectDefineProperty(object\x2C name\x2C {\n          get: () => lib\x2C\n          set: setReal\x2C\n          configurable: true\x2C\n          enumerable: false\n        });\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\n    });\n  });\n}\n\nfunction normalizeReferrerURL(referrer) {\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\n    return pathToFileURL(referrer).href;\n  }\n  return new URL(referrer).href;\n}\n\n// For error messages only - used to check if ESM syntax is in use.\nfunction hasEsmSyntax(code) {\n  debug('Checking for ESM syntax');\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n  let root;\n  try {\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\n  } catch {\n    return false;\n  }\n\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\n    stmt.type === 'ExportDefaultDeclaration' ||\n    stmt.type === 'ExportNamedDeclaration' ||\n    stmt.type === 'ImportDeclaration' ||\n    stmt.type === 'ExportAllDeclaration');\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n};\n
code-source-info,0x3ba9c5ada28e,98,0,6746,C0O0C4O6746,,
code-creation,Function,10,67887,0x3ba9c5ada80e,536, node:internal/modules/cjs/helpers:1:1,0x3ba9c5ada208,~
code-source-info,0x3ba9c5ada80e,98,0,6746,C0O0C104O25C110O50C116O72C122O94C128O118C134O151C139O162C144O173C150O202C156O229C162O253C168O373C174O373C179O399C184O307C190O342C196O432C202O432C207O415C213O499C219O499C224O480C230O544C236O544C240O544C242O607C248O607C253O569C259O584C265O599C271O660C277O660C282O641C287O712C290O712C295O757C301O757C306O790C319O791C325O757C327O856C330O856C335O911C346O1041C353O1083C354O1083C410O1105C465O1041C470O1041C472O1665C474O1665C479O1665C481O6586C488O6607C494O6633C500O6650C506O6666C512O6686C518O6709C524O6733C530O6601C535O6745,,
tick,0x7ff81f29ed43,67994,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ad7ab5,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ad698c,0x3ba9c5ac21b0,0x3ba995f3bd9d
code-creation,LazyCompile,10,68109,0x3ba9c5adb44e,27,SafeSet node:internal/per_context/primordials:364:16,0x3ba960949fc0,~
script-source,6,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    value: uncurryThis(get)\x2C\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      value: uncurryThis(set)\x2C\n      enumerable\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C desc);\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = global[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  ArrayPrototypeForEach\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n// Because these functions are used by `makeSafe`\x2C which is exposed\n// on the `primordials` object\x2C it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\n);\n\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x3ba9c5adb44e,6,10527,10544,C3O10533C7O10539C11O10533C26O10543,,
tick,0x7ff81f29ecb3,69342,0,0x0,3,0x108a8eb80,0x3ba9c5ada9df,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ad7ab5,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ad698c,0x3ba9c5ac21b0,0x3ba995f3bd9d
code-creation,LazyCompile,10,69371,0x3ba9c5adc28e,27,SafeMap node:internal/per_context/primordials:351:16,0x3ba960949e38,~
code-source-info,0x3ba9c5adc28e,6,10200,10217,C3O10206C7O10212C11O10206C26O10216,,
code-creation,LazyCompile,10,69451,0x3ba9c5adc406,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x3ba9c5ad8d68,~
code-source-info,0x3ba9c5adc406,97,373,373,C0O373C15O373,,
code-creation,LazyCompile,10,69504,0x3ba9c5adc78e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x3ba960949ef8,~
code-source-info,0x3ba9c5adc78e,6,10371,10388,C3O10377C7O10383C11O10377C26O10387,,
code-creation,LazyCompile,10,69560,0x3ba9c5adc896,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x3ba96094a148,~
code-source-info,0x3ba9c5adc896,6,10977,11022,C3O10997C7O11003C11O10997C26O11021,,
code-creation,LazyCompile,10,69731,0x3ba9c5add11e,492,initializeDeprecations node:internal/bootstrap/pre_execution:251:32,0x3ba995f3e0d0,~
code-source-info,0x3ba9c5add11e
tick,0x1089c254d,69905,0,0x0,0,0x108a989a0,0x3ba9c5add2bb,0x3ba9c5ac21b6,0x3ba995f3bd9d
code-creation,LazyCompile,10,69933,0x3ba9c5add74e,53,initializeWASI node:internal/bootstrap/pre_execution:415:24,0x3ba995f3e250,~
code-source-info,0x3ba9c5add74e,92,13153,13359,C0O13185C6O13185C11O13168C16O13251C21O13255C29O13255C35O13270C37O13301C43O13301C47O13295C52O13358,,
code-creation,LazyCompile,10,70015,0x3ba9c5add91e,57,initializeCJSLoader node:internal/bootstrap/pre_execution:422:29,0x3ba995f3e2a0,~
code-source-info,0x3ba9c5add91e,92,13389,13683,C0O13414C6O13414C11O13456C17O13498C22O13505C27O13505C31O13601C42O13622C47O13658C51O13616C56O13682,,
code-creation,Eval,10,71090,0x3ba9c5adf8c6,5, node:internal/modules/cjs/loader:1:1,0x3ba9c5adefe0,~
script-source,99,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeConcat\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\n};\n\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\nconst { deprecate } = require('internal/util');\nconst vm = require('vm');\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { sep } = path;\nconst { internalModuleStat } = internalBinding('fs');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  cjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst { getOptionValue } = require('internal/options');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\n\n// Whether any user-provided CJS modules had been loaded (executed).\n// Used for internal assertions.\nlet hasLoadedAnyUserCJSModule = false;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\n} = require('internal/constants');\n\nconst {\n  isProxy\n} = require('internal/util/types');\n\nconst asyncESM = require('internal/process/esm_loader');\nconst { enrichCJSError } = require('internal/modules/esm/translators');\nconst { kEvaluated } = internalBinding('module_wrap');\nconst {\n  encodedSepRegEx\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\n} = require('internal/modules/esm/resolve');\n\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = ObjectCreate(null);\n\nlet requireDepth = 0;\nlet statCache = null;\nlet isPreloading = false;\n\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) return result;\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\n    ArrayPrototypePush(children\x2C child);\n}\n\nconst moduleParentCache = new SafeWeakMap();\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  this.exports = {};\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\n\nconst builtinModules = [];\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\n  if (mod.canBeRequiredByUsers) {\n    ArrayPrototypePush(builtinModules\x2C id);\n  }\n}\n\nObjectFreeze(builtinModules);\nModule.builtinModules = builtinModules;\n\nModule._cache = ObjectCreate(null);\nModule._pathCache = ObjectCreate(null);\nModule._extensions = ObjectCreate(null);\nlet modulePaths = [];\nModule.globalPaths = [];\n\nlet patched = false;\n\n// eslint-disable-next-line func-style\nlet wrap = function(script) {\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\nfunction getModuleParent() {\n  return moduleParentCache.get(this);\n}\n\nfunction setModuleParent(value) {\n  moduleParentCache.set(this\x2C value);\n}\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  get: pendingDeprecation ? deprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : getModuleParent\x2C\n  set: pendingDeprecation ? deprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\n  ) : setModuleParent\x2C\n});\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nconst packageJsonCache = new SafeMap();\n\nfunction readPackage(requestPath) {\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\n\n  const existing = packageJsonCache.get(jsonPath);\n  if (existing !== undefined) return existing;\n\n  const result = packageJsonReader.read(jsonPath);\n  const json = result.containsKeys === false ? '{}' : result.string;\n  if (json === undefined) {\n    packageJsonCache.set(jsonPath\x2C false);\n    return false;\n  }\n\n  try {\n    const parsed = JSONParse(json);\n    const filtered = {\n      name: parsed.name\x2C\n      main: parsed.main\x2C\n      exports: parsed.exports\x2C\n      imports: parsed.imports\x2C\n      type: parsed.type\n    };\n    packageJsonCache.set(jsonPath\x2C filtered);\n    return filtered;\n  } catch (e) {\n    e.path = jsonPath;\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\n    throw e;\n  }\n}\n\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\n  let separatorIndex;\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\n      return false;\n    const pjson = readPackage(checkPath + sep);\n    if (pjson) return {\n      data: pjson\x2C\n      path: checkPath\x2C\n    };\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const pkg = readPackage(requestPath)?.main;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath\x2C 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\n      );\n    }\n  }\n  return actual;\n}\n\n// In order to minimize unnecessary lstat() calls\x2C\n// this cache is a list of known-real paths.\n// Set to an empty Map to reset.\nconst realpathCache = new SafeMap();\n\n// Check if the file exists and is not a directory\n// if using --preserve-symlinks and isMain is false\x2C\n// keep symlinks intact\x2C otherwise resolve to the\n// absolute realpath.\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  if (preserveSymlinks && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\n// Given a path\x2C check if the file exists with any of the set extensions\nfunction tryExtensions(p\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n// Find the longest (possibly multi-dot) extension registered in\n// Module._extensions\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) continue; // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) return currentExtension;\n  }\n  return '.js';\n}\n\nfunction trySelfParentPath(parent) {\n  if (!parent) return false;\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) return false;\n\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\n  if (!pkg || pkg.exports === undefined) return false;\n  if (typeof pkg.name !== 'string') return false;\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n    throw e;\n  }\n}\n\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\n  if (!name)\n    return;\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = readPackage(pkgPath);\n  if (pkg?.exports != null) {\n    try {\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      throw e;\n    }\n  }\n}\n\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry)\n    return entry;\n\n  let exts;\n  let trailingSlash = request.length > 0 &&\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\n    CHAR_FORWARD_SLASH;\n  if (!trailingSlash) {\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (curPath && stat(curPath) < 1) continue;\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved)\n        return exportsResolved;\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (preserveSymlinks) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (preserveSymlinksMain) {\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the preserveSymlinksMain option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined)\n          exts = ObjectKeys(Module._extensions);\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined)\n        exts = ObjectKeys(Module._extensions);\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n  }\n\n  return false;\n};\n\n// 'node_modules' character codes reversed\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\n      return [from + 'node_modules'];\n\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/')\n      return ['/node_modules'];\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (NativeModule.canBeRequiredByUsers(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    let paths = modulePaths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') return target[prop];\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\n});\n\nfunction getExportsForCircularRequire(module) {\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n// Check the cache for the requested file.\n// 1. If a module already exists in the cache: return its exports object.\n// 2. If the module is native: call\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\n//    Then have it load  the file contents before returning its exports\n//    object.\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded)\n          return getExportsForCircularRequire(cachedModule);\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(filename\x2C 5);\n\n    const module = loadNativeModule(id\x2C request);\n    if (!module?.canBeRequiredByUsers) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\n    }\n\n    return module.exports;\n  }\n\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      const parseCachedModule = cjsParseCache.get(cachedModule);\n      if (!parseCachedModule || parseCachedModule.loaded)\n        return getExportsForCircularRequire(cachedModule);\n      parseCachedModule.loaded = true;\n    } else {\n      return cachedModule.exports;\n    }\n  }\n\n  const mod = loadNativeModule(filename\x2C request);\n  if (mod?.canBeRequiredByUsers) return mod.exports;\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (isMain) {\n    process.mainModule = module;\n    module.id = '.';\n  }\n\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\n      NativeModule.canBeRequiredByUsers(request)) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (parent?.filename) {\n    if (request[0] === '#') {\n      const pkg = readPackageScope(parent.filename) || {};\n      if (pkg.data?.imports != null) {\n        try {\n          return finalizeEsmResolution(\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\n            pkg.path);\n        } catch (e) {\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\n            throw createEsmNotFoundErr(request);\n          throw e;\n        }\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\n  if (filename) return filename;\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\n  const { resolved\x2C exact } = match;\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  const filename = fileURLToPath(resolved);\n  let actual = tryFile(filename);\n  if (!exact && !actual) {\n    const exts = ObjectKeys(Module._extensions);\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\n      tryPackage(filename\x2C exts\x2C false\x2C request);\n  }\n  if (actual)\n    return actual;\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path)\n    err.path = path;\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n// Given a file name\x2C pass it to the proper extension handler.\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  const esmLoader = asyncESM.esmLoader;\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache\n  if ((module?.module === undefined ||\n       module.module.getStatus() < kEvaluated) &&\n      !esmLoader.cjsCache.has(this))\n    esmLoader.cjsCache.set(this\x2C exports);\n};\n\n\n// Loads a module at the given file path. Returns that module's\n// `exports` property.\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n\n// Resolved path to process.argv[1] will be lazily placed here\n// (needed for setting breakpoint when called with --inspect-brk)\nlet resolvedArgv;\nlet hasPausedEntry = false;\n\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\n  if (patched) {\n    const wrapper = Module.wrap(content);\n    return vm.runInThisContext(wrapper\x2C {\n      filename\x2C\n      lineOffset: 0\x2C\n      displayErrors: true\x2C\n      importModuleDynamically: async (specifier) => {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\n      }\x2C\n    });\n  }\n  try {\n    return vm.compileFunction(content\x2C [\n      'exports'\x2C\n      'require'\x2C\n      'module'\x2C\n      '__filename'\x2C\n      '__dirname'\x2C\n    ]\x2C {\n      filename\x2C\n      importModuleDynamically(specifier) {\n        const loader = asyncESM.esmLoader;\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\n      }\x2C\n    });\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance)\n      enrichCJSError(err\x2C content);\n    throw err;\n  }\n}\n\n// Run the file contents in the correct scope or sandbox. Expose\n// the correct helper variables (require\x2C module\x2C exports) to\n// the file.\n// Returns exception\x2C if any.\nModule.prototype._compile = function(content\x2C filename) {\n  let moduleURL;\n  let redirects;\n  if (policy?.manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  maybeCacheSourceMap(filename\x2C content\x2C this);\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) statCache = new SafeMap();\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  hasLoadedAnyUserCJSModule = true;\n  if (requireDepth === 0) statCache = null;\n  return result;\n};\n\n// Native extension for .js\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const cached = cjsParseCache.get(module);\n  let content;\n  if (cached?.source) {\n    content = cached.source;\n    cached.source = undefined;\n  } else {\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = readPackageScope(filename);\n    // Function require shouldn't be used in ES modules.\n    if (pkg?.data?.type === 'module') {\n      const parent = moduleParentCache.get(module);\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = hasEsmSyntax(content);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {}\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n  module._compile(content\x2C filename);\n};\n\n\n// Native extension for .json\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  if (policy?.manifest) {\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    module.exports = JSONParse(stripBOM(content));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n\n// Native extension for .node\nModule._extensions['.node'] = function(module\x2C filename) {\n  if (policy?.manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURLInstance(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests))\n    return;\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++)\n    parent.require(requests[n]);\n  isPreloading = false;\n};\n\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of NativeModule.map.values()) {\n    if (mod.canBeRequiredByUsers) {\n      mod.syncExports();\n    }\n  }\n};\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0x3ba9c5adf8c6,99,0,40182,C0O0C4O40182,,
code-creation,Function,10,74842,0x3ba9c5ae1666,2547, node:internal/modules/cjs/loader:1:1,0x3ba9c5adf840,~
code-source-info,0x3ba9c5ae
tick,0x7ff81f269ae6,75128,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x7ff81f29ed3e,75150,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x10835648c,75160,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x7ff81f2b6797,75169,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,75373,0x3ba9c5ae55f6,5, node:internal/modules/package_json_reader:1:1,0x3ba9c5ae5450,~
script-source,100,node:internal/modules/package_json_reader,'use strict';\n\nconst { SafeMap } = primordials;\nconst { internalModuleReadJSON } = internalBinding('fs');\nconst { pathToFileURL } = require('url');\nconst { toNamespacedPath } = require('path');\n\nconst cache = new SafeMap();\n\nlet manifest;\n\n/**\n *\n * @param {string} jsonPath\n */\nfunction read(jsonPath) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\n  );\n  const result = { string\x2C containsKeys };\n  const { getOptionValue } = require('internal/options');\n  if (string !== undefined) {\n    if (manifest === undefined) {\n      manifest = getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').manifest :\n        null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL\x2C string);\n    }\n  }\n  cache.set(jsonPath\x2C result);\n  return result;\n}\n\nmodule.exports = { read };\n
code-source-info,0x3ba9c5ae55f6,100,0,983,C0O0C4O983,,
code-creation,Function,10,75505,0x3ba9c5ae5746,113, node:internal/modules/package_json_reader:1:1,0x3ba9c5ae5570,~
code-source-info,0x3ba9c5ae5746,100,0,983,C0O0C29O23C34O83C37O83C42O56C48O132C54O132C59O114C65O177C71O177C76O156C82O209C84O209C89O209C91O229C92O229C94O956C101O975C107O971C112O982,,
code-creation,Eval,10,75713,0x3ba9c5ae5f16,5, node:internal/process/esm_loader:1:1,0x3ba9c5ae5d20,~
script-source,101,node:internal/process/esm_loader,'use strict';\n\nconst {\n  ObjectCreate\x2C\n} = primordials;\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n} = require('internal/errors').codes;\nconst { ESMLoader } = require('internal/modules/esm/loader');\nconst {\n  hasUncaughtExceptionCaptureCallback\x2C\n} = require('internal/process/execution');\nconst { pathToFileURL } = require('internal/url');\nconst {\n  getModuleFromWrap\x2C\n} = require('internal/vm/module');\n\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { initializeImportMeta } = callbackMap.get(wrap);\n    if (initializeImportMeta !== undefined) {\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\n    }\n  }\n};\n\nexports.importModuleDynamicallyCallback =\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\n  const { callbackMap } = internalBinding('module_wrap');\n  if (callbackMap.has(wrap)) {\n    const { importModuleDynamically } = callbackMap.get(wrap);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\n    }\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n};\n\nconst esmLoader = new ESMLoader();\n\nexports.esmLoader = esmLoader;\n\n/**\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\n * @returns {void}\n */\nasync function initializeLoader() {\n  const { getOptionValue } = require('internal/options');\n  // customLoaders CURRENTLY can be only 1 (a string)\n  // Once chaining is implemented\x2C it will be string[]\n  const customLoaders = getOptionValue('--experimental-loader');\n\n  if (!customLoaders.length) return;\n\n  const { emitExperimentalWarning } = require('internal/util');\n  emitExperimentalWarning('--experimental-loader');\n\n  let cwd;\n  try {\n    cwd = process.cwd() + '/';\n  } catch {\n    cwd = 'file:///';\n  }\n\n  // A separate loader instance is necessary to avoid cross-contamination\n  // between internal Node.js and userland. For example\x2C a module with internal\n  // state (such as a counter) should be independent.\n  const internalEsmLoader = new ESMLoader();\n\n  // Importation must be handled by internal loader to avoid poluting userland\n  const exports = await internalEsmLoader.import(\n    customLoaders\x2C\n    pathToFileURL(cwd).href\x2C\n    ObjectCreate(null)\x2C\n  );\n\n  // Hooks must then be added to external/public loader\n  // (so they're triggered in userland)\n  await esmLoader.addCustomLoaders(exports);\n}\n\nexports.loadESM = async function loadESM(callback) {\n  try {\n    await initializeLoader();\n    await callback(esmLoader);\n  } catch (err) {\n    if (hasUncaughtExceptionCaptureCallback()) {\n      process._fatalException(err);\n      return;\n    }\n    internalBinding('errors').triggerUncaughtException(\n      err\x2C\n      true /* fromPromise */\n    );\n  }\n};\n
code-source-info,0x3ba9c5ae5f16,101,0,2883,C0O0C4O2883,,
code-creation,Function,10,76018,0x3ba9c5ae61b6,182, node:internal/process/esm_loader:1:1,0x3ba9c5ae5e90,~
code-source-info,0x3ba9c5ae61b6,101,0,2883,C0O0C44O25C50O111C56O111C61O137C66O67C72O167C78O167C83O153C89O258C95O258C100O217C106O323C112O323C117O305C123O381C129O381C134O358C140O413C144O448C148O749C152O789C156O1259C159O1259C164O1259C166O1277C168O1295C172O2528C176O2544C181O2882,,
tick,0x1085a0e23,76201,1,0x10843a650,2,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,76420,0x3ba9c5ae721e,5, node:internal/modules/esm/loader:1:1,0x3ba9c5ae6e20,~
script-source,102,node:internal/modules/esm/loader,'use strict';\n\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\nrequire('internal/modules/cjs/loader');\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectCreate\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeWeakMap\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\n  ERR_INVALID_RETURN_VALUE\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\n} = require('internal/errors').codes;\nconst { pathToFileURL\x2C isURLInstance } = require('internal/url');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst ModuleMap = require('internal/modules/esm/module_map');\nconst ModuleJob = require('internal/modules/esm/module_job');\n\nconst {\n  defaultResolve\x2C\n  DEFAULT_CONDITIONS\x2C\n} = require('internal/modules/esm/resolve');\nconst { defaultLoad } = require('internal/modules/esm/load');\nconst { translators } = require(\n  'internal/modules/esm/translators');\nconst { getOptionValue } = require('internal/options');\n\n/**\n * An ESMLoader instance is used as the main entry point for loading ES modules.\n * Currently\x2C this is a singleton -- there is only one used for loading\n * the main module and everything in its dependency graph.\n */\nclass ESMLoader {\n  /**\n   * Prior to ESM loading. These are called once before any modules are started.\n   * @private\n   * @property {function[]} globalPreloaders First-in-first-out list of\n   * preload hooks.\n   */\n  #globalPreloaders = [];\n\n  /**\n   * Phase 2 of 2 in ESM loading.\n   * @private\n   * @property {function[]} loaders First-in-first-out list of loader hooks.\n   */\n  #loaders = [\n    defaultLoad\x2C\n  ];\n\n  /**\n   * Phase 1 of 2 in ESM loading.\n   * @private\n   * @property {function[]} resolvers First-in-first-out list of resolver hooks\n   */\n  #resolvers = [\n    defaultResolve\x2C\n  ];\n\n  /**\n   * Map of already-loaded CJS modules to use\n   */\n  cjsCache = new SafeWeakMap();\n\n  /**\n   * The index for assigning unique URLs to anonymous module evaluation\n   */\n  evalIndex = 0;\n\n  /**\n   * Registry of loaded modules\x2C akin to `require.cache`\n   */\n  moduleMap = new ModuleMap();\n\n  /**\n   * Methods which translate input code or other information into ES modules\n   */\n  translators = translators;\n\n  static pluckHooks({\n    globalPreload\x2C\n    resolve\x2C\n    load\x2C\n    // obsolete hooks:\n    dynamicInstantiate\x2C\n    getFormat\x2C\n    getGlobalPreloadCode\x2C\n    getSource\x2C\n    transformSource\x2C\n  }) {\n    const obsoleteHooks = [];\n    const acceptedHooks = ObjectCreate(null);\n\n    if (getGlobalPreloadCode) {\n      globalPreload ??= getGlobalPreloadCode;\n\n      process.emitWarning(\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\n      );\n    }\n    if (dynamicInstantiate) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'dynamicInstantiate'\n    );\n    if (getFormat) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getFormat'\x2C\n    );\n    if (getSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getSource'\x2C\n    );\n    if (transformSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'transformSource'\x2C\n    );\n\n    if (obsoleteHooks.length) process.emitWarning(\n      `Obsolete loader hook(s) supplied and will be ignored: ${\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\n      }`\x2C\n      'DeprecationWarning'\x2C\n    );\n\n    // Use .bind() to avoid giving access to the Loader instance when called.\n    if (globalPreload) {\n      acceptedHooks.globalPreloader =\n        FunctionPrototypeBind(globalPreload\x2C null);\n    }\n    if (resolve) {\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\n    }\n    if (load) {\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\n    }\n\n    return acceptedHooks;\n  }\n\n  /**\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\n   * calls global preload hook(s).\n   * @param {object | object[]} customLoaders A list of exports from\n   * user-defined loaders (as returned by ESMLoader.import()).\n   */\n  async addCustomLoaders(\n    customLoaders = []\x2C\n  ) {\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\n\n    for (let i = 0; i < customLoaders.length; i++) {\n      const exports = customLoaders[i];\n      const {\n        globalPreloader\x2C\n        resolver\x2C\n        loader\x2C\n      } = ESMLoader.pluckHooks(exports);\n\n      if (globalPreloader) ArrayPrototypePush(\n        this.#globalPreloaders\x2C\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\n      );\n      if (resolver) ArrayPrototypePush(\n        this.#resolvers\x2C\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\n      );\n      if (loader) ArrayPrototypePush(\n        this.#loaders\x2C\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\n      );\n    }\n\n    // [1] ensure hook function is not bound to ESMLoader instance\n\n    this.preload();\n  }\n\n  async eval(\n    source\x2C\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\n  ) {\n    const evalInstance = (url) => {\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n      callbackMap.set(module\x2C {\n        importModuleDynamically: (specifier\x2C { url }) => {\n          return this.import(specifier\x2C url);\n        }\n      });\n\n      return module;\n    };\n    const job = new ModuleJob(this\x2C url\x2C evalInstance\x2C false\x2C false);\n    this.moduleMap.set(url\x2C job);\n    const { module } = await job.run();\n\n    return {\n      namespace: module.getNamespace()\x2C\n    };\n  }\n\n  async getModuleJob(specifier\x2C parentURL) {\n    const { format\x2C url } = await this.resolve(specifier\x2C parentURL);\n    let job = this.moduleMap.get(url);\n    // CommonJS will set functions for lazy job evaluation.\n    if (typeof job === 'function') this.moduleMap.set(url\x2C job = job());\n\n    if (job !== undefined) return job;\n\n    const moduleProvider = async (url\x2C isMain) => {\n      const { format: finalFormat\x2C source } = await this.load(url\x2C { format });\n\n      const translator = translators.get(finalFormat);\n\n      if (!translator) throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\n\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\n    };\n\n    const inspectBrk = (\n      parentURL === undefined &&\n      getOptionValue('--inspect-brk')\n    );\n\n    job = new ModuleJob(\n      this\x2C\n      url\x2C\n      moduleProvider\x2C\n      parentURL === undefined\x2C\n      inspectBrk\n    );\n\n    this.moduleMap.set(url\x2C job);\n\n    return job;\n  }\n\n  /**\n   * This method is usually called indirectly as part of the loading processes.\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\n   *\n   * This method must NOT be renamed: it functions as a dynamic import on a\n   * loader module.\n   *\n   * @param {string | string[]} specifiers Path(s) to the module\n   * @param {string} [parentURL] Path of the parent importing the module\n   * @returns {object | object[]} A list of module export(s)\n   */\n  async import(specifiers\x2C parentURL) {\n    const wasArr = ArrayIsArray(specifiers);\n    if (!wasArr) specifiers = [specifiers];\n\n    const count = specifiers.length;\n    const jobs = new Array(count);\n\n    for (let i = 0; i < count; i++) {\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL)\n        .then((job) => job.run())\n        .then(({ module }) => module.getNamespace());\n    }\n\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\n\n    return wasArr ?\n      namespaces :\n      namespaces[0];\n  }\n\n  /**\n   * Provide source that is understood by one of Node's translators.\n   *\n   * The internals of this WILL change when chaining is implemented\x2C\n   * depending on the resolution/consensus from #36954\n   * @param {string} url The URL/path of the module to be loaded\n   * @param {Object} context Metadata about the module\n   * @returns {Object}\n   */\n  async load(url\x2C context = {}) {\n    const defaultLoader = this.#loaders[0];\n\n    const loader = this.#loaders.length === 1 ?\n      defaultLoader :\n      this.#loaders[1];\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\n\n    if (typeof loaded !== 'object') {\n      throw new ERR_INVALID_RETURN_VALUE(\n        'object'\x2C\n        'loader load'\x2C\n        loaded\x2C\n      );\n    }\n\n    const {\n      format\x2C\n      source\x2C\n    } = loaded;\n\n    if (format == null) {\n      const dataUrl = RegExpPrototypeExec(\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n        url\x2C\n      );\n\n      throw new ERR_INVALID_MODULE_SPECIFIER(\n        url\x2C\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\n      );\n    }\n\n    if (typeof format !== 'string') {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'string'\x2C\n        'loader resolve'\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (\n      source != null &&\n      typeof source !== 'string' &&\n      !isAnyArrayBuffer(source) &&\n      !isArrayBufferView(source)\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\n      'loader load'\x2C\n      'source'\x2C\n      source\n    );\n\n    return {\n      format\x2C\n      source\x2C\n    };\n  }\n\n  preload() {\n    const count = this.#globalPreloaders.length;\n    if (!count) return;\n\n    for (let i = 0; i < count; i++) {\n      const preload = this.#globalPreloaders[i]();\n\n      if (preload == null) return;\n\n      if (typeof preload !== 'string') {\n        throw new ERR_INVALID_RETURN_VALUE(\n          'string'\x2C\n          'loader globalPreloadCode'\x2C\n          preload\x2C\n        );\n      }\n      const { compileFunction } = require('vm');\n      const preloadInit = compileFunction(\n        preload\x2C\n        ['getBuiltin']\x2C\n        {\n          filename: '<preload>'\x2C\n        }\n      );\n      const { NativeModule } = require('internal/bootstrap/loaders');\n\n      FunctionPrototypeCall(preloadInit\x2C globalThis\x2C (builtinName) => {\n        if (NativeModule.canBeRequiredByUsers(builtinName)) {\n          return require(builtinName);\n        }\n        throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\n      });\n    }\n  }\n\n  /**\n   * Resolve the location of the module.\n   *\n   * The internals of this WILL change when chaining is implemented\x2C\n   * depending on the resolution/consensus from #36954\n   * @param {string} originalSpecifier The specified URL path of the module to\n   * be resolved\n   * @param {String} parentURL The URL path of the module's parent\n   * @returns {{ url: String }}\n   */\n  async resolve(originalSpecifier\x2C parentURL) {\n    const isMain = parentURL === undefined;\n\n    if (\n      !isMain &&\n      typeof parentURL !== 'string' &&\n      !isURLInstance(parentURL)\n    ) throw new ERR_INVALID_ARG_TYPE(\n      'parentURL'\x2C\n      ['string'\x2C 'URL']\x2C\n      parentURL\x2C\n    );\n\n    const conditions = DEFAULT_CONDITIONS;\n\n    const defaultResolver = this.#resolvers[0];\n\n    const resolver = this.#resolvers.length === 1 ?\n      defaultResolver :\n      this.#resolvers[1];\n    const resolution = await resolver(\n      originalSpecifier\x2C\n      {\n        conditions\x2C\n        parentURL\x2C\n      }\x2C\n      defaultResolver\x2C\n    );\n\n    if (typeof resolution !== 'object') {\n      throw new ERR_INVALID_RETURN_VALUE(\n        'object'\x2C\n        'loader resolve'\x2C\n        resolution\x2C\n      );\n    }\n\n    const { format\x2C url } = resolution;\n\n    if (\n      format != null &&\n      typeof format !== 'string'\n    ) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'string'\x2C\n        'loader resolve'\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n    if (typeof url !== 'string') {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'string'\x2C\n        'loader resolve'\x2C\n        'url'\x2C\n        url\x2C\n      );\n    }\n\n    return {\n      format\x2C\n      url\x2C\n    };\n  }\n}\n\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\n\nexports.ESMLoader = ESMLoader;\n
code-source-info,0x3ba9c5ae721e,102,0,11918,C0O0C4O11918,,
code-creation,Function,10,77608,0x3ba9c5ae7966,530, node:internal/modules/esm/loader:1:1,0x3ba9c5ae7198,~
code-source-info,0x3ba9c5ae7966,102,0,11918,C0O0C104O79C110O79C114O130C120O139C126O155C132O177C138O199C144O224C150O249C156O265C161O289C167O303C173O326C179O347C185O362C191O578C197O578C202O604C207O402C213O426C219O451C225O483C231O520C237O548C243O653C249O653C254O620C260O635C266O731C272O731C277O688C283O708C289O781C295O781C299O781C301O843C307O843C311O843C313O940C319O940C324O898C330O916C336O1005C342O1005C347O989C353O1067C359O1067C364O1051C370O1142C376O1142C381O1123C510O11868C517O11837C522O11887C524O11905C529O11917,,
code-creation,Function,10,77668,0x3ba9c5ae7d5e,139,<instance_members_initializer> node:internal/modules/esm/loader:59:3,0x3ba9c5ae7520,~
code-source-info,0x3ba9c5ae7d5e,102,1611,2404,C3O1631C17O1786C28O1792C45O1966C56O1972C73O2065C80O2065C94O2183C104O2270C111O2270C125O2393C138O2404,,
tick,0x7ff81f29eef9,77710,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,77868,0x3ba9c5ae9126,5, node:internal/modules/esm/module_map:1:1,0x3ba9c5ae8f58,~
script-source,103,node:internal/modules/esm/module_map,'use strict';\n\nconst ModuleJob = require('internal/modules/esm/module_job');\nconst {\n  SafeMap\x2C\n} = primordials;\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n// Tracks the state of the loader-level module cache\nclass ModuleMap extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  get(url) {\n    validateString(url\x2C 'url');\n    return super.get(url);\n  }\n  set(url\x2C job) {\n    validateString(url\x2C 'url');\n    if (job instanceof ModuleJob !== true &&\n        typeof job !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\n    }\n    debug(`Storing ${url} in ModuleMap`);\n    return super.set(url\x2C job);\n  }\n  has(url) {\n    validateString(url\x2C 'url');\n    return super.has(url);\n  }\n}\nmodule.exports = ModuleMap;\n
code-source-info,0x3ba9c5ae9126,103,0,955,C0O0C4O955,,
code-creation,Function,10,77993,0x3ba9c5ae9546,149, node:internal/modules/esm/module_map:1:1,0x3ba9c5ae90a0,~
code-source-info,0x3ba9c5ae9546,103,0,955,C0O0C17O33C20O33C24O33C26O87C31O125C34O125C39O158C52O159C58O125C60O236C63O236C68O262C73O211C79O297C82O297C87O278C97O407C141O927C143O942C148O954,,
code-creation,Eval,10,78267,0x3ba9c5ae9f6e,5, node:internal/modules/esm/module_job:1:1,0x3ba9c5ae9c88,~
script-source,104,node:internal/modules/esm/module_job,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSome\x2C\n  FunctionPrototype\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  PromiseResolve\x2C\n  PromisePrototypeCatch\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst { ModuleWrap } = internalBinding('module_wrap');\n\nconst { decorateErrorStack } = require('internal/util');\nconst {\n  getSourceMapsEnabled\x2C\n} = require('internal/source_map/source_map_cache');\nconst assert = require('internal/assert');\nconst resolvedPromise = PromiseResolve();\n\nconst noop = FunctionPrototype;\n\nlet hasPausedEntry = false;\n\nconst CJSGlobalLike = [\n  'require'\x2C\n  'module'\x2C\n  'exports'\x2C\n  '__filename'\x2C\n  '__dirname'\x2C\n];\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\n  ArrayPrototypeSome(\n    CJSGlobalLike\x2C\n    (globalLike) => errorMessage === `${globalLike} is not defined`\n  );\n\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\n * its dependencies\x2C over time. */\nclass ModuleJob {\n  // `loader` is the Loader instance used for loading dependencies.\n  // `moduleProvider` is a function\n  constructor(loader\x2C url\x2C moduleProvider\x2C isMain\x2C inspectBrk) {\n    this.loader = loader;\n    this.isMain = isMain;\n    this.inspectBrk = inspectBrk;\n\n    this.module = undefined;\n    // Expose the promise to the ModuleWrap directly for linking below.\n    // `this.module` is also filled in below.\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\n\n    // Wait for the ModuleWrap instance being linked with all dependencies.\n    const link = async () => {\n      this.module = await this.modulePromise;\n      assert(this.module instanceof ModuleWrap);\n\n      // Explicitly keeping track of dependency jobs is needed in order\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\n      // so that circular dependencies can't cause a deadlock by two of\n      // these `link` callbacks depending on each other.\n      const dependencyJobs = [];\n      const promises = this.module.link(async (specifier) => {\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url);\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\n        const job = await jobPromise;\n        return job.modulePromise;\n      });\n\n      if (promises !== undefined)\n        await PromiseAll(new SafeArrayIterator(promises));\n\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\n    };\n    // Promise for the list of all dependencyJobs.\n    this.linked = link();\n    // This promise is awaited later anyway\x2C so silence\n    // 'unhandled rejection' warnings.\n    PromisePrototypeCatch(this.linked\x2C noop);\n\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\n    // and module wrapper is instantiated.\n    this.instantiated = undefined;\n  }\n\n  instantiate() {\n    if (this.instantiated === undefined) {\n      this.instantiated = this._instantiate();\n    }\n    return this.instantiated;\n  }\n\n  async _instantiate() {\n    const jobsInGraph = new SafeSet();\n    const addJobsToDependencyGraph = async (moduleJob) => {\n      if (jobsInGraph.has(moduleJob)) {\n        return;\n      }\n      jobsInGraph.add(moduleJob);\n      const dependencyJobs = await moduleJob.linked;\n      return PromiseAll(new SafeArrayIterator(\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\n    };\n    await addJobsToDependencyGraph(this);\n\n    try {\n      if (!hasPausedEntry && this.inspectBrk) {\n        hasPausedEntry = true;\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\n        initWrapper(this.module.instantiate\x2C this.module);\n      } else {\n        this.module.instantiate();\n      }\n    } catch (e) {\n      decorateErrorStack(e);\n      // TODO(@bcoe): Add source map support to exception that occurs as result\n      // of missing named export. This is currently not possible because\n      // stack trace originates in module_job\x2C not the file itself. A hidden\n      // symbol with filename could be set in node_errors.cc to facilitate this.\n      if (!getSourceMapsEnabled() &&\n          StringPrototypeIncludes(e.message\x2C\n                                  ' does not provide an export named')) {\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\n        const parentFileUrl = StringPrototypeReplace(\n          splitStack[0]\x2C\n          /:\\d+$/\x2C\n          ''\n        );\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\n          e.message\x2C\n          /module '(.*)' does not provide an export named '(.+)'/);\n        const { url: childFileURL } = await this.loader.resolve(\n          childSpecifier\x2C parentFileUrl\x2C\n        );\n        const { format } = await this.loader.load(childFileURL);\n\n        if (format === 'commonjs') {\n          const importStatement = splitStack[1];\n          // TODO(@ctavan): The original error stack only provides the single\n          // line which causes the error. For multi-line import statements we\n          // cannot generate an equivalent object destructuring assignment by\n          // just parsing the error stack.\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\n          const destructuringAssignment = oneLineNamedImports &&\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\n          e.message = `Named export '${name}' not found. The requested module` +\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\n            'always be imported via the default export\x2C for example using:' +\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\n              destructuringAssignment ?\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\n          newStack[3] = `SyntaxError: ${e.message}`;\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\n        }\n      }\n      throw e;\n    }\n\n    for (const dependencyJob of jobsInGraph) {\n      // Calling `this.module.instantiate()` instantiates not only the\n      // ModuleWrap in this module\x2C but all modules in the graph.\n      dependencyJob.instantiated = resolvedPromise;\n    }\n  }\n\n  async run() {\n    await this.instantiate();\n    const timeout = -1;\n    const breakOnSigint = false;\n    try {\n      await this.module.evaluate(timeout\x2C breakOnSigint);\n    } catch (e) {\n      if (e?.name === 'ReferenceError' &&\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\n        e.message += ' in ES module scope';\n\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\n          e.message += '\x2C you can use import instead';\n        }\n\n        const packageConfig =\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\n            require('internal/modules/esm/resolve')\n              .getPackageScopeConfig(this.module.url);\n        if (packageConfig.type === 'module') {\n          e.message +=\n            '\\nThis file is being treated as an ES module because it has a ' +\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\n            'to use the \\'.cjs\\' file extension.';\n        }\n      }\n      throw e;\n    }\n    return { module: this.module };\n  }\n}\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\nmodule.exports = ModuleJob;\n
code-source-info,0x3ba9c5ae9f6e,104,0,7692,C0O0C4O7692,,
code-creation,Function,10,79023,0x3ba9c5aea45e,334, node:internal/modules/esm/module_job:1:1,0x3ba9c5ae9ee8,~
code-source-info,0x3ba9c5aea45e,104,0,7692,C0O0C85O25C91O47C97O68C103O90C109O112C114O133C119O157C125O171C130O189C136O214C142O230C148O253C154O274C160O285C166O312C172O336C178O362C184O386C190O454C196O454C201O439C207O518C213O518C218O495C224O580C230O580C235O554C241O644C247O644C251O644C253O696C256O696C258O728C260O728C262O769C263O769C265O799C269O799C271O917C275O917C314O7646C321O7615C326O7664C328O7679C333O7691,,
tick,0x7ff81f29ef74,79118,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae955a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7a8d,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x1086da1e1,79991,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae7aa5,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,80039,0x3ba9c5aed196,5, node:internal/modules/esm/resolve:1:1,0x3ba9c5aecaa0,~
script-source,105,node:internal/modules/esm/resolve,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeShift\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst internalFS = require('internal/fs/utils');\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  realpathSync\x2C\n  statSync\x2C\n  Stats\x2C\n} = require('fs');\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst { sep\x2C relative\x2C resolve } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst typeFlag = getOptionValue('--input-type');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n  ERR_INVALID_PACKAGE_TARGET\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\n\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst userConditions = getOptionValue('--conditions');\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\nconst DEFAULT_CONDITIONS = ObjectFreeze([\n  'node'\x2C\n  'import'\x2C\n  ...addonConditions\x2C\n  ...userConditions\x2C\n]);\n\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\n\n/**\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\n * @typedef {'module' | 'commonjs'} PackageType\n * @typedef {{\n *   exports?: ExportConfig;\n *   name?: string;\n *   main?: string;\n *   type?: PackageType;\n * }} PackageConfig\n */\n\nconst emittedPackageWarnings = new SafeSet();\n\n/**\n * @param {string} match\n * @param {URL} pjsonUrl\n * @param {boolean} isExports\n * @param {string | URL | undefined} base\n * @returns {void}\n */\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\n      '"exports"' : '"imports"'} field module resolution of the package at ${\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0148'\n  );\n}\n\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\n  if (!pendingDeprecation) return;\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0155'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @param {string} main\n * @returns\n */\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\n  const format = defaultGetFormat(url);\n  if (format !== 'module')\n    return;\n  const path = fileURLToPath(url);\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\n  const basePath = fileURLToPath(base);\n  if (main)\n    process.emitWarning(\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\n      `excluding the full filename and extension to the resolved file at "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\n      'deprecated for ES modules.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n  else\n    process.emitWarning(\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\n      } resolving the main entry point "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return DEFAULT_CONDITIONS_SET;\n}\n\nconst realpathCache = new SafeMap();\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\n\n/**\n * @param {string | URL} path\n * @returns {import('fs').Stats}\n */\nconst tryStatSync =\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\n\n/**\n * @param {string} path\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {PackageConfig}\n */\nfunction getPackageConfig(path\x2C specifier\x2C base) {\n  const existing = packageJSONCache.get(path);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const source = packageJsonReader.read(path).string;\n  if (source === undefined) {\n    const packageConfig = {\n      pjsonPath: path\x2C\n      exists: false\x2C\n      main: undefined\x2C\n      name: undefined\x2C\n      type: 'none'\x2C\n      exports: undefined\x2C\n      imports: undefined\x2C\n    };\n    packageJSONCache.set(path\x2C packageConfig);\n    return packageConfig;\n  }\n\n  let packageJSON;\n  try {\n    packageJSON = JSONParse(source);\n  } catch (error) {\n    throw new ERR_INVALID_PACKAGE_CONFIG(\n      path\x2C\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\n      error.message\n    );\n  }\n\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\n  const { exports } = packageJSON;\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\n  if (typeof main !== 'string') main = undefined;\n  if (typeof name !== 'string') name = undefined;\n  // Ignore unknown types for forwards compatibility\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\n\n  const packageConfig = {\n    pjsonPath: path\x2C\n    exists: true\x2C\n    main\x2C\n    name\x2C\n    type\x2C\n    exports\x2C\n    imports\x2C\n  };\n  packageJSONCache.set(path\x2C packageConfig);\n  return packageConfig;\n}\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\n      break;\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\n                                           resolved);\n    if (packageConfig.exists) return packageConfig;\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check "/package.json" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\n  }\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  const packageConfig = {\n    pjsonPath: packageJSONPath\x2C\n    exists: false\x2C\n    main: undefined\x2C\n    name: undefined\x2C\n    type: 'none'\x2C\n    exports: undefined\x2C\n    imports: undefined\x2C\n  };\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\n  return packageConfig;\n}\n\n/**\n * @param {string | URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\n * 5. NOT_FOUND\n * @param {URL} packageJSONUrl\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\n  let guess;\n  if (packageConfig.main !== undefined) {\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\n                                   packageJSONUrl))) {\n      return guess;\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\n                                          packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\n                                        packageJSONUrl)));\n    else guess = undefined;\n    if (guess) {\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\n                                 packageConfig.main);\n      return guess;\n    }\n    // Fallthrough.\n  }\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\n  // So fs.\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\n  else guess = undefined;\n  if (guess) {\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\n    return guess;\n  }\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensionsWithTryExactName(search) {\n  if (fileExists(search)) return search;\n  return resolveExtensions(search);\n}\n\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveExtensions(search) {\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\n    if (fileExists(guess)) return guess;\n  }\n  return undefined;\n}\n\n/**\n * @param {URL} search\n * @returns {URL | undefined}\n */\nfunction resolveDirectoryEntry(search) {\n  const dirPath = fileURLToPath(search);\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\n  if (fileExists(pkgJsonPath)) {\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\n    if (pkgJson.containsKeys) {\n      const { main } = JSONParse(pkgJson.string);\n      if (main != null) {\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\n        return resolveExtensionsWithTryExactName(mainUrl);\n      }\n    }\n  }\n  return resolveExtensions(new URL('index'\x2C search));\n}\n\nconst encodedSepRegEx = /%2F|%2C/i;\n/**\n * @param {URL} resolved\n * @param {string | URL | undefined} base\n * @returns {URL | undefined}\n */\nfunction finalizeResolution(resolved\x2C base) {\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\n      fileURLToPath(base));\n\n  const path = fileURLToPath(resolved);\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\n    let file = resolveExtensionsWithTryExactName(resolved);\n    if (file !== undefined) return file;\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\n      if (file !== undefined) return file;\n    } else {\n      return resolveDirectoryEntry(resolved) || resolved;\n    }\n    throw new ERR_MODULE_NOT_FOUND(\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\n  }\n\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\n    StringPrototypeSlice(path\x2C -1) : path);\n  if (stats.isDirectory()) {\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\n    err.url = String(resolved);\n    throw err;\n  } else if (!stats.isFile()) {\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\n  }\n\n  return resolved;\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\n    fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\n    base && fileURLToPath(base));\n}\n\n/**\n *\n * @param {string | URL} subpath\n * @param {URL} packageJSONUrl\n * @param {boolean} internal\n * @param {string | URL | undefined} base\n */\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\n  const reason = `request is not a valid subpath for the "${internal ?\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\n                                         base && fileURLToPath(base));\n}\n\nfunction throwInvalidPackageTarget(\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target\x2C null\x2C '');\n  } else {\n    target = `${target}`;\n  }\n  throw new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\n    internal\x2C base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\nconst patternRegEx = /\\*/g;\n\nfunction resolvePackageTargetString(\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (!StringPrototypeStartsWith(target\x2C './')) {\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\n        !StringPrototypeStartsWith(target\x2C '/')) {\n      let isURL = false;\n      try {\n        new URL(target);\n        isURL = true;\n      } catch {}\n      if (!isURL) {\n        const exportTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target + subpath;\n        return packageResolve(exportTarget\x2C packageJSONUrl\x2C conditions);\n      }\n    }\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  const resolved = new URL(target\x2C packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (subpath === '') return resolved;\n\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (pattern)\n    return new URL(RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C\n                                                () => subpath));\n  return new URL(subpath\x2C resolved);\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) return false;\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\n                              base\x2C pattern\x2C internal\x2C conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\n      conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0)\n      return null;\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolved;\n      try {\n        resolved = resolvePackageTarget(\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\n          internal\x2C conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\n          continue;\n        throw e;\n      }\n      if (resolved === undefined)\n        continue;\n      if (resolved === null) {\n        lastException = null;\n        continue;\n      }\n      return resolved;\n    }\n    if (lastException === undefined || lastException === null)\n      return lastException;\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\n          '"exports" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolved = resolvePackageTarget(\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\n          pattern\x2C internal\x2C conditions);\n        if (resolved === undefined)\n          continue;\n        return resolved;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\n                            base);\n}\n\n/**\n *\n * @param {Exports} exports\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @returns\n */\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\n  if (typeof exports !== 'object' || exports === null) return false;\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * @param {URL} packageJSONUrl\n * @param {string} packageSubpath\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\n  let exports = packageConfig.exports;\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\n    exports = { '.': exports };\n\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\n    const target = exports[packageSubpath];\n    const resolved = resolvePackageTarget(\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\n    );\n    if (resolved === null || resolved === undefined)\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    return { resolved\x2C exact: true };\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath;\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n    if (patternIndex !== -1 &&\n        StringPrototypeStartsWith(packageSubpath\x2C\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\n                                            true\x2C base);\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n      if (packageSubpath.length >= key.length &&\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n        bestMatch = key;\n        bestMatchSubpath = StringPrototypeSlice(\n          packageSubpath\x2C patternIndex\x2C\n          packageSubpath.length - patternTrailer.length);\n      }\n    } else if (key[key.length - 1] === '/' &&\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\n      patternKeyCompare(bestMatch\x2C key) === 1) {\n      bestMatch = key;\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\n    const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\n                                          bestMatchSubpath\x2C bestMatch\x2C base\x2C\n                                          pattern\x2C false\x2C conditions);\n    if (resolved === null || resolved === undefined)\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    if (!pattern)\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\n    return { resolved\x2C exact: pattern };\n  }\n\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n}\n\nfunction patternKeyCompare(a\x2C b) {\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLenA > baseLenB) return -1;\n  if (baseLenB > baseLenA) return 1;\n  if (aPatternIndex === -1) return 1;\n  if (bPatternIndex === -1) return -1;\n  if (a.length > b.length) return -1;\n  if (b.length > a.length) return 1;\n  return 0;\n}\n\n/**\n * @param {string} name\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns\n */\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\n          !StringPrototypeIncludes(name\x2C '*') &&\n          !StringPrototypeEndsWith(name\x2C '/')) {\n        const resolved = resolvePackageTarget(\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\n        );\n        if (resolved !== null)\n          return { resolved\x2C exact: true };\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath;\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n          if (patternIndex !== -1 &&\n              StringPrototypeStartsWith(name\x2C\n                                        StringPrototypeSlice(key\x2C 0\x2C\n                                                             patternIndex))) {\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n            if (name.length >= key.length &&\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n              bestMatch = key;\n              bestMatchSubpath = StringPrototypeSlice(\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\n            }\n          } else if (key[key.length - 1] === '/' &&\n            StringPrototypeStartsWith(name\x2C key) &&\n            patternKeyCompare(bestMatch\x2C key) === 1) {\n            bestMatch = key;\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\n          const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\n                                                bestMatchSubpath\x2C bestMatch\x2C\n                                                base\x2C pattern\x2C true\x2C\n                                                conditions);\n          if (resolved !== null) {\n            if (!pattern)\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\n            return { resolved\x2C exact: pattern };\n          }\n        }\n      }\n    }\n  }\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * @param {URL} url\n * @returns {PackageType}\n */\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type;\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\n */\nfunction parsePackageName(specifier\x2C base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier\x2C '/'\x2C separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // separators.\n  for (let i = 0; i < packageName.length; i++) {\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\n      validPackageName = false;\n      break;\n    }\n  }\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier\x2C separatorIndex));\n\n  return { packageName\x2C packageSubpath\x2C isScoped };\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageResolve(specifier\x2C base\x2C conditions) {\n  const { packageName\x2C packageSubpath\x2C isScoped } =\n    parsePackageName(specifier\x2C base);\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (packageConfig.name === packageName &&\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\n      ).resolved;\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\n                                                  packageJSONPath.length - 13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json'\x2C packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\n      ).resolved;\n    if (packageSubpath === '.')\n      return legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base);\n    return new URL(packageSubpath\x2C packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  // eslint can't handle the above code.\n  // eslint-disable-next-line no-unreachable\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true;\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false;\n  if (specifier[0] === '/') return true;\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction moduleResolve(specifier\x2C base\x2C conditions) {\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL(specifier\x2C base);\n  } else if (specifier[0] === '#') {\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch {\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\n    }\n  }\n  return finalizeResolution(resolved\x2C base);\n}\n\n/**\n * Try to resolve an import as a CommonJS module\n * @param {string} specifier\n * @param {string} parentURL\n * @returns {boolean|string}\n */\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent\x2C null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      found = relative(parent\x2C found);\n      // Add '.separator if the path does not start with '..separator'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\n        found = `.${sep}${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\n      const index = StringPrototypeIndexOf(found\x2C pkg);\n      if (index !== -1) {\n        found = StringPrototypeSlice(found\x2C index);\n      }\n    }\n    // Normalize the path separator to give a valid suggestion\n    // on Windows\n    if (process.platform === 'win32') {\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\n                                           found\x2C '/');\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\n  let { parentURL\x2C conditions } = context;\n  if (parentURL && policy?.manifest) {\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\n    if (redirects) {\n      const { resolve\x2C reaction } = redirects;\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\n      let missing = true;\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        return { url: href };\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          parentURL\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\n        );\n      }\n    }\n  }\n  let parsed;\n  try {\n    parsed = new URL(specifier);\n    if (parsed.protocol === 'data:') {\n      return {\n        url: specifier\n      };\n    }\n  } catch {}\n  if (parsed && parsed.protocol === 'node:')\n    return { url: specifier };\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\n    return {\n      url: 'node:' + specifier\n    };\n  }\n  if (parentURL && StringPrototypeStartsWith(parentURL\x2C 'data:')) {\n    // This is gonna blow up\x2C we want the error\n    new URL(specifier\x2C parentURL);\n  }\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\n\n    // This is the initial entry point to the program\x2C and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\n    // input\x2C to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\n    // entry point\x2C etc.).\n    if (typeFlag)\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions);\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\n      if (found) {\n        // Modify the stack and message string to include the hint\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\n        const hint = `Did you mean to import ${found}?`;\n        error.stack =\n          ArrayPrototypeShift(lines) + '\\n' +\n          hint + '\\n' +\n          ArrayPrototypeJoin(lines\x2C '\\n');\n        error.message += `\\n${hint}`;\n      }\n    }\n    throw error;\n  }\n\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\n    const urlPath = fileURLToPath(url);\n    const real = realpathSync(urlPath\x2C {\n      [internalFS.realpathCacheKey]: realpathCache\n    });\n    const old = url;\n    url = pathToFileURL(\n      real + (StringPrototypeEndsWith(urlPath\x2C sep) ? '/' : ''));\n    url.search = old.search;\n    url.hash = old.hash;\n  }\n\n  return { url: `${url}` };\n}\n\nmodule.exports = {\n  DEFAULT_CONDITIONS\x2C\n  defaultResolve\x2C\n  encodedSepRegEx\x2C\n  getPackageScopeConfig\x2C\n  getPackageType\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\n};\n\n// cycle\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\n
code-source-info,0x3ba9c5aed196,105,0,36468,C0O0C4O36468,,
code-creation,Function,10,83435,0x3ba9c5aee136,1086, node:internal/modules/esm/resolve:1:1,0x3ba9c5aed110,~
code-source-info,0x3ba9c5aee
tick,0x7ff81f29ed86,83582,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae7aa5,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x7ff81f195a87,83607,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae7aa5,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x1089d5b5a,83808,1,0x10843a650,2,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5aee567,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7aa5,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,83975,0x3ba9c5af131e,5, node:internal/modules/esm/get_format:1:1,0x3ba9c5af10f8,~
script-source,106,node:internal/modules/esm/get_format,'use strict';\nconst {\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n} = primordials;\nconst { extname } = require('path');\nconst { getOptionValue } = require('internal/options');\n\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\nconst experimentalSpecifierResolution =\n  getOptionValue('--experimental-specifier-resolution');\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\nconst { getPackageType } = require('internal/modules/esm/resolve');\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\n\nconst extensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'module'\x2C\n  '.mjs': 'module'\n};\n\nconst legacyExtensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'commonjs'\x2C\n  '.json': 'commonjs'\x2C\n  '.mjs': 'module'\x2C\n  '.node': 'commonjs'\n};\n\nif (experimentalWasmModules)\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\n\nif (experimentalJsonModules)\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\n\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\n  'data:'(parsed) {\n    const { 1: mime } = RegExpPrototypeExec(\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n      parsed.pathname\x2C\n    ) || [\x2C null];\n    const format = ({\n      '__proto__': null\x2C\n      'text/javascript': 'module'\x2C\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\n    })[mime] || null;\n\n    return format;\n  }\x2C\n  'file:'(parsed\x2C url) {\n    const ext = extname(parsed.pathname);\n    let format;\n\n    if (ext === '.js') {\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\n    } else {\n      format = extensionFormatMap[ext];\n    }\n    if (!format) {\n      if (experimentalSpecifierResolution === 'node') {\n        process.emitWarning(\n          'The Node.js specifier resolution in ESM is experimental.'\x2C\n          'ExperimentalWarning');\n        format = legacyExtensionFormatMap[ext];\n      } else {\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\n      }\n    }\n\n    return format || null;\n  }\x2C\n  'node:'() { return 'builtin'; }\x2C\n});\n\nfunction defaultGetFormat(url\x2C context) {\n  const parsed = new URL(url);\n\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\n    protocolHandlers[parsed.protocol](parsed\x2C url) :\n    null;\n}\n\nmodule.exports = {\n  defaultGetFormat\x2C\n  extensionFormatMap\x2C\n  legacyExtensionFormatMap\x2C\n};\n
code-source-info,0x3ba9c5af131e,106,0,2630,C0O0C4O2630,,
code-creation,Function,10,84249,0x3ba9c5af174e,314, node:internal/modules/esm/get_format:1:1,0x3ba9c5af1298,~
code-source-info,0x3ba9c5af174e,106,0,2630,C0O0C53O24C58O40C63O56C69O89C75O147C78O147C83O135C89O191C92O191C97O172C102O253C105O253C109O253C111O342C114O342C118O342C120O429C123O429C127O429C129O503C132O503C137O484C143O575C146O575C151O552C157O557C163O639C166O639C171O665C176O608C182O701C186O701C188O821C192O821C194O956C198O987C207O1051C213O1015C217O1062C221O1093C230O1157C236O1121C240O1193C242O1206C252O1230C260O1646C268O2284C276O1193C281O1193C283O2538C290O2559C296O2579C302O2601C308O2553C313O2629,,
code-creation,Eval,10,84501,0x3ba9c5af20de,5, node:internal/modules/esm/load:1:1,0x3ba9c5af1f68,~
script-source,107,node:internal/modules/esm/load,'use strict';\n\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\nconst { translators } = require('internal/modules/esm/translators');\n\nasync function defaultLoad(url\x2C context) {\n  let {\n    format\x2C\n    source\x2C\n  } = context;\n\n  if (!translators.has(format)) format = defaultGetFormat(url);\n\n  if (\n    format === 'builtin' ||\n    format === 'commonjs'\n  ) {\n    source = null;\n  } else if (source == null) {\n    source = await defaultGetSource(url\x2C { format });\n  }\n\n  return {\n    format\x2C\n    source\x2C\n  };\n}\n\nmodule.exports = {\n  defaultLoad\x2C\n};\n
code-source-info,0x3ba9c5af20de,107,0,643,C0O0C4O643,,
code-creation,Function,10,84603,0x3ba9c5af2226,80, node:internal/modules/esm/load:1:1,0x3ba9c5af2058,~
code-source-info,0x3ba9c5af2226,107,0,643,C0O0C19O44C22O44C27O23C33O117C36O117C41O96C47O185C50O185C55O169C61O606C68O627C74O621C79O642,,
code-creation,Eval,10,84747,0x3ba9c5af278e,5, node:internal/modules/esm/get_source:1:1,0x3ba9c5af25b8,~
script-source,108,node:internal/modules/esm/get_source,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n  decodeURIComponent\x2C\n} = primordials;\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\n\nconst { Buffer } = require('buffer');\n\nconst fs = require('internal/fs/promises').exports;\nconst { URL } = require('internal/url');\nconst {\n  ERR_INVALID_URL\x2C\n  ERR_INVALID_URL_SCHEME\x2C\n} = require('internal/errors').codes;\nconst readFileAsync = fs.readFile;\n\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\n\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\n  const parsed = new URL(url);\n  let source;\n  if (parsed.protocol === 'file:') {\n    source = await readFileAsync(parsed);\n  } else if (parsed.protocol === 'data:') {\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\n    if (!match) {\n      throw new ERR_INVALID_URL(url);\n    }\n    const { 1: base64\x2C 2: body } = match;\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\n  } else {\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\n  }\n  if (policy?.manifest) {\n    policy.manifest.assertIntegrity(parsed\x2C source);\n  }\n  return source;\n}\nexports.defaultGetSource = defaultGetSource;\n
code-source-info,0x3ba9c5af278e,108,0,1349,C0O0C4O1349,,
code-creation,Function,10,84907,0x3ba9c5af28fe,169, node:internal/modules/esm/get_source:1:1,0x3ba9c5af2708,~
code-source-info,0x3ba9c5af28fe,108,0,1349,C0O0C37O25C43O48C49O112C52O112C57O93C62O207C65O207C74O251C81O207C83O316C86O316C91O305C97O347C100O347C105O378C110O404C113O404C118O396C124O486C127O486C132O512C137O439C143O458C149O545C153O542C155O581C159O581C161O1304C163O1329C168O1348,,
code-creation,Eval,10,85742,0x3ba9c5af3c76,5, node:internal/fs/promises:1:1,0x3ba9c5af34d8,~
script-source,109,node:internal/fs/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  NumberIsSafeInteger\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  SafeArrayIterator\x2C\n  SafePromisePrototypeFinally\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  F_OK\x2C\n  O_SYMLINK\x2C\n  O_WRONLY\x2C\n  S_IFMT\x2C\n  S_IFREG\n} = internalBinding('constants').fs;\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\n\nconst {\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst { isArrayBufferView } = require('internal/util/types');\nconst { rimrafPromises } = require('internal/fs/rimraf');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  copyObject\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getStatsFromBinding\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validateRmOptions\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst { opendir } = require('internal/fs/dir');\nconst {\n  parseFileMode\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst { lazyDOMException\x2C promisify } = require('internal/util');\nconst { EventEmitterMixin } = require('internal/event_target');\nconst { watch } = require('internal/fs/watchers');\nconst { isIterable } = require('internal/streams/utils');\nconst assert = require('internal/assert');\n\nconst kHandle = Symbol('kHandle');\nconst kFd = Symbol('kFd');\nconst kRefs = Symbol('kRefs');\nconst kClosePromise = Symbol('kClosePromise');\nconst kCloseResolve = Symbol('kCloseResolve');\nconst kCloseReject = Symbol('kCloseReject');\nconst kRef = Symbol('kRef');\nconst kUnref = Symbol('kUnref');\n\nconst { kUsePromises } = binding;\nconst {\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\n} = require('internal/worker/js_transferable');\n\nconst getDirectoryEntriesPromise = promisify(getDirents);\nconst validateRmOptionsPromise = promisify(validateRmOptions);\n\nlet cpPromises;\nfunction lazyLoadCpPromises() {\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\n}\n\n// Lazy loaded to avoid circular dependency.\nlet fsStreams;\nfunction lazyFsStreams() {\n  return fsStreams ??= require('internal/fs/streams');\n}\n\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\n  /**\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\n   */\n  constructor(filehandle) {\n    super();\n    this[kHandle] = filehandle;\n    this[kFd] = filehandle ? filehandle.fd : -1;\n\n    this[kRefs] = 1;\n    this[kClosePromise] = null;\n  }\n\n  getAsyncId() {\n    return this[kHandle].getAsyncId();\n  }\n\n  get fd() {\n    return this[kFd];\n  }\n\n  appendFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  chmod(mode) {\n    return fsCall(fchmod\x2C this\x2C mode);\n  }\n\n  chown(uid\x2C gid) {\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\n  }\n\n  datasync() {\n    return fsCall(fdatasync\x2C this);\n  }\n\n  sync() {\n    return fsCall(fsync\x2C this);\n  }\n\n  read(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  readv(buffers\x2C position) {\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\n  }\n\n  readFile(options) {\n    return fsCall(readFile\x2C this\x2C options);\n  }\n\n  stat(options) {\n    return fsCall(fstat\x2C this\x2C options);\n  }\n\n  truncate(len = 0) {\n    return fsCall(ftruncate\x2C this\x2C len);\n  }\n\n  utimes(atime\x2C mtime) {\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\n  }\n\n  write(buffer\x2C offset\x2C length\x2C position) {\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\n  }\n\n  writev(buffers\x2C position) {\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\n  }\n\n  writeFile(data\x2C options) {\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\n  }\n\n  close = () => {\n    if (this[kFd] === -1) {\n      return PromiseResolve();\n    }\n\n    if (this[kClosePromise]) {\n      return this[kClosePromise];\n    }\n\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        this[kHandle].close()\x2C\n        () => { this[kClosePromise] = undefined; }\n      );\n    } else {\n      this[kClosePromise] = SafePromisePrototypeFinally(\n        new Promise((resolve\x2C reject) => {\n          this[kCloseResolve] = resolve;\n          this[kCloseReject] = reject;\n        })\x2C () => {\n          this[kClosePromise] = undefined;\n          this[kCloseReject] = undefined;\n          this[kCloseResolve] = undefined;\n        }\n      );\n    }\n\n    this.emit('close');\n    return this[kClosePromise];\n  }\n\n  /**\n   * @typedef {import('./streams').ReadStream\n   * } ReadStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   end?: number;\n   *   highWaterMark?: number;\n   *   }} [options]\n   * @returns {ReadStream}\n   */\n  createReadStream(options = undefined) {\n    const { ReadStream } = lazyFsStreams();\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  /**\n   * @typedef {import('./streams').WriteStream\n   * } WriteStream\n   * @param {{\n   *   encoding?: string;\n   *   autoClose?: boolean;\n   *   emitClose?: boolean;\n   *   start: number;\n   *   }} [options]\n   * @returns {WriteStream}\n   */\n  createWriteStream(options = undefined) {\n    const { WriteStream } = lazyFsStreams();\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\n  }\n\n  [kTransfer]() {\n    if (this[kClosePromise] || this[kRefs] > 1) {\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\n                             'DataCloneError');\n    }\n\n    const handle = this[kHandle];\n    this[kFd] = -1;\n    this[kHandle] = null;\n    this[kRefs] = 0;\n\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/fs/promises:FileHandle'\n    };\n  }\n\n  [kTransferList]() {\n    return [ this[kHandle] ];\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kFd] = handle.fd;\n  }\n\n  [kRef]() {\n    this[kRefs]++;\n  }\n\n  [kUnref]() {\n    this[kRefs]--;\n    if (this[kRefs] === 0) {\n      this[kFd] = -1;\n      PromisePrototypeThen(\n        this[kHandle].close()\x2C\n        this[kCloseResolve]\x2C\n        this[kCloseReject]\n      );\n    }\n  }\n}\n\nasync function fsCall(fn\x2C handle\x2C ...args) {\n  assert(handle[kRefs] !== undefined\x2C\n         'handle must be an instance of FileHandle');\n\n  if (handle.fd === -1) {\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error('file closed');\n    err.code = 'EBADF';\n    err.syscall = fn.name;\n    throw err;\n  }\n\n  try {\n    handle[kRef]();\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\n  } finally {\n    handle[kUnref]();\n  }\n}\n\nfunction checkAborted(signal) {\n  if (signal?.aborted)\n    throw new AbortError();\n}\n\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\n  checkAborted(signal);\n  if (isCustomIterable(data)) {\n    for await (const buf of data) {\n      checkAborted(signal);\n      const toWrite =\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\n      let remaining = toWrite.byteLength;\n      while (remaining > 0) {\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\n        const { bytesWritten } = await write(\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\n        remaining -= bytesWritten;\n        checkAborted(signal);\n      }\n    }\n    return;\n  }\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\n  let remaining = data.byteLength;\n  if (remaining === 0) return;\n  do {\n    checkAborted(signal);\n    const { bytesWritten } =\n      await write(filehandle\x2C data\x2C 0\x2C\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\n    remaining -= bytesWritten;\n    data = new Uint8Array(\n      data.buffer\x2C\n      data.byteOffset + bytesWritten\x2C\n      data.byteLength - bytesWritten\n    );\n  } while (remaining > 0);\n}\n\nasync function readFileHandle(filehandle\x2C options) {\n  const signal = options?.signal;\n\n  checkAborted(signal);\n\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\n\n  checkAborted(signal);\n\n  let size;\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\n    size = statFields[8/* size */];\n  } else {\n    size = 0;\n  }\n\n  if (size > kIoMaxLength)\n    throw new ERR_FS_FILE_TOO_LARGE(size);\n\n  let endOfFile = false;\n  let totalRead = 0;\n  const noSize = size === 0;\n  const buffers = [];\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\n  do {\n    checkAborted(signal);\n    let buffer;\n    let offset;\n    let length;\n    if (noSize) {\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\n      offset = 0;\n      length = kReadFileUnknownBufferLength;\n    } else {\n      buffer = fullBuffer;\n      offset = totalRead;\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\n    }\n\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\n                                          length\x2C -1\x2C kUsePromises)) || 0;\n    totalRead += bytesRead;\n    endOfFile = bytesRead === 0 || totalRead === size;\n    if (noSize && bytesRead > 0) {\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\n    }\n  } while (!endOfFile);\n\n  let result;\n  if (size > 0) {\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\n  } else {\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\n                                                               totalRead);\n  }\n\n  return options.encoding ? result.toString(options.encoding) : result;\n}\n\n// All of the functions are defined as async in order to ensure that errors\n// thrown cause promise rejections rather than being thrown synchronously.\nasync function access(path\x2C mode = F_OK) {\n  path = getValidatedPath(path);\n\n  mode = getValidMode(mode\x2C 'access');\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\n                        kUsePromises);\n}\n\nasync function cp(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\n}\n\nasync function copyFile(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  mode = getValidMode(mode\x2C 'copyFile');\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\n                          pathModule.toNamespacedPath(dest)\x2C\n                          mode\x2C\n                          kUsePromises);\n}\n\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\n// fsPromises.open() uses the fs.FileHandle class.\nasync function open(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  return new FileHandle(\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\n                                 flagsNumber\x2C mode\x2C kUsePromises));\n}\n\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\n  let buffer = bufferOrOptions;\n  if (!isArrayBufferView(buffer)) {\n    if (bufferOrOptions === undefined) {\n      bufferOrOptions = {};\n    }\n    if (bufferOrOptions.buffer) {\n      buffer = bufferOrOptions.buffer;\n      validateBuffer(buffer);\n    } else {\n      buffer = Buffer.alloc(16384);\n    }\n    offset = bufferOrOptions.offset || 0;\n    length = buffer.byteLength;\n    position = bufferOrOptions.position || null;\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0)\n    return { bytesRead: length\x2C buffer };\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (!NumberIsSafeInteger(position))\n    position = -1;\n\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\n                                        position\x2C kUsePromises)) || 0;\n\n  return { bytesRead\x2C buffer };\n}\n\nasync function readv(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                               kUsePromises)) || 0;\n  return { bytesRead\x2C buffers };\n}\n\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\n  if (buffer?.byteLength === 0)\n    return { bytesWritten: 0\x2C buffer };\n\n  if (isArrayBufferView(buffer)) {\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    const bytesWritten =\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\n                                 length\x2C position\x2C kUsePromises)) || 0;\n    return { bytesWritten\x2C buffer };\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n  validateEncoding(buffer\x2C length);\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\n                                                  length\x2C kUsePromises)) || 0;\n  return { bytesWritten\x2C buffer };\n}\n\nasync function writev(handle\x2C buffers\x2C position) {\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\n                                                   kUsePromises)) || 0;\n  return { bytesWritten\x2C buffers };\n}\n\nasync function rename(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                        pathModule.toNamespacedPath(newPath)\x2C\n                        kUsePromises);\n}\n\nasync function truncate(path\x2C len = 0) {\n  const fd = await open(path\x2C 'r+');\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\n}\n\nasync function ftruncate(handle\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\n}\n\nasync function rm(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\n  return rimrafPromises(path\x2C options);\n}\n\nasync function rmdir(path\x2C options) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  options = validateRmdirOptions(options);\n\n  if (options.recursive) {\n    emitRecursiveRmdirWarning();\n    const stats = await stat(path);\n    if (stats.isDirectory()) {\n      return rimrafPromises(path\x2C options);\n    }\n  }\n\n  return binding.rmdir(path\x2C kUsePromises);\n}\n\nasync function fdatasync(handle) {\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\n}\n\nasync function fsync(handle) {\n  return binding.fsync(handle.fd\x2C kUsePromises);\n}\n\nasync function mkdir(path\x2C options) {\n  if (typeof options === 'number' || typeof options === 'string') {\n    options = { mode: options };\n  }\n  const {\n    recursive = false\x2C\n    mode = 0o777\n  } = options || {};\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\n                       kUsePromises);\n}\n\nasync function readdir(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                       options.encoding\x2C\n                                       !!options.withFileTypes\x2C\n                                       kUsePromises);\n  return options.withFileTypes ?\n    getDirectoryEntriesPromise(path\x2C result) :\n    result;\n}\n\nasync function readlink(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path\x2C 'oldPath');\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                          options.encoding\x2C kUsePromises);\n}\n\nasync function symlink(target\x2C path\x2C type_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                         pathModule.toNamespacedPath(path)\x2C\n                         stringToSymlinkType(type)\x2C\n                         kUsePromises);\n}\n\nasync function fstat(handle\x2C options = { bigint: false }) {\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function lstat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                                     options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function stat(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\n                                    options.bigint\x2C kUsePromises);\n  return getStatsFromBinding(result);\n}\n\nasync function link(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                      pathModule.toNamespacedPath(newPath)\x2C\n                      kUsePromises);\n}\n\nasync function unlink(path) {\n  path = getValidatedPath(path);\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\n}\n\nasync function fchmod(handle\x2C mode) {\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\n}\n\nasync function chmod(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\n}\n\nasync function lchmod(path\x2C mode) {\n  if (O_SYMLINK === undefined)\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\n\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\n}\n\nasync function lchown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\n                        uid\x2C gid\x2C kUsePromises);\n}\n\nasync function fchown(handle\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\n}\n\nasync function chown(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\n                       uid\x2C gid\x2C kUsePromises);\n}\n\nasync function utimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                        toUnixTimestamp(atime)\x2C\n                        toUnixTimestamp(mtime)\x2C\n                        kUsePromises);\n}\n\nasync function futimes(handle\x2C atime\x2C mtime) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\n}\n\nasync function lutimes(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                         toUnixTimestamp(atime)\x2C\n                         toUnixTimestamp(mtime)\x2C\n                         kUsePromises);\n}\n\nasync function realpath(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function mkdtemp(prefix\x2C options) {\n  options = getOptions(options\x2C {});\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix);\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\n}\n\nasync function writeFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  validateAbortSignal(options.signal);\n  if (path instanceof FileHandle)\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C options.mode);\n  return SafePromisePrototypeFinally(\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\n}\n\nfunction isCustomIterable(obj) {\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\n}\n\nasync function appendFile(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n  options = copyObject(options);\n  options.flag = options.flag || 'a';\n  return writeFile(path\x2C data\x2C options);\n}\n\nasync function readFile(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const flag = options.flag || 'r';\n\n  if (path instanceof FileHandle)\n    return readFileHandle(path\x2C options);\n\n  checkAborted(options.signal);\n\n  const fd = await open(path\x2C flag\x2C 0o666);\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\n}\n\nmodule.exports = {\n  exports: {\n    access\x2C\n    copyFile\x2C\n    cp\x2C\n    open\x2C\n    opendir: promisify(opendir)\x2C\n    rename\x2C\n    truncate\x2C\n    rm\x2C\n    rmdir\x2C\n    mkdir\x2C\n    readdir\x2C\n    readlink\x2C\n    symlink\x2C\n    lstat\x2C\n    stat\x2C\n    link\x2C\n    unlink\x2C\n    chmod\x2C\n    lchmod\x2C\n    lchown\x2C\n    chown\x2C\n    utimes\x2C\n    lutimes\x2C\n    realpath\x2C\n    mkdtemp\x2C\n    writeFile\x2C\n    appendFile\x2C\n    readFile\x2C\n    watch\x2C\n  }\x2C\n\n  FileHandle\x2C\n  kRef\x2C\n  kUnref\x2C\n};\n
code-source-info,0x3ba9c5af3c76,109,0,22879,C0O0C4O22879,,
code-creation,Function,10,88032,0x3ba9c5af63ae,1659, node:internal/fs/promises:1:1,0x3ba9c5af3bf0,~
code-source-info,0x3ba9c5af63ae
code-creation,Function,10,88191,0x3ba9c5af6d56,27,<instance_members_initializer> node:internal/fs/promises:189:3,0x3ba9c5af5250,~
code-source-info,0x3ba9c5af6d56,109,4202,5000,C0O4202C12O4210C26O5000,,
tick,0x108af2364,88236,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x7ff81f195abf,88269,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,88697,0x3ba9c5af97f6,5, node:internal/fs/rimraf:1:1,0x3ba9c5af9490,~
script-source,110,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\n// modified in the following ways:\n// - Use of the assert module has been replaced with core's error system.\n// - All code related to the glob dependency has been removed.\n// - Bring your own custom fs module is not currently supported.\n// - Some basic code cleanup.\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst fs = require('fs');\nconst {\n  chmod\x2C\n  chmodSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  unlink\x2C\n  unlinkSync\n} = fs;\nconst { sep } = require('path');\nconst { setTimeout } = require('timers');\nconst { sleep } = require('internal/util');\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\nconst retryErrorCodes = new SafeSet(\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\nconst isWindows = process.platform === 'win32';\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\nconst readdirEncoding = 'buffer';\nconst separator = Buffer.from(sep);\n\n\nfunction rimraf(path\x2C options\x2C callback) {\n  let retries = 0;\n\n  _rimraf(path\x2C options\x2C function CB(err) {\n    if (err) {\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\n        retries++;\n        const delay = retries * options.retryDelay;\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\n      }\n\n      // The file is already gone.\n      if (err.code === 'ENOENT')\n        err = null;\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rimraf(path\x2C options\x2C callback) {\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\n  // it's not a directory.\n  lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (err.code === 'ENOENT')\n        return callback(null);\n\n      // Windows can EPERM on stat.\n      if (isWindows && err.code === 'EPERM')\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\n    } else if (stats.isDirectory()) {\n      return _rmdir(path\x2C options\x2C err\x2C callback);\n    }\n\n    unlink(path\x2C (err) => {\n      if (err) {\n        if (err.code === 'ENOENT')\n          return callback(null);\n        if (err.code === 'EISDIR')\n          return _rmdir(path\x2C options\x2C err\x2C callback);\n        if (err.code === 'EPERM') {\n          return epermHandler(path\x2C options\x2C err\x2C callback);\n        }\n      }\n\n      return callback(err);\n    });\n  });\n}\n\n\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\n  chmod(path\x2C 0o666\x2C (err) => {\n    if (err)\n      return callback(err.code === 'ENOENT' ? null : originalErr);\n\n    stat(path\x2C (err\x2C stats) => {\n      if (err)\n        return callback(err.code === 'ENOENT' ? null : originalErr);\n\n      if (stats.isDirectory())\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\n      else\n        unlink(path\x2C callback);\n    });\n  });\n}\n\n\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\n  rmdir(path\x2C (err) => {\n    if (err) {\n      if (notEmptyErrorCodes.has(err.code))\n        return _rmchildren(path\x2C options\x2C callback);\n      if (err.code === 'ENOTDIR')\n        return callback(originalErr);\n    }\n\n    callback(err);\n  });\n}\n\n\nfunction _rmchildren(path\x2C options\x2C callback) {\n  const pathBuf = Buffer.from(path);\n\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\n    if (err)\n      return callback(err);\n\n    let numFiles = files.length;\n\n    if (numFiles === 0)\n      return rmdir(path\x2C callback);\n\n    let done = false;\n\n    ArrayPrototypeForEach(files\x2C (child) => {\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n      rimraf(childPath\x2C options\x2C (err) => {\n        if (done)\n          return;\n\n        if (err) {\n          done = true;\n          return callback(err);\n        }\n\n        numFiles--;\n        if (numFiles === 0)\n          rmdir(path\x2C callback);\n      });\n    });\n  });\n}\n\n\nfunction rimrafPromises(path\x2C options) {\n  return new Promise((resolve\x2C reject) => {\n    rimraf(path\x2C options\x2C (err) => {\n      if (err)\n        return reject(err);\n\n      resolve();\n    });\n  });\n}\n\n\nfunction rimrafSync(path\x2C options) {\n  let stats;\n\n  try {\n    stats = lstatSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    // Windows can EPERM on stat.\n    if (isWindows && err.code === 'EPERM')\n      fixWinEPERMSync(path\x2C options\x2C err);\n  }\n\n  try {\n    // SunOS lets the root user unlink directories.\n    if (stats?.isDirectory())\n      _rmdirSync(path\x2C options\x2C null);\n    else\n      _unlinkSync(path\x2C options);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'EPERM')\n      return epermHandlerSync(path\x2C options\x2C err);\n    if (err.code !== 'EISDIR')\n      throw err;\n\n    _rmdirSync(path\x2C options\x2C err);\n  }\n}\n\n\nfunction _unlinkSync(path\x2C options) {\n  const tries = options.maxRetries + 1;\n\n  for (let i = 1; i <= tries; i++) {\n    try {\n      return unlinkSync(path);\n    } catch (err) {\n      // Only sleep if this is not the last try\x2C and the delay is greater\n      // than zero\x2C and an error was encountered that warrants a retry.\n      if (retryErrorCodes.has(err.code) &&\n          i < tries &&\n          options.retryDelay > 0) {\n        sleep(i * options.retryDelay);\n      }\n    }\n  }\n}\n\n\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\n  try {\n    rmdirSync(path);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n    if (err.code === 'ENOTDIR')\n      throw originalErr;\n\n    if (notEmptyErrorCodes.has(err.code)) {\n      // Removing failed. Try removing all children and then retrying the\n      // original removal. Windows has a habit of not closing handles promptly\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\n      // around that issue by retrying on Windows.\n      const pathBuf = Buffer.from(path);\n\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\n\n        rimrafSync(childPath\x2C options);\n      });\n\n      const tries = options.maxRetries + 1;\n\n      for (let i = 1; i <= tries; i++) {\n        try {\n          return fs.rmdirSync(path);\n        } catch (err) {\n          // Only sleep if this is not the last try\x2C and the delay is greater\n          // than zero\x2C and an error was encountered that warrants a retry.\n          if (retryErrorCodes.has(err.code) &&\n              i < tries &&\n              options.retryDelay > 0) {\n            sleep(i * options.retryDelay);\n          }\n        }\n      }\n    }\n  }\n}\n\n\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\n  try {\n    chmodSync(path\x2C 0o666);\n  } catch (err) {\n    if (err.code === 'ENOENT')\n      return;\n\n    throw originalErr;\n  }\n\n  let stats;\n\n  try {\n    stats = statSync(path\x2C { throwIfNoEntry: false });\n  } catch {\n    throw originalErr;\n  }\n\n  if (stats === undefined) return;\n\n  if (stats.isDirectory())\n    _rmdirSync(path\x2C options\x2C originalErr);\n  else\n    _unlinkSync(path\x2C options);\n}\n\n\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\n
code-source-info,0x3ba9c5af97f6,110,0,7095,C0O0C4O7095,,
code-creation,Function,10,89438,0x3ba9c5af9df6,409, node:internal/fs/rimraf:1:1,0x3ba9c5af9770,~
code-source-info,0x3ba9c5af9df6,110,0,7095,C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O642C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O662C257O662C262O654C267O702C270O702C275O687C281O739C284O739C289O729C295O792C302O792C307O792C309O863C316O863C321O863C323O958C330O967C333O950C335O1001C345O1001C347O1060C357O1060C359O1126C361O1126C363O1154C366O1161C371O1161C376O1154C378O7038C385O7057C391O7065C397O7081C403O7053C408O7094,,
tick,0x7ff81f29ed43,89541,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5af6673,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,LazyCompile,10,89710,0x3ba9c5afac8e,188,from node:buffer:295:28,0x3ba999224b08,~
script-source,18,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\n} = internalBinding('buffer');\nconst {\n  getOwnNonIndexProperties\x2C\n  propertyFilter: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\n  }\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\n} = require('internal/util/inspect');\nconst { encodings } = internalBinding('string_decoder');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_ENCODING\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateNumber\x2C\n  validateInteger\x2C\n  validateString\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\n} = require('internal/buffer');\n\nconst {\n  Blob\x2C\n  resolveObjectURL\x2C\n} = require('internal/blob');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\x2C\n  MAX_STRING_LENGTH: {\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nconst encodingsMap = ObjectCreate(null);\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  if (sourceStart > source.length) {\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\n                               `<= ${source.length}`\x2C\n                               sourceStart);\n  }\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\n  );\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n// The 'assertSize' method will remove itself from the callstack when an error\n// occurs. This is done simply to keep the internal details of the\n// implementation from bleeding out to users.\nconst assertSize = hideStackFrames((size) => {\n  validateNumber(size\x2C 'size');\n  if (!(size >= 0 && size <= kMaxLength)) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\n  }\n});\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  assertSize(size);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  assertSize(size);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  assertSize(size);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(length) {\n  assertSize(length);\n  return createUnsafeBuffer(length);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n    encoding = undefined;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\n  }\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\n    );\n  }\n\n  const len = string.length;\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\n  if (!mustMatch && len === 0)\n    return 0;\n\n  if (!encoding)\n    return (mustMatch ? -1 : byteLengthUtf8(string));\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    return (mustMatch ? -1 : byteLengthUtf8(string));\n  return ops.byteLength(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n\n  if (this.byteLength !== otherBuffer.byteLength)\n    return false;\n\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(StringPrototypeReplace(\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = ObjectCreate(null);\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\n    err.code = code;\n    err.errno = result;\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (input[n].charCodeAt(0) > 0xff)\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  const buf = Buffer.from(input\x2C 'latin1');\n  return buf.toString('base64');\n}\n\nconst kBase64Digits =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction atob(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (!kBase64Digits.includes(input[n]))\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  return Buffer.from(input\x2C 'base64').toString('latin1');\n}\n\nmodule.exports = {\n  Blob\x2C\n  resolveObjectURL\x2C\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) { INSPECT_MAX_BYTES = val; }\n  }\n});\n
code-source-info,0x3ba9c5afac8e,18,8406,9357,C3O8444C9O8479C12O8486C17O8522C18O8526C28O8581C33O8585C39O8616C51O8623C56O8672C57O8700C63O8717C68O8717C73O8732C78O8771C95O8862C104O8869C109O8909C110O8931C113O8931C118O8954C120O8967C122O8976C123O8982C125O8999C127O8998C134O9060C136O9066C138O9065C145O9084C151O9102C155O9147C158O9154C163O9194C164O9216C182O9222C187O9216,,
tick,0x7ff81f180d2c,93235,0,0x0,3,0x108a8eb80,0x3ba9c5af9f69,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af6673,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x7ff81f29ee3f,93265,0,0x0,3,0x108a8eb80,0x3ba9c5af9f69,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af6673,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x7ff81f29ef90,93288,0,0x0,3,0x108a8eb80,0x3ba9c5af9f69,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af6673,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,LazyCompile,10,93325,0x3ba9c5afd666,110,fromString node:buffer:431:20,0x3ba999224ef0,~
code-source-info,0x3ba9c5afd666,18,12457,12891,C0O12484C2O12491C8O12536C14O12543C19O12567C25O12574C30O12587C35O12594C40O12611C41O12616C46O12634C51O12644C56O12681C59O12687C64O12717C66O12746C73O12752C78O12746C79O12803C85O12810C90O12823C95O12830C100O12847C101O12854C104O12861C109O12889,,
code-creation,LazyCompile,10,93436,0x3ba9c5afd81e,177,fromStringFast node:buffer:412:24,0x3ba999224e50,~
code-source-info,0x3ba9c5afd81e,18,11913,12436,C0O11950C5O11950C11O11973C14O11995C18O12004C21O11984C26O12016C31O12052C36O12023C41O12065C42O12069C44O12083C49O12094C51O12092C54O12080C59O12111C62O12111C65O12135C72O12150C77O12161C85O12135C91O12203C110O12203C116O12234C118O12245C123O12329C130O12348C135O12359C143O12333C149O12386C156O12400C162O12397C168O12410C171O12410C174O12425C176O12434,,
code-creation,LazyCompile,10,93516,0x3ba9c5afda0e,36,FastBuffer node:internal/buffer:958:14,0x3ba999231a18,~
code-source-info,0x3ba9c5afda0e,19,26364,26453,C3O26407C7O26441C20O26407C35O26452,,
code-creation,LazyCompile,10,93563,0x3ba9c5afdb0e,23,write node:buffer:592:12,0x3ba999225260,~
code-source-info,0x3ba9c5afdb0e,18,16525,16589,C0O16559C17O16559C22O16589,,
code-creation,LazyCompile,10,93624,0x3ba9c5afdbfe,42,alignPool node:buffer:158:19,0x3ba999224888,~
code-source-info,0x3ba9c5afdbfe,18,3998,4102,C0O4032C4O4047C9O4060C19O4071C25O4083C34O4093C41O4101,,
code-creation,LazyCompile,10,93807,0x3ba9c5afdfbe,251,promisify node:internal/util:324:19,0x3ba96096a3e0,~
script-source,12,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeTest\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  getHiddenValue\x2C\n  setHiddenValue\x2C\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\n  sleep: _sleep\x2C\n  toUSVString: _toUSVString\x2C\n} = internalBinding('util');\nconst { isNativeError } = internalBinding('types');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nconst unpairedSurrogateRe =\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\nfunction toUSVString(val) {\n  const str = `${val}`;\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\n  // slower than `unpairedSurrogateRe.exec()`.\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\n  if (!match)\n    return str;\n  return _toUSVString(str\x2C match.index);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  let warned = false;\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) ||\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\n    return;\n\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n          `${enc}`.toLowerCase() === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n          `${enc}`.toLowerCase() === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n        `${enc}`.toLowerCase() === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n          `${enc}`.toLowerCase() === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature. This feature could ` +\n       'change at any time';\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { value: type.name }\x2C\n    length: { value: type.length }\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = ObjectCreate(null);\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      ReflectApply(original\x2C this\x2C args);\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n  });\n  return ObjectDefineProperties(\n    fn\x2C\n    ObjectGetOwnPropertyDescriptors(original)\n  );\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n      // If a filename does not start with / or contain \\\x2C\n      // it's likely from Node.js core.\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\n        continue;\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\n    }\n  }\n  return false;\n}\n\nfunction once(callback) {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    ReflectApply(callback\x2C this\x2C args);\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\nlet DOMException;\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\n  if (DOMException === undefined)\n    DOMException = internalBinding('messaging').DOMException;\n  return new DOMException(message\x2C name);\n});\n\nfunction structuredClone(value) {\n  const {\n    DefaultSerializer\x2C\n    DefaultDeserializer\x2C\n  } = require('v8');\n  const ser = new DefaultSerializer();\n  ser._getDataCloneError = hideStackFrames((message) =>\n    lazyDOMException(message\x2C 'DataCloneError'));\n  ser.writeValue(value);\n  const serialized = ser.releaseBuffer();\n\n  const des = new DefaultDeserializer(serialized);\n  return des.readValue();\n}\n\nmodule.exports = {\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  filterDuplicateStrings\x2C\n  getConstructorOf\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  sleep\x2C\n  spliceOne\x2C\n  structuredClone\x2C\n  toUSVString\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\n};\n
code-source-info,0x3ba9c5afdfbe,12,8845,10349,C0O8845C17O8907C25O8947C33O8971C38O8950C55O9007C68O9007C73O9050C80O9063C82O9062C87O9107C94O9116C96O9115C100O9148C110O9148C115O9200C126O9232C136O9273C143O9207C148O9339C149O9502C156O9511C158O9510C161O9502C163O10066C174O10091C180O10091C185O10066C190O10127C201O10152C211O10191C218O10127C223O10258C234O10301C240O10301C245O10265C250O10347,,
tick,0x7ff81f269ae6,95222,0,0x0,3,0x108a8eb80,0x3ba9c5af685d,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9ddf00000,262144
code-creation,LazyCompile,10,95445,0x3ba9c5aff4e6,65,EventEmitterMixin node:internal/event_target:827:27,0x3ba95c936258,~
script-source,38,node:internal/event_target,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ReflectApply\x2C\n  SafeArrayIterator\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SafeWeakSet\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_EVENT_RECURSION\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_INVALID_THIS\x2C\n  }\n} = require('internal/errors');\nconst { validateObject\x2C validateString } = require('internal/validators');\n\nconst { customInspectSymbol } = require('internal/util');\nconst { inspect } = require('util');\n\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\n\nconst EventEmitter = require('events');\nconst {\n  kMaxEventTargetListeners\x2C\n  kMaxEventTargetListenersWarned\x2C\n} = EventEmitter;\n\nconst kEvents = Symbol('kEvents');\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\nconst kStop = Symbol('kStop');\nconst kTarget = Symbol('kTarget');\nconst kHandlers = Symbol('khandlers');\nconst kWeakHandler = Symbol('kWeak');\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kCreateEvent = Symbol('kCreateEvent');\nconst kNewListener = Symbol('kNewListener');\nconst kRemoveListener = Symbol('kRemoveListener');\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\nconst kTrustEvent = Symbol('kTrustEvent');\n\nconst { now } = require('internal/perf/utils');\n\n// TODO(joyeecheung): V8 snapshot does not support instance member\n// initializers for now:\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\nconst kType = Symbol('type');\nconst kDefaultPrevented = Symbol('defaultPrevented');\nconst kCancelable = Symbol('cancelable');\nconst kTimestamp = Symbol('timestamp');\nconst kBubbles = Symbol('bubbles');\nconst kComposed = Symbol('composed');\nconst kPropagationStopped = Symbol('propagationStopped');\n\nconst isTrustedSet = new SafeWeakSet();\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return isTrustedSet.has(this);\n  }\n}\x2C 'isTrusted').get;\n\nfunction isEvent(value) {\n  return typeof value?.[kType] === 'string';\n}\n\nclass Event {\n  constructor(type\x2C options = null) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    validateObject(options\x2C 'options'\x2C {\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\n    });\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\n    this[kCancelable] = !!cancelable;\n    this[kBubbles] = !!bubbles;\n    this[kComposed] = !!composed;\n    this[kType] = `${type}`;\n    this[kDefaultPrevented] = false;\n    this[kTimestamp] = now();\n    this[kPropagationStopped] = false;\n    if (options?.[kTrustEvent]) {\n      isTrustedSet.add(this);\n    }\n\n    // isTrusted is special (LegacyUnforgeable)\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\n      get: isTrusted\x2C\n      enumerable: true\x2C\n      configurable: false\n    });\n    this[kTarget] = null;\n    this[kIsBeingDispatched] = false;\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({\n      type: this[kType]\x2C\n      defaultPrevented: this[kDefaultPrevented]\x2C\n      cancelable: this[kCancelable]\x2C\n      timeStamp: this[kTimestamp]\x2C\n    }\x2C opts)}`;\n  }\n\n  stopImmediatePropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kStop] = true;\n  }\n\n  preventDefault() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kDefaultPrevented] = true;\n  }\n\n  get target() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  get currentTarget() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  get srcElement() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  get type() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kType];\n  }\n\n  get cancelable() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kCancelable];\n  }\n\n  get defaultPrevented() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kCancelable] && this[kDefaultPrevented];\n  }\n\n  get timeStamp() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTimestamp];\n  }\n\n\n  // The following are non-op and unused properties/methods from Web API Event.\n  // These are not supported in Node.js and are provided purely for\n  // API completeness.\n\n  composedPath() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\n  }\n\n  get returnValue() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return !this.defaultPrevented;\n  }\n\n  get bubbles() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kBubbles];\n  }\n\n  get composed() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kComposed];\n  }\n\n  get eventPhase() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\n  }\n\n  get cancelBubble() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kPropagationStopped];\n  }\n\n  set cancelBubble(value) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    if (value) {\n      this.stopPropagation();\n    }\n  }\n\n  stopPropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this[kPropagationStopped] = true;\n  }\n\n  static NONE = 0;\n  static CAPTURING_PHASE = 1;\n  static AT_TARGET = 2;\n  static BUBBLING_PHASE = 3;\n}\n\nconst kEnumerableProperty = ObjectCreate(null);\nkEnumerableProperty.enumerable = true;\n\nObjectDefineProperties(\n  Event.prototype\x2C {\n    [SymbolToStringTag]: {\n      writable: false\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: 'Event'\x2C\n    }\x2C\n    stopImmediatePropagation: kEnumerableProperty\x2C\n    preventDefault: kEnumerableProperty\x2C\n    target: kEnumerableProperty\x2C\n    currentTarget: kEnumerableProperty\x2C\n    srcElement: kEnumerableProperty\x2C\n    type: kEnumerableProperty\x2C\n    cancelable: kEnumerableProperty\x2C\n    defaultPrevented: kEnumerableProperty\x2C\n    timeStamp: kEnumerableProperty\x2C\n    composedPath: kEnumerableProperty\x2C\n    returnValue: kEnumerableProperty\x2C\n    bubbles: kEnumerableProperty\x2C\n    composed: kEnumerableProperty\x2C\n    eventPhase: kEnumerableProperty\x2C\n    cancelBubble: kEnumerableProperty\x2C\n    stopPropagation: kEnumerableProperty\x2C\n  });\n\nclass NodeCustomEvent extends Event {\n  constructor(type\x2C options) {\n    super(type\x2C options);\n    if (options?.detail) {\n      this.detail = options.detail;\n    }\n  }\n}\n\n// Weak listener cleanup\n// This has to be lazy for snapshots to work\nlet weakListenersState = null;\n// The resource needs to retain the callback so that it doesn't\n// get garbage collected now that it's weak.\nlet objectToWeakListenerMap = null;\nfunction weakListeners() {\n  weakListenersState ??= new SafeFinalizationRegistry(\n    (listener) => listener.remove()\n  );\n  objectToWeakListenerMap ??= new SafeWeakMap();\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\n}\n\n// The listeners for an EventTarget are maintained as a linked list.\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\n// use of capture or bubbling\x2C in order to be spec compliant we have to\n// take on the additional complexity of supporting it. Fortunately\x2C using\n// the linked list makes dispatching faster\x2C even if adding/removing is\n// slower.\nclass Listener {\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n              isNodeStyleListener\x2C weak) {\n    this.next = undefined;\n    if (previous !== undefined)\n      previous.next = this;\n    this.previous = previous;\n    this.listener = listener;\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\n    this.once = once;\n    this.capture = capture;\n    this.passive = passive;\n    this.isNodeStyleListener = isNodeStyleListener;\n    this.removed = false;\n    this.weak = Boolean(weak); // Don't retain the object\n\n    if (this.weak) {\n      this.callback = new SafeWeakRef(listener);\n      weakListeners().registry.register(listener\x2C this\x2C this);\n      // Make the retainer retain the listener in a WeakMap\n      weakListeners().map.set(weak\x2C listener);\n      this.listener = this.callback;\n    } else if (typeof listener === 'function') {\n      this.callback = listener;\n      this.listener = listener;\n    } else {\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\n      this.listener = listener;\n    }\n  }\n\n  same(listener\x2C capture) {\n    const myListener = this.weak ? this.listener.deref() : this.listener;\n    return myListener === listener && this.capture === capture;\n  }\n\n  remove() {\n    if (this.previous !== undefined)\n      this.previous.next = this.next;\n    if (this.next !== undefined)\n      this.next.previous = this.previous;\n    this.removed = true;\n    if (this.weak)\n      weakListeners().registry.unregister(this);\n  }\n}\n\nfunction initEventTarget(self) {\n  self[kEvents] = new SafeMap();\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\n  self[kMaxEventTargetListenersWarned] = false;\n}\n\nclass EventTarget {\n  // Used in checking whether an object is an EventTarget. This is a well-known\n  // symbol as EventTarget may be used cross-realm.\n  // Ref: https://github.com/nodejs/node/pull/33661\n  static [kIsEventTarget] = true;\n\n  constructor() {\n    initEventTarget(this);\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive) {\n    if (this[kMaxEventTargetListeners] > 0 &&\n        size > this[kMaxEventTargetListeners] &&\n        !this[kMaxEventTargetListenersWarned]) {\n      this[kMaxEventTargetListenersWarned] = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventTarget memory leak detected. ' +\n                          `${size} ${type} listeners ` +\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\n                          'events.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.target = this;\n      w.type = type;\n      w.count = size;\n      process.emitWarning(w);\n    }\n  }\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\n\n  addEventListener(type\x2C listener\x2C options = {}) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (arguments.length < 2)\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\n\n    // We validateOptions before the shouldAddListeners check because the spec\n    // requires us to hit getters.\n    const {\n      once\x2C\n      capture\x2C\n      passive\x2C\n      signal\x2C\n      isNodeStyleListener\x2C\n      weak\x2C\n    } = validateEventListenerOptions(options);\n\n    if (!shouldAddListener(listener)) {\n      // The DOM silently allows passing undefined as a second argument\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error(`addEventListener called with ${listener}` +\n                          ' which has no effect.');\n      w.name = 'AddEventListenerArgumentTypeWarning';\n      w.target = this;\n      w.type = type;\n      process.emitWarning(w);\n      return;\n    }\n    type = String(type);\n\n    if (signal) {\n      if (signal.aborted) {\n        return;\n      }\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\n      // not prevent the event target from GC.\n      signal.addEventListener('abort'\x2C () => {\n        this.removeEventListener(type\x2C listener\x2C options);\n      }\x2C { once: true\x2C [kWeakHandler]: this });\n    }\n\n    let root = this[kEvents].get(type);\n\n    if (root === undefined) {\n      root = { size: 1\x2C next: undefined };\n      // This is the first handler in our linked list.\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                   isNodeStyleListener\x2C weak);\n      this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\n      this[kEvents].set(type\x2C root);\n      return;\n    }\n\n    let handler = root.next;\n    let previous = root;\n\n    // We have to walk the linked list to see if we have a match\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\n      previous = handler;\n      handler = handler.next;\n    }\n\n    if (handler !== undefined) { // Duplicate! Ignore\n      return;\n    }\n\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                 isNodeStyleListener\x2C weak);\n    root.size++;\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\n  }\n\n  removeEventListener(type\x2C listener\x2C options = {}) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (!shouldAddListener(listener))\n      return;\n\n    type = String(type);\n    const capture = options?.capture === true;\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return;\n\n    let handler = root.next;\n    while (handler !== undefined) {\n      if (handler.same(listener\x2C capture)) {\n        handler.remove();\n        root.size--;\n        if (root.size === 0)\n          this[kEvents].delete(type);\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n        break;\n      }\n      handler = handler.next;\n    }\n  }\n\n  dispatchEvent(event) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n\n    if (!(event instanceof Event))\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\n\n    if (event[kIsBeingDispatched])\n      throw new ERR_EVENT_RECURSION(event.type);\n\n    this[kHybridDispatch](event\x2C event.type\x2C event);\n\n    return event.defaultPrevented !== true;\n  }\n\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\n    const createEvent = () => {\n      if (event === undefined) {\n        event = this[kCreateEvent](nodeValue\x2C type);\n        event[kTarget] = this;\n        event[kIsBeingDispatched] = true;\n      }\n      return event;\n    };\n    if (event !== undefined) {\n      event[kTarget] = this;\n      event[kIsBeingDispatched] = true;\n    }\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined) {\n      if (event !== undefined)\n        event[kIsBeingDispatched] = false;\n      return true;\n    }\n\n    let handler = root.next;\n    let next;\n\n    while (handler !== undefined &&\n           (handler.passive || event?.[kStop] !== true)) {\n      // Cache the next item in case this iteration removes the current one\n      next = handler.next;\n\n      if (handler.removed) {\n        // Deal with the case an event is removed while event handlers are\n        // Being processed (removeEventListener called from a listener)\n        handler = next;\n        continue;\n      }\n      if (handler.once) {\n        handler.remove();\n        root.size--;\n        const { listener\x2C capture } = handler;\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n      }\n\n      try {\n        let arg;\n        if (handler.isNodeStyleListener) {\n          arg = nodeValue;\n        } else {\n          arg = createEvent();\n        }\n        const callback = handler.weak ?\n          handler.callback.deref() : handler.callback;\n        let result;\n        if (callback) {\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\n          if (!handler.isNodeStyleListener) {\n            arg[kIsBeingDispatched] = false;\n          }\n        }\n        if (result !== undefined && result !== null)\n          addCatch(result);\n      } catch (err) {\n        emitUncaughtException(err);\n      }\n\n      handler = next;\n    }\n\n    if (event !== undefined)\n      event[kIsBeingDispatched] = false;\n  }\n\n  [kCreateEvent](nodeValue\x2C type) {\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\n  }\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\n    });\n\n    return `${name} ${inspect({}\x2C opts)}`;\n  }\n}\n\nObjectDefineProperties(EventTarget.prototype\x2C {\n  addEventListener: kEnumerableProperty\x2C\n  removeEventListener: kEnumerableProperty\x2C\n  dispatchEvent: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'EventTarget'\x2C\n  }\n});\n\nfunction initNodeEventTarget(self) {\n  initEventTarget(self);\n}\n\nclass NodeEventTarget extends EventTarget {\n  static [kIsNodeEventTarget] = true;\n  static defaultMaxListeners = 10;\n\n  constructor() {\n    super();\n    initNodeEventTarget(this);\n  }\n\n  setMaxListeners(n) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    EventEmitter.setMaxListeners(n\x2C this);\n  }\n\n  getMaxListeners() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return this[kMaxEventTargetListeners];\n  }\n\n  eventNames() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return ArrayFrom(this[kEvents].keys());\n  }\n\n  listenerCount(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    const root = this[kEvents].get(String(type));\n    return root !== undefined ? root.size : 0;\n  }\n\n  off(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  removeListener(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  on(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  addListener(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n  emit(type\x2C arg) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    validateString(type\x2C 'type');\n    const hadListeners = this.listenerCount(type) > 0;\n    this[kHybridDispatch](arg\x2C type);\n    return hadListeners;\n  }\n\n  once(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C\n                          { once: true\x2C [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  removeAllListeners(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    if (type !== undefined) {\n      this[kEvents].delete(String(type));\n    } else {\n      this[kEvents].clear();\n    }\n\n    return this;\n  }\n}\n\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\n  setMaxListeners: kEnumerableProperty\x2C\n  getMaxListeners: kEnumerableProperty\x2C\n  eventNames: kEnumerableProperty\x2C\n  listenerCount: kEnumerableProperty\x2C\n  off: kEnumerableProperty\x2C\n  removeListener: kEnumerableProperty\x2C\n  on: kEnumerableProperty\x2C\n  addListener: kEnumerableProperty\x2C\n  once: kEnumerableProperty\x2C\n  emit: kEnumerableProperty\x2C\n  removeAllListeners: kEnumerableProperty\x2C\n});\n\n// EventTarget API\n\nfunction shouldAddListener(listener) {\n  if (typeof listener === 'function' ||\n      typeof listener?.handleEvent === 'function') {\n    return true;\n  }\n\n  if (listener == null)\n    return false;\n\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\n}\n\nfunction validateEventListenerOptions(options) {\n  if (typeof options === 'boolean')\n    return { capture: options };\n\n  if (options === null)\n    return {};\n  validateObject(options\x2C 'options'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  return {\n    once: Boolean(options.once)\x2C\n    capture: Boolean(options.capture)\x2C\n    passive: Boolean(options.passive)\x2C\n    signal: options.signal\x2C\n    weak: options[kWeakHandler]\x2C\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\n  };\n}\n\n// Test whether the argument is an event object. This is far from a fool-proof\n// test\x2C for example this input will result in a false positive:\n// > isEventTarget({ constructor: EventTarget })\n// It stands in its current implementation as a compromise.\n// Ref: https://github.com/nodejs/node/pull/33661\nfunction isEventTarget(obj) {\n  return obj?.constructor?.[kIsEventTarget];\n}\n\nfunction isNodeEventTarget(obj) {\n  return obj?.constructor?.[kIsNodeEventTarget];\n}\n\nfunction addCatch(promise) {\n  const then = promise.then;\n  if (typeof then === 'function') {\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\n      // The callback is called with nextTick to avoid a follow-up\n      // rejection from this promise.\n      emitUncaughtException(err);\n    });\n  }\n}\n\nfunction emitUncaughtException(err) {\n  process.nextTick(() => { throw err; });\n}\n\nfunction makeEventHandler(handler) {\n  // Event handlers are dispatched in the order they were first set\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\n  function eventHandler(...args) {\n    if (typeof eventHandler.handler !== 'function') {\n      return;\n    }\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\n  }\n  eventHandler.handler = handler;\n  return eventHandler;\n}\n\nfunction defineEventHandler(emitter\x2C name) {\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n    get() {\n      return this[kHandlers]?.get(name)?.handler;\n    }\x2C\n    set(value) {\n      if (!this[kHandlers]) {\n        this[kHandlers] = new SafeMap();\n      }\n      let wrappedHandler = this[kHandlers]?.get(name);\n      if (wrappedHandler) {\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size--;\n          const size = this[kEvents].get(name).size;\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\n        }\n        wrappedHandler.handler = value;\n        if (typeof wrappedHandler.handler === 'function') {\n          this[kEvents].get(name).size++;\n          const size = this[kEvents].get(name).size;\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false);\n        }\n      } else {\n        wrappedHandler = makeEventHandler(value);\n        this.addEventListener(name\x2C wrappedHandler);\n      }\n      this[kHandlers].set(name\x2C wrappedHandler);\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n}\n\nconst EventEmitterMixin = (Superclass) => {\n  class MixedEventEmitter extends Superclass {\n    constructor(...args) {\n      args = new SafeArrayIterator(args);\n      super(...args);\n      FunctionPrototypeCall(EventEmitter\x2C this);\n    }\n  }\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\n  delete protoProps.constructor;\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\n  return MixedEventEmitter;\n};\n\nmodule.exports = {\n  Event\x2C\n  EventEmitterMixin\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initEventTarget\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kTrustEvent\x2C\n  kRemoveListener\x2C\n  kEvents\x2C\n  kWeakHandler\x2C\n  isEventTarget\x2C\n};\n
code-source-info,0x3ba9c5aff4e6,38,23423,23845,C0O23475C23O23659C30O23691C33O23704C38O23659C43O23718C47O23751C52O23792C57O23751C62O23818C64O23843,,
tick,0x7ff81f1959f9,97702,0,0x0,1
tick,0x7ff81f29ea25,97722,0,0x0,3,0x108a8eb80,0x3ba9c5af686f,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
tick,0x1087d97f3,97810,0,0x0,0,0x1085f1e50,0x3ba9c5aff51f,0x3ba9c5af686f,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af2962,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5af224a,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,98259,0x3ba9ddf037a6,5, node:internal/modules/esm/translators:1:1,0x3ba9ddf032f0,~
script-source,111,node:internal/modules/esm/translators,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  Boolean\x2C\n  JSONParse\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectKeys\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  SyntaxErrorPrototype\x2C\n  globalThis: { WebAssembly }\x2C\n} = primordials;\n\nlet _TYPES = null;\nfunction lazyTypes() {\n  if (_TYPES !== null) return _TYPES;\n  return _TYPES = require('internal/util/types');\n}\n\nconst { readFileSync } = require('fs');\nconst { extname\x2C isAbsolute } = require('path');\nconst {\n  hasEsmSyntax\x2C\n  loadNativeModule\x2C\n  stripBOM\x2C\n} = require('internal/modules/cjs/helpers');\nconst {\n  Module: CJSModule\x2C\n  cjsParseCache\n} = require('internal/modules/cjs/loader');\nconst internalURLModule = require('internal/url');\nconst createDynamicModule = require(\n  'internal/modules/esm/create_dynamic_module');\nconst { fileURLToPath\x2C URL } = require('url');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\n} = require('internal/errors').codes;\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\nconst moduleWrap = internalBinding('module_wrap');\nconst { ModuleWrap } = moduleWrap;\nconst { getOptionValue } = require('internal/options');\nconst experimentalImportMetaResolve =\n    getOptionValue('--experimental-import-meta-resolve');\nconst asyncESM = require('internal/process/esm_loader');\nconst { emitWarningSync } = require('internal/process/warning');\nconst { TextDecoder } = require('internal/encoding');\n\nlet cjsParse;\nasync function initCJSParse() {\n  if (typeof WebAssembly === 'undefined') {\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n  } else {\n    const { parse\x2C init } =\n        require('internal/deps/cjs-module-lexer/dist/lexer');\n    await init();\n    cjsParse = parse;\n  }\n}\n\nconst translators = new SafeMap();\nexports.translators = translators;\nexports.enrichCJSError = enrichCJSError;\n\nlet DECODER = null;\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\n  if (allowString && typeof body === 'string') {\n    return;\n  }\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\n    return;\n  }\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\n    hookName\x2C\n    'source'\x2C\n    body\n  );\n}\n\nfunction stringify(body) {\n  if (typeof body === 'string') return body;\n  assertBufferSource(body\x2C false\x2C 'transformSource');\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\n  return DECODER.decode(body);\n}\n\nfunction errPath(url) {\n  const parsed = new URL(url);\n  if (parsed.protocol === 'file:') {\n    return fileURLToPath(parsed);\n  }\n  return url;\n}\n\nasync function importModuleDynamically(specifier\x2C { url }) {\n  return asyncESM.esmLoader.import(specifier\x2C url);\n}\n\nfunction createImportMetaResolve(defaultParentUrl) {\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\n    return PromisePrototypeThen(\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\n      ({ url }) => url\x2C\n      (error) => (\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\n          error.url : PromiseReject(error))\n    );\n  };\n}\n\nfunction initializeImportMeta(meta\x2C { url }) {\n  // Alphabetical\n  if (experimentalImportMetaResolve)\n    meta.resolve = createImportMetaResolve(url);\n  meta.url = url;\n}\n\n// Strategy for loading a standard JavaScript module.\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\n  assertBufferSource(source\x2C true\x2C 'load');\n  source = stringify(source);\n  maybeCacheSourceMap(url\x2C source);\n  debug(`Translating StandardModule ${url}`);\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n  moduleWrap.callbackMap.set(module\x2C {\n    initializeImportMeta\x2C\n    importModuleDynamically\x2C\n  });\n  return module;\n});\n\n/**\n * @param {Error | any} err\n * @param {string} [content] Content of the file\x2C if known.\n * @param {string} [filename] Useful only if `content` is unknown.\n */\nfunction enrichCJSError(err\x2C content\x2C filename) {\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\n    // Emit the warning synchronously because we are in the middle of handling\n    // a SyntaxError that will throw and likely terminate the process before an\n    // asynchronous warning would be emitted.\n    emitWarningSync(\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\n      'the .mjs extension.'\n    );\n  }\n}\n\n// Strategy for loading a node-style CommonJS module\nconst isWindows = process.platform === 'win32';\nconst winSepRegEx = /\\//g;\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\n                                                            isMain) {\n  debug(`Translating CJSModule ${url}`);\n\n  let filename = internalURLModule.fileURLToPath(new URL(url));\n  if (isWindows)\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\n\n  if (!cjsParse) await initCJSParse();\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\n  const namesWithDefault = exportNames.has('default') ?\n    [...exportNames] : ['default'\x2C ...exportNames];\n\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\n    debug(`Loading CJSModule ${url}`);\n\n    let exports;\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\n      exports = asyncESM.esmLoader.cjsCache.get(module);\n      asyncESM.esmLoader.cjsCache.delete(module);\n    } else {\n      try {\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\n      } catch (err) {\n        enrichCJSError(err\x2C undefined\x2C filename);\n        throw err;\n      }\n    }\n\n    for (const exportName of exportNames) {\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\n          exportName === 'default')\n        continue;\n      // We might trigger a getter -> dont fail.\n      let value;\n      try {\n        value = exports[exportName];\n      } catch {}\n      this.setExport(exportName\x2C value);\n    }\n    this.setExport('default'\x2C exports);\n  });\n});\n\nfunction cjsPreparseModuleExports(filename) {\n  let module = CJSModule._cache[filename];\n  if (module) {\n    const cached = cjsParseCache.get(module);\n    if (cached)\n      return { module\x2C exportNames: cached.exportNames };\n  }\n  const loaded = Boolean(module);\n  if (!loaded) {\n    module = new CJSModule(filename);\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    CJSModule._cache[filename] = module;\n  }\n\n  let source;\n  try {\n    source = readFileSync(filename\x2C 'utf8');\n  } catch {}\n\n  let exports\x2C reexports;\n  try {\n    ({ exports\x2C reexports } = cjsParse(source || ''));\n  } catch {\n    exports = [];\n    reexports = [];\n  }\n\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\n\n  // Set first for cycles.\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\n\n  if (reexports.length) {\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n  }\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\n    let resolved;\n    try {\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\n    } catch {\n      return;\n    }\n    const ext = extname(resolved);\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\n        isAbsolute(resolved)) {\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\n      for (const name of reexportNames)\n        exportNames.add(name);\n    }\n  });\n\n  return { module\x2C exportNames };\n}\n\n// Strategy for loading a node builtin CommonJS module that isn't\n// through normal resolution\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\n  debug(`Translating BuiltinModule ${url}`);\n  // Slice 'node:' scheme\n  const id = StringPrototypeSlice(url\x2C 5);\n  const module = loadNativeModule(id\x2C url);\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\n  }\n  debug(`Loading BuiltinModule ${url}`);\n  return module.getESMFacade();\n});\n\n// Strategy for loading a JSON file\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\n  emitExperimentalWarning('Importing JSON modules');\n  assertBufferSource(source\x2C true\x2C 'load');\n  debug(`Loading JSONModule ${url}`);\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\n    fileURLToPath(url) : null;\n  let modulePath;\n  let module;\n  if (pathname) {\n    modulePath = isWindows ?\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  source = stringify(source);\n  if (pathname) {\n    // A require call could have been called on the same file during loading and\n    // that resolves synchronously. To make sure we always return the identical\n    // export\x2C we have to check again if the module already exists or not.\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  try {\n    const exports = JSONParse(stripBOM(source));\n    module = {\n      exports\x2C\n      loaded: true\n    };\n  } catch (err) {\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\n    // parse error instead of just manipulating the original error message.\n    // That would allow to add further properties and maybe additional\n    // debugging information.\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n  if (pathname) {\n    CJSModule._cache[modulePath] = module;\n  }\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n    debug(`Parsing JSONModule ${url}`);\n    this.setExport('default'\x2C module.exports);\n  });\n});\n\n// Strategy for loading a wasm module\ntranslators.set('wasm'\x2C async function(url\x2C source) {\n  emitExperimentalWarning('Importing Web Assembly modules');\n\n  assertBufferSource(source\x2C false\x2C 'load');\n\n  debug(`Translating WASMModule ${url}`);\n\n  let compiled;\n  try {\n    compiled = await WebAssembly.compile(source);\n  } catch (err) {\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n\n  const imports =\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\n                        ({ module }) => module);\n  const exports =\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\n                      ({ name }) => name);\n\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\n    for (const expt of ObjectKeys(exports))\n      reflect.exports[expt].set(exports[expt]);\n  }).module;\n});\n
code-source-info,0x3ba9ddf037a6,111,0,11226,C0O0C4O11226,,
code-creation,Function,10,99347,0x3ba9ddf04046,773, node:internal/modules/esm/translators:1:1,0x3ba9ddf03720,~
code-source-info,0x3ba9ddf
tick,0x108599b38,99496,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5af2258,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae7abc,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae6204,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,99655,0x3ba9ddf0565e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x3ba9ddf05488,~
script-source,112,node:internal/modules/esm/create_dynamic_module,'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  JSONStringify\x2C\n  ObjectCreate\x2C\n  SafeSet\x2C\n} = primordials;\n\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\n\nfunction createImport(impt\x2C index) {\n  const imptPath = JSONStringify(impt);\n  return `import * as $import_${index} from ${imptPath};\nimport.meta.imports[${imptPath}] = $import_${index};`;\n}\n\nfunction createExport(expt) {\n  const name = `${expt}`;\n  return `let $${name};\nexport { $${name} as ${name} };\nimport.meta.exports.${name} = {\n  get: () => $${name}\x2C\n  set: (v) => $${name} = v\x2C\n};`;\n}\n\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\n  const source = `\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\nimport.meta.done();\n`;\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\n\n  const readyfns = new SafeSet();\n  const reflect = {\n    exports: ObjectCreate(null)\x2C\n    onReady: (cb) => { readyfns.add(cb); }\x2C\n  };\n\n  if (imports.length)\n    reflect.imports = ObjectCreate(null);\n\n  callbackMap.set(m\x2C {\n    initializeImportMeta: (meta\x2C wrap) => {\n      meta.exports = reflect.exports;\n      if (reflect.imports)\n        meta.imports = reflect.imports;\n      meta.done = () => {\n        evaluate(reflect);\n        reflect.onReady = (cb) => cb(reflect);\n        for (const fn of readyfns) {\n          readyfns.delete(fn);\n          fn(reflect);\n        }\n      };\n    }\x2C\n  });\n\n  return {\n    module: m\x2C\n    reflect\x2C\n  };\n};\n\nmodule.exports = createDynamicModule;\n
code-source-info,0x3ba9ddf0565e,112,0,1756,C0O0C4O1756,,
code-creation,Function,10,99860,0x3ba9ddf05886,111, node:internal/modules/esm/create_dynamic_module:1:1,0x3ba9ddf055d8,~
code-source-info,0x3ba9ddf05886,112,0,1756,C0O0C39O25C45O47C51O68C57O85C63O101C69O140C72O140C77O173C90O174C96O140C98O642C103O1718C105O1733C110O1755,,
tick,0x1087e9fd0,100336,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae6237,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Eval,10,100379,0x3ba9ddf06b3e,5, node:internal/vm/module:1:1,0x3ba9ddf065f8,~
script-source,113,node:internal/vm/module,'use strict';\n\nconst assert = require('internal/assert');\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeSome\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseAll\x2C\n  ReflectApply\x2C\n  SafeWeakMap\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nconst { isContext } = internalBinding('contextify');\nconst {\n  isModuleNamespaceObject\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  getConstructorOf\x2C\n  customInspectSymbol\x2C\n  emitExperimentalWarning\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\n  ERR_VM_MODULE_NOT_MODULE\x2C\n  ERR_VM_MODULE_STATUS\x2C\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst binding = internalBinding('module_wrap');\nconst {\n  ModuleWrap\x2C\n  kUninstantiated\x2C\n  kInstantiating\x2C\n  kInstantiated\x2C\n  kEvaluating\x2C\n  kEvaluated\x2C\n  kErrored\x2C\n} = binding;\n\nconst STATUS_MAP = {\n  [kUninstantiated]: 'unlinked'\x2C\n  [kInstantiating]: 'linking'\x2C\n  [kInstantiated]: 'linked'\x2C\n  [kEvaluating]: 'evaluating'\x2C\n  [kEvaluated]: 'evaluated'\x2C\n  [kErrored]: 'errored'\x2C\n};\n\nlet globalModuleId = 0;\nconst defaultModuleName = 'vm:module';\nconst wrapToModuleMap = new SafeWeakMap();\n\nconst kWrap = Symbol('kWrap');\nconst kContext = Symbol('kContext');\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\nconst kLink = Symbol('kLink');\n\nclass Module {\n  constructor(options) {\n    emitExperimentalWarning('VM Modules');\n\n    if (new.target === Module) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new TypeError('Module is not a constructor');\n    }\n\n    const {\n      context\x2C\n      sourceText\x2C\n      syntheticExportNames\x2C\n      syntheticEvaluationSteps\x2C\n    } = options;\n\n    if (context !== undefined) {\n      validateObject(context\x2C 'context');\n      if (!isContext(context)) {\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\n                                       context);\n      }\n    }\n\n    let { identifier } = options;\n    if (identifier !== undefined) {\n      validateString(identifier\x2C 'options.identifier');\n    } else if (context === undefined) {\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\n    } else if (context[kPerContextModuleId] !== undefined) {\n      const curId = context[kPerContextModuleId];\n      identifier = `${defaultModuleName}(${curId})`;\n      context[kPerContextModuleId] += 1;\n    } else {\n      identifier = `${defaultModuleName}(0)`;\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\n        value: 1\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (sourceText !== undefined) {\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\n                                   options.lineOffset\x2C options.columnOffset\x2C\n                                   options.cachedData);\n\n      binding.callbackMap.set(this[kWrap]\x2C {\n        initializeImportMeta: options.initializeImportMeta\x2C\n        importModuleDynamically: options.importModuleDynamically ?\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\n          undefined\x2C\n      });\n    } else {\n      assert(syntheticEvaluationSteps);\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\n                                   syntheticExportNames\x2C\n                                   syntheticEvaluationSteps);\n    }\n\n    wrapToModuleMap.set(this[kWrap]\x2C this);\n\n    this[kContext] = context;\n  }\n\n  get identifier() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kWrap].url;\n  }\n\n  get context() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kContext];\n  }\n\n  get namespace() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\n    }\n    return this[kWrap].getNamespace();\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return STATUS_MAP[this[kWrap].getStatus()];\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS('must be errored');\n    }\n    return this[kWrap].getError();\n  }\n\n  async link(linker) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateFunction(linker\x2C 'linker');\n    if (this.status === 'linked') {\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\n    }\n    if (this.status !== 'unlinked') {\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\n    }\n    await this[kLink](linker);\n    this[kWrap].instantiate();\n  }\n\n  async evaluate(options = {}) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n\n    validateObject(options\x2C 'options');\n\n    let timeout = options.timeout;\n    if (timeout === undefined) {\n      timeout = -1;\n    } else {\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\n    }\n    const { breakOnSigint = false } = options;\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n    const status = this[kWrap].getStatus();\n    if (status !== kInstantiated &&\n        status !== kEvaluated &&\n        status !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS(\n        'must be one of linked\x2C evaluated\x2C or errored'\n      );\n    }\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || Module;\n    const o = ObjectCreate({ constructor });\n    o.status = this.status;\n    o.identifier = this.identifier;\n    o.context = this.context;\n\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\n      value: constructor.name\x2C\n      configurable: true\n    });\n\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return inspect(o\x2C { ...options\x2C customInspect: false });\n  }\n}\n\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\nconst kNoError = Symbol('kNoError');\n\nclass SourceTextModule extends Module {\n  #error = kNoError;\n  #statusOverride;\n\n  constructor(sourceText\x2C options = {}) {\n    validateString(sourceText\x2C 'sourceText');\n    validateObject(options\x2C 'options');\n\n    const {\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n      context\x2C\n      identifier\x2C\n      cachedData\x2C\n    } = options;\n\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n\n    if (initializeImportMeta !== undefined &&\n        typeof initializeImportMeta !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\n    }\n\n    if (importModuleDynamically !== undefined &&\n        typeof importModuleDynamically !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.importModuleDynamically'\x2C 'function'\x2C\n        importModuleDynamically);\n    }\n\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n\n    super({\n      sourceText\x2C\n      context\x2C\n      identifier\x2C\n      lineOffset\x2C\n      columnOffset\x2C\n      cachedData\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n    });\n\n    this[kLink] = async (linker) => {\n      this.#statusOverride = 'linking';\n\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\n        const module = await linker(identifier\x2C this\x2C { assert });\n        if (module[kWrap] === undefined) {\n          throw new ERR_VM_MODULE_NOT_MODULE();\n        }\n        if (module.context !== this.context) {\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\n        }\n        if (module.status === 'errored') {\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\n          // and error cause proposal.\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\n        }\n        if (module.status === 'unlinked') {\n          await module[kLink](linker);\n        }\n        return module[kWrap];\n      });\n\n      try {\n        if (promises !== undefined) {\n          await PromiseAll(promises);\n        }\n      } catch (e) {\n        this.#error = e;\n        throw e;\n      } finally {\n        this.#statusOverride = undefined;\n      }\n    };\n\n    this[kDependencySpecifiers] = undefined;\n  }\n\n  get dependencySpecifiers() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kDependencySpecifiers] === undefined) {\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\n    }\n    return this[kDependencySpecifiers];\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return 'errored';\n    }\n    if (this.#statusOverride) {\n      return this.#statusOverride;\n    }\n    return super.status;\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return this.#error;\n    }\n    return super.error;\n  }\n\n  createCachedData() {\n    const { status } = this;\n    if (status === 'evaluating' ||\n        status === 'evaluated' ||\n        status === 'errored') {\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\n    }\n    return this[kWrap].createCachedData();\n  }\n}\n\nclass SyntheticModule extends Module {\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\n    if (!ArrayIsArray(exportNames) ||\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\n                                     'Array of unique strings'\x2C\n                                     exportNames);\n    } else {\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\n                                          name\x2C\n                                          'is duplicated');\n        }\n      });\n    }\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\n\n    validateObject(options\x2C 'options');\n\n    const { context\x2C identifier } = options;\n\n    super({\n      syntheticExportNames: exportNames\x2C\n      syntheticEvaluationSteps: evaluateCallback\x2C\n      context\x2C\n      identifier\x2C\n    });\n\n    this[kLink] = () => this[kWrap].link(() => {\n      assert.fail('link callback should not be called');\n    });\n  }\n\n  setExport(name\x2C value) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateString(name\x2C 'name');\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must be linked');\n    }\n    this[kWrap].setExport(name\x2C value);\n  }\n}\n\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\n  const importModuleDynamicallyWrapper = async (...args) => {\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\n    if (isModuleNamespaceObject(m)) {\n      return m;\n    }\n    if (!m || m[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (m.status === 'errored') {\n      throw m.error;\n    }\n    return m.namespace;\n  };\n  return importModuleDynamicallyWrapper;\n}\n\nmodule.exports = {\n  Module\x2C\n  SourceTextModule\x2C\n  SyntheticModule\x2C\n  importModuleDynamicallyWrap\x2C\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\n};\n
code-source-info,0x3ba9ddf06b3e,113,0,12310,C0O0C4O12310,,
code-creation,Function,10,101568,0x3ba9ddf07d9e,872, node:internal/vm/module:1:1,0x3ba9ddf06ab8,~
code-source-info,0x3ba9ddf07d9e
code-creation,Function,10,101676,0x3ba9ddf082de,30,<instance_members_initializer> node:internal/vm/module:256:3,0x3ba9ddf07128,~
code-source-info,0x3ba9ddf082de,113,6796,6832,C3O6805C29O6832,,
tick,0x7ff81f171a2b,101716,1,0x10843a650,3,0x1085cff20,0x3ba995f3cd24,0x3ba995f3c015,0x3ba9c5ae6237,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5ae1b11,0x3ba995f3cd45,0x3ba995f3c015,0x3ba9c5add924,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,LazyCompile,10,101910,0x3ba9ddf096d6,16,ESMLoader node:internal/modules/esm/loader:52:1,0x3ba9c5ae7250,~
code-source-info,0x3ba9ddf096d6,102,1392,1392,C0O1392C15O1392,,
code-creation,LazyCompile,10,101985,0x3ba9ddf0a66e,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x3ba9c5ae91a8,~
code-source-info,0x3ba9ddf0a66e,103,430,447,C3O436C7O442C11O436C26O446,,
code-creation,LazyCompile,10,102049,0x3ba9ddf0a8ce,13,desc.value node:internal/per_context/primordials:325:32,0x3ba960949d90,~
code-source-info,0x3ba9ddf0a8ce,6,9496,9555,C0O9513C7O9520C12O9543,,
code-creation,LazyCompile,10,102096,0x3ba9ddf0a9d6,13,SafeIterator node:internal/per_context/primordials:270:16,0x3ba9609497e0,~
code-source-info,0x3ba9ddf0a9d6,6,7785,7845,C0O7804C3O7821C7O7819C12O7844,,
code-creation,LazyCompile,10,102146,0x3ba9ddf0ab0e,13,next node:internal/per_context/primordials:273:9,0x3ba9609498a8,~
code-source-info,0x3ba9ddf0ab0e,6,7854,7899,C0O7865C3O7882C8O7872C12O7893,,
code-creation,LazyCompile,10,102383,0x3ba9ddf0ad8e,152,deprecate node:internal/util:96:19,0x3ba960969c68,~
code-source-info,0x3ba9ddf0ad8e,12,2408,3584,C0O2408C26O2428C31O2440C37O2454C42O2470C44O2480C45O2535C53O2573C61O2595C66O2576C83O2631C87O2659C100O2659C105O2705C106O2705C108O3280C121O3280C126O3320C129O3327C135O3520C141O3546C145O3541C149O3564C151O3582,,
code-creation,LazyCompile,10,102615,0x3ba9ddf0b4e6,315,Module._initPaths node:internal/modules/cjs/loader:1227:29,0x3ba9c5ae0b48,~
code-source-info,0x3ba9ddf0b4e
code-creation,Function,11,102818,0x10dd44060,1284,resolve node:path:1091:10,0x3ba95c928450,^
code-source-info,0x10dd44060,35,33782,34692,,,
code-creation,Function,11,102881,0x10dd445e0,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3ba96094f8f8,^
code-source-info,0x10dd445e0,9,10315,10658,,,
tick,0x108ce24a3,102910,0,0x0,0,0x108a97160,0x3ba9c5ac799a,0x3ba9ddf0b5c3,0x3ba9c5add939,0x3ba9c5ac21c2,0x3ba995f3bd9d
code-creation,Function,11,102941,0x10dd448e0,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3ba96094f828,^
code-source-info,0x10dd448e0,9,9528,10089,,,
code-creation,Function,11,102990,0x10dd44e40,432,getOptionsFromBinding node:internal/options:18:31,0x3ba9c5ac1198,^
code-source-info,0x10dd44e40,93,467,565,,,
code-creation,Function,11,103022,0x10dd45060,104,next node:internal/per_context/primordials:273:9,0x3ba9609498a8,^
code-source-info,0x10dd45060,6,7854,7899,,,
code-creation,Function,11,103053,0x10dd45140,252,SafeMap node:internal/per_context/primordials:351:16,0x3ba960949e38,^
code-source-info,0x10dd45140,6,10200,10217,,,
code-creation,Eval,10,103217,0x3ba9ddf0e7de,5, node:internal/modules/run_main:1:1,0x3ba9ddf0e5d8,~
script-source,114,node:internal/modules/run_main,'use strict';\n\nconst {\n  StringPrototypeEndsWith\x2C\n} = primordials;\nconst CJSLoader = require('internal/modules/cjs/loader');\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\nconst { getOptionValue } = require('internal/options');\nconst path = require('path');\n\nfunction resolveMainPath(main) {\n  // Note extension resolution for the main entry point can be deprecated in a\n  // future major.\n  // Module._findPath is monkey-patchable here.\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  if (!mainPath)\n    return;\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain)\n    mainPath = toRealPath(mainPath);\n\n  return mainPath;\n}\n\nfunction shouldUseESMLoader(mainPath) {\n  const userLoader = getOptionValue('--experimental-loader');\n  if (userLoader)\n    return true;\n  const esModuleSpecifierResolution =\n    getOptionValue('--experimental-specifier-resolution');\n  if (esModuleSpecifierResolution === 'node')\n    return true;\n  // Determine the module format of the main\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\n    return true;\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\n    return false;\n  const pkg = readPackageScope(mainPath);\n  return pkg && pkg.data.type === 'module';\n}\n\nfunction runMainESM(mainPath) {\n  const { loadESM } = require('internal/process/esm_loader');\n  const { pathToFileURL } = require('internal/url');\n\n  handleMainPromise(loadESM((esmLoader) => {\n    const main = path.isAbsolute(mainPath) ?\n      pathToFileURL(mainPath).href :\n      mainPath;\n    return esmLoader.import(main);\n  }));\n}\n\nasync function handleMainPromise(promise) {\n  // Handle a Promise from running code that potentially does Top-Level Await.\n  // In that case\x2C it makes sense to set the exit code to a specific non-zero\n  // value if the main code never finishes running.\n  function handler() {\n    if (process.exitCode === undefined)\n      process.exitCode = 13;\n  }\n  process.on('exit'\x2C handler);\n  try {\n    return await promise;\n  } finally {\n    process.off('exit'\x2C handler);\n  }\n}\n\n// For backwards compatibility\x2C we have to run a bunch of\n// monkey-patchable code that belongs to the CJS loader (exposed by\n// `require('module')`) even when the entry point is ESM.\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    runMainESM(resolvedMain || main);\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  handleMainPromise\x2C\n};\n
code-source-info,0x3ba9ddf0e7de,114,0,2695,C0O0C4O2695,,
code-creation,Function,10,103510,0x3ba9ddf0ead6,149, node:internal/modules/run_main:1:1,0x3ba9ddf0e758,~
code-source-info,0x3ba9ddf0ead6,114,0,2695,C0O0C60O25C66O85C72O85C77O133C83O141C89O153C95O212C101O212C106O193C112O254C118O254C122O254C124O2627C131O2648C137O2673C143O2642C148O2694,,
code-creation,LazyCompile,10,103659,0x3ba9ddf0f286,154,initializeESMLoader node:internal/bootstrap/pre_execution:432:29,0x3ba995f3e2f0,~
code-source-info,0x3ba9ddf0f286,92,13713,14780,C0O13795C6O13795C13O13844C16O13840C21O13838C25O13862C31O13894C32O13901C33O14001C39O14001C44O13917C49O13957C54O14047C60O14047C65O14248C70O14206C74O14318C79O14279C83O14484C91O14488C97O14604C103O14604C108O14553C113O14561C118O14579C123O14650C129O14650C134O14669C136O14679C140O14693C142O14713C146O14737C148O14756C153O14779,,
code-creation,LazyCompile,10,103746,0x3ba9ddf0f486,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x3ba9c5ae0038,~
code-source-info,0x3ba9ddf0f486,99,2306,2346,C0O2311C4O2344,,
code-creation,LazyCompile,10,103797,0x3ba9ddf0f52e,21,assert node:internal/assert:11:16,0x3ba9992177b8,~
script-source,16,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x3ba9ddf0f52e,16,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,LazyCompile,10,103903,0x3ba9ddf0f72e,53,loadPreloadModules node:internal/bootstrap/pre_execution:475:28,0x3ba995f3e3e0,~
code-source-info,0x3ba9ddf0f72e,92,15256,15576,C0O15343C8O15343C13O15374C15O15411C21O15418C26O15494C32O15494C37O15494C42O15461C47O15538C52O15575,,
code-creation,LazyCompile,10,103992,0x3ba9ddf0f91e,166,Module._preloadModules node:internal/modules/cjs/loader:1257:34,0x3ba9c5ae0bd8,~
code-source-info,0x3ba9ddf0f91e,99,39364,39938,C0O39379C5O39384C11O39412C12O39419C13O39423C17O39436C23O39631C33O39631C42O39681C45O39703C53O39728C58O39728C63O39703C68O39694C85O39756C88O39762C95O39767C100O39789C106O39802C114O39817C116O39817C119O39851C121O39867C125O39856C130O39891C137O39907C141O39891C146O39876C151O39838C154O39915C158O39928C165O39937,,
code-creation,LazyCompile,10,104079,0x3ba9ddf0fb3e,94,Module node:internal/modules/cjs/loader:172:16,0x3ba9c5adf998,~
code-source-info,0x3ba9ddf0fb3e,99,5284,5521,C14O5306C16O5314C20O5322C22O5334C25O5339C30O5339C35O5332C39O5354C40O5367C44O5375C49O5393C54O5393C60O5414C71O5414C76O5453C77O5467C81O5477C82O5489C86O5500C88O5514C93O5520,,
code-creation,LazyCompile,10,104200,0x3ba9ddf0fd76,162,dirname node:path:1275:10,0x3ba95c928630,~
code-source-info,0x3ba9ddf0fd76,35,38742,39411,C0O38755C8O38755C13O38798C19O38805C24O38818C26O38829C27O38850C34O38850C42O38889C44O38885C48O38923C51O38950C53O38978C57O38985C61O38992C63O38992C68O39011C73O39015C81O39054C83O39050C88O39084C92O39115C97O39134C101O39221C103O39000C108O38960C111O39262C113O39270C118O39284C128O39311C129O39316C135O39335C140O39348C142O39360C143O39365C156O39372C161O39407,,
tick,0x1089ea170,104274,0,0x0,2,0x108a8eb80,0x3ba9ddf0fb5c,0x3ba9ddf0f93f,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,104300,0x3ba9ddf0ff4e,45,updateChildren node:internal/modules/cjs/loader:165:24,0x3ba9c5adf948,~
code-source-info,0x3ba9ddf0ff4e,99,5049,5222,C0O5092C7O5098C15O5112C19O5130C23O5138C26O5138C33O5184C38O5184C44O5221,,
code-creation,LazyCompile,10,104402,0x3ba9ddf1010e,183,Module._nodeModulePaths node:internal/modules/cjs/loader:629:37,0x3ba9c5ae0478,~
code-source-info,0x3ba9ddf1010e,99,18791,19922,C0O18846C5O18858C10O18858C17O19037C19O19046C24O19061C28O19086C29O19301C32O19327C36O19334C40O19343C42O19358C47O19368C48O19368C53O19400C58O19400C64O19442C66O19455C68O19451C73O19485C75O19495C77O19491C82O19512C89O19563C100O19563C108O19599C112O19512C117O19638C120O19656C124O19676C126O19682C131O19700C138O19711C144O19715C149O19737C156O19769C159O19376C164O19309C167O19856C175O19856C180O19905C182O19918,,
code-creation,LazyCompile,10,104560,0x3ba9ddf104ae,127,Module.require node:internal/modules/cjs/loader:997:36,0x3ba9c5ae07d8,~
code-source-info,0x3ba9ddf104ae,99,31204,31495,C0O31213C8O31213C13O31241C15O31248C20O31262C36O31268C41O31262C42O31377C51O31389C60O31405C63O31419C76O31419C93O31474C102O31486C126O31494,,
code-creation,LazyCompile,10,104731,0x3ba9ddf10796,619,Module._load node:internal/modules/cjs/loader:757:24,0x3ba9c5ae0638,~
code-source-info,0x3ba9ddf
code-creation,LazyCompile,10,104865,0x3ba9ddf10c2e,104,logger node:internal/util/debuglog:96:18,0x3ba95c93ad30,~
code-source-info,0x3ba9ddf10c2e,40,2899,3124,C0O2899C3O2931C30O2955C35O2962C38O2970C39O2985C45O3002C49O2992C53O3007C54O3022C60O3039C66O3048C70O3029C75O3053C76O3069C80O3076C87O3089C92O3085C98O3076C103O3114,,
code-creation,LazyCompile,10,104927,0x3ba9ddf10d86,3, node:internal/per_context/primordials:276:21,0x3ba960949950,~
code-source-info,0x3ba9ddf10d86,6,7920,7949,C0O7931C2O7943,,
code-creation,LazyCompile,10,104995,0x3ba9ddf10e5e,155,debug node:internal/util/debuglog:76:15,0x3ba95c93ac90,~
code-source-info,0x3ba9ddf10e5e,40,2357,2781,C0O2357C3O2376C6O2376C9O2484C16O2505C22O2492C30O2490C36O2524C42O2560C47O2563C50O2560C54O2588C81O2612C86O2619C89O2627C90O2642C96O2659C100O2649C104O2664C105O2679C111O2696C117O2705C121O2686C126O2710C127O2726C131O2733C138O2746C143O2742C149O2733C154O2771,,
code-creation,LazyCompile,10,105062,0x3ba9ddf1102e,41,init node:internal/util/debuglog:72:16,0x3ba95c93ac40,~
code-source-info,0x3ba9ddf1102e,40,2259,2342,C0O2268C10O2274C14O2272C16O2311C26O2321C33O2319C40O2341,,
code-creation,LazyCompile,10,105111,0x3ba9ddf1111e,2,testEnabled node:internal/util/debuglog:32:19,0x3ba9c5ad1bd8,~
code-source-info,0x3ba9ddf1111e,40,973,984,C0O979C1O984,,
code-creation,LazyCompile,10,105182,0x3ba9ddf112b6,116,debuglogImpl node:internal/util/debuglog:49:22,0x3ba95c93aa78,~
code-source-info,0x3ba9ddf112b6,40,1451,1995,C0O1451C9O1470C18O1484C23O1511C34O1544C39O1552C43O1544C45O1563C55O1563C59O1595C71O1606C75O1611C83O1934C97O1952C99O1950C103O1970C112O1987C115O1993,,
code-creation,LazyCompile,10,105243,0x3ba9ddf1146e,10, node:internal/modules/cjs/loader:272:66,0x3ba9c5ae0308,~
code-source-info,0x3ba9ddf1146e,99,7709,7734,C0O7721C2O7727C9O7733,,
code-creation,LazyCompile,10,105287,0x3ba9ddf1151e,2,noop node:internal/util/debuglog:47:14,0x3ba95c93aa28,~
code-source-info,0x3ba9ddf1151e,40,1419,1427,C1O1426,,
tick,0x1089b1388,105469,0,0x0,2,0x108a8eb80,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,105504,0x3ba9ddf11946,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x3ba9c5ae06c0,~
code-source-info,0x3ba9ddf
code-creation,LazyCompile,10,105654,0x3ba9ddf11f06,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3ba96094f658,~
code-source-info,0x3ba9ddf11f06,9,7353,7449,C0O7376C5O7389C10O7393C15O7393C21O7406C23O7424C27O7445,,
code-creation,LazyCompile,10,105757,0x3ba9ddf121be,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x3ba9c5ae0508,~
code-source-info,0x3ba9ddf121be
code-creation,LazyCompile,10,105866,0x3ba9ddf124de,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x3ba9c5adfcb8,~
code-source-info,0x3ba9ddf124de,99,12270,12533,C0O12283C4O12296C5O12309C6O12324C12O12354C16O12363C17O12384C24O12387C29O12410C36O12413C44O12455C47O12470C52O12470C59O12478C62O12483C66O12476C69O12487C72O12508C73O12521C75O12532,,
code-creation,LazyCompile,10,105968,0x3ba9ddf1271e,235,trySelf node:internal/modules/cjs/loader:441:17,0x3ba9c5adfd08,~
code-source-info,0x3ba9ddf1271e,99,12551,13384,C0O12577C4O12594C5O12607C6O12648C9O12648C17O12625C22O12636C27O12686C31O12702C37O12725C38O12738C39O12756C47O12775C48O12788C49O12796C51O12829C55O12821C60O12841C65O12867C70O12913C82O12871C89O12929C94O12947C97O12981C102O12986C107O12947C112O12945C118O13010C119O13023C123O13041C128O13070C133O13099C138O13121C142O13099C149O13163C152O13163C159O13190C168O13070C183O13048C188O13236C200O13257C203O13263C210O13268C215O13302C222O13346C226O13308C231O13302C232O13370C234O13370,,
code-creation,LazyCompile,10,106072,0x3ba9ddf129f6,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x3ba9c5adfad8,~
code-source-info,0x3ba9ddf129f6,99,8919,9437,C0O8962C7O8996C10O8962C16O9008C18O9035C25O9090C28O9052C34O9100C47O9112C54O9168C61O9207C66O9211C70O9172C77O9236C78O9249C79O9268C84O9292C86O9290C90O9268C95O9302C97O9313C104O9334C110O9353C116O9370C117O9397C119O9397C124O9026C127O9422C128O9435,,
code-creation,LazyCompile,10,106187,0x3ba9ddf12d56,234,readPackage node:internal/modules/cjs/loader:290:21,0x3ba9c5adfa88,~
code-source-info,0x3ba9ddf12d56,99,8102,8892,C0O8137C5O8142C13O8142C20O8200C25O8217C30O8217C36O8234C38O8262C40O8278C41O8297C46O8315C51O8315C57O8353C63O8366C72O8392C77O8402C79O8432C84O8449C91O8449C97O8475C98O8488C102O8521C107O8521C112O8559C117O8580C125O8605C133O8633C141O8664C149O8692C160O8708C165O8725C170O8725C176O8754C178O8770C190O8791C195O8798C199O8814C207O8843C213O8854C220O8865C224O8861C227O8824C231O8878C233O8878,,
code-creation,LazyCompile,10,106337,0x3ba9ddf1305e,199,read node:internal/modules/package_json_reader:16:14,0x3ba9c5ae5628,~
code-source-info,0x3ba9ddf1305e,100,292,954,C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C53O384C59O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952,,
code-creation,LazyCompile,10,106405,0x3ba9ddf133ae,3,toNamespacedPath node:path:1266:19,0x3ba95c9285e0,~
code-source-info,0x3ba9ddf133ae,35,38609,38669,C0O38653C2O38665,,
tick,0x1089e7302,106735,0,0x0,2,0x108a8eb80,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,106762,0x3ba9ddf13b06,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x3ba9c5ae0358,~
code-source-info,0x3ba9ddf13b06,99,14327,16931,C0O14380C5O14385C10O14385C16O14408C18O14435C26O14458C30O14478C36O14485C41O14498C42O14511C43O14536C45O14544C51O14555C57O14555C62O14553C66O14606C69O14613C76O14623C80O14637C82O14652C84O14665C85O14673C87O14709C93O14716C100O14727C103O14770C107O14777C111O14727C119O14790C121O14782C125O14812C127O14838C134O14874C137O14854C143O14943C145O14956C149O14948C154O15041C156O15046C160O15055C165O15070C172O15084C177O15089C179O15104C183O15158C186O15158C192O15198C194O15227C196O15250C197O15279C202O15284C207O15284C214O15319C216O15345C219O15345C224O15365C228O15393C229O15400C234O15427C238O15452C244O15488C249O15504C254O15504C262O15554C265O15565C272O15614C278O16228C283O16244C288O16244C296O16290C299O16301C304O16348C308O16419C312O16453C320O16478C325O16460C330O16500C342O16511C348O16569C354O16589C359O16674C363O16706C371O16731C376O16713C381O16751C396O16762C402O16818C406O16840C409O16847C416O16868C420O16886C422O16902C423O14965C428O14930C434O16916C435O16929,,
code-creation,LazyCompile,10,106883,0x3ba9ddf13eb6,45,isAbsolute node:path:1156:13,0x3ba95c9284f0,~
code-source-info,0x3ba9ddf13eb6,35,35448,35594,C0O35461C8O35461C13O35507C19O35514C26O35532C31O35532C39O35571C41O35567C44O35590,,
code-creation,LazyCompile,10,107092,0x3ba9ddf14106,85,stat node:internal/modules/cjs/loader:151:14,0x3ba9c5adf8f8,~
code-source-info,0x3ba9ddf14106,99,4627,5024,C0O4642C5O4658C10O4658C17O4688C23O4733C28O4743C33O4743C39O4762C41O4788C43O4802C44O4824C49O4824C54O4856C61O4889C66O4969C71O4979C76O4979C82O5008C84O5022,,
code-creation,LazyCompile,10,107186,0x3ba9ddf14286,42,toRealPath node:internal/modules/cjs/loader:393:20,0x3ba9c5adfbc8,~
code-source-info,0x3ba9ddf14286,99,11292,11404,C0O11310C5O11320C10O11333C17O11353C20O11364C28O11383C35O11320C41O11402,,
code-creation,LazyCompile,10,107546,0x3ba9ddf146b6,1036,realpathSync node:fs:2408:22,0x3ba985fe15b0,~
script-source,77,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\n// When using FSReqCallback\x2C make sure to create the object only *after* all\n// parameter validation has happened\x2C so that the objects are not kept in memory\n// in case they are created but never used due to an exception.\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\n} = constants;\n\nconst pathModule = require('path');\nconst { isArrayBufferView } = require('internal/util/types');\n\n// We need to get the statValues from the binding at the callsite since\n// it's re-initialized after deserialization.\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\n  }\x2C\n  AbortError\x2C\n  uvErrmapGet\x2C\n  uvException\n} = require('internal/errors');\n\nconst { FSReqCallback } = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst internalUtil = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n} = require('internal/fs/utils');\nconst {\n  Dir\x2C\n  opendir\x2C\n  opendirSync\n} = require('internal/fs/dir');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isUint32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst watchers = require('internal/fs/watchers');\nconst ReadFileContext = require('internal/fs/read_file_context');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\nfunction maybeCallback(cb) {\n  validateCallback(cb);\n\n  return cb;\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateCallback(cb);\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateCallback(cb);\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isUint32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void | never}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n\n  const ctx = { path };\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  maybeCallback(callback);\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\n  value: (path) => {\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n  const ctx = { path };\n  const nPath = pathModule.toNamespacedPath(path);\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\n\n  // In case of an invalid symlink\x2C `binding.access()` on win32\n  // will **not** return an error and is therefore not enough.\n  // Double check with `binding.stat()`.\n  if (isWindows && ctx.errno === undefined) {\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\n  }\n\n  return ctx.errno === undefined;\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError());\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { flag: 'r' });\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const ctx = {};\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\n  if (ctx.errno !== undefined && !isUserFd) {\n    fs.closeSync(fd);\n    throw uvException(ctx);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  fd = getValidatedFd(fd);\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  fd = getValidatedFd(fd);\n\n  const ctx = {};\n  binding.close(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n\n  const ctx = { path };\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\n                              flagsNumber\x2C mode\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number} offset\n * @param {number} length\n * @param {number | bigint} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  if (arguments.length <= 3) {\n    // Assume fs.read(fd\x2C options\x2C callback)\n    let options = {};\n    if (arguments.length < 3) {\n      // This is fs.read(fd\x2C callback)\n      // buffer will be the callback\n      callback = buffer;\n    } else {\n      // This is fs.read(fd\x2C {}\x2C callback)\n      // buffer will be the options object\n      // offset is the callback\n      options = buffer;\n      callback = offset;\n    }\n\n    ({\n      buffer = Buffer.alloc(16384)\x2C\n      offset = 0\x2C\n      length = buffer.byteLength\x2C\n      position\n    } = options);\n  }\n\n  validateBuffer(buffer);\n  callback = maybeCallback(callback);\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint;\n *   }} [offset]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  if (arguments.length <= 3) {\n    // Assume fs.read(fd\x2C buffer\x2C options)\n    const options = offset || {};\n\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\n  }\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  const ctx = {};\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\n * @param {number} [offset]\n * @param {number} [length]\n * @param {number} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  if (isArrayBufferView(buffer)) {\n    callback = maybeCallback(callback || position || length || offset);\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = String(buffer);\n  validateEncoding(str\x2C length);\n  callback = maybeCallback(position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\n * @param {number} [offset]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n  if (isArrayBufferView(buffer)) {\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const ctx = { path: oldPath\x2C dest: newPath };\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = maybeCallback(callback);\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  const ctx = {};\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          return binding.rmdir(path\x2C req);\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    return binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  const ctx = { path };\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  return handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fsync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const ctx = { path };\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\n                               undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Direct[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                 options.encoding\x2C !!options.withFileTypes\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  fd = getValidatedFd(fd);\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction hasNoEntryError(ctx) {\n  if (ctx.errno) {\n    const uvErr = uvErrmapGet(ctx.errno);\n    return uvErr?.[0] === 'ENOENT';\n  }\n\n  if (ctx.error) {\n    return ctx.error.code === 'ENOENT';\n  }\n\n  return false;\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  fd = getValidatedFd(fd);\n  const ctx = { fd };\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                              options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\n                             options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path\x2C 'oldPath');\n  const ctx = { path };\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                                  options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch { }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  const flags = stringToSymlinkType(type);\n\n  const ctx = { path: target\x2C dest: path };\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const ctx = { path: existingPath\x2C dest: newPath };\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                              pathModule.toNamespacedPath(newPath)\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  const ctx = {};\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  callback = maybeCallback(callback);\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  const ctx = { path };\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const ctx = {};\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\n                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  const ctx = {};\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError();\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (isUserFd) {\n        callback(null);\n      } else {\n        fs.close(fd\x2C callback);\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | Object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView | Object} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\n  }\n\n  const flag = options.flag || 'w';\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options\x2C {});\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n  if (options.recursive && !(isOSX || isWindows))\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\n  const watcher = new watchers.FSWatcher();\n  watcher[watchers.kFSWatchStart](filename\x2C\n                                  options.persistent\x2C\n                                  options.recursive\x2C\n                                  options.encoding);\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      options.signal.addEventListener('abort'\x2C listener);\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\nconst emptyObj = ObjectCreate(null);\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options\x2C emptyObj);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = ObjectCreate(null);\n  const knownHard = ObjectCreate(null);\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const ctx = { path: base };\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n    handleErrorFromBinding(ctx);\n    knownHard[base] = true;\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard[base] || cache?.get(base) === base) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const ctx = { path: base };\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard[base] = true;\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks[id]) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        const ctx = { path: base };\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      if (cache) cache.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      const ctx = { path: base };\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n      knownHard[base] = true;\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\n  options = getOptions(options\x2C {});\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = ObjectCreate(null);\n  const knownHard = ObjectCreate(null);\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard[base]) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard[base] = true;\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard[base]) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard[base] = true;\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks[id]) {\n        return gotTarget(null\x2C seenLinks[id]);\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options\x2C {});\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  return binding.realpath(path\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options\x2C {});\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options\x2C {});\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const path = `${prefix}XXXXXX`;\n  const ctx = { path };\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  const ctx = { path: src\x2C dest };  // non-prefixed\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {Object} [options]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {Object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 kb.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: Object | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: Object | null;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  opendir\x2C\n  opendirSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dir\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\n};\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  promises: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      if (promises === null)\n        promises = require('internal/fs/promises').exports;\n      return promises;\n    }\n  }\n});\n
code-source-info,0x3ba9ddf146b
tick,0x7ff81f29efbb,115126,0,0x0,3,0x108a8eb80,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ed43,115150,0,0x0,3,0x108a8eb80,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1083563a4,115162,0,0x0,3,0x108a8eb80,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29edb2,115173,0,0x0,3,0x108a8eb80,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f1742d3,115189,0,0x0,3,0x108a8eb80,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x10882c7b0,115204,0,0x0,3,0x108a8eb80,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,115222,0x3ba9ddf1ad56,123,getOptions node:internal/fs/utils:314:20,0x3ba985fe9958,~
script-source,78,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  MathMin\x2C\n  ObjectIs\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  Symbol\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\n  }\x2C\n  hideStackFrames\x2C\n  uvException\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isDate\x2C\n  isBigUint64Array\n} = require('internal/util/types');\nconst { once } = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\n    }\n  }\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type) {\n    this.name = name;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats) {\n    super(name\x2C null);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\n    return new DirentFromStats(name\x2C stats);\n  } else {\n    return new Dirent(name\x2C type);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions) {\n  if (options === null || options === undefined ||\n      typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = uvException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\n// otherwise return silently.\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  const err = new ERR_INVALID_ARG_VALUE(\n    propName\x2C\n    path\x2C\n    'must be a string or Uint8Array without null bytes'\n  );\n  if (throwError) {\n    throw err;\n  }\n  return err;\n});\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() to the timestamp.\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\nfunction dateFromMs(ms) {\n  return new Date(Number(ms) + 0.5);\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\nStats.prototype.isFile = StatsBase.prototype.isFile;\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigUint64Array} stats\n * @param {number} offset\n * @returns\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigUint64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C\n                                 `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32(length\x2C 'length'\x2C 0);\n  }\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const err = nullCheck(path\x2C propName\x2C false);\n\n  if (err !== undefined) {\n    throw err;\n  }\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      return cb(new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      }));\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned = process.noDeprecation;\nfunction emitRecursiveRmdirWarning() {\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean(options.recursive\x2C 'options.recursive');\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\n    return mode;\n  }\n  if (typeof mode !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\n  }\n  throw new ERR_OUT_OF_RANGE(\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer === 'string') {\n    return;\n  }\n\n  if (\n    typeof buffer === 'object' &&\n    buffer !== null &&\n    typeof buffer.toString === 'function' &&\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\n  ) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n    buffer\n  );\n});\n\nconst validatePosition = hideStackFrames((position\x2C name) => {\n  if (typeof position === 'number') {\n    validateInteger(position\x2C 'position');\n  } else if (typeof position === 'bigint') {\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\n      throw new ERR_OUT_OF_RANGE('position'\x2C\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\n                                 position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\n                                   ['integer'\x2C 'bigint']\x2C\n                                   position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n};\n
code-source-info,0x3ba9ddf1ad56,78,7218,7841,C0O7248C14O7340C16O7362C17O7370C23O7409C29O7453C31O7477C35O7492C42O7527C48O7566C66O7572C71O7566C72O7659C79O7668C84O7686C87O7709C92O7686C96O7735C102O7763C107O7791C115O7763C120O7824C122O7839,,
tick,0x7ff81f29ea54,117648,0,0x0,3,0x108a8eb80,0x3ba9ddf146c2,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f267316,117672,0,0x0,3,0x108a8eb80,0x3ba9ddf146c2,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,117692,0x3ba9ddf1ccae,48,assertEncoding node:internal/fs/utils:151:24,0x3ba985fe9360,~
code-source-info,0x3ba9ddf1ccae,78,3527,3704,C0O3542C6O3559C9O3566C14O3566C21O3609C24O3636C40O3642C45O3636C47O3703,,
code-creation,LazyCompile,10,117833,0x3ba9ddf1cdc6,20,toPathIfFileURL node:internal/url:1496:25,0x3ba95c91b128,~
script-source,33,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  Int8Array\x2C\n  Number\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  toUSVString\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateCallback\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst {\n  domainToASCII: _domainToASCII\x2C\n  domainToUnicode: _domainToUnicode\x2C\n  encodeAuth\x2C\n  parse\x2C\n  setURLConstructor\x2C\n  URL_FLAGS_CANNOT_BE_BASE\x2C\n  URL_FLAGS_HAS_FRAGMENT\x2C\n  URL_FLAGS_HAS_HOST\x2C\n  URL_FLAGS_HAS_PASSWORD\x2C\n  URL_FLAGS_HAS_PATH\x2C\n  URL_FLAGS_HAS_QUERY\x2C\n  URL_FLAGS_HAS_USERNAME\x2C\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\n  URL_FLAGS_SPECIAL\x2C\n  kFragment\x2C\n  kHost\x2C\n  kHostname\x2C\n  kPathStart\x2C\n  kPort\x2C\n  kQuery\x2C\n  kSchemeStart\n} = internalBinding('url');\n\nconst {\n  storeDataObject\x2C\n  revokeDataObject\x2C\n} = internalBinding('blob');\n\nconst context = Symbol('context');\nconst cannotBeBase = Symbol('cannot-be-base');\nconst cannotHaveUsernamePasswordPort =\n    Symbol('cannot-have-username-password-port');\nconst special = Symbol('special');\nconst searchParams = Symbol('query');\nconst kFormat = Symbol('format');\n\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nconst IteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf([][SymbolIterator]())\n);\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\nconst kOpaqueOrigin = 'null';\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  constructor() {\n    this.flags = 0;\n    this.scheme = ':';\n    this.username = '';\n    this.password = '';\n    this.host = null;\n    this.port = null;\n    this.path = [];\n    this.query = null;\n    this.fragment = null;\n  }\n}\n\nfunction isURLSearchParams(self) {\n  return self && self[searchParams] && !self[searchParams][searchParams];\n}\n\nclass URLSearchParams {\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    if (init === null || init === undefined) {\n      this[searchParams] = [];\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator]) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init[searchParams];\n        this[searchParams] = childParams.slice();\n      } else if (method !== null && method !== undefined) {\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // Sequence<sequence<USVString>>\n        // Note: per spec we have to first exhaust the lists then process them\n        const pairs = [];\n        for (const pair of init) {\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\n              pair === null ||\n              typeof pair[SymbolIterator] !== 'function') {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          const convertedPair = [];\n          for (const element of pair)\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\n          ArrayPrototypePush(pairs\x2C convertedPair);\n        }\n\n        this[searchParams] = [];\n        for (const pair of pairs) {\n          if (pair.length !== 2) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        this[searchParams] = [];\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = toUSVString(key);\n            const typedValue = toUSVString(init[key]);\n            this[searchParams].push(typedKey\x2C typedValue);\n          }\n        }\n      }\n    } else {\n      // USVString\n      init = toUSVString(init);\n      if (init[0] === '?') init = init.slice(1);\n      initSearchParams(this\x2C init);\n    }\n\n    // "associated url object"\n    this[context] = null;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this[searchParams];\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  append(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = toUSVString(name);\n    value = toUSVString(value);\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\n    update(this[context]\x2C this);\n  }\n\n  delete(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        list.splice(i\x2C 2);\n      } else {\n        i += 2;\n      }\n    }\n    update(this[context]\x2C this);\n  }\n\n  get(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    const values = [];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    value = toUSVString(value);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  sort() {\n    const a = this[searchParams];\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateCallback(callback);\n\n    let list = this[searchParams];\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this[searchParams];\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this[searchParams]);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: { enumerable: true }\x2C\n  delete: { enumerable: true }\x2C\n  get: { enumerable: true }\x2C\n  getAll: { enumerable: true }\x2C\n  has: { enumerable: true }\x2C\n  set: { enumerable: true }\x2C\n  sort: { enumerable: true }\x2C\n  entries: { enumerable: true }\x2C\n  forEach: { enumerable: true }\x2C\n  keys: { enumerable: true }\x2C\n  values: { enumerable: true }\x2C\n  toString: { enumerable: true }\x2C\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n  if (!this[searchParams]) { // Invoked from URL constructor\n    this[searchParams] = new URLSearchParams();\n    this[searchParams][context] = this;\n  }\n  initSearchParams(this[searchParams]\x2C query);\n}\n\nfunction onParseError(flags\x2C input) {\n  throw new ERR_INVALID_URL(input);\n}\n\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\n    ctx.flags |= URL_FLAGS_SPECIAL;\n  } else {\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\n  }\n  ctx.scheme = protocol;\n  ctx.port = port;\n}\n\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  } else {\n    ctx.host = null;\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].port = port;\n}\n\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\n}\n\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\n    ctx.path = path;\n    ctx.flags |= URL_FLAGS_HAS_PATH;\n  } else {\n    ctx.path = [];\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\n  }\n\n  // The C++ binding may set host to empty string.\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].query = query;\n}\n\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].fragment = fragment;\n}\n\nclass URL {\n  constructor(input\x2C base) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    let base_context;\n    if (base !== undefined) {\n      base_context = new URL(base)[context];\n    }\n    this[context] = new URLContext();\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\n  }\n\n  get [special]() {\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\n  }\n\n  get [cannotBeBase]() {\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\n  }\n\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  get [cannotHaveUsernamePasswordPort]() {\n    const { host\x2C scheme } = this[context];\n    return ((host == null || host === '') ||\n            this[cannotBeBase] ||\n            scheme === 'file:');\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (this == null ||\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\n      throw new ERR_INVALID_THIS('URL');\n    }\n\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = ObjectCreate({ constructor });\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj.cannotBeBase = this[cannotBeBase];\n      obj.special = this[special];\n      obj[context] = this[context];\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  [kFormat](options) {\n    if (options)\n      validateObject(options\x2C 'options');\n\n    options = {\n      fragment: true\x2C\n      unicode: false\x2C\n      search: true\x2C\n      auth: true\x2C\n      ...options\n    };\n    const ctx = this[context];\n    // https://url.spec.whatwg.org/#url-serializing\n    let ret = ctx.scheme;\n    if (ctx.host !== null) {\n      ret += '//';\n      const has_username = ctx.username !== '';\n      const has_password = ctx.password !== '';\n      if (options.auth && (has_username || has_password)) {\n        if (has_username)\n          ret += ctx.username;\n        if (has_password)\n          ret += `:${ctx.password}`;\n        ret += '@';\n      }\n      ret += options.unicode ?\n        domainToUnicode(ctx.host) : ctx.host;\n      if (ctx.port !== null)\n        ret += `:${ctx.port}`;\n    }\n    if (this[cannotBeBase]) {\n      ret += ctx.path[0];\n    } else {\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\n        ret += '/.';\n      }\n      if (ctx.path.length) {\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\n      }\n    }\n    if (options.search && ctx.query !== null)\n      ret += `?${ctx.query}`;\n    if (options.fragment && ctx.fragment !== null)\n      ret += `#${ctx.fragment}`;\n    return ret;\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  toString() {\n    return this[kFormat]({});\n  }\n\n  get href() {\n    return this[kFormat]({});\n  }\n\n  set href(input) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\n  }\n\n  // readonly\n  get origin() {\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\n    const ctx = this[context];\n    switch (ctx.scheme) {\n      case 'blob:':\n        if (ctx.path.length > 0) {\n          try {\n            return (new URL(ctx.path[0])).origin;\n          } catch {\n            // Fall through... do nothing\n          }\n        }\n        return kOpaqueOrigin;\n      case 'ftp:':\n      case 'http:':\n      case 'https:':\n      case 'ws:':\n      case 'wss:':\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\n    }\n    return kOpaqueOrigin;\n  }\n\n  get protocol() {\n    return this[context].scheme;\n  }\n\n  set protocol(scheme) {\n    // toUSVString is not needed.\n    scheme = `${scheme}`;\n    if (scheme.length === 0)\n      return;\n    const ctx = this[context];\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\n  }\n\n  get username() {\n    return this[context].username;\n  }\n\n  set username(username) {\n    // toUSVString is not needed.\n    username = `${username}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (username === '') {\n      ctx.username = '';\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\n      return;\n    }\n    ctx.username = encodeAuth(username);\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\n  }\n\n  get password() {\n    return this[context].password;\n  }\n\n  set password(password) {\n    // toUSVString is not needed.\n    password = `${password}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (password === '') {\n      ctx.password = '';\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\n      return;\n    }\n    ctx.password = encodeAuth(password);\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\n  }\n\n  get host() {\n    const ctx = this[context];\n    let ret = ctx.host || '';\n    if (ctx.port !== null)\n      ret += `:${ctx.port}`;\n    return ret;\n  }\n\n  set host(host) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\n  }\n\n  get hostname() {\n    return this[context].host || '';\n  }\n\n  set hostname(host) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\n  }\n\n  get port() {\n    const port = this[context].port;\n    return port === null ? '' : String(port);\n  }\n\n  set port(port) {\n    // toUSVString is not needed.\n    port = `${port}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (port === '') {\n      ctx.port = null;\n      return;\n    }\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\n  }\n\n  get pathname() {\n    const ctx = this[context];\n    if (this[cannotBeBase])\n      return ctx.path[0];\n    if (ctx.path.length === 0)\n      return '';\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\n  }\n\n  set pathname(path) {\n    // toUSVString is not needed.\n    path = `${path}`;\n    if (this[cannotBeBase])\n      return;\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\n          onParsePathComplete.bind(this));\n  }\n\n  get search() {\n    const { query } = this[context];\n    if (query === null || query === '')\n      return '';\n    return `?${query}`;\n  }\n\n  set search(search) {\n    const ctx = this[context];\n    search = toUSVString(search);\n    if (search === '') {\n      ctx.query = null;\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n    } else {\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\n      ctx.query = '';\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\n      if (search) {\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\n      }\n    }\n    initSearchParams(this[searchParams]\x2C search);\n  }\n\n  // readonly\n  get searchParams() {\n    return this[searchParams];\n  }\n\n  get hash() {\n    const { fragment } = this[context];\n    if (fragment === null || fragment === '')\n      return '';\n    return `#${fragment}`;\n  }\n\n  set hash(hash) {\n    const ctx = this[context];\n    // toUSVString is not needed.\n    hash = `${hash}`;\n    if (!hash) {\n      ctx.fragment = null;\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\n      return;\n    }\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\n    ctx.fragment = '';\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\n  }\n\n  toJSON() {\n    return this[kFormat]({});\n  }\n\n  static createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    // Yes\x2C lazy loading is annoying but because of circular\n    // references between the url\x2C internal/blob\x2C and buffer\n    // modules\x2C lazy loading here makes sure that things work.\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  static revokeObjectURL(url) {\n    url = `${url}`;\n    try {\n      const parsed = new URL(url);\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\n      if (split.length === 2)\n        revokeDataObject(split[1]);\n    } catch {\n      // If there's an error\x2C it's ignored.\n    }\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\n  toString: { enumerable: true }\x2C\n  href: { enumerable: true }\x2C\n  origin: { enumerable: true }\x2C\n  protocol: { enumerable: true }\x2C\n  username: { enumerable: true }\x2C\n  password: { enumerable: true }\x2C\n  host: { enumerable: true }\x2C\n  hostname: { enumerable: true }\x2C\n  port: { enumerable: true }\x2C\n  pathname: { enumerable: true }\x2C\n  search: { enumerable: true }\x2C\n  searchParams: { enumerable: true }\x2C\n  hash: { enumerable: true }\x2C\n  toJSON: { enumerable: true }\x2C\n});\n\nfunction update(url\x2C params) {\n  if (!url)\n    return;\n\n  const ctx = url[context];\n  const serializedParams = params.toString();\n  if (serializedParams) {\n    ctx.query = serializedParams;\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\n  } else {\n    ctx.query = null;\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n  }\n}\n\nfunction initSearchParams(url\x2C init) {\n  if (!init) {\n    url[searchParams] = [];\n    return;\n  }\n  url[searchParams] = parseParams(init);\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let pairStart = 0;\n  let lastPos = 0;\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i;\n  for (i = 0; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// Mainly to mitigate func-name-matching ESLint rule\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\n  // https://heycam.github.io/webidl/#dfn-class-string\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: classStr\n  });\n\n  // https://heycam.github.io/webidl/#es-operations\n  for (const key of ObjectKeys(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\nfunction createSearchParamsIterator(target\x2C kind) {\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\n  iterator[context] = {\n    target\x2C\n    kind\x2C\n    index: 0\n  };\n  return iterator;\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\n\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\n  next() {\n    if (!this ||\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n    }\n\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const values = target[searchParams];\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this[context].index = index + 2;\n\n    let result;\n    if (kind === 'key') {\n      result = name;\n    } else if (kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\n    };\n  }\x2C\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (this == null || this[context] == null || this[context].target == null)\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\n    );\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n});\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToUnicode(`${domain}`);\n}\n\n// Utility function that converts a URL object into an ordinary\n// options object as expected by the http.request and https.request\n// APIs.\nfunction urlToHttpOptions(url) {\n  const options = {\n    protocol: url.protocol\x2C\n    hostname: typeof url.hostname === 'string' &&\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\n      url.hostname\x2C\n    hash: url.hash\x2C\n    search: url.search\x2C\n    pathname: url.pathname\x2C\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\n    href: url.href\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\n  }\n  return options;\n}\n\nconst forwardSlashRegEx = /\\//g;\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\n        );\n      }\n    }\n  }\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = pathname.codePointAt(1) | 0x20;\n  const sep = pathname[2];\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return pathname.slice(1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURLInstance(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\n\nfunction encodePathChars(filepath) {\n  if (StringPrototypeIncludes(filepath\x2C '%'))\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath) {\n  const outURL = new URL('file://');\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    // UNC path format: \\\\server\\share\\resource\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\n    if (paths.length <= 3) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\n      );\n    }\n    const hostname = paths[2];\n    if (hostname.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Empty UNC servername'\n      );\n    }\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\n  } else {\n    let resolved = path.resolve(filepath);\n    // path.resolve strips trailing slashes so we must add them back\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                   filepath.length - 1);\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\n        resolved[resolved.length - 1] !== path.sep)\n      resolved += '/';\n    outURL.pathname = encodePathChars(resolved);\n  }\n  return outURL;\n}\n\nfunction isURLInstance(fileURLOrPath) {\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURLInstance(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = new URLContext();\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n\n  const url = ObjectCreate(URL.prototype);\n  url[context] = ctx;\n  const params = new URLSearchParams();\n  url[searchParams] = params;\n  params[context] = url;\n  initSearchParams(params\x2C query);\n  return url;\n}\nsetURLConstructor(constructUrl);\n\nmodule.exports = {\n  toUSVString\x2C\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  isURLInstance\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  formatSymbol: kFormat\x2C\n  searchParamsSymbol: searchParams\x2C\n  encodeStr\n};\n
code-source-info,0x3ba9ddf1cdc6,33,41449,41570,C0O41469C3O41474C9O41508C11O41529C12O41532C15O41539C19O41568,,
code-creation,LazyCompile,10,121825,0x3ba9ddf1fef6,17,isURLInstance node:internal/url:1492:23,0x3ba95c91b0d8,~
code-source-info,0x3ba9ddf1fef6,33,41326,41423,C0O41346C3O41367C6O41392C12O41414C16O41421,,
tick,0x7ff81f174279,121892,0,0x0,3,0x108a8eb80,0x3ba9ddf146cf,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108599a34,121920,0,0x0,3,0x108a8eb80,0x3ba9ddf146cf,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f267329,121947,0,0x0,3,0x108a8eb80,0x3ba9ddf146cf,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29eec4,121959,0,0x0,3,0x108a8eb80,0x3ba9ddf146cf,0x3ba9ddf142a9,0x3ba9ddf13c0f,0x3ba9ddf11bd7,0x3ba9ddf10820,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,121976,0x3ba9ddf20056,81, node:internal/fs/utils:668:38,0x3ba985fea380,~
code-source-info,0x3ba9ddf20056,78,18141,18411,C14O18174C22O18207C25O18207C31O18233C36O18264C49O18239C54O18233C55O18329C68O18329C74O18366C76O18395C78O18395C80O18410,,
code-creation,LazyCompile,10,122066,0x3ba9ddf20266,110, node:internal/fs/utils:357:35,0x3ba985fe99f8,~
code-source-info,0x3ba9ddf20266,78,8569,9158,C16O8633C21O8686C26O8686C31O8780C37O8803C41O8831C45O8848C51O8848C60O8899C64O8920C69O8920C76O8965C77O8972C78O8992C94O8992C100O9106C104O9128C106O9128C107O9145C109O9156,,
code-creation,LazyCompile,10,122131,0x3ba9ddf203de,16,isUint8Array node:internal/util/types:13:22,0x3ba999216d90,~
script-source,15,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\n  }\x2C\n  isCryptoKey: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\n  }\n});\n
code-source-info,0x3ba9ddf203de,15,257,342,C0O269C5O276C12O323C15O340,,
code-creation,LazyCompile,10,122443,0x3ba9ddf20856,61,splitRoot node:fs:2362:33,0x3ba985fe14c0,~
code-source-info,0x3ba9ddf20856,77,62796,62988,C0O62821C2O62832C6O62826C11O62853C16O62857C24O62895C26O62891C31O62923C44O62930C49O62962C50O62842C55O62808C58O62973C60O62984,,
code-creation,LazyCompile,10,122516,0x3ba9ddf2098e,20,nextPart node:fs:2395:31,0x3ba985fe1560,~
code-source-info,0x3ba9ddf2098e,77,63703,63761,C0O63716C14O63723C19O63757,,
code-creation,LazyCompile,10,122626,0x3ba9ddf20b96,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x3ba985fe99a8,~
code-source-info,0x3ba9ddf20b96,78,7930,8428,C0O7948C6O8011C11O8011C16O8033C24O8033C29O8090C31O8090C32O8115C38O8343C43O8370C51O8343C56O8416C60O8406C62O8427,,
code-creation,LazyCompile,10,122690,0x3ba9ddf20ce6,34,isFileType node:fs:205:20,0x3ba985fdf150,~
code-source-info,0x3ba9ddf20ce6,77,5285,5526,C0O5419C2O5424C6O5431C10O5465C15O5472C20O5488C22O5503C24O5501C30O5511C33O5524,,
code-creation,LazyCompile,10,122910,0x3ba9ddf211ce,72,encodeRealpathResult node:fs:2371:30,0x3ba985fe1510,~
code-source-info,0x3ba9ddf211ce,77,63022,63280,C0O63044C4O63069C10O63089C17O63098C22O63114C24O63128C25O63148C30O63155C35O63155C41O63183C48O63192C53O63212C55O63228C56O63251C61O63268C66O63251C71O63278,,
code-creation,LazyCompile,10,123011,0x3ba9ddf2135e,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x3ba9c5ada2c0,~
code-source-info,0x3ba9ddf2135e,98,1151,1431,C0O1187C5O1200C10O1204C15O1204C21O1221C26O1228C35O1258C43O1258C48O1384C53O1384C57O1414C59O1425C61O1430,,
tick,0x1089b4d45,123052,0,0x0,3,0x108a8eb80,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,123125,0x3ba9ddf21cae,246,Module.load node:internal/modules/cjs/loader:969:33,0x3ba9c5ae0750,~
code-source-info,0x3ba9ddf21cae,99,30265,31078,C0O30280C8O30326C16O30280C21O30334C26O30347C32O30334C36O30358C38O30372C42O30386C45O30406C52O30423C55O30428C60O30428C66O30406C71O30397C75O30469C78O30469C83O30546C91O30550C101O30603C106O30614C112O30628C124O30634C129O30628C130O30674C133O30681C140O30692C144O30703C150O30723C151O30735C155O30764C160O30773C165O30875C170O30910C175O30921C187O30961C192O30968C197O30968C204O30982C206O30980C211O31014C216O31023C221O31023C228O31048C233O31057C238O31057C245O31077,,
code-creation,Function,11,123238,0x10dd452a0,1304,dirname node:path:1275:10,0x3ba95c928630,^
code-source-info,0x10dd452a0,35,38742,39411,,,
code-creation,Function,11,123288,0x10dd45820,1452,Module._nodeModulePaths node:internal/modules/cjs/loader:629:37,0x3ba9c5ae0478,^
code-source-info,0x10dd45820,99,18791,19922,,,
code-creation,Function,11,123316,0x10dd45e40,44,toNamespacedPath node:path:1266:19,0x3ba95c9285e0,^
code-source-info,0x10dd45e40,35,38609,38669,,,
code-creation,Function,11,123340,0x10dd45ee0,172,nextPart node:fs:2395:31,0x3ba985fe1560,^
code-source-info,0x10dd45ee0,77,63703,63761,,,
code-creation,Function,11,123374,0x10dd46000,320,isFileType node:fs:205:20,0x3ba985fdf150,^
code-source-info,0x10dd46000,77,5285,5526,,,
code-creation,LazyCompile,10,123476,0x3ba9ddf222ee,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x3ba9c5adfc68,~
code-source-info,0x3ba9ddf222ee,99,11813,12242,C0O11841C5O11846C10O11846C16O11872C18O11896C20O11922C22O11990C36O11943C44O11990C49O12004C51O12023C55O12032C56O12042C61O12049C63O12096C68O12115C74O12154C77O12165C84O12176C89O12196C91O12220C92O11927C95O12227C97O12240,,
code-creation,LazyCompile,10,123610,0x3ba9ddf224ce,353,basename node:path:1306:11,0x3ba95c928680,~
code-source-info,0x3ba9ddf224ce
code-creation,LazyCompile,10,123822,0x3ba9ddf229ae,485,Module._extensions..js node:internal/modules/cjs/loader:1110:37,0x3ba9c5ae08f0,~
code-source-info,0x3ba9ddf229ae
code-creation,LazyCompile,10,123993,0x3ba9ddf22e0e,376,readFileSync node:fs:450:22,0x3ba985fdf608,~
code-source-info,0x3ba9ddf22e0e
code-creation,LazyCompile,10,124107,0x3ba9ddf2312e,30,isEncoding node:buffer:529:40,0x3ba999225138,~
code-source-info,0x3ba9ddf2312e,18,14774,14906,C0O14789C6O14837C12O14844C20O14862C23O14862C28O14890C29O14904,,
code-creation,LazyCompile,10,124159,0x3ba9ddf23236,30,normalizeEncoding node:internal/util:160:27,0x3ba960969f18,~
code-source-info,0x3ba9ddf23236,12,4206,4311,C0O4216C7O4239C14O4257C19O4270C21O4284C22O4287C25O4294C29O4309,,
code-creation,LazyCompile,10,124203,0x3ba9ddf2331e,9,isUint32 node:internal/validators:39:18,0x3ba999219d48,~
code-source-info,0x3ba9ddf2331e,17,777,822,C0O789C2O813C5O802C8O820,,
code-creation,LazyCompile,10,124284,0x3ba9ddf23476,113,openSync node:fs:576:18,0x3ba985fdf7f0,~
code-source-info,0x3ba9ddf23476,77,14426,14805,C0O14450C5O14457C11O14503C16O14503C21O14527C37O14534C44O14585C51O14587C58O14612C63O14620C70O14625C73O14636C78O14636C95O14620C101O14758C106O14758C110O14789C112O14803,,
tick,0x1087eee88,124336,0,0x0,3,0x108a8eb80,0x3ba9ddf22e46,0x3ba9ddf229ea,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,124366,0x3ba9ddf235f6,37, node:internal/fs/utils:680:42,0x3ba985fea3d0,~
code-source-info,0x3ba9ddf235f6,78,18456,18591,C14O18511C19O18511C24O18545C29O18545C34O18577C36O18589,,
code-creation,LazyCompile,10,124486,0x3ba9ddf239ce,515,stringToFlags node:internal/fs/utils:555:23,0x3ba985fea1f0,~
code-source-info,0x3ba9ddf239ce
code-creation,LazyCompile,10,124642,0x3ba9ddf23dbe,97,parseFileMode node:internal/validators:58:23,0x3ba999219d98,~
code-source-info,0x3ba9ddf23dbe,17,1468,1764,C0O1491C11O1508C17O1545C24O1570C27O1550C34O1596C41O1641C52O1602C57O1596C58O1662C66O1670C73O1703C89O1703C94O1749C96O1762,,
code-creation,LazyCompile,10,124729,0x3ba9ddf23f8e,206, node:internal/validators:83:3,0x3ba999219e58,~
code-source-info,0x3ba9ddf23f8e,17,2236,2817,C36O2377C39O2382C45O2406C51O2447C67O2453C72O2447C73O2516C78O2521C84O2555C100O2561C105O2555C106O2624C116O2663C129O2676C142O2630C147O2624C148O2701C150O2711C157O2726C162O2741C172O2780C185O2793C198O2747C203O2741C205O2816,,
code-creation,LazyCompile,10,124788,0x3ba9ddf24156,9,isInt32 node:internal/validators:35:17,0x3ba999219990,~
code-source-info,0x3ba9ddf24156,17,715,758,C0O727C2O751C5O740C8O756,,
code-creation,LazyCompile,10,124917,0x3ba9ddf2425e,66,tryStatSync node:fs:404:21,0x3ba985fdf518,~
code-source-info,0x3ba9ddf2425e,77,10330,10540,C0O10361C2O10381C7O10389C22O10389C28O10433C36O10457C38O10473C43O10476C48O10476C53O10495C58O10501C62O10495C63O10525C65O10538,,
code-creation,LazyCompile,10,125009,0x3ba9ddf243d6,96,tryCreateBuffer node:fs:414:25,0x3ba985fdf568,~
code-source-info,0x3ba9ddf243d6,77,10566,10853,C0O10603C2O10615C7O10635C9O10646C11O10644C16O10668C23O10674C28O10668C29O10717C34O10733C39O10733C45O10756C57O10762C58O10789C65O10803C67O10813C72O10816C77O10816C93O10837C95O10851,,
code-creation,LazyCompile,10,125065,0x3ba9ddf2452e,17,allocUnsafe node:buffer:372:42,0x3ba999224cb0,~
code-source-info,0x3ba9ddf2452e,18,10871,10926,C0O10882C5O10882C9O10902C12O10909C16O10924,,
code-creation,LazyCompile,10,125114,0x3ba9ddf24636,54, node:buffer:348:36,0x3ba999224bf8,~
code-source-info,0x3ba9ddf24636,18,10169,10324,C0O10183C8O10183C13O10215C14O10226C21O10242C23O10239C28O10261C33O10293C46O10267C51O10261C53O10323,,
code-creation,LazyCompile,10,125162,0x3ba9ddf2475e,30,validateNumber node:internal/validators:122:24,0x3ba999219f98,~
code-source-info,0x3ba9ddf2475e,17,3532,3641,C0O3550C6O3585C22O3591C27O3585C29O3640,,
code-creation,LazyCompile,10,125223,0x3ba9ddf24876,119,allocate node:buffer:397:18,0x3ba999224e00,~
code-source-info,0x3ba9ddf24876,18,11573,11888,C0O11584C1O11593C6O11605C11O11612C16O11629C17O11636C20O11655C24O11664C27O11645C32O11678C34O11690C39O11701C41O11699C44O11687C49O11720C52O11720C55O11748C62O11763C67O11774C75O11748C81O11797C88O11811C94O11808C100O11821C103O11821C106O11838C108O11847C109O11854C114O11861C118O11886,,
code-creation,LazyCompile,10,125291,0x3ba9ddf24a3e,71,createUnsafeBuffer node:internal/buffer:1059:28,0x3ba999231c30,~
code-source-info,0x3ba9ddf24a3e,19,30321,30430,C0O30332C8O30344C15O30361C22O30368C39O30408C48O30420C70O30429,,
code-creation,LazyCompile,10,125378,0x3ba9ddf24b96,86,tryReadSync node:fs:429:21,0x3ba985fdf5b8,~
code-source-info,0x3ba9ddf24b96,77,10875,11110,C0O10924C2O10936C7O10959C12O10974C29O10974C35O11010C47O11016C48O11043C55O11057C57O11067C62O11070C67O11070C83O11091C85O11108,,
code-creation,LazyCompile,10,125473,0x3ba9ddf24d7e,239,readSync node:fs:684:18,0x3ba985fdf8c0,~
code-source-info,0x3ba9ddf24d7e,77,17128,18059,C0O17128C2O17171C7O17176C13O17199C18O17199C22O17240C29O17247C34O17318C40O17340C52O17352C58O17368C64O17380C70O17410C75O17436C80O17463C93O17463C98O17508C105O17524C106O17535C111O17548C112O17557C113O17576C119O17587C124O17600C140O17606C145O17600C146O17728C151O17776C162O17728C167O17792C172O17818C176O17836C184O17836C189O17891C191O17912C196O17920C221O17920C227O18012C232O18012C236O18043C238O18057,,
code-creation,LazyCompile,10,125573,0x3ba9ddf24fce,52, node:internal/fs/utils:686:40,0x3ba985fea420,~
code-source-info,0x3ba9ddf24fce,78,18634,18755,C14O18663C22O18667C29O18691C30O18700C31O18708C44O18708C49O18743C51O18753,,
tick,0x10880ac7b,125609,0,0x0,3,0x108a8eb80,0x3ba9ddf24d85,0x3ba9ddf24bb3,0x3ba9ddf22ead,0x3ba9ddf229ea,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,125657,0x3ba9ddf2513e,51, node:internal/validators:190:40,0x3ba99921a1c0,~
code-source-info,0x3ba9ddf2513e,17,5662,5892,C14O5695C19O5700C25O5733C30O5764C43O5739C48O5733C50O5891,,
code-creation,LazyCompile,10,125741,0x3ba9ddf25296,151, node:internal/validators:72:3,0x3ba999219e08,~
code-source-info,0x3ba9ddf25296,17,1809,2190,C12O1829C25O1859C32O1892C38O1929C54O1935C59O1929C60O1988C65O1993C71O2023C87O2029C92O2023C93O2082C95O2092C102O2107C107O2120C117O2159C130O2172C143O2126C148O2120C150O2189,,
code-creation,LazyCompile,10,125827,0x3ba9ddf2549e,103, node:internal/fs/utils:636:3,0x3ba985fea2e0,~
code-source-info,0x3ba9ddf2549e,78,17258,17637,C0O17298C1O17309C6O17322C22O17328C27O17322C28O17386C29O17397C34O17410C50O17416C55O17410C56O17474C58O17485C64O17494C69O17518C82O17607C95O17524C100O17518C102O17636,,
code-creation,LazyCompile,10,125914,0x3ba9ddf257a6,151, node:internal/fs/utils:886:42,0x3ba985fea740,~
code-source-info,0x3ba9ddf257a6,78,23965,24523,C0O23989C6O24029C14O24029C21O24077C27O24117C32O24140C35O24135C37O24132C47O24166C53O24173C56O24160C61O24188C77O24271C80O24266C98O24291C104O24298C117O24194C122O24188C125O24371C143O24377C148O24371C150O24522,,
tick,0x7ff81f2674e6,127024,1,0x1083f1ef0,6,0x1085cff20,0x3ba9ddf24e5b,0x3ba9ddf24bb3,0x3ba9ddf22ead,0x3ba9ddf229ea,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,127080,0x3ba9ddf2595e,47,closeSync node:fs:526:19,0x3ba985fdf718,~
code-source-info,0x3ba9ddf2595e,77,13295,13417,C0O13304C5O13309C11O13344C13O13350C18O13358C31O13358C36O13387C41O13387C46O13416,,
code-creation,LazyCompile,10,127265,0x3ba9ddf25a96,162,toString node:buffer:782:46,0x3ba999226b38,~
code-source-info,0x3ba9ddf25a96,18,23264,23826,C0O23264C2O23305C8O23312C13O23337C20O23355C25O23337C31O23363C32O23388C37O23399C38O23409C43O23419C48O23437C50O23447C55O23459C57O23469C58O23481C65O23496C71O23525C76O23536C83O23558C90O23571C92O23579C97O23593C99O23603C100O23607C104O23651C109O23651C115O23673C116O23689C119O23689C124O23717C126O23744C133O23750C138O23744C139O23800C156O23800C161O23824,,
code-creation,LazyCompile,10,127443,0x3ba9ddf25d56,499,getEncodingOps node:buffer:678:24,0x3ba999226990,~
code-source-info,0x3ba9ddf25d
code-creation,LazyCompile,10,127591,0x3ba9ddf2613e,12,slice node:buffer:593:12,0x3ba999225358,~
code-source-info,0x3ba9ddf2613e,18,16602,16648,C0O16627C5O16627C11O16648,,
tick,0x7ff81f26736a,128216,1,0x1083f65e0,6,0x1085cff20,0x3ba9ddf1308e,0x3ba9ddf12d89,0x3ba9ddf12a50,0x3ba9ddf22a04,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9db500000,479232
tick,0x108ae9a0a,129453,1,0x1083f65e0,5,0x1085cff20,0x3ba9ddf1308e,0x3ba9ddf12d89,0x3ba9ddf12a50,0x3ba9ddf22a04,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1089b1df7,130594,0,0x0,0,0x1085f0f40,0x3ba9ddf12dc1,0x3ba9ddf12a50,0x3ba9ddf22a04,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1088191b8,131815,0,0x0,0,0x1085f0f40,0x3ba9ddf12dc1,0x3ba9ddf12a50,0x3ba9ddf22a04,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba927f00000,262144
code-creation,LazyCompile,10,132550,0x3ba9ddf2a49e,499,Module._compile node:internal/modules/cjs/loader:1055:37,0x3ba9c5ae0860,~
code-source-info,0x3ba9ddf2a49e
code-creation,LazyCompile,10,132724,0x3ba9ddf2aa0e,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x3ba9c5ad7428,~
code-source-info,0x3ba9ddf2aa0e,96,2239,3273,C0O2308C3O2308C7O2334C10O2348C15O2352C23O2372C25O2392C26O2399C30O2412C35O2423C44O2421C54O2564C64O2574C69O2564C73O2586C74O2593C75O2614C80O2640C85O2614C91O2717C93O2747C96O2775C101O2782C106O2747C112O2817C117O2837C122O2844C127O2866C131O2897C136O2915C141O2919C148O2948C155O2979C165O3009C171O3023C175O2915C183O3149C188O3167C193O3171C201O3204C211O3234C217O3248C221O3167C228O3272,,
code-creation,LazyCompile,10,132805,0x3ba9ddf2b46e,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x3ba9c5ad7388,~
code-source-info,0x3ba9ddf2b46e,96,1418,1563,C0O1425C6O1468C11O1489C17O1489C22O1468C26O1536C30O1561,,
code-creation,LazyCompile,10,132877,0x3ba9ddf2b5e6,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x3ba9c5ad73d8,~
code-source-info,0x3ba9ddf2b5e6,96,1594,2209,C0O1604C8O1604C13O1709C19O1709C24O1648C29O1674C34O1738C38O1767C42O1822C48O1822C53O1796C58O1878C64O1936C70O2095C76O2095C81O2068C86O2127C90O2183C92O2201C99O2208,,
tick,0x1086260f2,132963,0,0x0,3,0x108a8eb80,0x3ba9ddf2b5ee,0x3ba9ddf2b484,0x3ba9ddf2aa11,0x3ba9ddf2a4f4,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,133025,0x3ba9ddf2b75e,30,validateBoolean node:internal/validators:138:25,0x3ba99921a058,~
code-source-info,0x3ba9ddf2b75e,17,4042,4153,C0O4060C6O4096C22O4102C27O4096C29O4152,,
code-creation,LazyCompile,10,133163,0x3ba9ddf2bb56,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x3ba9c5adfee8,~
code-source-info,0x3ba9ddf2bb56,99,31692,32552,C0O31692C9O31735C17O31770C22O31777C27O31777C33O31796C40O31806C45O31823C52O31840C56O31929C64O31806C70O32084C74O32101C81O32111C86O32127C98O32242C102O32258C113O32111C118O32427C130O32450C135O32462C142O32473C147O32502C157O32502C162O32536C164O32536,,
code-creation,LazyCompile,10,133374,0x3ba9ddf2c35e,472,compileFunction node:vm:308:25,0x3ba985ffbbe0,~
script-source,85,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeUnshift\x2C\n  Symbol\x2C\n  PromiseReject\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  ContextifyScript\x2C\n  MicrotaskQueue\x2C\n  makeContext\x2C\n  isContext: _isContext\x2C\n  constants\x2C\n  compileFunction: _compileFunction\x2C\n  measureMemory: _measureMemory\x2C\n} = internalBinding('contextify');\nconst {\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n} = require('internal/errors').codes;\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  kVmBreakFirstLineSymbol\x2C\n  emitExperimentalWarning\x2C\n} = require('internal/util');\nconst kParsingContext = Symbol('script parsing context');\n\nclass Script extends ContextifyScript {\n  constructor(code\x2C options = {}) {\n    code = `${code}`;\n    if (typeof options === 'string') {\n      options = { filename: options };\n    } else {\n      validateObject(options\x2C 'options');\n    }\n\n    const {\n      filename = 'evalmachine.<anonymous>'\x2C\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      cachedData\x2C\n      produceCachedData = false\x2C\n      importModuleDynamically\x2C\n      [kParsingContext]: parsingContext\x2C\n    } = options;\n\n    validateString(filename\x2C 'options.filename');\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.cachedData'\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        cachedData\n      );\n    }\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\n    // protects against that.\n    try { // eslint-disable-line no-useless-catch\n      super(code\x2C\n            filename\x2C\n            lineOffset\x2C\n            columnOffset\x2C\n            cachedData\x2C\n            produceCachedData\x2C\n            parsingContext);\n    } catch (e) {\n      throw e; /* node-do-not-add-exception-line */\n    }\n\n    if (importModuleDynamically !== undefined) {\n      validateFunction(importModuleDynamically\x2C\n                       'options.importModuleDynamically');\n      const { importModuleDynamicallyWrap } =\n        require('internal/vm/module');\n      const { callbackMap } = internalBinding('module_wrap');\n      callbackMap.set(this\x2C {\n        importModuleDynamically:\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\n      });\n    }\n  }\n\n  runInThisContext(options) {\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\n    }\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\n  }\n\n  runInContext(contextifiedObject\x2C options) {\n    validateContext(contextifiedObject);\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\n    }\n    return ReflectApply(super.runInContext\x2C this\x2C args);\n  }\n\n  runInNewContext(contextObject\x2C options) {\n    const context = createContext(contextObject\x2C getContextOptions(options));\n    return this.runInContext(context\x2C options);\n  }\n}\n\nfunction validateContext(contextifiedObject) {\n  if (!isContext(contextifiedObject)) {\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\n                                   contextifiedObject);\n  }\n}\n\nfunction getRunInContextArgs(options = {}) {\n  validateObject(options\x2C 'options');\n\n  let timeout = options.timeout;\n  if (timeout === undefined) {\n    timeout = -1;\n  } else {\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\n  }\n\n  const {\n    displayErrors = true\x2C\n    breakOnSigint = false\x2C\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\n  } = options;\n\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n\n  return {\n    breakOnSigint\x2C\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\n  };\n}\n\nfunction getContextOptions(options) {\n  if (!options)\n    return {};\n  const contextOptions = {\n    name: options.contextName\x2C\n    origin: options.contextOrigin\x2C\n    codeGeneration: undefined\x2C\n    microtaskMode: options.microtaskMode\x2C\n  };\n  if (contextOptions.name !== undefined)\n    validateString(contextOptions.name\x2C 'options.contextName');\n  if (contextOptions.origin !== undefined)\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\n  if (options.contextCodeGeneration !== undefined) {\n    validateObject(options.contextCodeGeneration\x2C\n                   'options.contextCodeGeneration');\n    const { strings\x2C wasm } = options.contextCodeGeneration;\n    if (strings !== undefined)\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\n    if (wasm !== undefined)\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\n    contextOptions.codeGeneration = { strings\x2C wasm };\n  }\n  if (options.microtaskMode !== undefined)\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\n  return contextOptions;\n}\n\nfunction isContext(object) {\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\n\n  return _isContext(object);\n}\n\nlet defaultContextNameIndex = 1;\nfunction createContext(contextObject = {}\x2C options = {}) {\n  if (isContext(contextObject)) {\n    return contextObject;\n  }\n\n  validateObject(options\x2C 'options');\n\n  const {\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\n    origin\x2C\n    codeGeneration\x2C\n    microtaskMode\n  } = options;\n\n  validateString(name\x2C 'options.name');\n  if (origin !== undefined)\n    validateString(origin\x2C 'options.origin');\n  if (codeGeneration !== undefined)\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\n\n  let strings = true;\n  let wasm = true;\n  if (codeGeneration !== undefined) {\n    ({ strings = true\x2C wasm = true } = codeGeneration);\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\n  }\n\n  let microtaskQueue = null;\n  if (microtaskMode !== undefined) {\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\n                  ['afterEvaluate'\x2C undefined]);\n\n    if (microtaskMode === 'afterEvaluate')\n      microtaskQueue = new MicrotaskQueue();\n  }\n\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\n  return contextObject;\n}\n\nfunction createScript(code\x2C options) {\n  return new Script(code\x2C options);\n}\n\n// Remove all SIGINT listeners and re-attach them after the wrapped function\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\n  const sigintListeners = process.rawListeners('SIGINT');\n\n  process.removeAllListeners('SIGINT');\n\n  try {\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\n  } finally {\n    // Add using the public methods so that the `newListener` handler of\n    // process can re-attach the listeners.\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\n      process.addListener('SIGINT'\x2C listener);\n    });\n  }\n}\n\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\n  validateContext(contextifiedObject);\n  if (typeof options === 'string') {\n    options = {\n      filename: options\x2C\n      [kParsingContext]: contextifiedObject\n    };\n  } else {\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\n  }\n  return createScript(code\x2C options)\n    .runInContext(contextifiedObject\x2C options);\n}\n\nfunction runInNewContext(code\x2C contextObject\x2C options) {\n  if (typeof options === 'string') {\n    options = { filename: options };\n  }\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\n  options = { ...options\x2C [kParsingContext]: contextObject };\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\n}\n\nfunction runInThisContext(code\x2C options) {\n  if (typeof options === 'string') {\n    options = { filename: options };\n  }\n  return createScript(code\x2C options).runInThisContext(options);\n}\n\nfunction compileFunction(code\x2C params\x2C options = {}) {\n  validateString(code\x2C 'code');\n  if (params !== undefined) {\n    validateArray(params\x2C 'params');\n    ArrayPrototypeForEach(params\x2C\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\n  }\n\n  const {\n    filename = ''\x2C\n    columnOffset = 0\x2C\n    lineOffset = 0\x2C\n    cachedData = undefined\x2C\n    produceCachedData = false\x2C\n    parsingContext = undefined\x2C\n    contextExtensions = []\x2C\n    importModuleDynamically\x2C\n  } = options;\n\n  validateString(filename\x2C 'options.filename');\n  validateUint32(columnOffset\x2C 'options.columnOffset');\n  validateUint32(lineOffset\x2C 'options.lineOffset');\n  if (cachedData !== undefined)\n    validateBuffer(cachedData\x2C 'options.cachedData');\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n  if (parsingContext !== undefined) {\n    if (\n      typeof parsingContext !== 'object' ||\n      parsingContext === null ||\n      !isContext(parsingContext)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.parsingContext'\x2C\n        'Context'\x2C\n        parsingContext\n      );\n    }\n  }\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\n    const name = `options.contextExtensions[${i}]`;\n    validateObject(extension\x2C name\x2C { nullable: true });\n  });\n\n  const result = _compileFunction(\n    code\x2C\n    filename\x2C\n    lineOffset\x2C\n    columnOffset\x2C\n    cachedData\x2C\n    produceCachedData\x2C\n    parsingContext\x2C\n    contextExtensions\x2C\n    params\n  );\n\n  if (produceCachedData) {\n    result.function.cachedDataProduced = result.cachedDataProduced;\n  }\n\n  if (result.cachedData) {\n    result.function.cachedData = result.cachedData;\n  }\n\n  if (importModuleDynamically !== undefined) {\n    validateFunction(importModuleDynamically\x2C\n                     'options.importModuleDynamically');\n    const { importModuleDynamicallyWrap } =\n      require('internal/vm/module');\n    const { callbackMap } = internalBinding('module_wrap');\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\n    const func = result.function;\n    callbackMap.set(result.cacheKey\x2C {\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\n    });\n  }\n\n  return result.function;\n}\n\nconst measureMemoryModes = {\n  summary: constants.measureMemory.mode.SUMMARY\x2C\n  detailed: constants.measureMemory.mode.DETAILED\x2C\n};\n\nconst measureMemoryExecutions = {\n  default: constants.measureMemory.execution.DEFAULT\x2C\n  eager: constants.measureMemory.execution.EAGER\x2C\n};\n\nfunction measureMemory(options = {}) {\n  emitExperimentalWarning('vm.measureMemory');\n  validateObject(options\x2C 'options');\n  const { mode = 'summary'\x2C execution = 'default' } = options;\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\n                                measureMemoryExecutions[execution]);\n  if (result === undefined) {\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\n  }\n  return result;\n}\n\nmodule.exports = {\n  Script\x2C\n  createContext\x2C\n  createScript\x2C\n  runInContext\x2C\n  runInNewContext\x2C\n  runInThisContext\x2C\n  isContext\x2C\n  compileFunction\x2C\n  measureMemory\x2C\n};\n\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\n// and vm.SyntheticModule in the pre-execution phase when\n// --experimental-vm-modules is on.\n
code-source-info,0x3ba9ddf2c35e
tick,0x7ff81f29e9ed,134729,0,0x0,3,0x108a8eb80,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,134758,0x3ba9ddf2d526,95, node:internal/validators:167:39,0x3ba99921a0f8,~
code-source-info,0x3ba9ddf2d526,17,4966,5244,C16O5002C21O5007C27O5034C43O5040C48O5034C49O5104C56O5111C61O5145C66O5168C71O5185C87O5191C92O5185C94O5243,,
code-creation,LazyCompile,10,134831,0x3ba9ddf2d686,27, node:vm:313:27,0x3ba9ddf2c030,~
code-source-info,0x3ba9ddf2d686,85,9752,9803,C0O9766C10O9798C21O9766C26O9803,,
code-creation,LazyCompile,10,134910,0x3ba9ddf2d856,149, node:internal/validators:100:40,0x3ba999219ea8,~
code-source-info,0x3ba9ddf2d856,17,2861,3371,C0O2892C3O2897C9O2920C15O2959C31O2965C36O2959C37O3024C42O3029C48O3061C64O3067C69O3061C70O3138C80O3190C90O3229C109O3196C114O3190C115O3266C120O3288C125O3301C141O3307C146O3301C148O3370,,
tick,0x1085b45cc,135557,1,0x1083d9fa0,2,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1085a4acc,136831,1,0x1083d9fa0,2,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108a0b0c9,138096,1,0x1083d9fa0,2,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,139051,0x3ba9ddf32f26,5, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:1:1,0x3ba9ddf32cc8,~
script-source,115,/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js,/*! For license information please see bootloader.bundle.js.LICENSE.txt */\n(()=>{var __webpack_modules__={8586:(e\x2Ct\x2Cr)=>{"use strict";const s=r(1669)\x2Co=r(3610)\x2Cn=r(1147)\x2Ci=r(9451)\x2Ca=e=>""===e||"./"===e\x2Cc=(e\x2Ct\x2Cr)=>{t=[].concat(t)\x2Ce=[].concat(e);let s=new Set\x2Co=new Set\x2Ci=new Set\x2Ca=0\x2Cc=e=>{i.add(e.output)\x2Cr&&r.onResult&&r.onResult(e)};for(let i=0;i<t.length;i++){let l=n(String(t[i])\x2C{...r\x2ConResult:c}\x2C!0)\x2Cu=l.state.negated||l.state.negatedExtglob;u&&a++;for(let t of e){let e=l(t\x2C!0);(u?!e.isMatch:e.isMatch)&&(u?s.add(e.output):(s.delete(e.output)\x2Co.add(e.output)))}}let l=(a===t.length?[...i]:[...o]).filter((e=>!s.has(e)));if(r&&0===l.length){if(!0===r.failglob)throw new Error(`No matches found for "${t.join("\x2C ")}"`);if(!0===r.nonull||!0===r.nullglob)return r.unescape?t.map((e=>e.replace(/\\\\/g\x2C""))):t}return l};c.match=c\x2Cc.matcher=(e\x2Ct)=>n(e\x2Ct)\x2Cc.any=c.isMatch=(e\x2Ct\x2Cr)=>n(t\x2Cr)(e)\x2Cc.not=(e\x2Ct\x2Cr={})=>{t=[].concat(t).map(String);let s=new Set\x2Co=[]\x2Cn=c(e\x2Ct\x2C{...r\x2ConResult:e=>{r.onResult&&r.onResult(e)\x2Co.push(e.output)}});for(let e of o)n.includes(e)||s.add(e);return[...s]}\x2Cc.contains=(e\x2Ct\x2Cr)=>{if("string"!=typeof e)throw new TypeError(`Expected a string: "${s.inspect(e)}"`);if(Array.isArray(t))return t.some((t=>c.contains(e\x2Ct\x2Cr)));if("string"==typeof t){if(a(e)||a(t))return!1;if(e.includes(t)||e.startsWith("./")&&e.slice(2).includes(t))return!0}return c.isMatch(e\x2Ct\x2C{...r\x2Ccontains:!0})}\x2Cc.matchKeys=(e\x2Ct\x2Cr)=>{if(!i.isObject(e))throw new TypeError("Expected the first argument to be an object");let s=c(Object.keys(e)\x2Ct\x2Cr)\x2Co={};for(let t of s)o[t]=e[t];return o}\x2Cc.some=(e\x2Ct\x2Cr)=>{let s=[].concat(e);for(let e of[].concat(t)){let t=n(String(e)\x2Cr);if(s.some((e=>t(e))))return!0}return!1}\x2Cc.every=(e\x2Ct\x2Cr)=>{let s=[].concat(e);for(let e of[].concat(t)){let t=n(String(e)\x2Cr);if(!s.every((e=>t(e))))return!1}return!0}\x2Cc.all=(e\x2Ct\x2Cr)=>{if("string"!=typeof e)throw new TypeError(`Expected a string: "${s.inspect(e)}"`);return[].concat(t).every((t=>n(t\x2Cr)(e)))}\x2Cc.capture=(e\x2Ct\x2Cr)=>{let s=i.isWindows(r)\x2Co=n.makeRe(String(e)\x2C{...r\x2Ccapture:!0}).exec(s?i.toPosixSlashes(t):t);if(o)return o.slice(1).map((e=>void 0===e?"":e))}\x2Cc.makeRe=(...e)=>n.makeRe(...e)\x2Cc.scan=(...e)=>n.scan(...e)\x2Cc.parse=(e\x2Ct)=>{let r=[];for(let s of[].concat(e||[]))for(let e of o(String(s)\x2Ct))r.push(n.parse(e\x2Ct));return r}\x2Cc.braces=(e\x2Ct)=>{if("string"!=typeof e)throw new TypeError("Expected a string");return t&&!0===t.nobrace||!/\\{.*\\}/.test(e)?[e]:o(e\x2Ct)}\x2Cc.braceExpand=(e\x2Ct)=>{if("string"!=typeof e)throw new TypeError("Expected a string");return c.braces(e\x2C{...t\x2Cexpand:!0})}\x2Ce.exports=c}\x2C3610:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5226)\x2Co=r(7104)\x2Cn=r(5341)\x2Ci=r(8707)\x2Ca=(e\x2Ct={})=>{let r=[];if(Array.isArray(e))for(let s of e){let e=a.create(s\x2Ct);Array.isArray(e)?r.push(...e):r.push(e)}else r=[].concat(a.create(e\x2Ct));return t&&!0===t.expand&&!0===t.nodupes&&(r=[...new Set(r)])\x2Cr};a.parse=(e\x2Ct={})=>i(e\x2Ct)\x2Ca.stringify=(e\x2Ct={})=>s("string"==typeof e?a.parse(e\x2Ct):e\x2Ct)\x2Ca.compile=(e\x2Ct={})=>("string"==typeof e&&(e=a.parse(e\x2Ct))\x2Co(e\x2Ct))\x2Ca.expand=(e\x2Ct={})=>{"string"==typeof e&&(e=a.parse(e\x2Ct));let r=n(e\x2Ct);return!0===t.noempty&&(r=r.filter(Boolean))\x2C!0===t.nodupes&&(r=[...new Set(r)])\x2Cr}\x2Ca.create=(e\x2Ct={})=>""===e||e.length<3?[e]:!0!==t.expand?a.compile(e\x2Ct):a.expand(e\x2Ct)\x2Ce.exports=a}\x2C7104:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8459)\x2Co=r(3991);e.exports=(e\x2Ct={})=>{let r=(e\x2Cn={})=>{let i=o.isInvalidBrace(n)\x2Ca=!0===e.invalid&&!0===t.escapeInvalid\x2Cc=!0===i||!0===a\x2Cl=!0===t.escapeInvalid?"\\\\":""\x2Cu="";if(!0===e.isOpen)return l+e.value;if(!0===e.isClose)return l+e.value;if("open"===e.type)return c?l+e.value:"(";if("close"===e.type)return c?l+e.value:")";if("comma"===e.type)return"comma"===e.prev.type?"":c?e.value:"|";if(e.value)return e.value;if(e.nodes&&e.ranges>0){let r=o.reduce(e.nodes)\x2Cn=s(...r\x2C{...t\x2Cwrap:!1\x2CtoRegex:!0});if(0!==n.length)return r.length>1&&n.length>1?`(${n})`:n}if(e.nodes)for(let t of e.nodes)u+=r(t\x2Ce);return u};return r(e)}}\x2C7874:e=>{"use strict";e.exports={MAX_LENGTH:65536\x2CCHAR_0:"0"\x2CCHAR_9:"9"\x2CCHAR_UPPERCASE_A:"A"\x2CCHAR_LOWERCASE_A:"a"\x2CCHAR_UPPERCASE_Z:"Z"\x2CCHAR_LOWERCASE_Z:"z"\x2CCHAR_LEFT_PARENTHESES:"("\x2CCHAR_RIGHT_PARENTHESES:")"\x2CCHAR_ASTERISK:"*"\x2CCHAR_AMPERSAND:"&"\x2CCHAR_AT:"@"\x2CCHAR_BACKSLASH:"\\\\"\x2CCHAR_BACKTICK:"`"\x2CCHAR_CARRIAGE_RETURN:"\\r"\x2CCHAR_CIRCUMFLEX_ACCENT:"^"\x2CCHAR_COLON:":"\x2CCHAR_COMMA:"\x2C"\x2CCHAR_DOLLAR:"$"\x2CCHAR_DOT:"."\x2CCHAR_DOUBLE_QUOTE:'"'\x2CCHAR_EQUAL:"="\x2CCHAR_EXCLAMATION_MARK:"!"\x2CCHAR_FORM_FEED:"\\f"\x2CCHAR_FORWARD_SLASH:"/"\x2CCHAR_HASH:"#"\x2CCHAR_HYPHEN_MINUS:"-"\x2CCHAR_LEFT_ANGLE_BRACKET:"<"\x2CCHAR_LEFT_CURLY_BRACE:"{"\x2CCHAR_LEFT_SQUARE_BRACKET:"["\x2CCHAR_LINE_FEED:"\\n"\x2CCHAR_NO_BREAK_SPACE:"\xa0"\x2CCHAR_PERCENT:"%"\x2CCHAR_PLUS:"+"\x2CCHAR_QUESTION_MARK:"?"\x2CCHAR_RIGHT_ANGLE_BRACKET:">"\x2CCHAR_RIGHT_CURLY_BRACE:"}"\x2CCHAR_RIGHT_SQUARE_BRACKET:"]"\x2CCHAR_SEMICOLON:";"\x2CCHAR_SINGLE_QUOTE:"'"\x2CCHAR_SPACE:" "\x2CCHAR_TAB:"\\t"\x2CCHAR_UNDERSCORE:"_"\x2CCHAR_VERTICAL_LINE:"|"\x2CCHAR_ZERO_WIDTH_NOBREAK_SPACE:"\\ufeff"}}\x2C5341:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8459)\x2Co=r(5226)\x2Cn=r(3991)\x2Ci=(e=""\x2Ct=""\x2Cr=!1)=>{let s=[];if(e=[].concat(e)\x2C!(t=[].concat(t)).length)return e;if(!e.length)return r?n.flatten(t).map((e=>`{${e}}`)):t;for(let o of e)if(Array.isArray(o))for(let e of o)s.push(i(e\x2Ct\x2Cr));else for(let e of t)!0===r&&"string"==typeof e&&(e=`{${e}}`)\x2Cs.push(Array.isArray(e)?i(o\x2Ce\x2Cr):o+e);return n.flatten(s)};e.exports=(e\x2Ct={})=>{let r=void 0===t.rangeLimit?1e3:t.rangeLimit\x2Ca=(e\x2Cc={})=>{e.queue=[];let l=c\x2Cu=c.queue;for(;"brace"!==l.type&&"root"!==l.type&&l.parent;)l=l.parent\x2Cu=l.queue;if(e.invalid||e.dollar)return void u.push(i(u.pop()\x2Co(e\x2Ct)));if("brace"===e.type&&!0!==e.invalid&&2===e.nodes.length)return void u.push(i(u.pop()\x2C["{}"]));if(e.nodes&&e.ranges>0){let a=n.reduce(e.nodes);if(n.exceedsLimit(...a\x2Ct.step\x2Cr))throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");let c=s(...a\x2Ct);return 0===c.length&&(c=o(e\x2Ct))\x2Cu.push(i(u.pop()\x2Cc))\x2Cvoid(e.nodes=[])}let p=n.encloseBrace(e)\x2Ch=e.queue\x2Cd=e;for(;"brace"!==d.type&&"root"!==d.type&&d.parent;)d=d.parent\x2Ch=d.queue;for(let t=0;t<e.nodes.length;t++){let r=e.nodes[t];"comma"!==r.type||"brace"!==e.type?"close"!==r.type?r.value&&"open"!==r.type?h.push(i(h.pop()\x2Cr.value)):r.nodes&&a(r\x2Ce):u.push(i(u.pop()\x2Ch\x2Cp)):(1===t&&h.push("")\x2Ch.push(""))}return h};return n.flatten(a(e))}}\x2C8707:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5226)\x2C{MAX_LENGTH:o\x2CCHAR_BACKSLASH:n\x2CCHAR_BACKTICK:i\x2CCHAR_COMMA:a\x2CCHAR_DOT:c\x2CCHAR_LEFT_PARENTHESES:l\x2CCHAR_RIGHT_PARENTHESES:u\x2CCHAR_LEFT_CURLY_BRACE:p\x2CCHAR_RIGHT_CURLY_BRACE:h\x2CCHAR_LEFT_SQUARE_BRACKET:d\x2CCHAR_RIGHT_SQUARE_BRACKET:f\x2CCHAR_DOUBLE_QUOTE:_\x2CCHAR_SINGLE_QUOTE:g\x2CCHAR_NO_BREAK_SPACE:m\x2CCHAR_ZERO_WIDTH_NOBREAK_SPACE:y}=r(7874);e.exports=(e\x2Ct={})=>{if("string"!=typeof e)throw new TypeError("Expected a string");let r=t||{}\x2Cv="number"==typeof r.maxLength?Math.min(o\x2Cr.maxLength):o;if(e.length>v)throw new SyntaxError(`Input length (${e.length})\x2C exceeds max characters (${v})`);let b\x2CE={type:"root"\x2Cinput:e\x2Cnodes:[]}\x2CS=[E]\x2CR=E\x2Cx=E\x2CA=0\x2CC=e.length\x2Cw=0\x2CO=0;const k=()=>e[w++]\x2CT=e=>{if("text"===e.type&&"dot"===x.type&&(x.type="text")\x2C!x||"text"!==x.type||"text"!==e.type)return R.nodes.push(e)\x2Ce.parent=R\x2Ce.prev=x\x2Cx=e\x2Ce;x.value+=e.value};for(T({type:"bos"});w<C;)if(R=S[S.length-1]\x2Cb=k()\x2Cb!==y&&b!==m)if(b!==n)if(b!==f)if(b!==d)if(b!==l)if(b!==u)if(b!==_&&b!==g&&b!==i)if(b!==p)if(b!==h)if(b===a&&O>0){if(R.ranges>0){R.ranges=0;let e=R.nodes.shift();R.nodes=[e\x2C{type:"text"\x2Cvalue:s(R)}]}T({type:"comma"\x2Cvalue:b})\x2CR.commas++}else if(b===c&&O>0&&0===R.commas){let e=R.nodes;if(0===O||0===e.length){T({type:"text"\x2Cvalue:b});continue}if("dot"===x.type){if(R.range=[]\x2Cx.value+=b\x2Cx.type="range"\x2C3!==R.nodes.length&&5!==R.nodes.length){R.invalid=!0\x2CR.ranges=0\x2Cx.type="text";continue}R.ranges++\x2CR.args=[];continue}if("range"===x.type){e.pop();let t=e[e.length-1];t.value+=x.value+b\x2Cx=t\x2CR.ranges--;continue}T({type:"dot"\x2Cvalue:b})}else T({type:"text"\x2Cvalue:b});else{if("brace"!==R.type){T({type:"text"\x2Cvalue:b});continue}let e="close";R=S.pop()\x2CR.close=!0\x2CT({type:e\x2Cvalue:b})\x2CO--\x2CR=S[S.length-1]}else{O++;let e=x.value&&"$"===x.value.slice(-1)||!0===R.dollar;R=T({type:"brace"\x2Copen:!0\x2Cclose:!1\x2Cdollar:e\x2Cdepth:O\x2Ccommas:0\x2Cranges:0\x2Cnodes:[]})\x2CS.push(R)\x2CT({type:"open"\x2Cvalue:b})}else{let e\x2Cr=b;for(!0!==t.keepQuotes&&(b="");w<C&&(e=k());)if(e!==n){if(e===r){!0===t.keepQuotes&&(b+=e);break}b+=e}else b+=e+k();T({type:"text"\x2Cvalue:b})}else{if("paren"!==R.type){T({type:"text"\x2Cvalue:b});continue}R=S.pop()\x2CT({type:"text"\x2Cvalue:b})\x2CR=S[S.length-1]}else R=T({type:"paren"\x2Cnodes:[]})\x2CS.push(R)\x2CT({type:"text"\x2Cvalue:b});else{let e;for(A++;w<C&&(e=k());)if(b+=e\x2Ce!==d)if(e!==n){if(e===f&&(A--\x2C0===A))break}else b+=k();else A++;T({type:"text"\x2Cvalue:b})}else T({type:"text"\x2Cvalue:"\\\\"+b});else T({type:"text"\x2Cvalue:(t.keepEscaping?b:"")+k()});do{if(R=S.pop()\x2C"root"!==R.type){R.nodes.forEach((e=>{e.nodes||("open"===e.type&&(e.isOpen=!0)\x2C"close"===e.type&&(e.isClose=!0)\x2Ce.nodes||(e.type="text")\x2Ce.invalid=!0)}));let e=S[S.length-1]\x2Ct=e.nodes.indexOf(R);e.nodes.splice(t\x2C1\x2C...R.nodes)}}while(S.length>0);return T({type:"eos"})\x2CE}}\x2C5226:(e\x2Ct\x2Cr)=>{"use strict";const s=r(3991);e.exports=(e\x2Ct={})=>{let r=(e\x2Co={})=>{let n=t.escapeInvalid&&s.isInvalidBrace(o)\x2Ci=!0===e.invalid&&!0===t.escapeInvalid\x2Ca="";if(e.value)return(n||i)&&s.isOpenOrClose(e)?"\\\\"+e.value:e.value;if(e.value)return e.value;if(e.nodes)for(let t of e.nodes)a+=r(t);return a};return r(e)}}\x2C3991:(e\x2Ct)=>{"use strict";t.isInteger=e=>"number"==typeof e?Number.isInteger(e):"string"==typeof e&&""!==e.trim()&&Number.isInteger(Number(e))\x2Ct.find=(e\x2Ct)=>e.nodes.find((e=>e.type===t))\x2Ct.exceedsLimit=(e\x2Cr\x2Cs=1\x2Co)=>!1!==o&&!(!t.isInteger(e)||!t.isInteger(r))&&(Number(r)-Number(e))/Number(s)>=o\x2Ct.escapeNode=(e\x2Ct=0\x2Cr)=>{let s=e.nodes[t];s&&(r&&s.type===r||"open"===s.type||"close"===s.type)&&!0!==s.escaped&&(s.value="\\\\"+s.value\x2Cs.escaped=!0)}\x2Ct.encloseBrace=e=>"brace"===e.type&&e.commas>>0+e.ranges>>0==0&&(e.invalid=!0\x2C!0)\x2Ct.isInvalidBrace=e=>!("brace"!==e.type||!0!==e.invalid&&!e.dollar&&(e.commas>>0+e.ranges>>0!=0&&!0===e.open&&!0===e.close||(e.invalid=!0\x2C0)))\x2Ct.isOpenOrClose=e=>"open"===e.type||"close"===e.type||!0===e.open||!0===e.close\x2Ct.reduce=e=>e.reduce(((e\x2Ct)=>("text"===t.type&&e.push(t.value)\x2C"range"===t.type&&(t.type="text")\x2Ce))\x2C[])\x2Ct.flatten=(...e)=>{const t=[]\x2Cr=e=>{for(let s=0;s<e.length;s++){let o=e[s];Array.isArray(o)?r(o\x2Ct):void 0!==o&&t.push(o)}return t};return r(e)\x2Ct}}\x2C8459:(e\x2Ct\x2Cr)=>{"use strict";const s=r(1669)\x2Co=r(5109)\x2Cn=e=>null!==e&&"object"==typeof e&&!Array.isArray(e)\x2Ci=e=>"number"==typeof e||"string"==typeof e&&""!==e\x2Ca=e=>Number.isInteger(+e)\x2Cc=e=>{let t=`${e}`\x2Cr=-1;if("-"===t[0]&&(t=t.slice(1))\x2C"0"===t)return!1;for(;"0"===t[++r];);return r>0}\x2Cl=(e\x2Ct\x2Cr)=>{if(t>0){let r="-"===e[0]?"-":"";r&&(e=e.slice(1))\x2Ce=r+e.padStart(r?t-1:t\x2C"0")}return!1===r?String(e):e}\x2Cu=(e\x2Ct)=>{let r="-"===e[0]?"-":"";for(r&&(e=e.slice(1)\x2Ct--);e.length<t;)e="0"+e;return r?"-"+e:e}\x2Cp=(e\x2Ct\x2Cr\x2Cs)=>{if(r)return o(e\x2Ct\x2C{wrap:!1\x2C...s});let n=String.fromCharCode(e);return e===t?n:`[${n}-${String.fromCharCode(t)}]`}\x2Ch=(e\x2Ct\x2Cr)=>{if(Array.isArray(e)){let t=!0===r.wrap\x2Cs=r.capture?"":"?:";return t?`(${s}${e.join("|")})`:e.join("|")}return o(e\x2Ct\x2Cr)}\x2Cd=(...e)=>new RangeError("Invalid range arguments: "+s.inspect(...e))\x2Cf=(e\x2Ct\x2Cr)=>{if(!0===r.strictRanges)throw d([e\x2Ct]);return[]}\x2C_=(e\x2Ct\x2Cr\x2Cs={})=>{if(null==t&&i(e))return[e];if(!i(e)||!i(t))return f(e\x2Ct\x2Cs);if("function"==typeof r)return _(e\x2Ct\x2C1\x2C{transform:r});if(n(r))return _(e\x2Ct\x2C0\x2Cr);let o={...s};return!0===o.capture&&(o.wrap=!0)\x2Cr=r||o.step||1\x2Ca(r)?a(e)&&a(t)?((e\x2Ct\x2Cr=1\x2Cs={})=>{let o=Number(e)\x2Cn=Number(t);if(!Number.isInteger(o)||!Number.isInteger(n)){if(!0===s.strictRanges)throw d([e\x2Ct]);return[]}0===o&&(o=0)\x2C0===n&&(n=0);let i=o>n\x2Ca=String(e)\x2Cf=String(t)\x2C_=String(r);r=Math.max(Math.abs(r)\x2C1);let g=c(a)||c(f)||c(_)\x2Cm=g?Math.max(a.length\x2Cf.length\x2C_.length):0\x2Cy=!1===g&&!1===((e\x2Ct\x2Cr)=>"string"==typeof e||"string"==typeof t||!0===r.stringify)(e\x2Ct\x2Cs)\x2Cv=s.transform||(e=>t=>!0===e?Number(t):String(t))(y);if(s.toRegex&&1===r)return p(u(e\x2Cm)\x2Cu(t\x2Cm)\x2C!0\x2Cs);let b={negatives:[]\x2Cpositives:[]}\x2CE=[]\x2CS=0;for(;i?o>=n:o<=n;)!0===s.toRegex&&r>1?b[(R=o)<0?"negatives":"positives"].push(Math.abs(R)):E.push(l(v(o\x2CS)\x2Cm\x2Cy))\x2Co=i?o-r:o+r\x2CS++;var R;return!0===s.toRegex?r>1?((e\x2Ct)=>{e.negatives.sort(((e\x2Ct)=>e<t?-1:e>t?1:0))\x2Ce.positives.sort(((e\x2Ct)=>e<t?-1:e>t?1:0));let r\x2Cs=t.capture?"":"?:"\x2Co=""\x2Cn="";return e.positives.length&&(o=e.positives.join("|"))\x2Ce.negatives.length&&(n=`-(${s}${e.negatives.join("|")})`)\x2Cr=o&&n?`${o}|${n}`:o||n\x2Ct.wrap?`(${s}${r})`:r})(b\x2Cs):h(E\x2Cnull\x2C{wrap:!1\x2C...s}):E})(e\x2Ct\x2Cr\x2Co):((e\x2Ct\x2Cr=1\x2Cs={})=>{if(!a(e)&&e.length>1||!a(t)&&t.length>1)return f(e\x2Ct\x2Cs);let o=s.transform||(e=>String.fromCharCode(e))\x2Cn=`${e}`.charCodeAt(0)\x2Ci=`${t}`.charCodeAt(0)\x2Cc=n>i\x2Cl=Math.min(n\x2Ci)\x2Cu=Math.max(n\x2Ci);if(s.toRegex&&1===r)return p(l\x2Cu\x2C!1\x2Cs);let d=[]\x2C_=0;for(;c?n>=i:n<=i;)d.push(o(n\x2C_))\x2Cn=c?n-r:n+r\x2C_++;return!0===s.toRegex?h(d\x2Cnull\x2C{wrap:!1\x2Coptions:s}):d})(e\x2Ct\x2CMath.max(Math.abs(r)\x2C1)\x2Co):null==r||n(r)?_(e\x2Ct\x2C1\x2Cr):((e\x2Ct)=>{if(!0===t.strictRanges)throw new TypeError(`Expected step "${e}" to be a number`);return[]})(r\x2Co)};e.exports=_}\x2C535:e=>{"use strict";e.exports=function(e){return"number"==typeof e?e-e==0:"string"==typeof e&&""!==e.trim()&&(Number.isFinite?Number.isFinite(+e):isFinite(+e))}}\x2C1147:(e\x2Ct\x2Cr)=>{"use strict";e.exports=r(3148)}\x2C2819:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5622)\x2Co="\\\\.{1\x2C2}(?:\\\\/|$)"\x2Cn={DOT_LITERAL:"\\\\."\x2CPLUS_LITERAL:"\\\\+"\x2CQMARK_LITERAL:"\\\\?"\x2CSLASH_LITERAL:"\\\\/"\x2CONE_CHAR:"(?=.)"\x2CQMARK:"[^/]"\x2CEND_ANCHOR:"(?:\\\\/|$)"\x2CDOTS_SLASH:o\x2CNO_DOT:"(?!\\\\.)"\x2CNO_DOTS:`(?!(?:^|\\\\/)${o})`\x2CNO_DOT_SLASH:"(?!\\\\.{0\x2C1}(?:\\\\/|$))"\x2CNO_DOTS_SLASH:`(?!${o})`\x2CQMARK_NO_DOT:"[^.\\\\/]"\x2CSTAR:"[^/]*?"\x2CSTART_ANCHOR:"(?:^|\\\\/)"}\x2Ci={...n\x2CSLASH_LITERAL:"[\\\\\\\\/]"\x2CQMARK:"[^\\\\\\\\/]"\x2CSTAR:"[^\\\\\\\\/]*?"\x2CDOTS_SLASH:"\\\\.{1\x2C2}(?:[\\\\\\\\/]|$)"\x2CNO_DOT:"(?!\\\\.)"\x2CNO_DOTS:"(?!(?:^|[\\\\\\\\/])\\\\.{1\x2C2}(?:[\\\\\\\\/]|$))"\x2CNO_DOT_SLASH:"(?!\\\\.{0\x2C1}(?:[\\\\\\\\/]|$))"\x2CNO_DOTS_SLASH:"(?!\\\\.{1\x2C2}(?:[\\\\\\\\/]|$))"\x2CQMARK_NO_DOT:"[^.\\\\\\\\/]"\x2CSTART_ANCHOR:"(?:^|[\\\\\\\\/])"\x2CEND_ANCHOR:"(?:[\\\\\\\\/]|$)"};e.exports={MAX_LENGTH:65536\x2CPOSIX_REGEX_SOURCE:{alnum:"a-zA-Z0-9"\x2Calpha:"a-zA-Z"\x2Cascii:"\\\\x00-\\\\x7F"\x2Cblank:" \\\\t"\x2Ccntrl:"\\\\x00-\\\\x1F\\\\x7F"\x2Cdigit:"0-9"\x2Cgraph:"\\\\x21-\\\\x7E"\x2Clower:"a-z"\x2Cprint:"\\\\x20-\\\\x7E "\x2Cpunct:"\\\\-!\\"#$%&'()\\\\*+\x2C./:;<=>?@[\\\\]^_`{|}~"\x2Cspace:" \\\\t\\\\r\\\\n\\\\v\\\\f"\x2Cupper:"A-Z"\x2Cword:"A-Za-z0-9_"\x2Cxdigit:"A-Fa-f0-9"}\x2CREGEX_BACKSLASH:/\\\\(?![*+?^${}(|)[\\]])/g\x2CREGEX_NON_SPECIAL_CHARS:/^[^@![\\].\x2C$*+?^{}()|\\\\/]+/\x2CREGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\\]]/\x2CREGEX_SPECIAL_CHARS_BACKREF:/(\\\\?)((\\W)(\\3*))/g\x2CREGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\\]])/g\x2CREGEX_REMOVE_BACKSLASH:/(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g\x2CREPLACEMENTS:{"***":"*"\x2C"**/**":"**"\x2C"**/**/**":"**"}\x2CCHAR_0:48\x2CCHAR_9:57\x2CCHAR_UPPERCASE_A:65\x2CCHAR_LOWERCASE_A:97\x2CCHAR_UPPERCASE_Z:90\x2CCHAR_LOWERCASE_Z:122\x2CCHAR_LEFT_PARENTHESES:40\x2CCHAR_RIGHT_PARENTHESES:41\x2CCHAR_ASTERISK:42\x2CCHAR_AMPERSAND:38\x2CCHAR_AT:64\x2CCHAR_BACKWARD_SLASH:92\x2CCHAR_CARRIAGE_RETURN:13\x2CCHAR_CIRCUMFLEX_ACCENT:94\x2CCHAR_COLON:58\x2CCHAR_COMMA:44\x2CCHAR_DOT:46\x2CCHAR_DOUBLE_QUOTE:34\x2CCHAR_EQUAL:61\x2CCHAR_EXCLAMATION_MARK:33\x2CCHAR_FORM_FEED:12\x2CCHAR_FORWARD_SLASH:47\x2CCHAR_GRAVE_ACCENT:96\x2CCHAR_HASH:35\x2CCHAR_HYPHEN_MINUS:45\x2CCHAR_LEFT_ANGLE_BRACKET:60\x2CCHAR_LEFT_CURLY_BRACE:123\x2CCHAR_LEFT_SQUARE_BRACKET:91\x2CCHAR_LINE_FEED:10\x2CCHAR_NO_BREAK_SPACE:160\x2CCHAR_PERCENT:37\x2CCHAR_PLUS:43\x2CCHAR_QUESTION_MARK:63\x2CCHAR_RIGHT_ANGLE_BRACKET:62\x2CCHAR_RIGHT_CURLY_BRACE:125\x2CCHAR_RIGHT_SQUARE_BRACKET:93\x2CCHAR_SEMICOLON:59\x2CCHAR_SINGLE_QUOTE:39\x2CCHAR_SPACE:32\x2CCHAR_TAB:9\x2CCHAR_UNDERSCORE:95\x2CCHAR_VERTICAL_LINE:124\x2CCHAR_ZERO_WIDTH_NOBREAK_SPACE:65279\x2CSEP:s.sep\x2CextglobChars:e=>({"!":{type:"negate"\x2Copen:"(?:(?!(?:"\x2Cclose:`))${e.STAR})`}\x2C"?":{type:"qmark"\x2Copen:"(?:"\x2Cclose:")?"}\x2C"+":{type:"plus"\x2Copen:"(?:"\x2Cclose:")+"}\x2C"*":{type:"star"\x2Copen:"(?:"\x2Cclose:")*"}\x2C"@":{type:"at"\x2Copen:"(?:"\x2Cclose:")"}})\x2CglobChars:e=>!0===e?i:n}}\x2C688:(e\x2Ct\x2Cr)=>{"use strict";const s=r(2819)\x2Co=r(9451)\x2C{MAX_LENGTH:n\x2CPOSIX_REGEX_SOURCE:i\x2CREGEX_NON_SPECIAL_CHARS:a\x2CREGEX_SPECIAL_CHARS_BACKREF:c\x2CREPLACEMENTS:l}=s\x2Cu=(e\x2Ct)=>{if("function"==typeof t.expandRange)return t.expandRange(...e\x2Ct);e.sort();const r=`[${e.join("-")}]`;try{new RegExp(r)}catch(t){return e.map((e=>o.escapeRegex(e))).join("..")}return r}\x2Cp=(e\x2Ct)=>`Missing ${e}: "${t}" - use "\\\\\\\\${t}" to match literal characters`\x2Ch=(e\x2Ct)=>{if("string"!=typeof e)throw new TypeError("Expected a string");e=l[e]||e;const r={...t}\x2Ch="number"==typeof r.maxLength?Math.min(n\x2Cr.maxLength):n;let d=e.length;if(d>h)throw new SyntaxError(`Input length: ${d}\x2C exceeds maximum allowed length: ${h}`);const f={type:"bos"\x2Cvalue:""\x2Coutput:r.prepend||""}\x2C_=[f]\x2Cg=r.capture?"":"?:"\x2Cm=o.isWindows(t)\x2Cy=s.globChars(m)\x2Cv=s.extglobChars(y)\x2C{DOT_LITERAL:b\x2CPLUS_LITERAL:E\x2CSLASH_LITERAL:S\x2CONE_CHAR:R\x2CDOTS_SLASH:x\x2CNO_DOT:A\x2CNO_DOT_SLASH:C\x2CNO_DOTS_SLASH:w\x2CQMARK:O\x2CQMARK_NO_DOT:k\x2CSTAR:T\x2CSTART_ANCHOR:N}=y\x2CL=e=>`(${g}(?:(?!${N}${e.dot?x:b}).)*?)`\x2CP=r.dot?"":A\x2CI=r.dot?O:k;let H=!0===r.bash?L(r):T;r.capture&&(H=`(${H})`)\x2C"boolean"==typeof r.noext&&(r.noextglob=r.noext);const $={input:e\x2Cindex:-1\x2Cstart:0\x2Cdot:!0===r.dot\x2Cconsumed:""\x2Coutput:""\x2Cprefix:""\x2Cbacktrack:!1\x2Cnegated:!1\x2Cbrackets:0\x2Cbraces:0\x2Cparens:0\x2Cquotes:0\x2Cglobstar:!1\x2Ctokens:_};e=o.removePrefix(e\x2C$)\x2Cd=e.length;const M=[]\x2CD=[]\x2CB=[];let U\x2Cj=f;const F=()=>$.index===d-1\x2CG=$.peek=(t=1)=>e[$.index+t]\x2CW=$.advance=()=>e[++$.index]||""\x2Cq=()=>e.slice($.index+1)\x2CK=(e=""\x2Ct=0)=>{$.consumed+=e\x2C$.index+=t}\x2CV=e=>{$.output+=null!=e.output?e.output:e.value\x2CK(e.value)}\x2CQ=()=>{let e=1;for(;"!"===G()&&("("!==G(2)||"?"===G(3));)W()\x2C$.start++\x2Ce++;return e%2!=0&&($.negated=!0\x2C$.start++\x2C!0)}\x2CX=e=>{$[e]++\x2CB.push(e)}\x2Cz=e=>{$[e]--\x2CB.pop()}\x2CY=e=>{if("globstar"===j.type){const t=$.braces>0&&("comma"===e.type||"brace"===e.type)\x2Cr=!0===e.extglob||M.length&&("pipe"===e.type||"paren"===e.type);"slash"===e.type||"paren"===e.type||t||r||($.output=$.output.slice(0\x2C-j.output.length)\x2Cj.type="star"\x2Cj.value="*"\x2Cj.output=H\x2C$.output+=j.output)}if(M.length&&"paren"!==e.type&&(M[M.length-1].inner+=e.value)\x2C(e.value||e.output)&&V(e)\x2Cj&&"text"===j.type&&"text"===e.type)return j.value+=e.value\x2Cvoid(j.output=(j.output||"")+e.value);e.prev=j\x2C_.push(e)\x2Cj=e}\x2CZ=(e\x2Ct)=>{const s={...v[t]\x2Cconditions:1\x2Cinner:""};s.prev=j\x2Cs.parens=$.parens\x2Cs.output=$.output;const o=(r.capture?"(":"")+s.open;X("parens")\x2CY({type:e\x2Cvalue:t\x2Coutput:$.output?"":R})\x2CY({type:"paren"\x2Cextglob:!0\x2Cvalue:W()\x2Coutput:o})\x2CM.push(s)}\x2CJ=e=>{let t\x2Cs=e.close+(r.capture?")":"");if("negate"===e.type){let o=H;e.inner&&e.inner.length>1&&e.inner.includes("/")&&(o=L(r))\x2C(o!==H||F()||/^\\)+$/.test(q()))&&(s=e.close=`)$))${o}`)\x2Ce.inner.includes("*")&&(t=q())&&/^\\.[^\\\\/.]+$/.test(t)&&(s=e.close=`)${t})${o})`)\x2C"bos"===e.prev.type&&($.negatedExtglob=!0)}Y({type:"paren"\x2Cextglob:!0\x2Cvalue:U\x2Coutput:s})\x2Cz("parens")};if(!1!==r.fastpaths&&!/(^[*!]|[/()[\\]{}"])/.test(e)){let s=!1\x2Cn=e.replace(c\x2C((e\x2Ct\x2Cr\x2Co\x2Cn\x2Ci)=>"\\\\"===o?(s=!0\x2Ce):"?"===o?t?t+o+(n?O.repeat(n.length):""):0===i?I+(n?O.repeat(n.length):""):O.repeat(r.length):"."===o?b.repeat(r.length):"*"===o?t?t+o+(n?H:""):H:t?e:`\\\\${e}`));return!0===s&&(n=!0===r.unescape?n.replace(/\\\\/g\x2C""):n.replace(/\\\\+/g\x2C(e=>e.length%2==0?"\\\\\\\\":e?"\\\\":"")))\x2Cn===e&&!0===r.contains?($.output=e\x2C$):($.output=o.wrapOutput(n\x2C$\x2Ct)\x2C$)}for(;!F();){if(U=W()\x2C"\\0"===U)continue;if("\\\\"===U){const e=G();if("/"===e&&!0!==r.bash)continue;if("."===e||";"===e)continue;if(!e){U+="\\\\"\x2CY({type:"text"\x2Cvalue:U});continue}const t=/^\\\\+/.exec(q());let s=0;if(t&&t[0].length>2&&(s=t[0].length\x2C$.index+=s\x2Cs%2!=0&&(U+="\\\\"))\x2C!0===r.unescape?U=W():U+=W()\x2C0===$.brackets){Y({type:"text"\x2Cvalue:U});continue}}if($.brackets>0&&("]"!==U||"["===j.value||"[^"===j.value)){if(!1!==r.posix&&":"===U){const e=j.value.slice(1);if(e.includes("[")&&(j.posix=!0\x2Ce.includes(":"))){const e=j.value.lastIndexOf("[")\x2Ct=j.value.slice(0\x2Ce)\x2Cr=j.value.slice(e+2)\x2Cs=i[r];if(s){j.value=t+s\x2C$.backtrack=!0\x2CW()\x2Cf.output||1!==_.indexOf(j)||(f.output=R);continue}}}("["===U&&":"!==G()||"-"===U&&"]"===G())&&(U=`\\\\${U}`)\x2C"]"!==U||"["!==j.value&&"[^"!==j.value||(U=`\\\\${U}`)\x2C!0===r.posix&&"!"===U&&"["===j.value&&(U="^")\x2Cj.value+=U\x2CV({value:U});continue}if(1===$.quotes&&'"'!==U){U=o.escapeRegex(U)\x2Cj.value+=U\x2CV({value:U});continue}if('"'===U){$.quotes=1===$.quotes?0:1\x2C!0===r.keepQuotes&&Y({type:"text"\x2Cvalue:U});continue}if("("===U){X("parens")\x2CY({type:"paren"\x2Cvalue:U});continue}if(")"===U){if(0===$.parens&&!0===r.strictBrackets)throw new SyntaxError(p("opening"\x2C"("));const e=M[M.length-1];if(e&&$.parens===e.parens+1){J(M.pop());continue}Y({type:"paren"\x2Cvalue:U\x2Coutput:$.parens?")":"\\\\)"})\x2Cz("parens");continue}if("["===U){if(!0!==r.nobracket&&q().includes("]"))X("brackets");else{if(!0!==r.nobracket&&!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C"]"));U=`\\\\${U}`}Y({type:"bracket"\x2Cvalue:U});continue}if("]"===U){if(!0===r.nobracket||j&&"bracket"===j.type&&1===j.value.length){Y({type:"text"\x2Cvalue:U\x2Coutput:`\\\\${U}`});continue}if(0===$.brackets){if(!0===r.strictBrackets)throw new SyntaxError(p("opening"\x2C"["));Y({type:"text"\x2Cvalue:U\x2Coutput:`\\\\${U}`});continue}z("brackets");const e=j.value.slice(1);if(!0===j.posix||"^"!==e[0]||e.includes("/")||(U=`/${U}`)\x2Cj.value+=U\x2CV({value:U})\x2C!1===r.literalBrackets||o.hasRegexChars(e))continue;const t=o.escapeRegex(j.value);if($.output=$.output.slice(0\x2C-j.value.length)\x2C!0===r.literalBrackets){$.output+=t\x2Cj.value=t;continue}j.value=`(${g}${t}|${j.value})`\x2C$.output+=j.value;continue}if("{"===U&&!0!==r.nobrace){X("braces");const e={type:"brace"\x2Cvalue:U\x2Coutput:"("\x2CoutputIndex:$.output.length\x2CtokensIndex:$.tokens.length};D.push(e)\x2CY(e);continue}if("}"===U){const e=D[D.length-1];if(!0===r.nobrace||!e){Y({type:"text"\x2Cvalue:U\x2Coutput:U});continue}let t=")";if(!0===e.dots){const e=_.slice()\x2Cs=[];for(let t=e.length-1;t>=0&&(_.pop()\x2C"brace"!==e[t].type);t--)"dots"!==e[t].type&&s.unshift(e[t].value);t=u(s\x2Cr)\x2C$.backtrack=!0}if(!0!==e.comma&&!0!==e.dots){const r=$.output.slice(0\x2Ce.outputIndex)\x2Cs=$.tokens.slice(e.tokensIndex);e.value=e.output="\\\\{"\x2CU=t="\\\\}"\x2C$.output=r;for(const e of s)$.output+=e.output||e.value}Y({type:"brace"\x2Cvalue:U\x2Coutput:t})\x2Cz("braces")\x2CD.pop();continue}if("|"===U){M.length>0&&M[M.length-1].conditions++\x2CY({type:"text"\x2Cvalue:U});continue}if("\x2C"===U){let e=U;const t=D[D.length-1];t&&"braces"===B[B.length-1]&&(t.comma=!0\x2Ce="|")\x2CY({type:"comma"\x2Cvalue:U\x2Coutput:e});continue}if("/"===U){if("dot"===j.type&&$.index===$.start+1){$.start=$.index+1\x2C$.consumed=""\x2C$.output=""\x2C_.pop()\x2Cj=f;continue}Y({type:"slash"\x2Cvalue:U\x2Coutput:S});continue}if("."===U){if($.braces>0&&"dot"===j.type){"."===j.value&&(j.output=b);const e=D[D.length-1];j.type="dots"\x2Cj.output+=U\x2Cj.value+=U\x2Ce.dots=!0;continue}if($.braces+$.parens===0&&"bos"!==j.type&&"slash"!==j.type){Y({type:"text"\x2Cvalue:U\x2Coutput:b});continue}Y({type:"dot"\x2Cvalue:U\x2Coutput:b});continue}if("?"===U){if((!j||"("!==j.value)&&!0!==r.noextglob&&"("===G()&&"?"!==G(2)){Z("qmark"\x2CU);continue}if(j&&"paren"===j.type){const e=G();let t=U;if("<"===e&&!o.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");("("===j.value&&!/[!=<:]/.test(e)||"<"===e&&!/<([!=]|\\w+>)/.test(q()))&&(t=`\\\\${U}`)\x2CY({type:"text"\x2Cvalue:U\x2Coutput:t});continue}if(!0!==r.dot&&("slash"===j.type||"bos"===j.type)){Y({type:"qmark"\x2Cvalue:U\x2Coutput:k});continue}Y({type:"qmark"\x2Cvalue:U\x2Coutput:O});continue}if("!"===U){if(!0!==r.noextglob&&"("===G()&&("?"!==G(2)||!/[!=<:]/.test(G(3)))){Z("negate"\x2CU);continue}if(!0!==r.nonegate&&0===$.index){Q();continue}}if("+"===U){if(!0!==r.noextglob&&"("===G()&&"?"!==G(2)){Z("plus"\x2CU);continue}if(j&&"("===j.value||!1===r.regex){Y({type:"plus"\x2Cvalue:U\x2Coutput:E});continue}if(j&&("bracket"===j.type||"paren"===j.type||"brace"===j.type)||$.parens>0){Y({type:"plus"\x2Cvalue:U});continue}Y({type:"plus"\x2Cvalue:E});continue}if("@"===U){if(!0!==r.noextglob&&"("===G()&&"?"!==G(2)){Y({type:"at"\x2Cextglob:!0\x2Cvalue:U\x2Coutput:""});continue}Y({type:"text"\x2Cvalue:U});continue}if("*"!==U){"$"!==U&&"^"!==U||(U=`\\\\${U}`);const e=a.exec(q());e&&(U+=e[0]\x2C$.index+=e[0].length)\x2CY({type:"text"\x2Cvalue:U});continue}if(j&&("globstar"===j.type||!0===j.star)){j.type="star"\x2Cj.star=!0\x2Cj.value+=U\x2Cj.output=H\x2C$.backtrack=!0\x2C$.globstar=!0\x2CK(U);continue}let t=q();if(!0!==r.noextglob&&/^\\([^?]/.test(t)){Z("star"\x2CU);continue}if("star"===j.type){if(!0===r.noglobstar){K(U);continue}const s=j.prev\x2Co=s.prev\x2Cn="slash"===s.type||"bos"===s.type\x2Ci=o&&("star"===o.type||"globstar"===o.type);if(!0===r.bash&&(!n||t[0]&&"/"!==t[0])){Y({type:"star"\x2Cvalue:U\x2Coutput:""});continue}const a=$.braces>0&&("comma"===s.type||"brace"===s.type)\x2Cc=M.length&&("pipe"===s.type||"paren"===s.type);if(!n&&"paren"!==s.type&&!a&&!c){Y({type:"star"\x2Cvalue:U\x2Coutput:""});continue}for(;"/**"===t.slice(0\x2C3);){const r=e[$.index+4];if(r&&"/"!==r)break;t=t.slice(3)\x2CK("/**"\x2C3)}if("bos"===s.type&&F()){j.type="globstar"\x2Cj.value+=U\x2Cj.output=L(r)\x2C$.output=j.output\x2C$.globstar=!0\x2CK(U);continue}if("slash"===s.type&&"bos"!==s.prev.type&&!i&&F()){$.output=$.output.slice(0\x2C-(s.output+j.output).length)\x2Cs.output=`(?:${s.output}`\x2Cj.type="globstar"\x2Cj.output=L(r)+(r.strictSlashes?")":"|$)")\x2Cj.value+=U\x2C$.globstar=!0\x2C$.output+=s.output+j.output\x2CK(U);continue}if("slash"===s.type&&"bos"!==s.prev.type&&"/"===t[0]){const e=void 0!==t[1]?"|$":"";$.output=$.output.slice(0\x2C-(s.output+j.output).length)\x2Cs.output=`(?:${s.output}`\x2Cj.type="globstar"\x2Cj.output=`${L(r)}${S}|${S}${e})`\x2Cj.value+=U\x2C$.output+=s.output+j.output\x2C$.globstar=!0\x2CK(U+W())\x2CY({type:"slash"\x2Cvalue:"/"\x2Coutput:""});continue}if("bos"===s.type&&"/"===t[0]){j.type="globstar"\x2Cj.value+=U\x2Cj.output=`(?:^|${S}|${L(r)}${S})`\x2C$.output=j.output\x2C$.globstar=!0\x2CK(U+W())\x2CY({type:"slash"\x2Cvalue:"/"\x2Coutput:""});continue}$.output=$.output.slice(0\x2C-j.output.length)\x2Cj.type="globstar"\x2Cj.output=L(r)\x2Cj.value+=U\x2C$.output+=j.output\x2C$.globstar=!0\x2CK(U);continue}const s={type:"star"\x2Cvalue:U\x2Coutput:H};!0!==r.bash?!j||"bracket"!==j.type&&"paren"!==j.type||!0!==r.regex?($.index!==$.start&&"slash"!==j.type&&"dot"!==j.type||("dot"===j.type?($.output+=C\x2Cj.output+=C):!0===r.dot?($.output+=w\x2Cj.output+=w):($.output+=P\x2Cj.output+=P)\x2C"*"!==G()&&($.output+=R\x2Cj.output+=R))\x2CY(s)):(s.output=U\x2CY(s)):(s.output=".*?"\x2C"bos"!==j.type&&"slash"!==j.type||(s.output=P+s.output)\x2CY(s))}for(;$.brackets>0;){if(!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C"]"));$.output=o.escapeLast($.output\x2C"[")\x2Cz("brackets")}for(;$.parens>0;){if(!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C")"));$.output=o.escapeLast($.output\x2C"(")\x2Cz("parens")}for(;$.braces>0;){if(!0===r.strictBrackets)throw new SyntaxError(p("closing"\x2C"}"));$.output=o.escapeLast($.output\x2C"{")\x2Cz("braces")}if(!0===r.strictSlashes||"star"!==j.type&&"bracket"!==j.type||Y({type:"maybe_slash"\x2Cvalue:""\x2Coutput:`${S}?`})\x2C!0===$.backtrack){$.output="";for(const e of $.tokens)$.output+=null!=e.output?e.output:e.value\x2Ce.suffix&&($.output+=e.suffix)}return $};h.fastpaths=(e\x2Ct)=>{const r={...t}\x2Ci="number"==typeof r.maxLength?Math.min(n\x2Cr.maxLength):n\x2Ca=e.length;if(a>i)throw new SyntaxError(`Input length: ${a}\x2C exceeds maximum allowed length: ${i}`);e=l[e]||e;const c=o.isWindows(t)\x2C{DOT_LITERAL:u\x2CSLASH_LITERAL:p\x2CONE_CHAR:h\x2CDOTS_SLASH:d\x2CNO_DOT:f\x2CNO_DOTS:_\x2CNO_DOTS_SLASH:g\x2CSTAR:m\x2CSTART_ANCHOR:y}=s.globChars(c)\x2Cv=r.dot?_:f\x2Cb=r.dot?g:f\x2CE=r.capture?"":"?:";let S=!0===r.bash?".*?":m;r.capture&&(S=`(${S})`);const R=e=>!0===e.noglobstar?S:`(${E}(?:(?!${y}${e.dot?d:u}).)*?)`\x2Cx=e=>{switch(e){case"*":return`${v}${h}${S}`;case".*":return`${u}${h}${S}`;case"*.*":return`${v}${S}${u}${h}${S}`;case"*/*":return`${v}${S}${p}${h}${b}${S}`;case"**":return v+R(r);case"**/*":return`(?:${v}${R(r)}${p})?${b}${h}${S}`;case"**/*.*":return`(?:${v}${R(r)}${p})?${b}${S}${u}${h}${S}`;case"**/.*":return`(?:${v}${R(r)}${p})?${u}${h}${S}`;default:{const t=/^(.*?)\\.(\\w+)$/.exec(e);if(!t)return;const r=x(t[1]);if(!r)return;return r+u+t[2]}}}\x2CA=o.removePrefix(e\x2C{negated:!1\x2Cprefix:""});let C=x(A);return C&&!0!==r.strictSlashes&&(C+=`${p}?`)\x2CC}\x2Ce.exports=h}\x2C3148:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5622)\x2Co=r(9488)\x2Cn=r(688)\x2Ci=r(9451)\x2Ca=r(2819)\x2Cc=(e\x2Ct\x2Cr=!1)=>{if(Array.isArray(e)){const s=e.map((e=>c(e\x2Ct\x2Cr)));return e=>{for(const t of s){const r=t(e);if(r)return r}return!1}}const s=(o=e)&&"object"==typeof o&&!Array.isArray(o)&&e.tokens&&e.input;var o;if(""===e||"string"!=typeof e&&!s)throw new TypeError("Expected pattern to be a non-empty string");const n=t||{}\x2Ca=i.isWindows(t)\x2Cl=s?c.compileRe(e\x2Ct):c.makeRe(e\x2Ct\x2C!1\x2C!0)\x2Cu=l.state;delete l.state;let p=()=>!1;if(n.ignore){const e={...t\x2Cignore:null\x2ConMatch:null\x2ConResult:null};p=c(n.ignore\x2Ce\x2Cr)}const h=(r\x2Cs=!1)=>{const{isMatch:o\x2Cmatch:i\x2Coutput:h}=c.test(r\x2Cl\x2Ct\x2C{glob:e\x2Cposix:a})\x2Cd={glob:e\x2Cstate:u\x2Cregex:l\x2Cposix:a\x2Cinput:r\x2Coutput:h\x2Cmatch:i\x2CisMatch:o};return"function"==typeof n.onResult&&n.onResult(d)\x2C!1===o?(d.isMatch=!1\x2C!!s&&d):p(r)?("function"==typeof n.onIgnore&&n.onIgnore(d)\x2Cd.isMatch=!1\x2C!!s&&d):("function"==typeof n.onMatch&&n.onMatch(d)\x2C!s||d)};return r&&(h.state=u)\x2Ch};c.test=(e\x2Ct\x2Cr\x2C{glob:s\x2Cposix:o}={})=>{if("string"!=typeof e)throw new TypeError("Expected input to be a string");if(""===e)return{isMatch:!1\x2Coutput:""};const n=r||{}\x2Ca=n.format||(o?i.toPosixSlashes:null);let l=e===s\x2Cu=l&&a?a(e):e;return!1===l&&(u=a?a(e):e\x2Cl=u===s)\x2C!1!==l&&!0!==n.capture||(l=!0===n.matchBase||!0===n.basename?c.matchBase(e\x2Ct\x2Cr\x2Co):t.exec(u))\x2C{isMatch:Boolean(l)\x2Cmatch:l\x2Coutput:u}}\x2Cc.matchBase=(e\x2Ct\x2Cr\x2Co=i.isWindows(r))=>(t instanceof RegExp?t:c.makeRe(t\x2Cr)).test(s.basename(e))\x2Cc.isMatch=(e\x2Ct\x2Cr)=>c(t\x2Cr)(e)\x2Cc.parse=(e\x2Ct)=>Array.isArray(e)?e.map((e=>c.parse(e\x2Ct))):n(e\x2C{...t\x2Cfastpaths:!1})\x2Cc.scan=(e\x2Ct)=>o(e\x2Ct)\x2Cc.compileRe=(e\x2Ct\x2Cr=!1\x2Cs=!1)=>{if(!0===r)return e.output;const o=t||{}\x2Cn=o.contains?"":"^"\x2Ci=o.contains?"":"$";let a=`${n}(?:${e.output})${i}`;e&&!0===e.negated&&(a=`^(?!${a}).*$`);const l=c.toRegex(a\x2Ct);return!0===s&&(l.state=e)\x2Cl}\x2Cc.makeRe=(e\x2Ct={}\x2Cr=!1\x2Cs=!1)=>{if(!e||"string"!=typeof e)throw new TypeError("Expected a non-empty string");let o={negated:!1\x2Cfastpaths:!0};return!1===t.fastpaths||"."!==e[0]&&"*"!==e[0]||(o.output=n.fastpaths(e\x2Ct))\x2Co.output||(o=n(e\x2Ct))\x2Cc.compileRe(o\x2Ct\x2Cr\x2Cs)}\x2Cc.toRegex=(e\x2Ct)=>{try{const r=t||{};return new RegExp(e\x2Cr.flags||(r.nocase?"i":""))}catch(e){if(t&&!0===t.debug)throw e;return/$^/}}\x2Cc.constants=a\x2Ce.exports=c}\x2C9488:(e\x2Ct\x2Cr)=>{"use strict";const s=r(9451)\x2C{CHAR_ASTERISK:o\x2CCHAR_AT:n\x2CCHAR_BACKWARD_SLASH:i\x2CCHAR_COMMA:a\x2CCHAR_DOT:c\x2CCHAR_EXCLAMATION_MARK:l\x2CCHAR_FORWARD_SLASH:u\x2CCHAR_LEFT_CURLY_BRACE:p\x2CCHAR_LEFT_PARENTHESES:h\x2CCHAR_LEFT_SQUARE_BRACKET:d\x2CCHAR_PLUS:f\x2CCHAR_QUESTION_MARK:_\x2CCHAR_RIGHT_CURLY_BRACE:g\x2CCHAR_RIGHT_PARENTHESES:m\x2CCHAR_RIGHT_SQUARE_BRACKET:y}=r(2819)\x2Cv=e=>e===u||e===i\x2Cb=e=>{!0!==e.isPrefix&&(e.depth=e.isGlobstar?1/0:1)};e.exports=(e\x2Ct)=>{const r=t||{}\x2CE=e.length-1\x2CS=!0===r.parts||!0===r.scanToEnd\x2CR=[]\x2Cx=[]\x2CA=[];let C\x2Cw\x2CO=e\x2Ck=-1\x2CT=0\x2CN=0\x2CL=!1\x2CP=!1\x2CI=!1\x2CH=!1\x2C$=!1\x2CM=!1\x2CD=!1\x2CB=!1\x2CU=!1\x2Cj=!1\x2CF=0\x2CG={value:""\x2Cdepth:0\x2CisGlob:!1};const W=()=>k>=E\x2Cq=()=>(C=w\x2CO.charCodeAt(++k));for(;k<E;){let e;if(w=q()\x2Cw!==i){if(!0===M||w===p){for(F++;!0!==W()&&(w=q());)if(w!==i)if(w!==p){if(!0!==M&&w===c&&(w=q())===c){if(L=G.isBrace=!0\x2CI=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(!0!==M&&w===a){if(L=G.isBrace=!0\x2CI=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(w===g&&(F--\x2C0===F)){M=!1\x2CL=G.isBrace=!0\x2Cj=!0;break}}else F++;else D=G.backslashes=!0\x2Cq();if(!0===S)continue;break}if(w!==u){if(!0!==r.noext&&!0==(w===f||w===n||w===o||w===_||w===l)&&O.charCodeAt(k+1)===h){if(I=G.isGlob=!0\x2CH=G.isExtglob=!0\x2Cj=!0\x2Cw===l&&k===T&&(U=!0)\x2C!0===S){for(;!0!==W()&&(w=q());)if(w!==i){if(w===m){I=G.isGlob=!0\x2Cj=!0;break}}else D=G.backslashes=!0\x2Cw=q();continue}break}if(w===o){if(C===o&&($=G.isGlobstar=!0)\x2CI=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(w===_){if(I=G.isGlob=!0\x2Cj=!0\x2C!0===S)continue;break}if(w===d){for(;!0!==W()&&(e=q());)if(e!==i){if(e===y){P=G.isBracket=!0\x2CI=G.isGlob=!0\x2Cj=!0;break}}else D=G.backslashes=!0\x2Cq();if(!0===S)continue;break}if(!0===r.nonegate||w!==l||k!==T){if(!0!==r.noparen&&w===h){if(I=G.isGlob=!0\x2C!0===S){for(;!0!==W()&&(w=q());)if(w!==h){if(w===m){j=!0;break}}else D=G.backslashes=!0\x2Cw=q();continue}break}if(!0===I){if(j=!0\x2C!0===S)continue;break}}else B=G.negated=!0\x2CT++}else{if(R.push(k)\x2Cx.push(G)\x2CG={value:""\x2Cdepth:0\x2CisGlob:!1}\x2C!0===j)continue;if(C===c&&k===T+1){T+=2;continue}N=k+1}}else D=G.backslashes=!0\x2Cw=q()\x2Cw===p&&(M=!0)}!0===r.noext&&(H=!1\x2CI=!1);let K=O\x2CV=""\x2CQ="";T>0&&(V=O.slice(0\x2CT)\x2CO=O.slice(T)\x2CN-=T)\x2CK&&!0===I&&N>0?(K=O.slice(0\x2CN)\x2CQ=O.slice(N)):!0===I?(K=""\x2CQ=O):K=O\x2CK&&""!==K&&"/"!==K&&K!==O&&v(K.charCodeAt(K.length-1))&&(K=K.slice(0\x2C-1))\x2C!0===r.unescape&&(Q&&(Q=s.removeBackslashes(Q))\x2CK&&!0===D&&(K=s.removeBackslashes(K)));const X={prefix:V\x2Cinput:e\x2Cstart:T\x2Cbase:K\x2Cglob:Q\x2CisBrace:L\x2CisBracket:P\x2CisGlob:I\x2CisExtglob:H\x2CisGlobstar:$\x2Cnegated:B\x2CnegatedExtglob:U};if(!0===r.tokens&&(X.maxDepth=0\x2Cv(w)||x.push(G)\x2CX.tokens=x)\x2C!0===r.parts||!0===r.tokens){let t;for(let s=0;s<R.length;s++){const o=t?t+1:T\x2Cn=R[s]\x2Ci=e.slice(o\x2Cn);r.tokens&&(0===s&&0!==T?(x[s].isPrefix=!0\x2Cx[s].value=V):x[s].value=i\x2Cb(x[s])\x2CX.maxDepth+=x[s].depth)\x2C0===s&&""===i||A.push(i)\x2Ct=n}if(t&&t+1<e.length){const s=e.slice(t+1);A.push(s)\x2Cr.tokens&&(x[x.length-1].value=s\x2Cb(x[x.length-1])\x2CX.maxDepth+=x[x.length-1].depth)}X.slashes=R\x2CX.parts=A}return X}}\x2C9451:(e\x2Ct\x2Cr)=>{"use strict";const s=r(5622)\x2Co="win32"===process.platform\x2C{REGEX_BACKSLASH:n\x2CREGEX_REMOVE_BACKSLASH:i\x2CREGEX_SPECIAL_CHARS:a\x2CREGEX_SPECIAL_CHARS_GLOBAL:c}=r(2819);t.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e)\x2Ct.hasRegexChars=e=>a.test(e)\x2Ct.isRegexChar=e=>1===e.length&&t.hasRegexChars(e)\x2Ct.escapeRegex=e=>e.replace(c\x2C"\\\\$1")\x2Ct.toPosixSlashes=e=>e.replace(n\x2C"/")\x2Ct.removeBackslashes=e=>e.replace(i\x2C(e=>"\\\\"===e?"":e))\x2Ct.supportsLookbehinds=()=>{const e=process.version.slice(1).split(".").map(Number);return 3===e.length&&e[0]>=9||8===e[0]&&e[1]>=10}\x2Ct.isWindows=e=>e&&"boolean"==typeof e.windows?e.windows:!0===o||"\\\\"===s.sep\x2Ct.escapeLast=(e\x2Cr\x2Cs)=>{const o=e.lastIndexOf(r\x2Cs);return-1===o?e:"\\\\"===e[o-1]?t.escapeLast(e\x2Cr\x2Co-1):`${e.slice(0\x2Co)}\\\\${e.slice(o)}`}\x2Ct.removePrefix=(e\x2Ct={})=>{let r=e;return r.startsWith("./")&&(r=r.slice(2)\x2Ct.prefix="./")\x2Cr}\x2Ct.wrapOutput=(e\x2Ct={}\x2Cr={})=>{let s=`${r.contains?"":"^"}(?:${e})${r.contains?"":"$"}`;return!0===t.negated&&(s=`(?:^(?!${s}).*$)`)\x2Cs}}\x2C5109:(e\x2Ct\x2Cr)=>{"use strict";const s=r(535)\x2Co=(e\x2Ct\x2Cr)=>{if(!1===s(e))throw new TypeError("toRegexRange: expected the first argument to be a number");if(void 0===t||e===t)return String(e);if(!1===s(t))throw new TypeError("toRegexRange: expected the second argument to be a number.");let n={relaxZeros:!0\x2C...r};"boolean"==typeof n.strictZeros&&(n.relaxZeros=!1===n.strictZeros);let c=e+":"+t+"="+String(n.relaxZeros)+String(n.shorthand)+String(n.capture)+String(n.wrap);if(o.cache.hasOwnProperty(c))return o.cache[c].result;let l=Math.min(e\x2Ct)\x2Cu=Math.max(e\x2Ct);if(1===Math.abs(l-u)){let r=e+"|"+t;return n.capture?`(${r})`:!1===n.wrap?r:`(?:${r})`}let p=d(e)||d(t)\x2Ch={min:e\x2Cmax:t\x2Ca:l\x2Cb:u}\x2Cf=[]\x2C_=[];return p&&(h.isPadded=p\x2Ch.maxLen=String(h.max).length)\x2Cl<0&&(_=i(u<0?Math.abs(u):1\x2CMath.abs(l)\x2Ch\x2Cn)\x2Cl=h.a=0)\x2Cu>=0&&(f=i(l\x2Cu\x2Ch\x2Cn))\x2Ch.negatives=_\x2Ch.positives=f\x2Ch.result=function(e\x2Ct\x2Cr){let s=a(e\x2Ct\x2C"-"\x2C!1)||[]\x2Co=a(t\x2Ce\x2C""\x2C!1)||[]\x2Cn=a(e\x2Ct\x2C"-?"\x2C!0)||[];return s.concat(n).concat(o).join("|")}(_\x2Cf)\x2C!0===n.capture?h.result=`(${h.result})`:!1!==n.wrap&&f.length+_.length>1&&(h.result=`(?:${h.result})`)\x2Co.cache[c]=h\x2Ch.result};function n(e\x2Ct\x2Cr){if(e===t)return{pattern:e\x2Ccount:[]\x2Cdigits:0};let s=function(e\x2Ct){let r=[];for(let s=0;s<e.length;s++)r.push([e[s]\x2Ct[s]]);return r}(e\x2Ct)\x2Co=s.length\x2Cn=""\x2Ci=0;for(let e=0;e<o;e++){let[t\x2Cr]=s[e];t===r?n+=t:"0"!==t||"9"!==r?n+=`[${a=t}${(c=r)-a==1?"":"-"}${c}]`:i++}var a\x2Cc;return i&&(n+=!0===r.shorthand?"\\\\d":"[0-9]")\x2C{pattern:n\x2Ccount:[i]\x2Cdigits:o}}function i(e\x2Ct\x2Cr\x2Cs){let o\x2Ci=function(e\x2Ct){let r=1\x2Cs=1\x2Co=u(e\x2Cr)\x2Cn=new Set([t]);for(;e<=o&&o<=t;)n.add(o)\x2Cr+=1\x2Co=u(e\x2Cr);for(o=p(t+1\x2Cs)-1;e<o&&o<=t;)n.add(o)\x2Cs+=1\x2Co=p(t+1\x2Cs)-1;return n=[...n]\x2Cn.sort(c)\x2Cn}(e\x2Ct)\x2Ca=[]\x2Cl=e;for(let e=0;e<i.length;e++){let t=i[e]\x2Cc=n(String(l)\x2CString(t)\x2Cs)\x2Cu="";r.isPadded||!o||o.pattern!==c.pattern?(r.isPadded&&(u=f(t\x2Cr\x2Cs))\x2Cc.string=u+c.pattern+h(c.count)\x2Ca.push(c)\x2Cl=t+1\x2Co=c):(o.count.length>1&&o.count.pop()\x2Co.count.push(c.count[0])\x2Co.string=o.pattern+h(o.count)\x2Cl=t+1)}return a}function a(e\x2Ct\x2Cr\x2Cs\x2Co){let n=[];for(let o of e){let{string:e}=o;s||l(t\x2C"string"\x2Ce)||n.push(r+e)\x2Cs&&l(t\x2C"string"\x2Ce)&&n.push(r+e)}return n}function c(e\x2Ct){return e>t?1:t>e?-1:0}function l(e\x2Ct\x2Cr){return e.some((e=>e[t]===r))}function u(e\x2Ct){return Number(String(e).slice(0\x2C-t)+"9".repeat(t))}function p(e\x2Ct){return e-e%Math.pow(10\x2Ct)}function h(e){let[t=0\x2Cr=""]=e;return r||t>1?`{${t+(r?"\x2C"+r:"")}}`:""}function d(e){return/^-?(0+)\\d/.test(e)}function f(e\x2Ct\x2Cr){if(!t.isPadded)return e;let s=Math.abs(t.maxLen-String(e).length)\x2Co=!1!==r.relaxZeros;switch(s){case 0:return"";case 1:return o?"0?":"0";case 2:return o?"0{0\x2C2}":"00";default:return o?`0{0\x2C${s}}`:`0{${s}}`}}o.cache={}\x2Co.clearCache=()=>o.cache={}\x2Ce.exports=o}\x2C8681:(e\x2Ct\x2Cr)=>{"use strict";const s=r(2982);s.createWebSocketStream=r(5519)\x2Cs.Server=r(58)\x2Cs.Receiver=r(3091)\x2Cs.Sender=r(2091)\x2Ce.exports=s}\x2C4847:(e\x2Ct\x2Cr)=>{"use strict";const{EMPTY_BUFFER:s}=r(9864);function o(e\x2Ct){if(0===e.length)return s;if(1===e.length)return e[0];const r=Buffer.allocUnsafe(t);let o=0;for(let t=0;t<e.length;t++){const s=e[t];r.set(s\x2Co)\x2Co+=s.length}return o<t?r.slice(0\x2Co):r}function n(e\x2Ct\x2Cr\x2Cs\x2Co){for(let n=0;n<o;n++)r[s+n]=e[n]^t[3&n]}function i(e\x2Ct){const r=e.length;for(let s=0;s<r;s++)e[s]^=t[3&s]}function a(e){return e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset\x2Ce.byteOffset+e.byteLength)}function c(e){if(c.readOnly=!0\x2CBuffer.isBuffer(e))return e;let t;return e instanceof ArrayBuffer?t=Buffer.from(e):ArrayBuffer.isView(e)?t=Buffer.from(e.buffer\x2Ce.byteOffset\x2Ce.byteLength):(t=Buffer.from(e)\x2Cc.readOnly=!1)\x2Ct}try{const t=r(Object(function(){var e=new Error("Cannot find module 'bufferutil'");throw e.code="MODULE_NOT_FOUND"\x2Ce}()))\x2Cs=t.BufferUtil||t;e.exports={concat:o\x2Cmask(e\x2Ct\x2Cr\x2Co\x2Ci){i<48?n(e\x2Ct\x2Cr\x2Co\x2Ci):s.mask(e\x2Ct\x2Cr\x2Co\x2Ci)}\x2CtoArrayBuffer:a\x2CtoBuffer:c\x2Cunmask(e\x2Ct){e.length<32?i(e\x2Ct):s.unmask(e\x2Ct)}}}catch(t){e.exports={concat:o\x2Cmask:n\x2CtoArrayBuffer:a\x2CtoBuffer:c\x2Cunmask:i}}}\x2C9864:e=>{"use strict";e.exports={BINARY_TYPES:["nodebuffer"\x2C"arraybuffer"\x2C"fragments"]\x2CGUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11"\x2CkStatusCode:Symbol("status-code")\x2CkWebSocket:Symbol("websocket")\x2CEMPTY_BUFFER:Buffer.alloc(0)\x2CNOOP:()=>{}}}\x2C5831:e=>{"use strict";class t{constructor(e\x2Ct){this.target=t\x2Cthis.type=e}}class r extends t{constructor(e\x2Ct){super("message"\x2Ct)\x2Cthis.data=e}}class s extends t{constructor(e\x2Ct\x2Cr){super("close"\x2Cr)\x2Cthis.wasClean=r._closeFrameReceived&&r._closeFrameSent\x2Cthis.reason=t\x2Cthis.code=e}}class o extends t{constructor(e){super("open"\x2Ce)}}class n extends t{constructor(e\x2Ct){super("error"\x2Ct)\x2Cthis.message=e.message\x2Cthis.error=e}}const i={addEventListener(e\x2Ct\x2Ci){if("function"!=typeof t)return;function a(e){t.call(this\x2Cnew r(e\x2Cthis))}function c(e\x2Cr){t.call(this\x2Cnew s(e\x2Cr\x2Cthis))}function l(e){t.call(this\x2Cnew n(e\x2Cthis))}function u(){t.call(this\x2Cnew o(this))}const p=i&&i.once?"once":"on";"message"===e?(a._listener=t\x2Cthis[p](e\x2Ca)):"close"===e?(c._listener=t\x2Cthis[p](e\x2Cc)):"error"===e?(l._listener=t\x2Cthis[p](e\x2Cl)):"open"===e?(u._listener=t\x2Cthis[p](e\x2Cu)):this[p](e\x2Ct)}\x2CremoveEventListener(e\x2Ct){const r=this.listeners(e);for(let s=0;s<r.length;s++)r[s]!==t&&r[s]._listener!==t||this.removeListener(e\x2Cr[s])}};e.exports=i}\x2C3071:e=>{"use strict";const t=[0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C1\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C0\x2C1\x2C1\x2C0\x2C1\x2C1\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C0\x2C0\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C1\x2C0\x2C1\x2C0\x2C1\x2C0];function r(e\x2Ct\x2Cr){void 0===e[t]?e[t]=[r]:e[t].push(r)}e.exports={format:function(e){return Object.keys(e).map((t=>{let r=e[t];return Array.isArray(r)||(r=[r])\x2Cr.map((e=>[t].concat(Object.keys(e).map((t=>{let r=e[t];return Array.isArray(r)||(r=[r])\x2Cr.map((e=>!0===e?t:`${t}=${e}`)).join("; ")}))).join("; "))).join("\x2C ")})).join("\x2C ")}\x2Cparse:function(e){const s=Object.create(null);if(void 0===e||""===e)return s;let o\x2Cn\x2Ci=Object.create(null)\x2Ca=!1\x2Cc=!1\x2Cl=!1\x2Cu=-1\x2Cp=-1\x2Ch=0;for(;h<e.length;h++){const d=e.charCodeAt(h);if(void 0===o)if(-1===p&&1===t[d])-1===u&&(u=h);else if(32===d||9===d)-1===p&&-1!==u&&(p=h);else{if(59!==d&&44!==d)throw new SyntaxError(`Unexpected character at index ${h}`);{if(-1===u)throw new SyntaxError(`Unexpected character at index ${h}`);-1===p&&(p=h);const t=e.slice(u\x2Cp);44===d?(r(s\x2Ct\x2Ci)\x2Ci=Object.create(null)):o=t\x2Cu=p=-1}}else if(void 0===n)if(-1===p&&1===t[d])-1===u&&(u=h);else if(32===d||9===d)-1===p&&-1!==u&&(p=h);else if(59===d||44===d){if(-1===u)throw new SyntaxError(`Unexpected character at index ${h}`);-1===p&&(p=h)\x2Cr(i\x2Ce.slice(u\x2Cp)\x2C!0)\x2C44===d&&(r(s\x2Co\x2Ci)\x2Ci=Object.create(null)\x2Co=void 0)\x2Cu=p=-1}else{if(61!==d||-1===u||-1!==p)throw new SyntaxError(`Unexpected character at index ${h}`);n=e.slice(u\x2Ch)\x2Cu=p=-1}else if(c){if(1!==t[d])throw new SyntaxError(`Unexpected character at index ${h}`);-1===u?u=h:a||(a=!0)\x2Cc=!1}else if(l)if(1===t[d])-1===u&&(u=h);else if(34===d&&-1!==u)l=!1\x2Cp=h;else{if(92!==d)throw new SyntaxError(`Unexpected character at index ${h}`);c=!0}else if(34===d&&61===e.charCodeAt(h-1))l=!0;else if(-1===p&&1===t[d])-1===u&&(u=h);else if(-1===u||32!==d&&9!==d){if(59!==d&&44!==d)throw new SyntaxError(`Unexpected character at index ${h}`);{if(-1===u)throw new SyntaxError(`Unexpected character at index ${h}`);-1===p&&(p=h);let t=e.slice(u\x2Cp);a&&(t=t.replace(/\\\\/g\x2C"")\x2Ca=!1)\x2Cr(i\x2Cn\x2Ct)\x2C44===d&&(r(s\x2Co\x2Ci)\x2Ci=Object.create(null)\x2Co=void 0)\x2Cn=void 0\x2Cu=p=-1}}else-1===p&&(p=h)}if(-1===u||l)throw new SyntaxError("Unexpected end of input");-1===p&&(p=h);const d=e.slice(u\x2Cp);return void 0===o?r(s\x2Cd\x2Ci):(void 0===n?r(i\x2Cd\x2C!0):r(i\x2Cn\x2Ca?d.replace(/\\\\/g\x2C""):d)\x2Cr(s\x2Co\x2Ci))\x2Cs}}}\x2C8528:e=>{"use strict";const t=Symbol("kDone")\x2Cr=Symbol("kRun");e.exports=class{constructor(e){this[t]=()=>{this.pending--\x2Cthis[r]()}\x2Cthis.concurrency=e||1/0\x2Cthis.jobs=[]\x2Cthis.pending=0}add(e){this.jobs.push(e)\x2Cthis[r]()}[r](){if(this.pending!==this.concurrency&&this.jobs.length){const e=this.jobs.shift();this.pending++\x2Ce(this[t])}}}}\x2C7567:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8761)\x2Co=r(4847)\x2Cn=r(8528)\x2C{kStatusCode:i\x2CNOOP:a}=r(9864)\x2Cc=Buffer.from([0\x2C0\x2C255\x2C255])\x2Cl=Symbol("permessage-deflate")\x2Cu=Symbol("total-length")\x2Cp=Symbol("callback")\x2Ch=Symbol("buffers")\x2Cd=Symbol("error");let f;function _(e){this[h].push(e)\x2Cthis[u]+=e.length}function g(e){this[u]+=e.length\x2Cthis[l]._maxPayload<1||this[u]<=this[l]._maxPayload?this[h].push(e):(this[d]=new RangeError("Max payload size exceeded")\x2Cthis[d].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"\x2Cthis[d][i]=1009\x2Cthis.removeListener("data"\x2Cg)\x2Cthis.reset())}function m(e){this[l]._inflate=null\x2Ce[i]=1007\x2Cthis[p](e)}e.exports=class{constructor(e\x2Ct\x2Cr){if(this._maxPayload=0|r\x2Cthis._options=e||{}\x2Cthis._threshold=void 0!==this._options.threshold?this._options.threshold:1024\x2Cthis._isServer=!!t\x2Cthis._deflate=null\x2Cthis._inflate=null\x2Cthis.params=null\x2C!f){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;f=new n(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0)\x2Cthis._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0)\x2Cthis._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits)\x2Cthis._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0)\x2Ce}accept(e){return e=this.normalizeParams(e)\x2Cthis.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e)\x2Cthis.params}cleanup(){if(this._inflate&&(this._inflate.close()\x2Cthis._inflate=null)\x2Cthis._deflate){const e=this._deflate[p];this._deflate.close()\x2Cthis._deflate=null\x2Ce&&e(new Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){const t=this._options\x2Cr=e.find((e=>!(!1===t.serverNoContextTakeover&&e.server_no_context_takeover||e.server_max_window_bits&&(!1===t.serverMaxWindowBits||"number"==typeof t.serverMaxWindowBits&&t.serverMaxWindowBits>e.server_max_window_bits)||"number"==typeof t.clientMaxWindowBits&&!e.client_max_window_bits)));if(!r)throw new Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(r.server_no_context_takeover=!0)\x2Ct.clientNoContextTakeover&&(r.client_no_context_takeover=!0)\x2C"number"==typeof t.serverMaxWindowBits&&(r.server_max_window_bits=t.serverMaxWindowBits)\x2C"number"==typeof t.clientMaxWindowBits?r.client_max_window_bits=t.clientMaxWindowBits:!0!==r.client_max_window_bits&&!1!==t.clientMaxWindowBits||delete r.client_max_window_bits\x2Cr}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach((e=>{Object.keys(e).forEach((t=>{let r=e[t];if(r.length>1)throw new Error(`Parameter "${t}" must have only a single value`);if(r=r[0]\x2C"client_max_window_bits"===t){if(!0!==r){const e=+r;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${r}`);r=e}else if(!this._isServer)throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}else if("server_max_window_bits"===t){const e=+r;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${r}`);r=e}else{if("client_no_context_takeover"!==t&&"server_no_context_takeover"!==t)throw new Error(`Unknown parameter "${t}"`);if(!0!==r)throw new TypeError(`Invalid value for parameter "${t}": ${r}`)}e[t]=r}))}))\x2Ce}decompress(e\x2Ct\x2Cr){f.add((s=>{this._decompress(e\x2Ct\x2C((e\x2Ct)=>{s()\x2Cr(e\x2Ct)}))}))}compress(e\x2Ct\x2Cr){f.add((s=>{this._compress(e\x2Ct\x2C((e\x2Ct)=>{s()\x2Cr(e\x2Ct)}))}))}_decompress(e\x2Ct\x2Cr){const n=this._isServer?"client":"server";if(!this._inflate){const e=`${n}_max_window_bits`\x2Ct="number"!=typeof this.params[e]?s.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=s.createInflateRaw({...this._options.zlibInflateOptions\x2CwindowBits:t})\x2Cthis._inflate[l]=this\x2Cthis._inflate[u]=0\x2Cthis._inflate[h]=[]\x2Cthis._inflate.on("error"\x2Cm)\x2Cthis._inflate.on("data"\x2Cg)}this._inflate[p]=r\x2Cthis._inflate.write(e)\x2Ct&&this._inflate.write(c)\x2Cthis._inflate.flush((()=>{const e=this._inflate[d];if(e)return this._inflate.close()\x2Cthis._inflate=null\x2Cvoid r(e);const s=o.concat(this._inflate[h]\x2Cthis._inflate[u]);this._inflate._readableState.endEmitted?(this._inflate.close()\x2Cthis._inflate=null):(this._inflate[u]=0\x2Cthis._inflate[h]=[]\x2Ct&&this.params[`${n}_no_context_takeover`]&&this._inflate.reset())\x2Cr(null\x2Cs)}))}_compress(e\x2Ct\x2Cr){const n=this._isServer?"server":"client";if(!this._deflate){const e=`${n}_max_window_bits`\x2Ct="number"!=typeof this.params[e]?s.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=s.createDeflateRaw({...this._options.zlibDeflateOptions\x2CwindowBits:t})\x2Cthis._deflate[u]=0\x2Cthis._deflate[h]=[]\x2Cthis._deflate.on("error"\x2Ca)\x2Cthis._deflate.on("data"\x2C_)}this._deflate[p]=r\x2Cthis._deflate.write(e)\x2Cthis._deflate.flush(s.Z_SYNC_FLUSH\x2C(()=>{if(!this._deflate)return;let e=o.concat(this._deflate[h]\x2Cthis._deflate[u]);t&&(e=e.slice(0\x2Ce.length-4))\x2Cthis._deflate[p]=null\x2Cthis._deflate[u]=0\x2Cthis._deflate[h]=[]\x2Ct&&this.params[`${n}_no_context_takeover`]&&this._deflate.reset()\x2Cr(null\x2Ce)}))}}}\x2C3091:(e\x2Ct\x2Cr)=>{"use strict";const{Writable:s}=r(2413)\x2Co=r(7567)\x2C{BINARY_TYPES:n\x2CEMPTY_BUFFER:i\x2CkStatusCode:a\x2CkWebSocket:c}=r(9864)\x2C{concat:l\x2CtoArrayBuffer:u\x2Cunmask:p}=r(4847)\x2C{isValidStatusCode:h\x2CisValidUTF8:d}=r(1607);function f(e\x2Ct\x2Cr\x2Cs\x2Co){const n=new e(r?`Invalid WebSocket frame: ${t}`:t);return Error.captureStackTrace(n\x2Cf)\x2Cn.code=o\x2Cn[a]=s\x2Cn}e.exports=class extends s{constructor(e\x2Ct\x2Cr\x2Cs){super()\x2Cthis._binaryType=e||n[0]\x2Cthis[c]=void 0\x2Cthis._extensions=t||{}\x2Cthis._isServer=!!r\x2Cthis._maxPayload=0|s\x2Cthis._bufferedBytes=0\x2Cthis._buffers=[]\x2Cthis._compressed=!1\x2Cthis._payloadLength=0\x2Cthis._mask=void 0\x2Cthis._fragmented=0\x2Cthis._masked=!1\x2Cthis._fin=!1\x2Cthis._opcode=0\x2Cthis._totalPayloadLength=0\x2Cthis._messageLength=0\x2Cthis._fragments=[]\x2Cthis._state=0\x2Cthis._loop=!1}_write(e\x2Ct\x2Cr){if(8===this._opcode&&0==this._state)return r();this._bufferedBytes+=e.length\x2Cthis._buffers.push(e)\x2Cthis.startLoop(r)}consume(e){if(this._bufferedBytes-=e\x2Ce===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];return this._buffers[0]=t.slice(e)\x2Ct.slice(0\x2Ce)}const t=Buffer.allocUnsafe(e);do{const r=this._buffers[0]\x2Cs=t.length-e;e>=r.length?t.set(this._buffers.shift()\x2Cs):(t.set(new Uint8Array(r.buffer\x2Cr.byteOffset\x2Ce)\x2Cs)\x2Cthis._buffers[0]=r.slice(e))\x2Ce-=r.length}while(e>0);return t}startLoop(e){let t;this._loop=!0;do{switch(this._state){case 0:t=this.getInfo();break;case 1:t=this.getPayloadLength16();break;case 2:t=this.getPayloadLength64();break;case 3:this.getMask();break;case 4:t=this.getData(e);break;default:return void(this._loop=!1)}}while(this._loop);e(t)}getInfo(){if(this._bufferedBytes<2)return void(this._loop=!1);const e=this.consume(2);if(0!=(48&e[0]))return this._loop=!1\x2Cf(RangeError\x2C"RSV2 and RSV3 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_2_3");const t=64==(64&e[0]);if(t&&!this._extensions[o.extensionName])return this._loop=!1\x2Cf(RangeError\x2C"RSV1 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_1");if(this._fin=128==(128&e[0])\x2Cthis._opcode=15&e[0]\x2Cthis._payloadLength=127&e[1]\x2C0===this._opcode){if(t)return this._loop=!1\x2Cf(RangeError\x2C"RSV1 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_1");if(!this._fragmented)return this._loop=!1\x2Cf(RangeError\x2C"invalid opcode 0"\x2C!0\x2C1002\x2C"WS_ERR_INVALID_OPCODE");this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented)return this._loop=!1\x2Cf(RangeError\x2C`invalid opcode ${this._opcode}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_OPCODE");this._compressed=t}else{if(!(this._opcode>7&&this._opcode<11))return this._loop=!1\x2Cf(RangeError\x2C`invalid opcode ${this._opcode}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_OPCODE");if(!this._fin)return this._loop=!1\x2Cf(RangeError\x2C"FIN must be set"\x2C!0\x2C1002\x2C"WS_ERR_EXPECTED_FIN");if(t)return this._loop=!1\x2Cf(RangeError\x2C"RSV1 must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_RSV_1");if(this._payloadLength>125)return this._loop=!1\x2Cf(RangeError\x2C`invalid payload length ${this._payloadLength}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH")}if(this._fin||this._fragmented||(this._fragmented=this._opcode)\x2Cthis._masked=128==(128&e[1])\x2Cthis._isServer){if(!this._masked)return this._loop=!1\x2Cf(RangeError\x2C"MASK must be set"\x2C!0\x2C1002\x2C"WS_ERR_EXPECTED_MASK")}else if(this._masked)return this._loop=!1\x2Cf(RangeError\x2C"MASK must be clear"\x2C!0\x2C1002\x2C"WS_ERR_UNEXPECTED_MASK");if(126===this._payloadLength)this._state=1;else{if(127!==this._payloadLength)return this.haveLength();this._state=2}}getPayloadLength16(){if(!(this._bufferedBytes<2))return this._payloadLength=this.consume(2).readUInt16BE(0)\x2Cthis.haveLength();this._loop=!1}getPayloadLength64(){if(this._bufferedBytes<8)return void(this._loop=!1);const e=this.consume(8)\x2Ct=e.readUInt32BE(0);return t>Math.pow(2\x2C21)-1?(this._loop=!1\x2Cf(RangeError\x2C"Unsupported WebSocket frame: payload length > 2^53 - 1"\x2C!1\x2C1009\x2C"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH")):(this._payloadLength=t*Math.pow(2\x2C32)+e.readUInt32BE(4)\x2Cthis.haveLength())}haveLength(){if(this._payloadLength&&this._opcode<8&&(this._totalPayloadLength+=this._payloadLength\x2Cthis._totalPayloadLength>this._maxPayload&&this._maxPayload>0))return this._loop=!1\x2Cf(RangeError\x2C"Max payload size exceeded"\x2C!1\x2C1009\x2C"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");this._masked?this._state=3:this._state=4}getMask(){this._bufferedBytes<4?this._loop=!1:(this._mask=this.consume(4)\x2Cthis._state=4)}getData(e){let t=i;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength)return void(this._loop=!1);t=this.consume(this._payloadLength)\x2Cthis._masked&&p(t\x2Cthis._mask)}return this._opcode>7?this.controlMessage(t):this._compressed?(this._state=5\x2Cvoid this.decompress(t\x2Ce)):(t.length&&(this._messageLength=this._totalPayloadLength\x2Cthis._fragments.push(t))\x2Cthis.dataMessage())}decompress(e\x2Ct){this._extensions[o.extensionName].decompress(e\x2Cthis._fin\x2C((e\x2Cr)=>{if(e)return t(e);if(r.length){if(this._messageLength+=r.length\x2Cthis._messageLength>this._maxPayload&&this._maxPayload>0)return t(f(RangeError\x2C"Max payload size exceeded"\x2C!1\x2C1009\x2C"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"));this._fragments.push(r)}const s=this.dataMessage();if(s)return t(s);this.startLoop(t)}))}dataMessage(){if(this._fin){const e=this._messageLength\x2Ct=this._fragments;if(this._totalPayloadLength=0\x2Cthis._messageLength=0\x2Cthis._fragmented=0\x2Cthis._fragments=[]\x2C2===this._opcode){let r;r="nodebuffer"===this._binaryType?l(t\x2Ce):"arraybuffer"===this._binaryType?u(l(t\x2Ce)):t\x2Cthis.emit("message"\x2Cr)}else{const r=l(t\x2Ce);if(!d(r))return this._loop=!1\x2Cf(Error\x2C"invalid UTF-8 sequence"\x2C!0\x2C1007\x2C"WS_ERR_INVALID_UTF8");this.emit("message"\x2Cr.toString())}}this._state=0}controlMessage(e){if(8===this._opcode)if(this._loop=!1\x2C0===e.length)this.emit("conclude"\x2C1005\x2C"")\x2Cthis.end();else{if(1===e.length)return f(RangeError\x2C"invalid payload length 1"\x2C!0\x2C1002\x2C"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");{const t=e.readUInt16BE(0);if(!h(t))return f(RangeError\x2C`invalid status code ${t}`\x2C!0\x2C1002\x2C"WS_ERR_INVALID_CLOSE_CODE");const r=e.slice(2);if(!d(r))return f(Error\x2C"invalid UTF-8 sequence"\x2C!0\x2C1007\x2C"WS_ERR_INVALID_UTF8");this.emit("conclude"\x2Ct\x2Cr.toString())\x2Cthis.end()}}else 9===this._opcode?this.emit("ping"\x2Ce):this.emit("pong"\x2Ce);this._state=0}}}\x2C2091:(e\x2Ct\x2Cr)=>{"use strict";const{randomFillSync:s}=r(6417)\x2Co=r(7567)\x2C{EMPTY_BUFFER:n}=r(9864)\x2C{isValidStatusCode:i}=r(1607)\x2C{mask:a\x2CtoBuffer:c}=r(4847)\x2Cl=Buffer.alloc(4);class u{constructor(e\x2Ct){this._extensions=t||{}\x2Cthis._socket=e\x2Cthis._firstFragment=!0\x2Cthis._compress=!1\x2Cthis._bufferedBytes=0\x2Cthis._deflating=!1\x2Cthis._queue=[]}static frame(e\x2Ct){const r=t.mask&&t.readOnly;let o=t.mask?6:2\x2Cn=e.length;e.length>=65536?(o+=8\x2Cn=127):e.length>125&&(o+=2\x2Cn=126);const i=Buffer.allocUnsafe(r?e.length+o:o);return i[0]=t.fin?128|t.opcode:t.opcode\x2Ct.rsv1&&(i[0]|=64)\x2Ci[1]=n\x2C126===n?i.writeUInt16BE(e.length\x2C2):127===n&&(i.writeUInt32BE(0\x2C2)\x2Ci.writeUInt32BE(e.length\x2C6))\x2Ct.mask?(s(l\x2C0\x2C4)\x2Ci[1]|=128\x2Ci[o-4]=l[0]\x2Ci[o-3]=l[1]\x2Ci[o-2]=l[2]\x2Ci[o-1]=l[3]\x2Cr?(a(e\x2Cl\x2Ci\x2Co\x2Ce.length)\x2C[i]):(a(e\x2Cl\x2Ce\x2C0\x2Ce.length)\x2C[i\x2Ce])):[i\x2Ce]}close(e\x2Ct\x2Cr\x2Cs){let o;if(void 0===e)o=n;else{if("number"!=typeof e||!i(e))throw new TypeError("First argument must be a valid error code number");if(void 0===t||""===t)o=Buffer.allocUnsafe(2)\x2Co.writeUInt16BE(e\x2C0);else{const r=Buffer.byteLength(t);if(r>123)throw new RangeError("The message must not be greater than 123 bytes");o=Buffer.allocUnsafe(2+r)\x2Co.writeUInt16BE(e\x2C0)\x2Co.write(t\x2C2)}}this._deflating?this.enqueue([this.doClose\x2Co\x2Cr\x2Cs]):this.doClose(o\x2Cr\x2Cs)}doClose(e\x2Ct\x2Cr){this.sendFrame(u.frame(e\x2C{fin:!0\x2Crsv1:!1\x2Copcode:8\x2Cmask:t\x2CreadOnly:!1})\x2Cr)}ping(e\x2Ct\x2Cr){const s=c(e);if(s.length>125)throw new RangeError("The data size must not be greater than 125 bytes");this._deflating?this.enqueue([this.doPing\x2Cs\x2Ct\x2Cc.readOnly\x2Cr]):this.doPing(s\x2Ct\x2Cc.readOnly\x2Cr)}doPing(e\x2Ct\x2Cr\x2Cs){this.sendFrame(u.frame(e\x2C{fin:!0\x2Crsv1:!1\x2Copcode:9\x2Cmask:t\x2CreadOnly:r})\x2Cs)}pong(e\x2Ct\x2Cr){const s=c(e);if(s.length>125)throw new RangeError("The data size must not be greater than 125 bytes");this._deflating?this.enqueue([this.doPong\x2Cs\x2Ct\x2Cc.readOnly\x2Cr]):this.doPong(s\x2Ct\x2Cc.readOnly\x2Cr)}doPong(e\x2Ct\x2Cr\x2Cs){this.sendFrame(u.frame(e\x2C{fin:!0\x2Crsv1:!1\x2Copcode:10\x2Cmask:t\x2CreadOnly:r})\x2Cs)}send(e\x2Ct\x2Cr){const s=c(e)\x2Cn=this._extensions[o.extensionName];let i=t.binary?2:1\x2Ca=t.compress;if(this._firstFragment?(this._firstFragment=!1\x2Ca&&n&&(a=s.length>=n._threshold)\x2Cthis._compress=a):(a=!1\x2Ci=0)\x2Ct.fin&&(this._firstFragment=!0)\x2Cn){const e={fin:t.fin\x2Crsv1:a\x2Copcode:i\x2Cmask:t.mask\x2CreadOnly:c.readOnly};this._deflating?this.enqueue([this.dispatch\x2Cs\x2Cthis._compress\x2Ce\x2Cr]):this.dispatch(s\x2Cthis._compress\x2Ce\x2Cr)}else this.sendFrame(u.frame(s\x2C{fin:t.fin\x2Crsv1:!1\x2Copcode:i\x2Cmask:t.mask\x2CreadOnly:c.readOnly})\x2Cr)}dispatch(e\x2Ct\x2Cr\x2Cs){if(!t)return void this.sendFrame(u.frame(e\x2Cr)\x2Cs);const n=this._extensions[o.extensionName];this._bufferedBytes+=e.length\x2Cthis._deflating=!0\x2Cn.compress(e\x2Cr.fin\x2C((t\x2Co)=>{if(this._socket.destroyed){const e=new Error("The socket was closed while data was being compressed");"function"==typeof s&&s(e);for(let t=0;t<this._queue.length;t++){const r=this._queue[t][4];"function"==typeof r&&r(e)}}else this._bufferedBytes-=e.length\x2Cthis._deflating=!1\x2Cr.readOnly=!1\x2Cthis.sendFrame(u.frame(o\x2Cr)\x2Cs)\x2Cthis.dequeue()}))}dequeue(){for(;!this._deflating&&this._queue.length;){const e=this._queue.shift();this._bufferedBytes-=e[1].length\x2CReflect.apply(e[0]\x2Cthis\x2Ce.slice(1))}}enqueue(e){this._bufferedBytes+=e[1].length\x2Cthis._queue.push(e)}sendFrame(e\x2Ct){2===e.length?(this._socket.cork()\x2Cthis._socket.write(e[0])\x2Cthis._socket.write(e[1]\x2Ct)\x2Cthis._socket.uncork()):this._socket.write(e[0]\x2Ct)}}e.exports=u}\x2C5519:(e\x2Ct\x2Cr)=>{"use strict";const{Duplex:s}=r(2413);function o(e){e.emit("close")}function n(){!this.destroyed&&this._writableState.finished&&this.destroy()}function i(e){this.removeListener("error"\x2Ci)\x2Cthis.destroy()\x2C0===this.listenerCount("error")&&this.emit("error"\x2Ce)}e.exports=function(e\x2Ct){let r=!0\x2Ca=!0;function c(){r&&e._socket.resume()}e.readyState===e.CONNECTING?e.once("open"\x2C(function(){e._receiver.removeAllListeners("drain")\x2Ce._receiver.on("drain"\x2Cc)})):(e._receiver.removeAllListeners("drain")\x2Ce._receiver.on("drain"\x2Cc));const l=new s({...t\x2CautoDestroy:!1\x2CemitClose:!1\x2CobjectMode:!1\x2CwritableObjectMode:!1});return e.on("message"\x2C(function(t){l.push(t)||(r=!1\x2Ce._socket.pause())}))\x2Ce.once("error"\x2C(function(e){l.destroyed||(a=!1\x2Cl.destroy(e))}))\x2Ce.once("close"\x2C(function(){l.destroyed||l.push(null)}))\x2Cl._destroy=function(t\x2Cr){if(e.readyState===e.CLOSED)return r(t)\x2Cvoid process.nextTick(o\x2Cl);let s=!1;e.once("error"\x2C(function(e){s=!0\x2Cr(e)}))\x2Ce.once("close"\x2C(function(){s||r(t)\x2Cprocess.nextTick(o\x2Cl)}))\x2Ca&&e.terminate()}\x2Cl._final=function(t){e.readyState!==e.CONNECTING?null!==e._socket&&(e._socket._writableState.finished?(t()\x2Cl._readableState.endEmitted&&l.destroy()):(e._socket.once("finish"\x2C(function(){t()}))\x2Ce.close())):e.once("open"\x2C(function(){l._final(t)}))}\x2Cl._read=function(){e.readyState!==e.OPEN||r||(r=!0\x2Ce._receiver._writableState.needDrain||e._socket.resume())}\x2Cl._write=function(t\x2Cr\x2Cs){e.readyState!==e.CONNECTING?e.send(t\x2Cs):e.once("open"\x2C(function(){l._write(t\x2Cr\x2Cs)}))}\x2Cl.on("end"\x2Cn)\x2Cl.on("error"\x2Ci)\x2Cl}}\x2C1607:(e\x2Ct\x2Cr)=>{"use strict";function s(e){return e>=1e3&&e<=1014&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999}function o(e){const t=e.length;let r=0;for(;r<t;)if(0==(128&e[r]))r++;else if(192==(224&e[r])){if(r+1===t||128!=(192&e[r+1])||192==(254&e[r]))return!1;r+=2}else if(224==(240&e[r])){if(r+2>=t||128!=(192&e[r+1])||128!=(192&e[r+2])||224===e[r]&&128==(224&e[r+1])||237===e[r]&&160==(224&e[r+1]))return!1;r+=3}else{if(240!=(248&e[r]))return!1;if(r+3>=t||128!=(192&e[r+1])||128!=(192&e[r+2])||128!=(192&e[r+3])||240===e[r]&&128==(240&e[r+1])||244===e[r]&&e[r+1]>143||e[r]>244)return!1;r+=4}return!0}try{let t=r(Object(function(){var e=new Error("Cannot find module 'utf-8-validate'");throw e.code="MODULE_NOT_FOUND"\x2Ce}()));"object"==typeof t&&(t=t.Validation.isValidUTF8)\x2Ce.exports={isValidStatusCode:s\x2CisValidUTF8:e=>e.length<150?o(e):t(e)}}catch(t){e.exports={isValidStatusCode:s\x2CisValidUTF8:o}}}\x2C58:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8614)\x2C{createHash:o}=r(6417)\x2C{createServer:n\x2CSTATUS_CODES:i}=r(8605)\x2Ca=r(7567)\x2Cc=r(2982)\x2C{format:l\x2Cparse:u}=r(3071)\x2C{GUID:p\x2CkWebSocket:h}=r(9864)\x2Cd=/^[+/0-9A-Za-z]{22}==$/;function f(e){e.emit("close")}function _(){this.destroy()}function g(e\x2Ct\x2Cr\x2Cs){e.writable&&(r=r||i[t]\x2Cs={Connection:"close"\x2C"Content-Type":"text/html"\x2C"Content-Length":Buffer.byteLength(r)\x2C...s}\x2Ce.write(`HTTP/1.1 ${t} ${i[t]}\\r\\n`+Object.keys(s).map((e=>`${e}: ${s[e]}`)).join("\\r\\n")+"\\r\\n\\r\\n"+r))\x2Ce.removeListener("error"\x2C_)\x2Ce.destroy()}function m(e){return e.trim()}e.exports=class extends s{constructor(e\x2Ct){if(super()\x2Cnull==(e={maxPayload:104857600\x2CperMessageDeflate:!1\x2ChandleProtocols:null\x2CclientTracking:!0\x2CverifyClient:null\x2CnoServer:!1\x2Cbacklog:null\x2Cserver:null\x2Chost:null\x2Cpath:null\x2Cport:null\x2C...e}).port&&!e.server&&!e.noServer)throw new TypeError('One of the "port"\x2C "server"\x2C or "noServer" options must be specified');if(null!=e.port?(this._server=n(((e\x2Ct)=>{const r=i[426];t.writeHead(426\x2C{"Content-Length":r.length\x2C"Content-Type":"text/plain"})\x2Ct.end(r)}))\x2Cthis._server.listen(e.port\x2Ce.host\x2Ce.backlog\x2Ct)):e.server&&(this._server=e.server)\x2Cthis._server){const e=this.emit.bind(this\x2C"connection");this._removeListeners=function(e\x2Ct){for(const r of Object.keys(t))e.on(r\x2Ct[r]);return function(){for(const r of Object.keys(t))e.removeListener(r\x2Ct[r])}}(this._server\x2C{listening:this.emit.bind(this\x2C"listening")\x2Cerror:this.emit.bind(this\x2C"error")\x2Cupgrade:(t\x2Cr\x2Cs)=>{this.handleUpgrade(t\x2Cr\x2Cs\x2Ce)}})}!0===e.perMessageDeflate&&(e.perMessageDeflate={})\x2Ce.clientTracking&&(this.clients=new Set)\x2Cthis.options=e}address(){if(this.options.noServer)throw new Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(e&&this.once("close"\x2Ce)\x2Cthis.clients)for(const e of this.clients)e.terminate();const t=this._server;t&&(this._removeListeners()\x2Cthis._removeListeners=this._server=null\x2Cnull!=this.options.port)?t.close((()=>this.emit("close"))):process.nextTick(f\x2Cthis)}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");if((-1!==t?e.url.slice(0\x2Ct):e.url)!==this.options.path)return!1}return!0}handleUpgrade(e\x2Ct\x2Cr\x2Cs){t.on("error"\x2C_);const o=void 0!==e.headers["sec-websocket-key"]&&e.headers["sec-websocket-key"].trim()\x2Cn=+e.headers["sec-websocket-version"]\x2Ci={};if("GET"!==e.method||"websocket"!==e.headers.upgrade.toLowerCase()||!o||!d.test(o)||8!==n&&13!==n||!this.shouldHandle(e))return g(t\x2C400);if(this.options.perMessageDeflate){const r=new a(this.options.perMessageDeflate\x2C!0\x2Cthis.options.maxPayload);try{const t=u(e.headers["sec-websocket-extensions"]);t[a.extensionName]&&(r.accept(t[a.extensionName])\x2Ci[a.extensionName]=r)}catch(e){return g(t\x2C400)}}if(this.options.verifyClient){const a={origin:e.headers[8===n?"sec-websocket-origin":"origin"]\x2Csecure:!(!e.socket.authorized&&!e.socket.encrypted)\x2Creq:e};if(2===this.options.verifyClient.length)return void this.options.verifyClient(a\x2C((n\x2Ca\x2Cc\x2Cl)=>{if(!n)return g(t\x2Ca||401\x2Cc\x2Cl);this.completeUpgrade(o\x2Ci\x2Ce\x2Ct\x2Cr\x2Cs)}));if(!this.options.verifyClient(a))return g(t\x2C401)}this.completeUpgrade(o\x2Ci\x2Ce\x2Ct\x2Cr\x2Cs)}completeUpgrade(e\x2Ct\x2Cr\x2Cs\x2Cn\x2Ci){if(!s.readable||!s.writable)return s.destroy();if(s[h])throw new Error("server.handleUpgrade() was called more than once with the same socket\x2C possibly due to a misconfiguration");const u=["HTTP/1.1 101 Switching Protocols"\x2C"Upgrade: websocket"\x2C"Connection: Upgrade"\x2C`Sec-WebSocket-Accept: ${o("sha1").update(e+p).digest("base64")}`]\x2Cd=new c(null);let f=r.headers["sec-websocket-protocol"];if(f&&(f=f.split("\x2C").map(m)\x2Cf=this.options.handleProtocols?this.options.handleProtocols(f\x2Cr):f[0]\x2Cf&&(u.push(`Sec-WebSocket-Protocol: ${f}`)\x2Cd._protocol=f))\x2Ct[a.extensionName]){const e=t[a.extensionName].params\x2Cr=l({[a.extensionName]:[e]});u.push(`Sec-WebSocket-Extensions: ${r}`)\x2Cd._extensions=t}this.emit("headers"\x2Cu\x2Cr)\x2Cs.write(u.concat("\\r\\n").join("\\r\\n"))\x2Cs.removeListener("error"\x2C_)\x2Cd.setSocket(s\x2Cn\x2Cthis.options.maxPayload)\x2Cthis.clients&&(this.clients.add(d)\x2Cd.on("close"\x2C(()=>this.clients.delete(d))))\x2Ci(d\x2Cr)}}}\x2C2982:(e\x2Ct\x2Cr)=>{"use strict";const s=r(8614)\x2Co=r(7211)\x2Cn=r(8605)\x2Ci=r(1631)\x2Ca=r(4016)\x2C{randomBytes:c\x2CcreateHash:l}=r(6417)\x2C{URL:u}=r(8835)\x2Cp=r(7567)\x2Ch=r(3091)\x2Cd=r(2091)\x2C{BINARY_TYPES:f\x2CEMPTY_BUFFER:_\x2CGUID:g\x2CkStatusCode:m\x2CkWebSocket:y\x2CNOOP:v}=r(9864)\x2C{addEventListener:b\x2CremoveEventListener:E}=r(5831)\x2C{format:S\x2Cparse:R}=r(3071)\x2C{toBuffer:x}=r(4847)\x2CA=["CONNECTING"\x2C"OPEN"\x2C"CLOSING"\x2C"CLOSED"]\x2CC=[8\x2C13];class w extends s{constructor(e\x2Ct\x2Cr){super()\x2Cthis._binaryType=f[0]\x2Cthis._closeCode=1006\x2Cthis._closeFrameReceived=!1\x2Cthis._closeFrameSent=!1\x2Cthis._closeMessage=""\x2Cthis._closeTimer=null\x2Cthis._extensions={}\x2Cthis._protocol=""\x2Cthis._readyState=w.CONNECTING\x2Cthis._receiver=null\x2Cthis._sender=null\x2Cthis._socket=null\x2Cnull!==e?(this._bufferedAmount=0\x2Cthis._isServer=!1\x2Cthis._redirects=0\x2CArray.isArray(t)?t=t.join("\x2C "):"object"==typeof t&&null!==t&&(r=t\x2Ct=void 0)\x2CO(this\x2Ce\x2Ct\x2Cr)):this._isServer=!0}get binaryType(){return this._binaryType}set binaryType(e){f.includes(e)&&(this._binaryType=e\x2Cthis._receiver&&(this._receiver._binaryType=e))}get bufferedAmount(){return this._socket?this._socket._writableState.length+this._sender._bufferedBytes:this._bufferedAmount}get extensions(){return Object.keys(this._extensions).join()}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e\x2Ct\x2Cr){const s=new h(this.binaryType\x2Cthis._extensions\x2Cthis._isServer\x2Cr);this._sender=new d(e\x2Cthis._extensions)\x2Cthis._receiver=s\x2Cthis._socket=e\x2Cs[y]=this\x2Ce[y]=this\x2Cs.on("conclude"\x2CP)\x2Cs.on("drain"\x2CI)\x2Cs.on("error"\x2CH)\x2Cs.on("message"\x2CM)\x2Cs.on("ping"\x2CD)\x2Cs.on("pong"\x2CB)\x2Ce.setTimeout(0)\x2Ce.setNoDelay()\x2Ct.length>0&&e.unshift(t)\x2Ce.on("close"\x2CU)\x2Ce.on("data"\x2Cj)\x2Ce.on("end"\x2CF)\x2Ce.on("error"\x2CG)\x2Cthis._readyState=w.OPEN\x2Cthis.emit("open")}emitClose(){if(!this._socket)return this._readyState=w.CLOSED\x2Cvoid this.emit("close"\x2Cthis._closeCode\x2Cthis._closeMessage);this._extensions[p.extensionName]&&this._extensions[p.extensionName].cleanup()\x2Cthis._receiver.removeAllListeners()\x2Cthis._readyState=w.CLOSED\x2Cthis.emit("close"\x2Cthis._closeCode\x2Cthis._closeMessage)}close(e\x2Ct){if(this.readyState!==w.CLOSED){if(this.readyState===w.CONNECTING){const e="WebSocket was closed before the connection was established";return N(this\x2Cthis._req\x2Ce)}this.readyState!==w.CLOSING?(this._readyState=w.CLOSING\x2Cthis._sender.close(e\x2Ct\x2C!this._isServer\x2C(e=>{e||(this._closeFrameSent=!0\x2Cthis._closeFrameReceived&&this._socket.end())}))\x2Cthis._closeTimer=setTimeout(this._socket.destroy.bind(this._socket)\x2C3e4)):this._closeFrameSent&&this._closeFrameReceived&&this._socket.end()}}ping(e\x2Ct\x2Cr){if(this.readyState===w.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(r=e\x2Ce=t=void 0):"function"==typeof t&&(r=t\x2Ct=void 0)\x2C"number"==typeof e&&(e=e.toString())\x2Cthis.readyState===w.OPEN?(void 0===t&&(t=!this._isServer)\x2Cthis._sender.ping(e||_\x2Ct\x2Cr)):L(this\x2Ce\x2Cr)}pong(e\x2Ct\x2Cr){if(this.readyState===w.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(r=e\x2Ce=t=void 0):"function"==typeof t&&(r=t\x2Ct=void 0)\x2C"number"==typeof e&&(e=e.toString())\x2Cthis.readyState===w.OPEN?(void 0===t&&(t=!this._isServer)\x2Cthis._sender.pong(e||_\x2Ct\x2Cr)):L(this\x2Ce\x2Cr)}send(e\x2Ct\x2Cr){if(this.readyState===w.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof t&&(r=t\x2Ct={})\x2C"number"==typeof e&&(e=e.toString())\x2Cthis.readyState!==w.OPEN)return void L(this\x2Ce\x2Cr);const s={binary:"string"!=typeof e\x2Cmask:!this._isServer\x2Ccompress:!0\x2Cfin:!0\x2C...t};this._extensions[p.extensionName]||(s.compress=!1)\x2Cthis._sender.send(e||_\x2Cs\x2Cr)}terminate(){if(this.readyState!==w.CLOSED){if(this.readyState===w.CONNECTING){const e="WebSocket was closed before the connection was established";return N(this\x2Cthis._req\x2Ce)}this._socket&&(this._readyState=w.CLOSING\x2Cthis._socket.destroy())}}}function O(e\x2Ct\x2Cr\x2Cs){const i={protocolVersion:C[1]\x2CmaxPayload:104857600\x2CperMessageDeflate:!0\x2CfollowRedirects:!1\x2CmaxRedirects:10\x2C...s\x2CcreateConnection:void 0\x2CsocketPath:void 0\x2Chostname:void 0\x2Cprotocol:void 0\x2Ctimeout:void 0\x2Cmethod:void 0\x2Chost:void 0\x2Cpath:void 0\x2Cport:void 0};if(!C.includes(i.protocolVersion))throw new RangeError(`Unsupported protocol version: ${i.protocolVersion} (supported versions: ${C.join("\x2C ")})`);let a;t instanceof u?(a=t\x2Ce._url=t.href):(a=new u(t)\x2Ce._url=t);const h="ws+unix:"===a.protocol;if(!(a.host||h&&a.pathname))throw new Error(`Invalid URL: ${e.url}`);const d="wss:"===a.protocol||"https:"===a.protocol\x2Cf=d?443:80\x2C_=c(16).toString("base64")\x2Cm=d?o.get:n.get;let y;if(i.createConnection=d?T:k\x2Ci.defaultPort=i.defaultPort||f\x2Ci.port=a.port||f\x2Ci.host=a.hostname.startsWith("[")?a.hostname.slice(1\x2C-1):a.hostname\x2Ci.headers={"Sec-WebSocket-Version":i.protocolVersion\x2C"Sec-WebSocket-Key":_\x2CConnection:"Upgrade"\x2CUpgrade:"websocket"\x2C...i.headers}\x2Ci.path=a.pathname+a.search\x2Ci.timeout=i.handshakeTimeout\x2Ci.perMessageDeflate&&(y=new p(!0!==i.perMessageDeflate?i.perMessageDeflate:{}\x2C!1\x2Ci.maxPayload)\x2Ci.headers["Sec-WebSocket-Extensions"]=S({[p.extensionName]:y.offer()}))\x2Cr&&(i.headers["Sec-WebSocket-Protocol"]=r)\x2Ci.origin&&(i.protocolVersion<13?i.headers["Sec-WebSocket-Origin"]=i.origin:i.headers.Origin=i.origin)\x2C(a.username||a.password)&&(i.auth=`${a.username}:${a.password}`)\x2Ch){const e=i.path.split(":");i.socketPath=e[0]\x2Ci.path=e[1]}let v=e._req=m(i);i.timeout&&v.on("timeout"\x2C(()=>{N(e\x2Cv\x2C"Opening handshake has timed out")}))\x2Cv.on("error"\x2C(t=>{null===v||v.aborted||(v=e._req=null\x2Ce._readyState=w.CLOSING\x2Ce.emit("error"\x2Ct)\x2Ce.emitClose())}))\x2Cv.on("response"\x2C(o=>{const n=o.headers.location\x2Ca=o.statusCode;if(n&&i.followRedirects&&a>=300&&a<400){if(++e._redirects>i.maxRedirects)return void N(e\x2Cv\x2C"Maximum redirects exceeded");v.abort();const o=new u(n\x2Ct);O(e\x2Co\x2Cr\x2Cs)}else e.emit("unexpected-response"\x2Cv\x2Co)||N(e\x2Cv\x2C`Unexpected server response: ${o.statusCode}`)}))\x2Cv.on("upgrade"\x2C((t\x2Cs\x2Co)=>{if(e.emit("upgrade"\x2Ct)\x2Ce.readyState!==w.CONNECTING)return;v=e._req=null;const n=l("sha1").update(_+g).digest("base64");if(t.headers["sec-websocket-accept"]!==n)return void N(e\x2Cs\x2C"Invalid Sec-WebSocket-Accept header");const a=t.headers["sec-websocket-protocol"]\x2Cc=(r||"").split(/\x2C */);let u;if(!r&&a?u="Server sent a subprotocol but none was requested":r&&!a?u="Server sent no subprotocol":a&&!c.includes(a)&&(u="Server sent an invalid subprotocol")\x2Cu)N(e\x2Cs\x2Cu);else{if(a&&(e._protocol=a)\x2Cy)try{const r=R(t.headers["sec-websocket-extensions"]);r[p.extensionName]&&(y.accept(r[p.extensionName])\x2Ce._extensions[p.extensionName]=y)}catch(t){return void N(e\x2Cs\x2C"Invalid Sec-WebSocket-Extensions header")}e.setSocket(s\x2Co\x2Ci.maxPayload)}}))}function k(e){return e.path=e.socketPath\x2Ci.connect(e)}function T(e){return e.path=void 0\x2Ce.servername||""===e.servername||(e.servername=i.isIP(e.host)?"":e.host)\x2Ca.connect(e)}function N(e\x2Ct\x2Cr){e._readyState=w.CLOSING;const s=new Error(r);Error.captureStackTrace(s\x2CN)\x2Ct.setHeader?(t.abort()\x2Ct.socket&&!t.socket.destroyed&&t.socket.destroy()\x2Ct.once("abort"\x2Ce.emitClose.bind(e))\x2Ce.emit("error"\x2Cs)):(t.destroy(s)\x2Ct.once("error"\x2Ce.emit.bind(e\x2C"error"))\x2Ct.once("close"\x2Ce.emitClose.bind(e)))}function L(e\x2Ct\x2Cr){if(t){const r=x(t).length;e._socket?e._sender._bufferedBytes+=r:e._bufferedAmount+=r}r&&r(new Error(`WebSocket is not open: readyState ${e.readyState} (${A[e.readyState]})`))}function P(e\x2Ct){const r=this[y];r._socket.removeListener("data"\x2Cj)\x2Cr._socket.resume()\x2Cr._closeFrameReceived=!0\x2Cr._closeMessage=t\x2Cr._closeCode=e\x2C1005===e?r.close():r.close(e\x2Ct)}function I(){this[y]._socket.resume()}function H(e){const t=this[y];t._socket.removeListener("data"\x2Cj)\x2Ct._socket.resume()\x2Ct.close(e[m])\x2Ct.emit("error"\x2Ce)}function $(){this[y].emitClose()}function M(e){this[y].emit("message"\x2Ce)}function D(e){const t=this[y];t.pong(e\x2C!t._isServer\x2Cv)\x2Ct.emit("ping"\x2Ce)}function B(e){this[y].emit("pong"\x2Ce)}function U(){const e=this[y];this.removeListener("close"\x2CU)\x2Cthis.removeListener("end"\x2CF)\x2Ce._readyState=w.CLOSING\x2Ce._socket.read()\x2Ce._receiver.end()\x2Cthis.removeListener("data"\x2Cj)\x2Cthis[y]=void 0\x2CclearTimeout(e._closeTimer)\x2Ce._receiver._writableState.finished||e._receiver._writableState.errorEmitted?e.emitClose():(e._receiver.on("error"\x2C$)\x2Ce._receiver.on("finish"\x2C$))}function j(e){this[y]._receiver.write(e)||this.pause()}function F(){const e=this[y];e._readyState=w.CLOSING\x2Ce._receiver.end()\x2Cthis.end()}function G(){const e=this[y];this.removeListener("error"\x2CG)\x2Cthis.on("error"\x2Cv)\x2Ce&&(e._readyState=w.CLOSING\x2Cthis.destroy())}A.forEach(((e\x2Ct)=>{const r={enumerable:!0\x2Cvalue:t};Object.defineProperty(w.prototype\x2Ce\x2Cr)\x2CObject.defineProperty(w\x2Ce\x2Cr)}))\x2C["binaryType"\x2C"bufferedAmount"\x2C"extensions"\x2C"protocol"\x2C"readyState"\x2C"url"].forEach((e=>{Object.defineProperty(w.prototype\x2Ce\x2C{enumerable:!0})}))\x2C["open"\x2C"error"\x2C"close"\x2C"message"].forEach((e=>{Object.defineProperty(w.prototype\x2C`on${e}`\x2C{configurable:!0\x2Cenumerable:!0\x2Cget(){const t=this.listeners(e);for(let e=0;e<t.length;e++)if(t[e]._listener)return t[e]._listener}\x2Cset(t){const r=this.listeners(e);for(let t=0;t<r.length;t++)r[t]._listener&&this.removeListener(e\x2Cr[t]);this.addEventListener(e\x2Ct)}})}))\x2Cw.prototype.addEventListener=b\x2Cw.prototype.removeEventListener=E\x2Ce.exports=w}\x2C5370:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.CancellationTokenSource=t.Cancelled=t.NeverCancelled=t.cancellableRace=t.timeoutPromise=t.TaskCancelledError=void 0;const s=r(1032)\x2Co=r(4936)\x2Cn=r(8986);class i extends s.ProtocolError{constructor(e){super({id:9243\x2Cformat:e\x2CshowUser:!0})\x2Cthis._cause={id:9243\x2Cformat:e\x2CshowUser:!0}}}t.TaskCancelledError=i\x2Ct.timeoutPromise=function(e\x2Ct\x2Cr){if(t.isCancellationRequested)return Promise.reject(new i(r||"Task cancelled"));const s=n.getDeferred()\x2Co=t.onCancellationRequested(s.resolve);return Promise.race([s.promise.then((()=>{throw new i(r||"Task cancelled")}))\x2Ce.then((e=>(o.dispose()\x2Ce))).catch((e=>{throw o.dispose()\x2Ce}))])}\x2Ct.cancellableRace=function(e\x2Ct){const r=new c(t)\x2Cs=e.map((async e=>{try{return await e(r.token)}finally{r.cancel()}}));return Promise.race(s)};const a=Object.freeze((function(e\x2Ct){const r=setTimeout(e.bind(t)\x2C0);return{dispose(){clearTimeout(r)}}}));t.NeverCancelled=Object.freeze({isCancellationRequested:!1\x2ConCancellationRequested:()=>({dispose:()=>{}})})\x2Ct.Cancelled=Object.freeze({isCancellationRequested:!0\x2ConCancellationRequested:a});class c{constructor(e){this._token=void 0\x2Cthis._parentListener=void 0\x2Cthis._parentListener=e&&e.onCancellationRequested(this.cancel\x2Cthis)}static withTimeout(e\x2Ct){const r=new c(t)\x2Cs=r._token=new l\x2Co=setTimeout((()=>s.cancel())\x2Ce);return s.onCancellationRequested((()=>clearTimeout(o)))\x2Cr}get token(){return this._token||(this._token=new l)\x2Cthis._token}cancel(){this._token?this._token instanceof l&&this._token.cancel():this._token=t.Cancelled}dispose(e=!1){e&&this.cancel()\x2Cthis._parentListener&&this._parentListener.dispose()\x2Cthis._token?this._token instanceof l&&this._token.dispose():this._token=t.NeverCancelled}}t.CancellationTokenSource=c;class l{constructor(){this._isCancelled=!1\x2Cthis._emitter=null}cancel(){this._isCancelled||(this._isCancelled=!0\x2Cthis._emitter&&(this._emitter.fire(void 0)\x2Cthis.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?a:(this._emitter||(this._emitter=new o.EventEmitter)\x2Cthis._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose()\x2Cthis._emitter=null)}}}\x2C4936:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.ListenerMap=t.EventEmitter=void 0;const s=r(7678);class o{constructor(){this._listeners=new Set\x2Cthis.event=(e\x2Ct\x2Cr)=>{const s={listener:e\x2CthisArg:t};this._listeners.add(s);const o={dispose:()=>{o.dispose=()=>{}\x2Cthis._listeners.delete(s)}};return r&&r.push(o)\x2Co}}get size(){return this._listeners.size}fire(e){const t=!this._deliveryQueue;this._deliveryQueue||(this._deliveryQueue=[]);for(const t of this._listeners)this._deliveryQueue.push({data:t\x2Cevent:e});if(t){for(let e=0;e<this._deliveryQueue.length;e++){const{data:t\x2Cevent:r}=this._deliveryQueue[e];t.listener.call(t.thisArg\x2Cr)}this._deliveryQueue=void 0}}dispose(){this._listeners.clear()\x2Cthis._deliveryQueue&&(this._deliveryQueue=[])}}t.EventEmitter=o\x2Ct.ListenerMap=class{constructor(){this.map=new Map\x2Cthis.listeners=this.map}listen(e\x2Ct){let r=this.map.get(e);r||(r=new o\x2Cthis.map.set(e\x2Cr));const n=r.event(t);return{dispose:s.once((()=>{n.dispose()\x2C0===(null==r?void 0:r.size)&&this.map.delete(e)}))}}emit(e\x2Ct){var r;null===(r=this.listeners.get(e))||void 0===r||r.fire(t)}}}\x2C7551:function(e\x2Ct\x2Cr){"use strict";var s=this&&this.__createBinding||(Object.create?function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2CObject.defineProperty(e\x2Cs\x2C{enumerable:!0\x2Cget:function(){return t[r]}})}:function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2Ce[s]=t[r]})\x2Co=this&&this.__setModuleDefault||(Object.create?function(e\x2Ct){Object.defineProperty(e\x2C"default"\x2C{enumerable:!0\x2Cvalue:t})}:function(e\x2Ct){e.default=t})\x2Cn=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e\x2Cr)&&s(t\x2Ce\x2Cr);return o(t\x2Ce)\x2Ct};Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.waitForServerToListen=t.makeAcquireWebSocketServer=t.makeAcquireTcpServer=t.acquirePortNumber=t.isPortOpen=t.findOpenPort=void 0;const i=n(r(1631))\x2Ca=n(r(8681))\x2Cc=r(5370)\x2Cl=r(7999);function u(e\x2Ct=c.NeverCancelled){let r;return new Promise(((s\x2Co)=>{const n=i.createServer();n.listen(e\x2C"127.0.0.1"\x2C(()=>{const e=n.address();n.close((()=>s(e.port)))}))\x2Cn.on("error"\x2Co)\x2Cr=t.onCancellationRequested((()=>{n.close()\x2Co(new c.TaskCancelledError("Port open lookup cancelled"))}))})).finally((()=>null==r?void 0:r.dispose()))}t.findOpenPort=async function({min:e=53e3\x2Cmax:t=54e3\x2Cattempts:r=1e3\x2Ctester:s=u}={}\x2Co=c.NeverCancelled){let n=l.randomInRange(e\x2Ct);for(let i=Math.min(r\x2Ct-e);;i--)try{return await s(n\x2Co)}catch(r){if(0===i||r instanceof c.TaskCancelledError)throw r;n=n===t-1?e:n+1}}\x2Ct.isPortOpen=async function(e\x2Ct){try{return await u(e\x2Ct)\x2C!0}catch(e){return!1}}\x2Ct.acquirePortNumber=u\x2Ct.makeAcquireTcpServer=e=>(r\x2Cs)=>{const o=i.createServer(e);return o.listen(r\x2C"127.0.0.1")\x2Ct.waitForServerToListen(o\x2Cs)}\x2Ct.makeAcquireWebSocketServer=e=>(r\x2Cs)=>t.waitForServerToListen(new a.Server(Object.assign(Object.assign({host:"127.0.0.1"}\x2Ce)\x2C{port:r}))\x2Cs)\x2Ct.waitForServerToListen=(e\x2Ct)=>{let r;return new Promise(((s\x2Co)=>{e.on("error"\x2Co)\x2Ce.on("listening"\x2C(()=>s(e)))\x2Cr=t.onCancellationRequested((()=>{e.close()\x2Co(new c.TaskCancelledError("Port open lookup cancelled"))}))})).finally((()=>null==r?void 0:r.dispose()))}}\x2C9140:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.findOpenPortSync=t.acquirePortNumber=void 0;const s=r(3129)\x2Co=r(7999);var n=r(7551);Object.defineProperty(t\x2C"acquirePortNumber"\x2C{enumerable:!0\x2Cget:function(){return n.acquirePortNumber}})\x2Ct.findOpenPortSync=function({min:e=53e3\x2Cmax:t=54e3\x2Cattempts:r=1e3}={}){const s=i();let n=o.randomInRange(e\x2Ct);for(let o=Math.min(r\x2Ct-e);o>=0;o--){if(s(n))return n;n=n===t-1?e:n+1}throw new Error("No open port found")};const i=()=>{const e=e=>0===s.spawnSync(process.execPath\x2C["-e"\x2C'require("net").createServer().on("listening"\x2C()=>process.exit(0)).on("error"\x2C()=>process.exit(1)).listen(+process.env.PORT)']\x2C{env:Object.assign(Object.assign({}\x2Cprocess.env)\x2C{PORT:String(e)\x2CNODE_OPTIONS:void 0\x2CELECTRON_RUN_AS_NODE:"1"})}).status;let t="win32"===process.platform?e:r=>{var o;const n=s.spawnSync("nc"\x2C["-z"\x2C"127.0.0.1"\x2CString(r)]);return"ENOENT"===(null===(o=n.error)||void 0===o?void 0:o.code)&&(t=e)\x2C1===n.status};return e=>t(e)}}\x2C7873:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.knownToolGlob=t.knownToolToken=void 0;const r=new Set(["mocha"\x2C"jest"\x2C"jest-cli"\x2C"ava"\x2C"tape"\x2C"tap"\x2C"ts-node"\x2C"babel-node"]);t.knownToolToken="$KNOWN_TOOLS$"\x2Ct.knownToolGlob=`{${[...r].join("\x2C")}}`}\x2C7678:(e\x2Ct)=>{"use strict";function r(e\x2Ct){const r={};for(const s of Object.keys(e)){const o=e[s];t(o\x2Cs)&&(r[s]=o)}return r}Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.invertMap=t.upcastPartial=t.pick=t.flatten=t.bisectArray=t.trailingEdgeThrottle=t.debounce=t.memoizeWeak=t.memoize=t.once=t.getCaseInsensitiveProperty=t.caseInsensitiveMerge=t.walkObject=t.sortKeys=t.filterObject=t.mapKeys=t.mapValues=t.filterValues=t.assertNever=t.removeUndefined=t.removeNulls=t.truthy=void 0\x2Ct.truthy=e=>!!e\x2Ct.removeNulls=e=>r(e\x2C(e=>null!==e))\x2Ct.removeUndefined=e=>r(e\x2C(e=>void 0!==e))\x2Ct.assertNever=(e\x2Ct)=>{throw new Error(t.replace("{value}"\x2CJSON.stringify(e)))}\x2Ct.filterValues=r\x2Ct.mapValues=function(e\x2Ct){const r={};for(const s of Object.keys(e)){const o=e[s];r[s]=t(o\x2Cs)}return r}\x2Ct.mapKeys=function(e\x2Ct){const r={};for(const s of Object.keys(e)){const o=t(s\x2Ce[s]);void 0!==o&&(r[o]=e[s])}return r}\x2Ct.filterObject=function(e\x2Ct){const r={};for(const s of Object.keys(e))t(s\x2Ce[s])&&(r[s]=e[s]);return r}\x2Ct.sortKeys=function(e\x2Ct){if(!e||"object"!=typeof e||e instanceof Array)return e;const r={};for(const s of Object.keys(e).sort(t))r[s]=e[s];return r}\x2Ct.walkObject=function e(t\x2Cr){if(t=r(t))if(t instanceof Array)t=t.map((t=>e(t\x2Cr)));else if("object"==typeof t&&t)for(const s of Object.keys(t))t[s]=e(t[s]\x2Cr);return t}\x2Ct.caseInsensitiveMerge=function(...e){if(0===e.length)return{};const t={}\x2Cr=Object.create(null);for(const s of e)if(s)for(const e of Object.keys(s)){const o=e.toLowerCase();r[o]?t[r[o]]=s[e]:(r[o]=e\x2Ct[e]=s[e])}return t}\x2Ct.getCaseInsensitiveProperty=function(e\x2Ct){if(e.hasOwnProperty(t))return e[t];const r=t.toLowerCase();for(const t of Object.keys(e))if(t.toLowerCase()===r)return e[t]};const s=Symbol("unset");t.once=function(e){let t=s;const r=(...o)=>(t===s&&(r.value=t=e(...o))\x2Ct);return r.forget=()=>{t=s\x2Cr.value=void 0}\x2Cr.value=void 0\x2Cr}\x2Ct.memoize=function(e){const t=new Map\x2Cr=r=>{if(t.has(r))return t.get(r);const s=e(r);return t.set(r\x2Cs)\x2Cs};return r.clear=()=>t.clear()\x2Cr}\x2Ct.memoizeWeak=function(e){const t=new WeakMap;return r=>{if(t.has(r))return t.get(r);const s=e(r);return t.set(r\x2Cs)\x2Cs}}\x2Ct.debounce=function(e\x2Ct){let r;const s=()=>{void 0!==r&&clearTimeout(r)\x2Cr=setTimeout((()=>{r=void 0\x2Ct()})\x2Ce)};return s.clear=()=>{r&&(clearTimeout(r)\x2Cr=void 0)}\x2Cs}\x2Ct.trailingEdgeThrottle=function(e\x2Ct){let r;const s=()=>{void 0===r&&(r=setTimeout((()=>{r=void 0\x2Ct()})\x2Ce))};return s.queued=()=>!!r\x2Cs.clear=()=>{r&&(clearTimeout(r)\x2Cr=void 0)}\x2Cs}\x2Ct.bisectArray=function(e\x2Ct){const r=[]\x2Cs=[];for(const o of e)t(o)?r.push(o):s.push(o);return[r\x2Cs]}\x2Ct.flatten=function(e){let t=[];for(const r of e)t=t.concat(r);return t}\x2Ct.pick=function(e\x2Ct){const r={};for(const s of t)r[s]=e[s];return r}\x2Ct.upcastPartial=e=>e\x2Ct.invertMap=function(e){const t=new Map;for(const[r\x2Cs]of e)t.set(s\x2Cr);return t}}\x2C8986:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.getDeferred=t.some=t.disposableTimeout=t.delay=void 0\x2Ct.delay=e=>isFinite(e)?new Promise((t=>setTimeout(t\x2Ce))):new Promise((()=>{}))\x2Ct.disposableTimeout=(e\x2Ct)=>{const r=setTimeout(e\x2Ct);return{dispose:()=>clearTimeout(r)}}\x2Ct.some=function(e){return new Promise(((t\x2Cr)=>{let s=e.length;for(const o of e)o.then((e=>{e?(t(e)\x2Cs=-1):0==--s&&t(void 0)})).catch(r)}))}\x2Ct.getDeferred=function(){let e\x2Ct=null\x2Cr=null\x2Cs=!1;const o=new Promise(((o\x2Cn)=>{t=t=>{s=!0\x2Ce=t\x2Co(t)}\x2Cr=e=>{s=!0\x2Cn(e)}}));return{resolve:t\x2Creject:r\x2Cpromise:o\x2Cget settledValue(){return e}\x2ChasSettled:()=>s}}}\x2C7999:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.randomInRange=void 0\x2Ct.randomInRange=(e\x2Ct)=>e+Math.floor(Math.random()*(t-e))}\x2C1032:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.ProtocolError=void 0;class r extends Error{constructor(e){super("__errorMarker"in e?e.error.format:e.format)\x2Cthis._cause="__errorMarker"in e?e.error:e}get cause(){return this._cause}}t.ProtocolError=r}\x2C7207:function(e\x2Ct\x2Cr){"use strict";var s=this&&this.__createBinding||(Object.create?function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2CObject.defineProperty(e\x2Cs\x2C{enumerable:!0\x2Cget:function(){return t[r]}})}:function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2Ce[s]=t[r]})\x2Co=this&&this.__setModuleDefault||(Object.create?function(e\x2Ct){Object.defineProperty(e\x2C"default"\x2C{enumerable:!0\x2Cvalue:t})}:function(e\x2Ct){e.default=t})\x2Cn=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e\x2Cr)&&s(t\x2Ce\x2Cr);return o(t\x2Ce)\x2Ct}\x2Ci=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t\x2C"__esModule"\x2C{value:!0});const a=r(3129)\x2Cc=n(r(5747))\x2Cl=n(r(7012))\x2Cu=i(r(8586))\x2Cp=n(r(5622))\x2Ch=r(9140)\x2Cd=r(7873)\x2Cf=r(3915)\x2C_=r(1465)\x2Cg=r(8745)\x2Cm=r(3783)\x2Cy=r(1446)\x2Cv={cwd:process.cwd()\x2CprocessId:process.pid\x2CnodeVersion:process.version\x2Carchitecture:process.arch}\x2Cb="$jsDebugIsRegistered";(()=>{try{if(b in global)return;const e=new f.BootloaderEnvironment(process.env)\x2Ct=e.inspectorOptions;if(g.bootloaderLogger.enabled=!!(null==t?void 0:t.verbose)\x2Cg.bootloaderLogger.info("runtime.launch"\x2C"Bootloader imported"\x2C{env:t\x2Cargs:process.argv})\x2CObject.assign(global\x2C{[b]:!0})\x2C!_.checkAll(t))return void e.unsetForTree();try{if(!r(5013).isMainThread)return}catch(e){}!function(e){var t;const r=null===(t=e.inspectorOptions)||void 0===t?void 0:t.fileCallback;r&&(c.writeFileSync(r\x2CJSON.stringify(v))\x2Ce.updateInspectorOption("fileCallback"\x2Cvoid 0))}(e)\x2C/(\\\\|\\/|^)node(64)?(.exe)?$/.test(process.execPath)&&(t.execPath=process.execPath);const s=y.createTargetId()\x2Co=function(e\x2Ct){const r=function(e){if(!e)return!1;try{return c.readdirSync(p.dirname(e)).includes(p.basename(e))}catch(e){return!1}}(e.inspectorIpc)?e.deferredMode?1:0:2;if(g.bootloaderLogger.info("runtime"\x2C"Set debug mode"\x2C{mode:r})\x2C2===r)return!1;const s=void 0!==l.url();if(!s){if(!function(e){switch(e.autoAttachMode){case"always":return!0;case"smart":return function(e){const t=process.argv[1];return!t||function(e\x2Ct){return!!t.aaPatterns&&u.default([e.replace(/\\\\/g\x2C"/")]\x2C[...t.aaPatterns.map((e=>e.replace(d.knownToolToken\x2Cd.knownToolGlob)))]\x2C{dot:!0\x2Cnocase:!0}).length>0}(t\x2Ce)}(e);case"onlyWithFlag":default:return!1}}(e))return!1;l.open(function(e){if(!e.mandatePortTracking)return 0;try{return h.findOpenPortSync({attempts:20})}catch(e){return 0}}(e)\x2Cvoid 0\x2C!1)}const o={ipcAddress:e.inspectorIpc||""\x2Cpid:String(process.pid)\x2Ctelemetry:v\x2CscriptName:process.argv[1]\x2CinspectorURL:l.url()\x2CwaitForDebugger:!0\x2CownId:t\x2CopenerId:e.openerId};if(0===r)n=e.execPath||process.execPath\x2Ci=o\x2Ca.spawn(n\x2C[m.watchdogPath]\x2C{env:{NODE_INSPECTOR_INFO:JSON.stringify(i)\x2CNODE_SKIP_PLATFORM_CHECK:process.env.NODE_SKIP_PLATFORM_CHECK}\x2Cstdio:"ignore"\x2Cdetached:!0}).unref();else{const{status:t\x2Cstderr:r}=a.spawnSync(e.execPath||process.execPath\x2C["-e"\x2C'const c=require("net").createConnection(process.env.NODE_INSPECTOR_IPC);setTimeout(()=>{console.error("timeout")\x2Cprocess.exit(1)}\x2C10000)\x2Cc.on("error"\x2Ce=>{console.error(e)\x2Cprocess.exit(1)})\x2Cc.on("connect"\x2C()=>{c.write(process.env.NODE_INSPECTOR_INFO\x2C"utf-8")\x2Cc.write(Buffer.from([0]))\x2Cc.on("data"\x2Ce=>{console.error("read byte"\x2Ce[0])\x2Cprocess.exit(e[0])})});']\x2C{env:{NODE_SKIP_PLATFORM_CHECK:process.env.NODE_SKIP_PLATFORM_CHECK\x2CNODE_INSPECTOR_INFO:JSON.stringify(o)\x2CNODE_INSPECTOR_IPC:e.inspectorIpc}});if(t)return console.error(r.toString())\x2Cconsole.error("Error activating auto attach\x2C please report to https://aka.ms/js-dbg-issue")\x2C!1}var n\x2Ci;const f=l;return f.waitForDebugger?f.waitForDebugger():l.open(s?void 0:0\x2Cvoid 0\x2C!0)\x2C!0}(t\x2Cs);t.onlyEntrypoint?e.unsetForTree():o&&e.updateInspectorOption("openerId"\x2Cs)}catch(e){console.error(`Error in the js-debug bootloader\x2C please report to https://aka.ms/js-dbg-issue: ${e.stack}`)}})()}\x2C3915:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.BootloaderEnvironment=t.variableDelimiter=void 0\x2Ct.variableDelimiter=":::"\x2Ct.BootloaderEnvironment=class{constructor(e){this.processEnv=e}get nodeOptions(){return this.processEnv.NODE_OPTIONS}set nodeOptions(e){void 0===e?delete this.processEnv.NODE_OPTIONS:this.processEnv.NODE_OPTIONS=e}get inspectorOptions(){const e=this.processEnv.VSCODE_INSPECTOR_OPTIONS;if(!e)return;const r=e.split(t.variableDelimiter).find((e=>!!e));if(r)try{return JSON.parse(r)}catch(e){return}}set inspectorOptions(e){void 0===e?delete this.processEnv.VSCODE_INSPECTOR_OPTIONS:this.processEnv.VSCODE_INSPECTOR_OPTIONS=JSON.stringify(e)}unsetForTree(){delete this.processEnv.VSCODE_INSPECTOR_OPTIONS}updateInspectorOption(e\x2Ct){const r=this.inspectorOptions;r&&(this.inspectorOptions=Object.assign(Object.assign({}\x2Cr)\x2C{[e]:t}))}}}\x2C1465:(__unused_webpack_module\x2Cexports\x2C__webpack_require__)=>{"use strict";Object.defineProperty(exports\x2C"__esModule"\x2C{value:!0})\x2Cexports.checkAll=exports.checkIsNotNodeGyp=exports.checkNotNpmPrefixCheckOnWindows=exports.checkProcessFilter=exports.checkNotElectron=exports.checkLeaseFile=exports.checkIsDebugMode=void 0;const path_1=__webpack_require__(5622)\x2Clease_file_1=__webpack_require__(9597)\x2Clogger_1=__webpack_require__(8745)\x2CcheckIsDebugMode=e=>!(!e||!e.inspectorIpc)||(logger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling due to lack of IPC server")\x2C!1);exports.checkIsDebugMode=checkIsDebugMode;const checkLeaseFile=e=>{const t=e.requireLease;return!(t&&!lease_file_1.LeaseFile.isValid(t)&&(logger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling due to invalid lease file")\x2C1))};exports.checkLeaseFile=checkLeaseFile;const checkNotElectron=()=>{try{return eval("window")\x2Clogger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling in Electron (window is set)")\x2C!1}catch(e){return!0}};exports.checkNotElectron=checkNotElectron;const checkProcessFilter=e=>{let t\x2Cr="";try{r=__webpack_require__(3121).resolve(process.argv[1])}catch(e){r=process.argv[1]}try{t=new RegExp(e.waitForDebugger||"").test(r)}catch(e){t=!0}return t||logger_1.bootloaderLogger.info("runtime.launch"\x2C"Disabling due to not matching pattern"\x2C{pattern:e.waitForDebugger\x2CscriptName:r})\x2Ct};exports.checkProcessFilter=checkProcessFilter;const checkNotNpmPrefixCheckOnWindows=()=>{const e=process.argv;return!(4===e.length&&"npm-cli.js"===path_1.basename(e[1])&&"prefix"===e[2]&&"-g"===e[3])};exports.checkNotNpmPrefixCheckOnWindows=checkNotNpmPrefixCheckOnWindows;const checkIsNotNodeGyp=e=>!(e.deferredMode&&process.argv.length>=2&&"node-gyp.js"===path_1.basename(process.argv[1]));exports.checkIsNotNodeGyp=checkIsNotNodeGyp;const allChecks=[exports.checkIsNotNodeGyp\x2Cexports.checkIsDebugMode\x2Cexports.checkLeaseFile\x2Cexports.checkNotElectron\x2Cexports.checkProcessFilter\x2Cexports.checkNotNpmPrefixCheckOnWindows]\x2CcheckAll=e=>!!e&&!allChecks.some((t=>!t(e)));exports.checkAll=checkAll}\x2C8745:(e\x2Ct)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.bootloaderLogger=void 0\x2Ct.bootloaderLogger={enabled:!1\x2Cinfo:(...e)=>{t.bootloaderLogger.enabled&&console.log(...e)}}}\x2C3783:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.bootloaderDefaultPath=t.watchdogPath=void 0;const s=r(5622);t.watchdogPath=s.join(__dirname\x2C"watchdog.bundle.js")\x2Ct.bootloaderDefaultPath=s.join(__dirname\x2C"bootloader.bundle.js")}\x2C1446:(e\x2Ct\x2Cr)=>{"use strict";Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.createTargetId=void 0;const s=r(6417);t.createTargetId=()=>s.randomBytes(12).toString("hex")}\x2C9597:function(e\x2Ct\x2Cr){"use strict";var s=this&&this.__createBinding||(Object.create?function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2CObject.defineProperty(e\x2Cs\x2C{enumerable:!0\x2Cget:function(){return t[r]}})}:function(e\x2Ct\x2Cr\x2Cs){void 0===s&&(s=r)\x2Ce[s]=t[r]})\x2Co=this&&this.__setModuleDefault||(Object.create?function(e\x2Ct){Object.defineProperty(e\x2C"default"\x2C{enumerable:!0\x2Cvalue:t})}:function(e\x2Ct){e.default=t})\x2Cn=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e\x2Cr)&&s(t\x2Ce\x2Cr);return o(t\x2Ce)\x2Ct};Object.defineProperty(t\x2C"__esModule"\x2C{value:!0})\x2Ct.LeaseFile=void 0;const i=r(6417)\x2Ca=r(5747)\x2Cc=r(2087)\x2Cl=n(r(5622));class u{constructor(){this.disposed=!1\x2Cthis.path=l.join(c.tmpdir()\x2C`node-debug-callback-${i.randomBytes(8).toString("hex")}`)\x2Cthis.file=a.promises.open(this.path\x2C"w")}static isValid(e){try{const t=a.readFileSync(e);return!!t.length&&t.readDoubleBE()>Date.now()-u.recencyDeadline}catch(e){return!1}}async startTouchLoop(){await this.touch()\x2Cthis.disposed||(this.updateInterval=setInterval((()=>this.touch())\x2Cu.updateInterval))}async touch(e=(()=>Date.now())){const t=await this.file\x2Cr=Buffer.alloc(8);r.writeDoubleBE(e())\x2Cawait t.write(r\x2C0\x2Cr.length\x2C0)}async dispose(){if(!this.disposed){this.disposed=!0\x2Cthis.updateInterval&&clearInterval(this.updateInterval);try{const e=await this.file;await e.close()\x2Cawait a.promises.unlink(this.path)}catch(e){}}}}t.LeaseFile=u\x2Cu.updateInterval=1e3\x2Cu.recencyDeadline=2e3}\x2C3121:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND"\x2Ct}t.keys=()=>[]\x2Ct.resolve=t\x2Ct.id=3121\x2Ce.exports=t}\x2C3129:e=>{"use strict";e.exports=require("child_process")}\x2C6417:e=>{"use strict";e.exports=require("crypto")}\x2C8614:e=>{"use strict";e.exports=require("events")}\x2C5747:e=>{"use strict";e.exports=require("fs")}\x2C8605:e=>{"use strict";e.exports=require("http")}\x2C7211:e=>{"use strict";e.exports=require("https")}\x2C7012:e=>{"use strict";e.exports=require("inspector")}\x2C1631:e=>{"use strict";e.exports=require("net")}\x2C2087:e=>{"use strict";e.exports=require("os")}\x2C5622:e=>{"use strict";e.exports=require("path")}\x2C2413:e=>{"use strict";e.exports=require("stream")}\x2C4016:e=>{"use strict";e.exports=require("tls")}\x2C8835:e=>{"use strict";e.exports=require("url")}\x2C1669:e=>{"use strict";e.exports=require("util")}\x2C5013:e=>{"use strict";e.exports=require("worker_threads")}\x2C8761:e=>{"use strict";e.exports=require("zlib")}}\x2C__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports\x2Cr\x2Cr.exports\x2C__webpack_require__)\x2Cr.exports}__webpack_require__.o=(e\x2Ct)=>Object.prototype.hasOwnProperty.call(e\x2Ct);var __webpack_exports__=__webpack_require__(7207)})();\n//# sourceURL=bootloader.bundle.cdp
code-source-info,0x3ba9ddf32f26,115,0,93242,C0O0C4O93242,,
code-creation,Function,10,147794,0x3ba9ddf32fe6,46, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:1:1,0x3ba9ddf32ea0,~
code-source-info,0x3ba9ddf32fe6,115,0,93242,C0O0C36O75C41O93203C45O93241,,
code-creation,Function,10,147828,0x3ba9ddf35b56,996, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:2,0x3ba9ddf32f58,~
code-source-info,0x3ba9ddf35b
tick,0x7ff81f29e96a,147951,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29edab,147975,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f213c95,147988,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f26732d,148000,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1083564ba,148011,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108af2360,148022,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x10882c7c0,148039,1,0x1083d9fa0,3,0x1085cff20,0x3ba9ddf2c496,0x3ba9ddf2bbc7,0x3ba9ddf2a505,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,148056,0x3ba9ddf3660e,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x3ba9ddf06b70,~
code-source-info,0x3ba9ddf3660e,113,11705,12148,C0O11705C13O11774C18O12146,,
code-creation,LazyCompile,10,148190,0x3ba9ddf37a26,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x3ba9c5ada310,~
code-source-info,0x3ba9ddf37a26,98,1708,3678,C0O1708C22O1744C25O1748C29O1744C31O1768C33O1779C53O1811C58O1815C69O1831C73O1811C75O1858C81O1858C83O1885C89O1894C95O1922C104O3082C109O3313C111O3329C115O3469C117O3483C121O3495C126O3518C130O3508C134O3583C137O3611C141O3602C145O3627C148O3650C152O3641C156O3661C158O3676,,
tick,0x108af2367,148293,0,0x0,3,0x108a8eb80,0x3ba9ddf2a5da,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,148372,0x3ba9ddf3869e,71,__webpack_require__ /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92803,0x3ba9ddf33050,~
code-source-info,0x3ba9ddf3869e,115,92877,93081,C0O92887C5O92911C9O92915C11O92938C15O92946C16O92952C19O92977C24O92979C31O92993C36O93019C40O93023C45O93030C50O93042C61O93023C66O93073C70O93080,,
code-creation,LazyCompile,10,148610,0x3ba9ddf38f76,434,7207 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:82918,0x3ba9ddf345f8,~
code-source-info,0x3ba9ddf38f
code-creation,LazyCompile,10,148697,0x3ba9ddf3949e,387, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:83871,0x3ba9ddf38da0,~
code-source-info,0x3ba9ddf3949e
code-creation,LazyCompile,10,148767,0x3ba9ddf397a6,75, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:84251,0x3ba9ddf39220,~
code-source-info,0x3ba9ddf397a6,115,84325,84496,C0O84355C14O84394C19O84407C23O84411C26O84413C31O84429C35O84434C42O84444C45O84434C51O84413C57O84450C67O84450C74O84495,,
code-creation,LazyCompile,10,148842,0x3ba9ddf399e6,18,3129 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:91943,0x3ba9ddf34bd8,~
code-source-info,0x3ba9ddf399e6,115,92017,92069,C0O92034C8O92044C12O92043C17O92068,,
code-creation,LazyCompile,10,148896,0x3ba9ddf39ace,14,require node:internal/modules/cjs/helpers:101:31,0x3ba9ddf378f8,~
code-source-info,0x3ba9ddf39ace,98,3108,3154,C0O3123C3O3134C8O3134C13O3148,,
code-creation,LazyCompile,10,148956,0x3ba9ddf39c36,10, node:internal/modules/cjs/helpers:29:66,0x3ba9c5ada4e0,~
code-source-info,0x3ba9ddf39c36,98,810,835,C0O822C2O828C9O834,,
code-creation,LazyCompile,10,149025,0x3ba9ddf39dae,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x3ba96094f6d0,~
code-source-info,0x3ba9ddf39dae,9,7543,8215,C0O7562C6O7706C16O7749C33O7712C38O7706C39O7786C44O7786C48O7828C54O8017C61O8048C69O8017C75O8072C80O8090C90O8106C93O8122C98O8106C102O8088C106O8147C111O8147C115O8172C120O8172C124O8203C128O8211,,
tick,0x1085b2c88,149552,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,149649,0x3ba9ddf3aaf6,5, node:child_process:1:1,0x3ba9ddf3a620,~
script-source,116,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeTest\x2C\n  SafeSet\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst {\n  promisify\x2C\n  convertToValidSignal\x2C\n  createDeferredPromise\x2C\n  getSystemErrorName\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: errorCodes\x2C\n} = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = errorCodes;\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   detached?: boolean;\n *   env?: Object;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath /* \x2C args\x2C options */) {\n  validateString(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n  let options = {};\n  let args = [];\n  let pos = 1;\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\n    args = arguments[pos++];\n  }\n\n  if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n\n  if (pos < arguments.length && arguments[pos] != null) {\n    if (typeof arguments[pos] !== 'object') {\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\n    }\n\n    options = { ...arguments[pos++] };\n  }\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  options.execPath = options.execPath || process.execPath;\n  options.shell = false;\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Object;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return (...args) => {\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  };\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\n});\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Object;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file /* \x2C args\x2C options\x2C callback */) {\n  let args = [];\n  let callback;\n  let options;\n\n  // Parse the optional positional parameters.\n  let pos = 1;\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\n    args = arguments[pos++];\n  } else if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n\n  if (pos < arguments.length && typeof arguments[pos] === 'object') {\n    options = arguments[pos++];\n  } else if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n\n  if (pos < arguments.length && typeof arguments[pos] === 'function') {\n    callback = arguments[pos++];\n  }\n\n  if (!callback && pos < arguments.length && arguments[pos] != null) {\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C arguments[pos]);\n  }\n\n  options = {\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout &&\n        child.stdout.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr &&\n        child.stderr.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args.length !== 0)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    if (!ex) {\n      // eslint-disable-next-line no-restricted-syntax\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\n      ex.killed = child.killed || killed;\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\n      ex.signal = signal;\n    }\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        _stderr.push(chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\n});\n\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  if (options === undefined)\n    options = {};\n  else\n    validateObject(options\x2C 'options');\n\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  const env = options.env || process.env;\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  if (process.env.NODE_V8_COVERAGE &&\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError());\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   env?: Object;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\n      child.once('exit'\x2C\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Object;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i] && options.stdio[i].input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    // eslint-disable-next-line no-restricted-syntax\n    err = new Error(msg);\n  }\n  if (err) {\n    ObjectAssign(err\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} command\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Object;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(command\x2C args\x2C options) {\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(options.file\x2C\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Object;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\n};\n
code-source-info,0x3ba9ddf3aaf6,116,0,24635,C0O0C4O24635,,
code-creation,Function,10,151994,0x3ba9ddf3b556,748, node:child_process:1:1,0x3ba9ddf3aa70,~
code-source-info,0x3ba9ddf3b
tick,0x7ff81f29ed96,152138,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269ae6,152166,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9e5200000,262144
code-creation,Eval,10,153088,0x3ba9c5affc2e,5, node:internal/child_process:1:1,0x3ba9ddf3ff90,~
script-source,117,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\n  }\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\n        });\n      }\n\n      emit(socket);\n    }\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\n  }\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = errnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw errnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      // When i === 0 - we're dealing with stdin\n      // (which is the only one writable pipe).\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw errnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\n\nChildProcess.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n      this.emit('unref');\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        if (!this._handleQueue)\n          this._handleQueue = [];\n        if (obj && obj.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj && obj.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = errnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    target.emit(event\x2C message\x2C handle);\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    if (stdio == null) {\n      stdio = i < 3 ? 'pipe' : 'ignore';\n    }\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output && result.output[1];\n  result.stderr = result.output && result.output[2];\n\n  if (result.error) {\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\n};\n
code-source-info,0x3ba9c5affc2e,117,0,30803,C0O0C4O30803,,
code-creation,Function,10,155989,0x3ba9e5202346,1253, node:internal/child_process:1:1,0x3ba9c5affba8,~
code-source-info,0x3ba9e
code-creation,Function,10,156133,0x3ba9e5202aae,35,<instance_members_initializer> node:internal/child_process:524:3,0x3ba9e5201a10,~
code-source-info,0x3ba9e5202aae,117,13654,13711,C3O13665C16O13681C26O13706C34O13711,,
tick,0x7ff81f2b6243,156174,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269ae6,156204,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f26732d,156222,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108a0d06d,157044,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e5202531,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,157442,0x3ba9e5206bb6,5, node:net:1:1,0x3ba9e52063d8,~
script-source,118,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIndexOf\x2C\n  Boolean\x2C\n  Error\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\n} = internalBinding('uv');\n\nconst { Buffer } = require('buffer');\nconst { guessHandleType } = internalBinding('util');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\n} = require('internal/stream_base_commons');\nconst {\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  uvExceptionWithHostPort\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst {\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n} = require('internal/dtrace');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\n\nconst { clearTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst isWindows = process.platform === 'win32';\n\nconst noop = () => {};\n\nfunction getFlags(ipv6Only) {\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\n    );\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kSetNoDelay] = false;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw errnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        value: 0\x2C writable: true\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.pending) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(errnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\n        self._readableState);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  const er = new Error('This socket has been ended by the other party');\n  er.code = 'EPIPE';\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  if (!this._handle) {\n    this.once('connect'\x2C\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\n    return this;\n  }\n\n  // Backwards compatibility: assume true when `enable` is omitted\n  const newValue = enable === undefined ? true : !!enable;\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = newValue;\n    this._handle.setNoDelay(newValue);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\n  if (!this._handle) {\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\n    return this;\n  }\n\n  if (this._handle.setKeepAlive)\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  get: function() {\n    return this.connecting;\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  get: function() {\n    return this._unrefTimer;\n  }\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(errnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug('_read');\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  DTRACE_NET_STREAM_END(this);\n  return this;\n};\n\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      this._handle.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(errnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    this._handle.close(() => {\n      debug('emit close');\n      this.emit('close'\x2C isException);\n    });\n    this._handle.onread = noop;\n    this._handle = null;\n    this._sockname = null;\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    this._peername = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getpeername(this._peername);\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  }\n}\n\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n    });\n    return;\n  }\n\n  if (options.lookup !== undefined)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: options.family\x2C\n    hints: options.hints || 0\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\n        );\n      }\n    });\n  });\n}\n\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  let self = handle[owner_symbol];\n\n  if (self.constructor.name === 'ReusedHandle') {\n    self = self.handle;\n  }\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n\n  } else {\n    self.connecting = false;\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = exceptionWithHostPort(status\x2C\n                                     'connect'\x2C\n                                     req.address\x2C\n                                     req.port\x2C\n                                     details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n    self.destroy(ex);\n  }\n}\n\nfunction addAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    signal.addEventListener('abort'\x2C onAborted);\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = {};\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n  };\n\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n\n  function listenOnPrimaryHandle(err\x2C handle) {\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options.ipv6Only);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\n    return this;\n  }\n  addAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\n                    backlog\x2C undefined\x2C options.exclusive);\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw errnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      addressType = ip ? addressType : 4;\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\n});\n\nServer.prototype.address = function() {\n  if (this._handle && this._handle.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw errnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections && self._connections >= self.maxConnections) {\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\n  });\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n\n  DTRACE_NET_SERVER_CONNECTION(socket);\n  self.emit('connection'\x2C socket);\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n};\n
code-source-info,0x3ba9e5206bb6,118,0,47747,C0O0C4O47747,,
code-creation,Function,10,161933,0x3ba9e5209a86,2513, node:net:1:1,0x3ba9e5206b30,~
code-source-info,0x3ba9e5209a86,118,0,47747,C0O0C411O1159C417O1175C423O1200C429O1211C435O1220C441O1230C447O1245C453O1263C459O1287C464O1311C469O1358C475O1358C479O1358C481O1392C487O1392C491O1392C493O1423C499O1423C504O1456C518O1457C524O1423C526O1581C532O1581C537O1511C543O1519C548O1529C553O1539C559O1563C565O1621C571O1621C575O1621C577O1705C580O1705C585O1659C591O1676C597O1689C603O1748C609O1748C614O1737C620O1795C623O1795C628O1775C634O1845C637O1845C642O1828C648O1940C651O1940C656O1887C662O1894C668O1923C674O2035C677O2035C682O1979C688O1987C694O2017C700O2166C706O2166C711O2075C717O2089C728O2130C734O2147C740O2364C746O2364C751O2209C757O2226C763O2242C769O2258C774O2278C780O2289C785O2305C790O2325C796O2336C802O2349C808O2744C814O2744C819O2744C824O2428C830O2460C836O2486C842O2513C848O2538C854O2566C860O2597C866O2625C872O2648C878O2673C884O2691C890O2716C896O2797C902O2797C907O2780C913O2952C919O2952C924O2839C930O2862C936O2882C942O2899C948O2917C954O2933C960O3012C963O3012C967O3012C969O3110C975O3110C980O3052C986O3084C992O3190C993O3190C995O3203C996O3203C998O3212C999O3212C1001O3227C1002O3227C1004O3268C1010O3268C1015O3251C1021O3308C1027O3308C1032O3295C1038O3363C1040O3363C1042O3400C1044O3400C1046O3425C1049O3433C1056O3442C1059O3425C1061O3469C1065O3469C1067O6921C1070O6921C1074O6921C1076O6965C1079O6965C1083O6965C1085O7010C1088O7010C1092O7010C1094O11101C1097O11129C1105O11147C1110O11154C1115O11101C1120O11166C1126O11202C1131O11166C1136O11242C1139O11249C1148O11271C1152O11497C1155O11504C1164O11521C1168O13067C1171O13074C1178O13095C1182O13117C1185O13124C1194O13145C1198O13655C1201O13662C1210O13683C1214O14138C1217O14145C1226O14168C1230O14421C1233O14428C1242O14446C1246O14496C1252O14524C1266O14559C1274O14496C1279O14609C1285O14637C1299O14663C1307O14609C1312O14748C1318O14776C1332O14810C1340O14748C1345O15132C1351O15160C1365O15194C1373O15132C1378O15280C1384O15308C1389O15319C1395O15342C1406O15280C1411O15707C1414O15714C1423O15730C1427O15965C1430O15972C1439O15986C1443O16179C1446O16186C1455O16202C1459O16542C1462O16549C1471O16566C1475O16756C1478O16763C1487O16778C1491O17115C1494O17122C1503O17144C1507O17297C1510O17304C1519O17323C1523O18282C1526O18289C1535O18312C1539O18773C1547O18773C1552O18893C1560O18893C1565O18992C1573O18992C1578O19088C1586O19088C1596O19179C1599O19186C1608O19209C1616O19491C1624O19491C1634O19589C1642O19589C1652O19678C1655O19685C1660O19695C1664O19713C1672O19765C1675O19772C1684O19796C1692O20563C1695O20570C1704O20588C1712O20662C1715O20669C1724O20686C1732O20930C1740O20930C1750O21070C1758O21070C1768O24542C1771O24549C1780O24567C1788O28968C1791O28975C1800O28989C1808O29182C1811O29189C1820O29205C1828O32017C1831O32045C1843O32069C1852O32017C1862O32081C1868O32081C1878O36067C1881O36074C1892O36093C1900O37541C1903O37548C1916O37565C1924O41522C1930O41550C1951O41583C1963O41522C1973O41674C1976O41681C1989O41699C1997O42769C2000O42776C2013O42801C2021O43560C2024O43567C2037O43583C2045O44455C2048O44462C2061O44492C2069O44970C2072O44977C2084O45000C2097O45024C2105O45342C2111O45367C2132O45391C2144O45431C2156O45342C2166O45478C2172O45506C2189O45532C2201O45567C2213O45478C2223O45609C2226O45616C2239O45639C2247O45885C2250O45892C2263O45906C2271O46009C2274O46016C2287O46032C2295O46140C2297O46195C2298O46195C2300O46202C2311O46225C2312O46225C2314O46249C2323O46957C2328O47229C2338O47271C2348O47309C2358O47326C2368O47585C2378O47614C2388O47625C2398O47647C2408O47663C2418O47681C2428O47691C2438O47701C2448O47719C2503O47244C2512O47746,,
tick,0x7ff81f29ed43,162237,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e5202531,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f195ac4,162268,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e5202531,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ef48,162287,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e5202531,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ef90,162305,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e5202531,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,162559,0x3ba9e520f226,5, node:internal/net:1:1,0x3ba9e520f060,~
script-source,119,node:internal/net,'use strict';\n\nconst {\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n} = primordials;\n\nconst Buffer = require('buffer').Buffer;\nconst { writeBuffer } = internalBinding('fs');\nconst errors = require('internal/errors');\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\nconst IPv6Reg = new RegExp('^(' +\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\n\nfunction isIPv4(s) {\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\n}\n\nfunction isIPv6(s) {\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\n}\n\nfunction isIP(s) {\n  if (isIPv4(s)) return 4;\n  if (isIPv6(s)) return 6;\n  return 0;\n}\n\nfunction makeSyncWrite(fd) {\n  return function(chunk\x2C enc\x2C cb) {\n    if (enc !== 'buffer')\n      chunk = Buffer.from(chunk\x2C enc);\n\n    this._handle.bytesWritten += chunk.length;\n\n    const ctx = {};\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\n    if (ctx.errno !== undefined) {\n      const ex = errors.uvException(ctx);\n      ex.errno = ctx.errno;\n      return cb(ex);\n    }\n    cb();\n  };\n}\n\nmodule.exports = {\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  makeSyncWrite\x2C\n  normalizedArgsSymbol: Symbol('normalizedArgs')\n};\n
code-source-info,0x3ba9e520f226,119,0,1749,C0O0C4O1749,,
code-creation,Function,10,162775,0x3ba9e520f616,617, node:internal/net:1:1,0x3ba9e520f1a0,~
code-source-info,0x3ba9e520f616,119,0,1749,C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O320C119O335C124O360C129O375C142O360C147O360C149O417C152O457C160O483C173O499C183O473C192O521C205O537C218O547C228O511C237O569C250O586C263O597C273O559C282O625C295O643C308O658C321O669C331O615C340O697C353O715C366O730C379O741C389O687C398O769C411O787C424O802C437O813C447O759C456O841C469O859C482O874C495O885C505O831C514O919C527O934C540O947C550O903C556O965C562O457C567O457C569O1633C576O1654C582O1662C588O1672C594O1682C601O1721C611O1648C616O1748,,
code-creation,Eval,10,163099,0x3ba9e5210e56,5, node:internal/dtrace:1:1,0x3ba9e5210d10,~
script-source,120,node:internal/dtrace,'use strict';\n\nconst config = internalBinding('config');\n\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\n  DTRACE_NET_STREAM_END = () => {}\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\n\nmodule.exports = {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\n  DTRACE_NET_SERVER_CONNECTION\x2C\n  DTRACE_NET_STREAM_END\n};\n
code-source-info,0x3ba9e5210e56,120,0,568,C0O0C4O568,,
code-creation,Function,10,163192,0x3ba9e521132e,140, node:internal/dtrace:1:1,0x3ba9e5210dd0,~
code-source-info,0x3ba9e521132e,120,0,568,C0O30C3O30C8O322C17O334C25O68C36O109C47O151C58O192C69O234C80O277C91O368C98O389C104O419C110O450C116O480C122O511C128O543C134O383C139O567,,
tick,0x108ade35f,163301,1,0x10843a650,6,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e5209e55,0x10dd44be3,0x10dd44865,0x3ba9e5202531,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,163466,0x3ba9e521232e,34,protoGetter node:net:718:21,0x3ba9e5206ff8,~
code-source-info,0x3ba9e521232e,118,18631,18771,C0O18652C8O18680C13O18691C20O18755C27O18652C33O18770,,
code-creation,Eval,10,164250,0x3ba9e521752e,5, node:dgram:1:1,0x3ba9e5216fc8,~
script-source,121,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MISSING_ARGS\x2C\n  ERR_SOCKET_ALREADY_BOUND\x2C\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n  ERR_SOCKET_BUFFER_SIZE\x2C\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  ERR_INVALID_FD_TYPE\n} = errors.codes;\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY }\x2C\n  UDP\x2C\n  SendWrap\n} = internalBinding('udp_wrap');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  if (!_cluster) _cluster = require('cluster');\n  return _cluster;\n}\n\nconst errnoException = errors.errnoException;\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\n\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    ipv6Only: options && options.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      signal.addEventListener('abort'\x2C onAborted);\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\n    }\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  // Todo: handle errors\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n  // Check if the udp handle was connected and set the state accordingly\n  if (isConnected(self))\n    state.connectState = CONNECT_STATE_CONNECTED;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      errCb(err);\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = errnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw errnoException(err\x2C 'open');\n\n    // Check if the udp handle was connected and set the state accordingly\n    if (isConnected(this))\n      state.connectState = CONNECT_STATE_CONNECTED;\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      if (!state.handle)\n        return; // Handle has been closed in the mean time\n\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw errnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\nfunction isConnected(self) {\n  try {\n    self.remoteAddress();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address && typeof address !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw errnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw errnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\n  )\x2C\n  createSocket\x2C\n  Socket\n};\n
code-source-info,0x3ba9e521752e,121,0,27485,C0O0C4O27485,,
code-creation,Function,10,166899,0x3ba9e521948e,1498, node:dgram:1:1,0x3ba9e52174a8,~
code-source-info,0x3ba9e521948e
tick,0x108599b44,167123,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e520253d,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f195a87,167154,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e520253d,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ef90,167173,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e520253d,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,167344,0x3ba9e521c8f6,5, node:internal/dgram:1:1,0x3ba9e521c6f0,~
script-source,122,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = internalBinding('util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst {\n  ERR_SOCKET_BAD_TYPE\x2C\n} = codes;\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\n};\n
code-source-info,0x3ba9e521c8f6,122,0,1849,C0O0C4O1849,,
code-creation,Function,10,167574,0x3ba9e521cbbe,196, node:internal/dgram:1:1,0x3ba9e521c870,~
code-source-info,0x3ba9e521cbbe,122,0,1849,C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C100O195C105O175C111O263C117O263C122O230C128O241C134O317C137O317C142O303C148O350C154O403C157O403C162O431C163O431C165O1776C172O1797C178O1813C184O1836C190O1791C195O1848,,
code-creation,Eval,10,167991,0x3ba9e52205ae,5, node:internal/socket_list:1:1,0x3ba9e5220458,~
script-source,123,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0x3ba9e52205ae,123,0,2705,C0O0C4O2705,,
code-creation,Function,10,168316,0x3ba9e5220bee,126, node:internal/socket_list:1:1,0x3ba9e5220528,~
code-source-info,0x3ba9e5220bee,123,0,2705,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C73O1525C101O2649C108O2668C114O2684C120O2664C125O2704,,
tick,0x7ff81f2bd0e6,168361,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e52025d8,0x10dd44be3,0x10dd44865,0x3ba9ddf3b79a,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9ddf399ee,0x3ba9ddf386db,0x3ba9ddf39028,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,168554,0x3ba9e52214c6,14,customPromiseExecFunction node:child_process:231:35,0x3ba9ddf3b0d8,~
code-source-info,0x3ba9e52214c6,116,6605,6969,C0O6605C9O6619C13O6967,,
code-creation,LazyCompile,10,168669,0x3ba9e52234fe,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x3ba96094f748,~
code-source-info,0x3ba9e52234fe,9,8231,8860,C0O8231C8O8249C14O8269C18O8276C19O8304C29O8304C34O8289C39O8352C42O8365C51O8396C53O8396C55O8426C62O8451C67O8426C72O8468C82O8468C87O8516C89O8568C102O8530C107O8528C111O8774C116O8781C121O8781C125O8805C130O8812C140O8812C146O8849C150O8856,,
code-creation,LazyCompile,10,168790,0x3ba9e5223876,40, node:internal/bootstrap/loaders:273:15,0x3ba9e52233f8,~
code-source-info,0x3ba9e5223876,9,8595,8700,C0O8608C5O8621C10O8621C14O8649C24O8670C27O8683C32O8649C39O8699,,
code-creation,LazyCompile,10,168860,0x3ba9e52239ce,89,syncExports node:internal/bootstrap/loaders:287:14,0x3ba96094f7b8,~
code-source-info,0x3ba9e52239ce,9,9167,9500,C0O9195C5O9220C11O9249C13O9262C17O9254C22O9304C24O9309C28O9322C30O9337C35O9352C37O9375C42O9382C51O9434C54O9446C59O9472C67O9434C73O9382C79O9271C84O9236C88O9499,,
code-creation,LazyCompile,10,168922,0x3ba9e5223b36,35,getOwn node:internal/bootstrap/loaders:180:16,0x3ba96094f450,~
code-source-info,0x3ba9e5223b36,9,5498,5652,C0O5534C5O5541C14O5595C26O5595C34O5650,,
code-creation,Function,11,169013,0x10dd461a0,672,syncExports node:internal/bootstrap/loaders:287:14,0x3ba96094f7b8,^
code-source-info,0x10dd461a0,9,9167,9500,,,
code-creation,Function,11,169051,0x10dd464a0,272,validateString node:internal/validators:117:24,0x3ba999219ef8,^
code-source-info,0x10dd464a0,17,3398,3507,,,
code-creation,Function,11,169083,0x10dd46620,548,internalBinding node:internal/bootstrap/loaders:164:45,0x3ba96094f378,^
code-source-info,0x10dd46620,9,5115,5353,,,
code-creation,Function,11,169121,0x10dd468c0,1344,deprecate node:internal/util:96:19,0x3ba960969c68,^
code-source-info,0x10dd468c0,12,2408,3584,,,
code-creation,Function,11,169149,0x10dd46e60,304,getOwn node:internal/bootstrap/loaders:180:16,0x3ba96094f450,^
code-source-info,0x10dd46e60,9,5498,5652,,,
code-creation,LazyCompile,10,169229,0x3ba9e5224046,18,5747 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92103,0x3ba9ddf34d70,~
code-source-info,0x3ba9e5224046,115,92177,92218,C0O92194C8O92204C12O92203C17O92217,,
code-creation,LazyCompile,10,169384,0x3ba9e522486e,11,get ReadStream node:fs:2984:17,0x3ba985fe1b50,~
code-source-info,0x3ba9e522486e,77,78936,78990,C0O78945C3O78945C6O78968C10O78986,,
code-creation,LazyCompile,10,169437,0x3ba9e522499e,71,lazyLoadStreams node:fs:2841:25,0x3ba985fe1a18,~
code-source-info,0x3ba9e522499e,77,76541,76708,C0O76548C6O76571C12O76602C17O76574C30O76586C43O76639C50O76654C56O76672C63O76688C70O76707,,
tick,0x1083563d0,169525,0,0x0,3,0x108a8eb80,0x3ba9e5224871,0x108e8e1df,0x10dd46f67,0x10dd463a1,0x3ba9e5223880,0x1083acaa0,0x3ba9e522358a,0x3ba9ddf39e1d,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e522404e,0x3ba9ddf386db,0x3ba9ddf39036,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,169891,0x3ba9e52251d6,5, node:internal/fs/streams:1:1,0x3ba9e5224e50,~
script-source,124,node:internal/fs/streams,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n  MathMin\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromisePrototypeThen\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst { deprecate } = require('internal/util');\nconst {\n  validateFunction\x2C\n  validateInteger\x2C\n} = require('internal/validators');\nconst { errorOrDestroy } = require('internal/streams/destroy');\nconst fs = require('fs');\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\nconst { Buffer } = require('buffer');\nconst {\n  copyObject\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  validatePath\x2C\n} = require('internal/fs/utils');\nconst { Readable\x2C Writable\x2C finished } = require('stream');\nconst { toPathIfFileURL } = require('internal/url');\nconst kIoDone = Symbol('kIoDone');\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\n\nconst kFs = Symbol('kFs');\nconst kHandle = Symbol('kHandle');\n\nfunction _construct(callback) {\n  const stream = this;\n  if (typeof stream.fd === 'number') {\n    callback();\n    return;\n  }\n\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\n    // Backwards compat for monkey patching open().\n    const orgEmit = stream.emit;\n    stream.emit = function(...args) {\n      if (args[0] === 'open') {\n        this.emit = orgEmit;\n        callback();\n        ReflectApply(orgEmit\x2C this\x2C args);\n      } else if (args[0] === 'error') {\n        this.emit = orgEmit;\n        callback(args[1]);\n      } else {\n        ReflectApply(orgEmit\x2C this\x2C args);\n      }\n    };\n    stream.open();\n  } else {\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\n      if (er) {\n        callback(er);\n      } else {\n        stream.fd = fd;\n        callback();\n        stream.emit('open'\x2C stream.fd);\n        stream.emit('ready');\n      }\n    });\n  }\n}\n\n// This generates an fs operations structure for a FileHandle\nconst FileHandleOperations = (handle) => {\n  return {\n    open: (path\x2C flags\x2C mode\x2C cb) => {\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\n    }\x2C\n    close: (fd\x2C cb) => {\n      handle[kUnref]();\n      PromisePrototypeThen(handle.close()\x2C\n                           () => cb()\x2C cb);\n    }\x2C\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\n                           (err) => cb(err\x2C 0\x2C buf));\n    }\x2C\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\n                           (err) => cb(err\x2C 0\x2C buffers));\n    }\n  };\n};\n\nfunction close(stream\x2C err\x2C cb) {\n  if (!stream.fd) {\n    // TODO(ronag)\n    // stream.closed = true;\n    cb(err);\n  } else {\n    stream[kFs].close(stream.fd\x2C (er) => {\n      stream.closed = true;\n      cb(er || err);\n    });\n    stream.fd = null;\n  }\n}\n\nfunction importFd(stream\x2C options) {\n  if (typeof options.fd === 'number') {\n    // When fd is a raw descriptor\x2C we must keep our fingers crossed\n    // that the descriptor won't get closed\x2C or worse\x2C replaced with\n    // another one\n    // https://github.com/nodejs/node/issues/35862\n    stream[kFs] = options.fs || fs;\n    return options.fd;\n  } else if (typeof options.fd === 'object' &&\n             options.fd instanceof FileHandle) {\n    // When fd is a FileHandle we can listen for 'close' events\n    if (options.fs) {\n      // FileHandle is not supported with custom fs operations\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\n    }\n    stream[kHandle] = options.fd;\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\n    stream[kHandle][kRef]();\n    options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\n    return options.fd.fd;\n  }\n\n  throw ERR_INVALID_ARG_TYPE('options.fd'\x2C\n                             ['number'\x2C 'FileHandle']\x2C options.fd);\n}\n\nfunction ReadStream(path\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(path\x2C options);\n\n  // A little bit bigger buffer and water marks by default\n  options = copyObject(getOptions(options\x2C {}));\n  if (options.highWaterMark === undefined)\n    options.highWaterMark = 64 * 1024;\n\n  if (options.autoDestroy === undefined) {\n    options.autoDestroy = false;\n  }\n\n  if (options.fd == null) {\n    this.fd = null;\n    this[kFs] = options.fs || fs;\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n    // Path will be ignored when fd is specified\x2C so it can be falsy\n    this.path = toPathIfFileURL(path);\n    this.flags = options.flags === undefined ? 'r' : options.flags;\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n    validatePath(this.path);\n  } else {\n    this.fd = getValidatedFd(importFd(this\x2C options));\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\n\n  if (options.autoDestroy) {\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\n  }\n\n  this.start = options.start;\n  this.end = options.end;\n  this.pos = undefined;\n  this.bytesRead = 0;\n  this.closed = false;\n  this[kIsPerformingIO] = false;\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n\n  if (this.end === undefined) {\n    this.end = Infinity;\n  } else if (this.end !== Infinity) {\n    validateInteger(this.end\x2C 'end'\x2C 0);\n\n    if (this.start !== undefined && this.start > this.end) {\n      throw new ERR_OUT_OF_RANGE(\n        'start'\x2C\n        `<= "end" (here: ${this.end})`\x2C\n        this.start\n      );\n    }\n  }\n\n  ReflectApply(Readable\x2C this\x2C [options]);\n}\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(ReadStream\x2C Readable);\n\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\n  get() {\n    return this._readableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._readableState.autoDestroy = val;\n  }\n});\n\nconst openReadFs = deprecate(function() {\n  // Noop.\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\nReadStream.prototype.open = openReadFs;\n\nReadStream.prototype._construct = _construct;\n\nReadStream.prototype._read = function(n) {\n  n = this.pos !== undefined ?\n    MathMin(this.end - this.pos + 1\x2C n) :\n    MathMin(this.end - this.bytesRead + 1\x2C n);\n\n  if (n <= 0) {\n    this.push(null);\n    return;\n  }\n\n  const buf = Buffer.allocUnsafeSlow(n);\n\n  this[kIsPerformingIO] = true;\n  this[kFs]\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\n      this[kIsPerformingIO] = false;\n\n      // Tell ._destroy() that it's safe to close the fd now.\n      if (this.destroyed) {\n        this.emit(kIoDone\x2C er);\n        return;\n      }\n\n      if (er) {\n        errorOrDestroy(this\x2C er);\n      } else if (bytesRead > 0) {\n        if (this.pos !== undefined) {\n          this.pos += bytesRead;\n        }\n\n        this.bytesRead += bytesRead;\n\n        if (bytesRead !== buf.length) {\n          // Slow path. Shrink to fit.\n          // Copy instead of slice so that we don't retain\n          // large backing buffer for small reads.\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\n          buf = dst;\n        }\n\n        this.push(buf);\n      } else {\n        this.push(null);\n      }\n    });\n};\n\nReadStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nReadStream.prototype.close = function(cb) {\n  if (typeof cb === 'function') finished(this\x2C cb);\n  this.destroy();\n};\n\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nfunction WriteStream(path\x2C options) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(path\x2C options);\n\n  options = copyObject(getOptions(options\x2C {}));\n\n  // Only buffers are supported.\n  options.decodeStrings = true;\n\n  if (options.fd == null) {\n    this.fd = null;\n    this[kFs] = options.fs || fs;\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\n\n    // Path will be ignored when fd is specified\x2C so it can be falsy\n    this.path = toPathIfFileURL(path);\n    this.flags = options.flags === undefined ? 'w' : options.flags;\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\n\n    validatePath(this.path);\n  } else {\n    this.fd = getValidatedFd(importFd(this\x2C options));\n  }\n\n  options.autoDestroy = options.autoClose === undefined ?\n    true : options.autoClose;\n\n  if (!this[kFs].write && !this[kFs].writev) {\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\n                                   this[kFs].write);\n  }\n\n  if (this[kFs].write) {\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\n  }\n\n  if (this[kFs].writev) {\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\n  }\n\n  if (options.autoDestroy) {\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\n  }\n\n  // It's enough to override either\x2C in which case only one will be used.\n  if (!this[kFs].write) {\n    this._write = null;\n  }\n  if (!this[kFs].writev) {\n    this._writev = null;\n  }\n\n  this.start = options.start;\n  this.pos = undefined;\n  this.bytesWritten = 0;\n  this.closed = false;\n  this[kIsPerformingIO] = false;\n\n\n  if (this.start !== undefined) {\n    validateInteger(this.start\x2C 'start'\x2C 0);\n\n    this.pos = this.start;\n  }\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n\n  if (options.encoding)\n    this.setDefaultEncoding(options.encoding);\n}\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(WriteStream\x2C Writable);\n\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\n  get() {\n    return this._writableState.autoDestroy;\n  }\x2C\n  set(val) {\n    this._writableState.autoDestroy = val;\n  }\n});\n\nconst openWriteFs = deprecate(function() {\n  // Noop.\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\nWriteStream.prototype.open = openWriteFs;\n\nWriteStream.prototype._construct = _construct;\n\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\n  this[kIsPerformingIO] = true;\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C data.length\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += data.length;\n};\n\nWriteStream.prototype._writev = function(data\x2C cb) {\n  const len = data.length;\n  const chunks = new Array(len);\n  let size = 0;\n\n  for (let i = 0; i < len; i++) {\n    const chunk = data[i].chunk;\n\n    chunks[i] = chunk;\n    size += chunk.length;\n  }\n\n  this[kIsPerformingIO] = true;\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytes) => {\n    this[kIsPerformingIO] = false;\n    if (this.destroyed) {\n      // Tell ._destroy() that it's safe to close the fd now.\n      cb(er);\n      return this.emit(kIoDone\x2C er);\n    }\n\n    if (er) {\n      return cb(er);\n    }\n\n    this.bytesWritten += bytes;\n    cb();\n  });\n\n  if (this.pos !== undefined)\n    this.pos += size;\n};\n\nWriteStream.prototype._destroy = function(err\x2C cb) {\n  // Usually for async IO it is safe to close a file descriptor\n  // even when there are pending operations. However\x2C due to platform\n  // differences file IO is implemented using synchronous operations\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\n  // to close while used in a pending read or write operation. Wait for\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\n  if (this[kIsPerformingIO]) {\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\n  } else {\n    close(this\x2C err\x2C cb);\n  }\n};\n\nWriteStream.prototype.close = function(cb) {\n  if (cb) {\n    if (this.closed) {\n      process.nextTick(cb);\n      return;\n    }\n    this.on('close'\x2C cb);\n  }\n\n  // If we are not autoClosing\x2C we should call\n  // destroy on 'finish'.\n  if (!this.autoClose) {\n    this.on('finish'\x2C this.destroy);\n  }\n\n  // We use end() instead of destroy() because of\n  // https://github.com/nodejs/node/issues/2006\n  this.end();\n};\n\n// There is no shutdown() for files.\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\n\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\n  get() { return this.fd === null; }\x2C\n  configurable: true\n});\n\nmodule.exports = {\n  ReadStream\x2C\n  WriteStream\n};\n
code-source-info,0x3ba9e52251d6,124,0,13266,C0O0C4O13266,,
code-creation,Function,10,171192,0x3ba9e5225e7e,866, node:internal/fs/streams:1:1,0x3ba9e5225150,~
code-source-info,0x3ba9e5225e7e
tick,0x7ff81f29ef95,171361,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e52249aa,0x3ba9e5224871,0x108e8e1df,0x10dd46f67,0x10dd463a1,0x3ba9e5223880,0x1083acaa0,0x3ba9e522358a,0x3ba9ddf39e1d,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e522404e,0x3ba9ddf386db,0x3ba9ddf39036,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,171493,0x3ba9e52279ce,11,get WriteStream node:fs:2993:18,0x3ba985fe1c30,~
code-source-info,0x3ba9e52279ce,77,79062,79117,C0O79071C3O79071C6O79094C10O79113,,
code-creation,LazyCompile,10,171542,0x3ba9e5227ade,11,get FileReadStream node:fs:3004:21,0x3ba985fe1d10,~
code-source-info,0x3ba9e5227ade,77,79327,79385,C0O79336C3O79336C6O79359C10O79381,,
code-creation,LazyCompile,10,171582,0x3ba9e5227bee,11,get FileWriteStream node:fs:3013:22,0x3ba985fe1e00,~
code-source-info,0x3ba9e5227bee,77,79469,79528,C0O79478C3O79478C6O79501C10O79524,,
code-creation,LazyCompile,10,171630,0x3ba9e5227ce6,35,get node:fs:3039:8,0x3ba985fe1ef0,~
code-source-info,0x3ba9e5227ce6,77,80024,80146,C0O80035C6O80066C12O80077C17O80108C24O80075C30O80124C34O80140,,
code-creation,LazyCompile,10,171735,0x3ba9e5227e16,119,n /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:83329,0x3ba9ddf38d00,~
code-source-info,0x3ba9e5227e16,115,83403,83553,C0O83407C4O83415C10O83426C12O83435C13O83441C15O83444C20O83468C33O83463C46O83463C47O83470C52O83479C58O83485C62O83492C67O83502C72O83517C77O83517C97O83528C105O83455C108O83537C111O83544C118O83552,,
code-creation,LazyCompile,10,171839,0x3ba9e52280d6,57,s /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:82996,0x3ba9ddf38bb8,~
code-source-info,0x3ba9e52280d6,115,83070,83169,C0O83070C13O83080C22O83098C26O83105C31O83122C36O83143C50O83105C56O83168,,
tick,0x10895dfe1,172085,0,0x0,0,0x1085f1ee0,0x3ba9e5228108,0x3ba9e5227e77,0x3ba9ddf3903b,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,172119,0x3ba9e5228dde,33,o /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:83200,0x3ba9ddf38c60,~
code-source-info,0x3ba9e5228dde,115,83274,83339,C0O83280C4O83287C12O83302C19O83335C26O83287C32O83338,,
code-creation,LazyCompile,10,172205,0x3ba9e5228ee6,18,7012 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92249,0x3ba9ddf34f08,~
code-source-info,0x3ba9e5228ee6,115,92323,92371,C0O92340C8O92350C12O92349C17O92370,,
code-creation,Eval,10,172455,0x3ba9e52295ce,5, node:inspector:1:1,0x3ba9e52292f8,~
script-source,125,node:inspector,'use strict';\n\nconst {\n  JSONParse\x2C\n  JSONStringify\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ERR_INSPECTOR_ALREADY_ACTIVATED\x2C\n  ERR_INSPECTOR_ALREADY_CONNECTED\x2C\n  ERR_INSPECTOR_CLOSED\x2C\n  ERR_INSPECTOR_COMMAND\x2C\n  ERR_INSPECTOR_NOT_AVAILABLE\x2C\n  ERR_INSPECTOR_NOT_CONNECTED\x2C\n  ERR_INSPECTOR_NOT_ACTIVE\x2C\n  ERR_INSPECTOR_NOT_WORKER\x2C\n} = require('internal/errors').codes;\n\nconst { hasInspector } = internalBinding('config');\nif (!hasInspector)\n  throw new ERR_INSPECTOR_NOT_AVAILABLE();\n\nconst EventEmitter = require('events');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst {\n  validateCallback\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst { isMainThread } = require('worker_threads');\n\nconst {\n  Connection\x2C\n  MainThreadConnection\x2C\n  open\x2C\n  url\x2C\n  isEnabled\x2C\n  waitForDebugger\n} = internalBinding('inspector');\n\nconst connectionSymbol = Symbol('connectionProperty');\nconst messageCallbacksSymbol = Symbol('messageCallbacks');\nconst nextIdSymbol = Symbol('nextId');\nconst onMessageSymbol = Symbol('onMessage');\n\nclass Session extends EventEmitter {\n  constructor() {\n    super();\n    this[connectionSymbol] = null;\n    this[nextIdSymbol] = 1;\n    this[messageCallbacksSymbol] = new SafeMap();\n  }\n\n  connect() {\n    if (this[connectionSymbol])\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\n    this[connectionSymbol] =\n      new Connection((message) => this[onMessageSymbol](message));\n  }\n\n  connectToMainThread() {\n    if (isMainThread)\n      throw new ERR_INSPECTOR_NOT_WORKER();\n    if (this[connectionSymbol])\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\n    this[connectionSymbol] =\n      new MainThreadConnection(\n        (message) => queueMicrotask(() => this[onMessageSymbol](message)));\n  }\n\n  [onMessageSymbol](message) {\n    const parsed = JSONParse(message);\n    try {\n      if (parsed.id) {\n        const callback = this[messageCallbacksSymbol].get(parsed.id);\n        this[messageCallbacksSymbol].delete(parsed.id);\n        if (callback) {\n          if (parsed.error) {\n            return callback(new ERR_INSPECTOR_COMMAND(parsed.error.code\x2C\n                                                      parsed.error.message));\n          }\n\n          callback(null\x2C parsed.result);\n        }\n      } else {\n        this.emit(parsed.method\x2C parsed);\n        this.emit('inspectorNotification'\x2C parsed);\n      }\n    } catch (error) {\n      process.emitWarning(error);\n    }\n  }\n\n  post(method\x2C params\x2C callback) {\n    validateString(method\x2C 'method');\n    if (!callback && typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n    if (params) {\n      validateObject(params\x2C 'params');\n    }\n    if (callback) {\n      validateCallback(callback);\n    }\n\n    if (!this[connectionSymbol]) {\n      throw new ERR_INSPECTOR_NOT_CONNECTED();\n    }\n    const id = this[nextIdSymbol]++;\n    const message = { id\x2C method };\n    if (params) {\n      message.params = params;\n    }\n    if (callback) {\n      this[messageCallbacksSymbol].set(id\x2C callback);\n    }\n    this[connectionSymbol].dispatch(JSONStringify(message));\n  }\n\n  disconnect() {\n    if (!this[connectionSymbol])\n      return;\n    this[connectionSymbol].disconnect();\n    this[connectionSymbol] = null;\n    const remainingCallbacks = this[messageCallbacksSymbol].values();\n    for (const callback of remainingCallbacks) {\n      process.nextTick(callback\x2C new ERR_INSPECTOR_CLOSED());\n    }\n    this[messageCallbacksSymbol].clear();\n    this[nextIdSymbol] = 1;\n  }\n}\n\nfunction inspectorOpen(port\x2C host\x2C wait) {\n  if (isEnabled()) {\n    throw new ERR_INSPECTOR_ALREADY_ACTIVATED();\n  }\n  open(port\x2C host);\n  if (wait)\n    waitForDebugger();\n}\n\nfunction inspectorWaitForDebugger() {\n  if (!waitForDebugger())\n    throw new ERR_INSPECTOR_NOT_ACTIVE();\n}\n\nmodule.exports = {\n  open: inspectorOpen\x2C\n  close: process._debugEnd\x2C\n  url: url\x2C\n  waitForDebugger: inspectorWaitForDebugger\x2C\n  // This is dynamically added during bootstrap\x2C\n  // where the console from the VM is still available\n  console: require('internal/util/inspector').consoleFromVM\x2C\n  Session\n};\n
code-source-info,0x3ba9e52295ce,125,0,4164,C0O0C4O4164,,
code-creation,Function,10,172883,0x3ba9e5229e56,457, node:inspector:1:1,0x3ba9e5229548,~
code-source-info,0x3ba9e5229e56,125,0,4164,C0O0C91O25C97O38C103O55C109O66C114O341C117O341C122O367C127O102C133O137C139O172C145O196C151O221C156O252C162O283C168O311C174O401C177O401C182O384C187O428C189O449C191O455C196O449C197O512C200O512C205O558C208O558C213O539C219O667C222O667C227O609C233O629C239O647C245O724C248O724C253O707C259O848C262O848C267O762C273O776C279O800C285O808C290O815C296O828C302O904C305O904C309O904C311O965C314O965C318O965C320O1014C323O1014C327O1014C329O1056C332O1056C336O1056C338O1100C356O1828C393O3860C400O3887C407O3919C417O3937C423O3961C430O4101C435O4135C445O4153C451O3875C456O4163,,
code-creation,Eval,10,173092,0x3ba9e522aa86,5, node:worker_threads:1:1,0x3ba9e522a940,~
script-source,126,node:worker_threads,'use strict';\n\nconst {\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  threadId\x2C\n  Worker\n} = require('internal/worker');\n\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  BroadcastChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable\x2C\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  resourceLimits\x2C\n  threadId\x2C\n  SHARE_ENV\x2C\n  Worker\x2C\n  parentPort: null\x2C\n  workerData: null\x2C\n  BroadcastChannel\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n};\n
code-source-info,0x3ba9e522aa86,126,0,686,C0O0C4O686,,
code-creation,Function,10,173199,0x3ba9e522ac96,180, node:worker_threads:1:1,0x3ba9e522aa00,~
code-source-info,0x3ba9e522ac96,126,0,686,C0O139C3O139C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O285C46O285C51O178C56O193C61O211C66O239C71O263C76O353C79O353C84O327C89O382C96O403C102O419C108O434C114O452C120O476C126O504C132O528C138O546C144O558C150O571C156O621C162O641C168O663C174O397C179O685,,
tick,0x108a205e4,173375,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e522ac99,0x10dd44be3,0x10dd44865,0x3ba9e5229f4e,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e5228eee,0x3ba9ddf386db,0x3ba9ddf39049,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,173750,0x3ba9e522bbfe,5, node:internal/worker:1:1,0x3ba9e522b620,~
script-source,127,node:internal/worker,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  JSONStringify\x2C\n  MathMax\x2C\n  ObjectCreate\x2C\n  ObjectEntries\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst assert = require('internal/assert');\nconst path = require('path');\nconst { now } = require('internal/perf/utils');\n\nconst errorCodes = require('internal/errors').codes;\nconst {\n  ERR_WORKER_NOT_RUNNING\x2C\n  ERR_WORKER_PATH\x2C\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = errorCodes;\nconst { getOptionValue } = require('internal/options');\n\nconst workerIo = require('internal/worker/io');\nconst {\n  drainMessagePort\x2C\n  MessageChannel\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\n} = workerIo;\nconst { deserializeError } = require('internal/error_serdes');\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\nconst { validateArray } = require('internal/validators');\n\nconst {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  resourceLimits: resourceLimitsRaw\x2C\n  threadId\x2C\n  Worker: WorkerImpl\x2C\n  kMaxYoungGenerationSizeMb\x2C\n  kMaxOldGenerationSizeMb\x2C\n  kCodeRangeSizeMb\x2C\n  kStackSizeMb\x2C\n  kTotalResourceLimitCount\n} = internalBinding('worker');\n\nconst kHandle = Symbol('kHandle');\nconst kPublicPort = Symbol('kPublicPort');\nconst kDispose = Symbol('kDispose');\nconst kOnExit = Symbol('kOnExit');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\nconst kParentSideStdio = Symbol('kParentSideStdio');\nconst kLoopStartTime = Symbol('kLoopStartTime');\nconst kIsOnline = Symbol('kIsOnline');\n\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\n  debug = fn;\n});\n\nlet cwdCounter;\n\nconst environmentData = new SafeMap();\n\nif (isMainThread) {\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\n  const originalChdir = process.chdir;\n  process.chdir = function(path) {\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\n    originalChdir(path);\n  };\n}\n\nfunction setEnvironmentData(key\x2C value) {\n  if (value === undefined)\n    environmentData.delete(key);\n  else\n    environmentData.set(key\x2C value);\n}\n\nfunction getEnvironmentData(key) {\n  return environmentData.get(key);\n}\n\nfunction assignEnvironmentData(data) {\n  if (data === undefined) return;\n  data.forEach((value\x2C key) => {\n    environmentData.set(key\x2C value);\n  });\n}\n\nclass Worker extends EventEmitter {\n  constructor(filename\x2C options = {}) {\n    super();\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\n    if (options.execArgv)\n      validateArray(options.execArgv\x2C 'options.execArgv');\n\n    let argv;\n    if (options.argv) {\n      validateArray(options.argv\x2C 'options.argv');\n      argv = ArrayPrototypeMap(options.argv\x2C String);\n    }\n\n    let url\x2C doEval;\n    if (options.eval) {\n      if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.eval'\x2C\n          options.eval\x2C\n          'must be false when \\'filename\\' is not a string'\n        );\n      }\n      url = null;\n      doEval = 'classic';\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\n      url = null;\n      doEval = 'module';\n      filename = `import ${JSONStringify(`${filename}`)}`;\n    } else {\n      doEval = false;\n      if (isURLInstance(filename)) {\n        url = filename;\n        filename = fileURLToPath(filename);\n      } else if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE(\n          'filename'\x2C\n          ['string'\x2C 'URL']\x2C\n          filename\n        );\n      } else if (path.isAbsolute(filename) ||\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\n        filename = path.resolve(filename);\n        url = pathToFileURL(filename);\n      } else {\n        throw new ERR_WORKER_PATH(filename);\n      }\n    }\n\n    let env;\n    if (typeof options.env === 'object' && options.env !== null) {\n      env = ObjectCreate(null);\n      ArrayPrototypeForEach(\n        ObjectEntries(options.env)\x2C\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\n      );\n    } else if (options.env == null) {\n      env = process.env;\n    } else if (options.env !== SHARE_ENV) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.env'\x2C\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\n        options.env);\n    }\n\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\n    this[kHandle] = new WorkerImpl(url\x2C\n                                   env === process.env ? null : env\x2C\n                                   options.execArgv\x2C\n                                   parseResourceLimits(options.resourceLimits)\x2C\n                                   !!(options.trackUnmanagedFds ?? true));\n    if (this[kHandle].invalidExecArgv) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\n    }\n    if (this[kHandle].invalidNodeOptions) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\n    }\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\n    };\n    this[kPort] = this[kHandle].messagePort;\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\n    this[kPort].start();\n    this[kPort].unref();\n    this[kPort][kWaitingStreams] = 0;\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\n\n    let stdin = null;\n    if (options.stdin)\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\n    if (!options.stdout) {\n      stdout[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stdout\x2C process.stdout);\n    }\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\n    if (!options.stderr) {\n      stderr[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stderr\x2C process.stderr);\n    }\n\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\n\n    const { port1\x2C port2 } = new MessageChannel();\n    const transferList = [port2];\n    // If transferList is provided.\n    if (options.transferList)\n      ArrayPrototypePush(transferList\x2C\n                         ...new SafeArrayIterator(options.transferList));\n\n    this[kPublicPort] = port1;\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\n    });\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\n    this[kPort].postMessage({\n      argv\x2C\n      type: messageTypes.LOAD_SCRIPT\x2C\n      filename\x2C\n      doEval\x2C\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\n      workerData: options.workerData\x2C\n      environmentData\x2C\n      publicPort: port2\x2C\n      manifestURL: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').url :\n        null\x2C\n      manifestSrc: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').src :\n        null\x2C\n      hasStdin: !!options.stdin\n    }\x2C transferList);\n    // Use this to cache the Worker's loopStart value once available.\n    this[kLoopStartTime] = -1;\n    this[kIsOnline] = false;\n    this.performance = {\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\n    };\n    // Actually start the new thread now that everything is in place.\n    this[kHandle].startThread();\n\n    process.nextTick(() => process.emit('worker'\x2C this));\n  }\n\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\n    drainMessagePort(this[kPublicPort]);\n    drainMessagePort(this[kPort]);\n    this.removeAllListeners('message');\n    this.removeAllListeners('messageerrors');\n    this[kPublicPort].unref();\n    this[kPort].unref();\n    this[kDispose]();\n    if (customErr) {\n      debug(`[${threadId}] failing with custom error ${customErr} \\\n        and with reason ${customErrReason}`);\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\n    }\n    this.emit('exit'\x2C code);\n    this.removeAllListeners();\n  }\n\n  [kOnCouldNotSerializeErr]() {\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\n  }\n\n  [kOnErrorMessage](serialized) {\n    // This is what is called for uncaught exceptions.\n    const error = deserializeError(serialized);\n    this.emit('error'\x2C error);\n  }\n\n  [kOnMessage](message) {\n    switch (message.type) {\n      case messageTypes.UP_AND_RUNNING:\n        this[kIsOnline] = true;\n        return this.emit('online');\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\n        return this[kOnCouldNotSerializeErr]();\n      case messageTypes.ERROR_MESSAGE:\n        return this[kOnErrorMessage](message.error);\n      case messageTypes.STDIO_PAYLOAD:\n      {\n        const { stream\x2C chunks } = message;\n        const readable = this[kParentSideStdio][stream];\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\n          readable.push(chunk\x2C encoding);\n        });\n        return;\n      }\n      case messageTypes.STDIO_WANTS_MORE_DATA:\n      {\n        const { stream } = message;\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\n      }\n    }\n\n    assert.fail(`Unknown worker message type ${message.type}`);\n  }\n\n  [kDispose]() {\n    this[kHandle].onexit = null;\n    this[kHandle] = null;\n    this[kPort] = null;\n    this[kPublicPort] = null;\n\n    const { stdout\x2C stderr } = this[kParentSideStdio];\n\n    if (!stdout.readableEnded) {\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\n      stdout.push(null);\n    }\n    if (!stderr.readableEnded) {\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\n      stderr.push(null);\n    }\n  }\n\n  postMessage(...args) {\n    if (this[kPublicPort] === null) return;\n\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\n  }\n\n  terminate(callback) {\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\n\n    this.ref();\n\n    if (typeof callback === 'function') {\n      process.emitWarning(\n        'Passing a callback to worker.terminate() is deprecated. ' +\n        'It returns a Promise instead.'\x2C\n        'DeprecationWarning'\x2C 'DEP0132');\n      if (this[kHandle] === null) return PromiseResolve();\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\n    }\n\n    if (this[kHandle] === null) return PromiseResolve();\n\n    this[kHandle].stopThread();\n\n    // Do not use events.once() here\x2C because the 'exit' event will always be\n    // emitted regardless of any errors\x2C and the point is to only resolve\n    // once the thread has actually stopped.\n    return new Promise((resolve) => {\n      this.once('exit'\x2C resolve);\n    });\n  }\n\n  ref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].ref();\n    this[kPublicPort].ref();\n  }\n\n  unref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].unref();\n    this[kPublicPort].unref();\n  }\n\n  get threadId() {\n    if (this[kHandle] === null) return -1;\n\n    return this[kHandle].threadId;\n  }\n\n  get stdin() {\n    return this[kParentSideStdio].stdin;\n  }\n\n  get stdout() {\n    return this[kParentSideStdio].stdout;\n  }\n\n  get stderr() {\n    return this[kParentSideStdio].stderr;\n  }\n\n  get resourceLimits() {\n    if (this[kHandle] === null) return {};\n\n    return makeResourceLimits(this[kHandle].getResourceLimits());\n  }\n\n  getHeapSnapshot() {\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\n    return new Promise((resolve\x2C reject) => {\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\n      heapSnapshotTaker.ondone = (handle) => {\n        const { HeapSnapshotStream } = require('internal/heap_utils');\n        resolve(new HeapSnapshotStream(handle));\n      };\n    });\n  }\n}\n\nfunction pipeWithoutWarning(source\x2C dest) {\n  const sourceMaxListeners = source._maxListeners;\n  const destMaxListeners = dest._maxListeners;\n  source.setMaxListeners(Infinity);\n  dest.setMaxListeners(Infinity);\n\n  source.pipe(dest);\n\n  source._maxListeners = sourceMaxListeners;\n  dest._maxListeners = destMaxListeners;\n}\n\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\nfunction parseResourceLimits(obj) {\n  const ret = resourceLimitsArray;\n  TypedArrayPrototypeFill(ret\x2C -1);\n  if (typeof obj !== 'object' || obj === null) return ret;\n\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\n  if (typeof obj.codeRangeSizeMb === 'number')\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\n  if (typeof obj.stackSizeMb === 'number')\n    ret[kStackSizeMb] = obj.stackSizeMb;\n  return ret;\n}\n\nfunction makeResourceLimits(float64arr) {\n  return {\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\n    stackSizeMb: float64arr[kStackSizeMb]\n  };\n}\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\n  // has had a chance to turn. So it will be impossible to read the ELU of\n  // a worker thread immediately after it's been created.\n  if (!this[kIsOnline] || !this[kHandle]) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  // Cache loopStart\x2C since it's only written to once.\n  if (this[kLoopStartTime] === -1) {\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\n    if (this[kLoopStartTime] === -1)\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  if (util2) {\n    const idle = util1.idle - util2.idle;\n    const active = util1.active - util2.active;\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  const idle = this[kHandle].loopIdleTime();\n\n  // Using performance.now() here is fine since it's always the time from\n  // the beginning of the process\x2C and is why it needs to be offset by the\n  // loopStart time (which is also calculated from the beginning of the\n  // process).\n  const active = now() - this[kLoopStartTime] - idle;\n\n  if (!util1) {\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  const idle_delta = idle - util1.idle;\n  const active_delta = active - util1.active;\n  const utilization = active_delta / (idle_delta + active_delta);\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\n}\n\nmodule.exports = {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits:\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  assignEnvironmentData\x2C\n  threadId\x2C\n  Worker\x2C\n};\n
code-source-info,0x3ba9e522bbfe,127,0,15348,C0O0C4O15348,,
code-creation,Function,10,175228,0x3ba9e522cf4e,1185, node:internal/worker:1:1,0x3ba9e522bb78,~
code-source-info,0x3ba9e522cf4e
tick,0x7ff81f29eeda,175400,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e522ac99,0x10dd44be3,0x10dd44865,0x3ba9e5229f4e,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e5228eee,0x3ba9ddf386db,0x3ba9ddf39049,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,175646,0x3ba9e522ee76,5, node:internal/error_serdes:1:1,0x3ba9e522ebb0,~
script-source,128,node:internal/error_serdes,'use strict';\n\nconst Buffer = require('buffer').Buffer;\nconst {\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  EvalError\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  RangeError\x2C\n  ReferenceError\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kSerializedError = 0;\nconst kSerializedObject = 1;\nconst kInspectedError = 2;\n\nconst errors = {\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\n};\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\n\nfunction TryGetAllProperties(object\x2C target = object) {\n  const all = ObjectCreate(null);\n  if (object === null)\n    return all;\n  ObjectAssign(all\x2C\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\n  const keys = ObjectGetOwnPropertyNames(object);\n  ArrayPrototypeForEach(keys\x2C (key) => {\n    let descriptor;\n    try {\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\n    } catch { return; }\n    const getter = descriptor.get;\n    if (getter && key !== '__proto__') {\n      try {\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\n      } catch {}\n    }\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\n      delete descriptor.get;\n      delete descriptor.set;\n      all[key] = descriptor;\n    }\n  });\n  return all;\n}\n\nfunction GetConstructors(object) {\n  const constructors = [];\n\n  for (let current = object;\n    current !== null;\n    current = ObjectGetPrototypeOf(current)) {\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\n    if (desc && desc.value) {\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\n        value: desc.value\x2C enumerable: true\n      });\n    }\n  }\n\n  return constructors;\n}\n\nfunction GetName(object) {\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\n  return desc && desc.value;\n}\n\nlet internalUtilInspect;\nfunction inspect(...args) {\n  if (!internalUtilInspect) {\n    internalUtilInspect = require('internal/util/inspect');\n  }\n  return internalUtilInspect.inspect(...args);\n}\n\nlet serialize;\nfunction serializeError(error) {\n  if (!serialize) serialize = require('v8').serialize;\n  try {\n    if (typeof error === 'object' &&\n        ObjectPrototypeToString(error) === '[object Error]') {\n      const constructors = GetConstructors(error);\n      for (let i = 0; i < constructors.length; i++) {\n        const name = GetName(constructors[i]);\n        if (errorConstructorNames.has(name)) {\n          const serialized = serialize({\n            constructor: name\x2C\n            properties: TryGetAllProperties(error)\n          });\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\n        }\n      }\n    }\n  } catch {}\n  try {\n    const serialized = serialize(error);\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\n  } catch {}\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\n}\n\nlet deserialize;\nfunction deserializeError(error) {\n  if (!deserialize) deserialize = require('v8').deserialize;\n  switch (error[0]) {\n    case kSerializedError:\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\n      const ctor = errors[constructor];\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\n        value: { value: 'Error'\x2C configurable: true }\x2C\n        enumerable: true\n      });\n      return ObjectCreate(ctor.prototype\x2C properties);\n    case kSerializedObject:\n      return deserialize(error.subarray(1));\n    case kInspectedError:\n      const buf = Buffer.from(error.buffer\x2C\n                              error.byteOffset + 1\x2C\n                              error.byteLength - 1);\n      return buf.toString('utf8');\n  }\n  require('assert').fail('This should not happen');\n}\n\nmodule.exports = { serializeError\x2C deserializeError };\n
code-source-info,0x3ba9e522ee76,128,0,4030,C0O0C4O4030,,
code-creation,Function,10,176077,0x3ba9e522f296,335, node:internal/error_serdes:1:1,0x3ba9e522edf0,~
code-source-info,0x3ba9e522f296,128,0,4030,C0O0C100O30C106O30C111O47C115O30C117O66C123O91C128O100C133O113C139O138C145O154C151O170C157O194C163O228C169O257C175O281C180O295C186O322C191O336C196O354C201O365C207O386C212O401C217O414C222O467C223O467C225O496C227O496C229O523C231O523C233O542C240O546C246O553C252O564C258O576C264O586C270O599C276O615C282O542C284O658C287O670C294O658C299O658C301O2038C302O2038C304O2235C305O2235C307O3156C308O3156C310O3975C317O3994C323O4010C329O3990C334O4029,,
tick,0x7ff81f195a05,176179,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e522d1a9,0x10dd44be3,0x10dd44865,0x3ba9e522ac99,0x10dd44be3,0x10dd44865,0x3ba9e5229f4e,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e5228eee,0x3ba9ddf386db,0x3ba9ddf39049,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,176342,0x3ba9e5230246,5,get consoleFromVM node:internal/util/inspector:69:20,0x3ba95c90d4f0,~
script-source,32,node:internal/util/inspector,'use strict';\n\nconst {\n  ArrayPrototypeConcat\x2C\n  FunctionPrototypeBind\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n} = primordials;\n\nlet session;\nfunction sendInspectorCommand(cb\x2C onError) {\n  const { hasInspector } = internalBinding('config');\n  if (!hasInspector) return onError();\n  const inspector = require('inspector');\n  if (session === undefined) session = new inspector.Session();\n  session.connect();\n  try {\n    return cb(session);\n  } finally {\n    session.disconnect();\n  }\n}\n\n// Create a special require function for the inspector command line API\nfunction installConsoleExtensions(commandLineApi) {\n  if (commandLineApi.require) { return; }\n  const { tryGetCwd } = require('internal/process/execution');\n  const CJSModule = require('internal/modules/cjs/loader').Module;\n  const { makeRequireFunction } = require('internal/modules/cjs/helpers');\n  const consoleAPIModule = new CJSModule('<inspector console>');\n  const cwd = tryGetCwd();\n  consoleAPIModule.paths = ArrayPrototypeConcat(\n    CJSModule._nodeModulePaths(cwd)\x2C\n    CJSModule.globalPaths\n  );\n  commandLineApi.require = makeRequireFunction(consoleAPIModule);\n}\n\n// Wrap a console implemented by Node.js with features from the VM inspector\nfunction wrapConsole(consoleFromNode\x2C consoleFromVM) {\n  const { consoleCall } = internalBinding('inspector');\n  for (const key of ObjectKeys(consoleFromVM)) {\n    // If global console has the same method as inspector console\x2C\n    // then wrap these two methods into one. Native wrapper will preserve\n    // the original stack.\n    if (consoleFromNode.hasOwnProperty(key)) {\n      consoleFromNode[key] = FunctionPrototypeBind(\n        consoleCall\x2C\n        consoleFromNode\x2C\n        consoleFromVM[key]\x2C\n        consoleFromNode[key]\n      );\n      ObjectDefineProperty(consoleFromNode[key]\x2C 'name'\x2C {\n        value: key\n      });\n    } else {\n      // Add additional console APIs from the inspector\n      consoleFromNode[key] = consoleFromVM[key];\n    }\n  }\n}\n\n// Stores the console from VM\x2C should be set during bootstrap.\nlet consoleFromVM;\nmodule.exports = {\n  installConsoleExtensions\x2C\n  sendInspectorCommand\x2C\n  wrapConsole\x2C\n  get consoleFromVM() {\n    return consoleFromVM;\n  }\x2C\n  set consoleFromVM(val) {\n    consoleFromVM = val;\n  }\n};\n
code-source-info,0x3ba9e5230246,32,2156,2190,C0O2165C4O2186,,
code-creation,LazyCompile,10,176841,0x3ba9e52310ce,260,8586 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:37,0x3ba9ddf330a0,~
code-source-info,0x3ba9e52310ce,115,111,2566,C0O111C23O142C28O142C32O142C34O152C39O152C43O152C45O162C50O162C54O162C56O172C61O172C65O172C67O182C71O182C73O204C77O204C79O819C84O826C91O829C95O838C105O859C110O868C116O858C123O888C127O893C134O1079C138O1089C145O1398C149O1409C156O1573C160O1579C167O1696C171O1703C178O1822C182O1827C189O1962C193O1971C200O2123C204O2131C211O2155C215O2161C222O2183C226O2190C233O2296C237O2304C244O2432C248O2445C254O2563C259O2565,,
code-creation,LazyCompile,10,176939,0x3ba9e5231546,18,1669 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92594,0x3ba9ddf352c0,~
code-source-info,0x3ba9e5231546,115,92668,92711,C0O92685C8O92695C12O92694C17O92710,,
code-creation,LazyCompile,10,177118,0x3ba9e5231cf6,133,3610 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:2498,0x3ba9ddf33128,~
code-source-info,0x3ba9e5231cf6,115,2572,3257,C0O2572C20O2603C25O2603C29O2603C31O2613C36O2613C40O2613C42O2623C47O2623C51O2623C53O2633C58O2633C62O2633C64O2643C68O2643C70O2855C77O2862C84O2880C88O2891C95O2941C99O2950C106O3007C110O3015C117O3160C121O3168C127O3254C132O3256,,
code-creation,LazyCompile,10,177221,0x3ba9e5232006,29,5226 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:8954,0x3ba9ddf333d0,~
code-source-info,0x3ba9e5232006,115,9028,9346,C0O9028C8O9059C13O9059C17O9059C19O9067C23O9076C28O9345,,
code-creation,LazyCompile,10,177360,0x3ba9e52326be,110,3991 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:9278,0x3ba9ddf33458,~
code-source-info,0x3ba9e52326be,115,9352,10347,C0O9352C9O9373C16O9384C23O9490C27O9496C34O9534C38O9548C45O9642C49O9654C56O9792C60O9806C67O9874C71O9890C78O10016C82O10031C89O10096C93O10104C100O10201C104O10210C109O10346,,
tick,0x108a1f6ac,177436,0,0x0,2,0x108a8eb80,0x3ba9ddf386db,0x3ba9e5232013,0x3ba9ddf386db,0x3ba9e5231d0f,0x3ba9ddf386db,0x3ba9e52310f5,0x3ba9ddf386db,0x3ba9ddf3905c,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,177493,0x3ba9e5232c4e,43,7104 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:3189,0x3ba9ddf331b0,~
code-source-info,0x3ba9e5232c4e,115,3263,3919,C0O3263C11O3294C16O3294C20O3294C22O3304C27O3304C31O3304C33O3312C37O3321C42O3918,,
code-creation,LazyCompile,10,177718,0x3ba9e523322e,140,8459 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:10279,0x3ba9ddf334e0,~
code-source-info,0x3ba9e523322e,115,10353,13041,C0O10353C44O10384C49O10384C53O10384C55O10394C60O10394C64O10394C66O10404C70O10404C72O10457C76O10457C78O10509C82O10509C84O10535C88O10535C90O10638C94O10638C96O10754C100O10754C102O10852C106O10852C108O10980C112O10980C114O11112C118O11112C120O11182C124O11182C126O11242C130O11242C132O13029C134O13038C139O13040,,
code-creation,LazyCompile,10,177965,0x3ba9e5233b76,115,5109 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:33844,0x3ba9ddf33920,~
code-source-info,0x3ba9e5233b76,115,33918,36613,C0O33918C71O33949C76O33949C80O33949C82O33958C86O33958C88O36562C92O36569C99O36573C103O36585C109O36610C114O36612,,
code-creation,LazyCompile,10,178056,0x3ba9e5233ef6,10,535 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:12972,0x3ba9ddf33568,~
code-source-info,0x3ba9e5233ef6,115,13046,13204,C0O13063C4O13072C9O13203,,
code-creation,LazyCompile,10,178222,0x3ba9e5234306,66,5341 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:4822,0x3ba9ddf332c0,~
code-source-info,0x3ba9e5234306,115,4896,6273,C0O4896C17O4927C22O4927C26O4927C28O4937C33O4937C37O4937C39O4947C44O4947C48O4947C50O4957C54O4957C56O5280C60O5289C65O6272,,
code-creation,LazyCompile,10,178426,0x3ba9e5234756,174,8707 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:6205,0x3ba9ddf33348,~
code-source-info,0x3ba9e5234756,115,6279,9022,C0O6279C53O6310C58O6310C62O6310C64O6637C69O6637C74O6330C80O6347C86O6363C92O6376C98O6387C104O6411C110O6436C116O6460C122O6485C128O6512C134O6540C140O6560C146O6580C152O6602C158O6634C164O6645C168O6654C173O9021,,
code-creation,LazyCompile,10,178528,0x3ba9e5234c36,10,7874 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:3851,0x3ba9ddf33238,~
code-source-info,0x3ba9e5234c36,115,3925,4890,C0O3942C4O3951C9O4889,,
tick,0x1086e8cd4,178642,0,0x0,0,0x108a989a0,0x3ba9e5234c36,0x3ba9ddf386db,0x3ba9e523479b,0x3ba9ddf386db,0x3ba9e5231d30,0x3ba9ddf386db,0x3ba9e52310f5,0x3ba9ddf386db,0x3ba9ddf3905c,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,178678,0x3ba9e5234ec6,15,1147 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:13136,0x3ba9ddf335f0,~
code-source-info,0x3ba9e5234ec6,115,13210,13251,C0O13233C5O13243C9O13242C14O13250,,
code-creation,LazyCompile,10,178904,0x3ba9e5235516,185,3148 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:27650,0x3ba9ddf33788,~
code-source-info,0x3ba9e5235516,115,27724,29961,C0O27724C20O27755C25O27755C29O27755C31O27765C36O27765C40O27765C42O27775C47O27775C51O27775C53O27784C58O27784C62O27784C64O27794C69O27794C74O27804C78O27804C80O28688C87O28694C94O29084C98O29095C105O29180C109O29189C116O29209C120O29216C127O29291C131O29297C138O29312C142O29323C149O29544C153O29552C160O29802C164O29811C173O29946C179O29958C184O29960,,
code-creation,LazyCompile,10,178991,0x3ba9e5235836,18,5622 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92398,0x3ba9ddf350a0,~
code-source-info,0x3ba9e5235836,115,92472,92515,C0O92489C8O92499C12O92498C17O92514,,
code-creation,LazyCompile,10,179248,0x3ba9e5235dee,192,9488 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:29893,0x3ba9ddf33810,~
code-source-info,0x3ba9e5235dee,115,29967,32892,C0O29967C59O29998C64O29998C68O29998C70O30311C75O30311C80O30021C86O30031C92O30053C98O30066C104O30077C110O30101C116O30122C122O30146C128O30170C134O30197C140O30209C146O30230C152O30255C158O30280C164O30308C170O30321C174O30321C176O30339C180O30339C182O30390C186O30399C191O32891,,
code-creation,LazyCompile,10,179399,0x3ba9e52367be,211,9451 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:32824,0x3ba9ddf33898,~
code-source-info,0x3ba9e52367be,115,32898,33912,C0O32898C27O32929C32O32929C36O32929C38O32939C41O32949C45O32957C49O32946C52O32939C54O33062C59O33062C64O32983C70O33008C76O33030C82O33059C88O33070C95O33080C102O33132C106O33147C113O33161C117O33174C124O33211C128O33224C135O33248C139O33264C146O33285C150O33304C157O33340C161O33361C168O33473C172O33484C179O33550C183O33562C190O33685C194O33699C201O33778C205O33790C210O33911,,
code-creation,LazyCompile,10,179480,0x3ba9e5236b46,5,get node:internal/bootstrap/pre_execution:315:8,0x3ba9c5adcc78,~
code-source-info,0x3ba9e5236b46,92,10116,10149,C0O10127C4O10143,,
code-creation,LazyCompile,10,179655,0x3ba9e523750e,240,2819 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:13183,0x3ba9ddf33678,~
code-source-info,0x3ba9e523750e,115,13257,15766,C0O13257C11O13288C16O13288C21O13298C24O13320C31O13462C40O13504C59O13566C75O13320C77O13636C87O13656C93O13672C99O13688C105O13712C111O13743C117O13761C123O13815C129O13857C135O13898C141O13923C147O13950C153O13636C155O13967C160O14309C168O14358C176O14406C184O14454C192O14501C200O14547C208O15501C216O15518C224O15751C234O13976C239O15765,,
tick,0x108dd1478,179931,0,0x0,0,0x3ba9e5235e9e,0x3ba9ddf386db,0x3ba9e523553a,0x3ba9ddf386db,0x3ba9e5234ecb,0x3ba9ddf386db,0x3ba9e5231100,0x3ba9ddf386db,0x3ba9ddf3905c,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,180452,0x3ba9e5237ca6,120,688 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:15697,0x3ba9ddf33700,~
code-source-info,0x3ba9e5237ca6,115,15771,27718,C0O15771C32O15802C37O15802C41O15802C43O15812C48O15812C52O15812C54O15927C57O15832C63O15853C69O15879C75O15909C81O15924C87O15931C91O15931C93O16126C97O16126C99O16203C104O26640C108O26651C114O27715C119O27717,,
code-creation,LazyCompile,10,180577,0x3ba9e5238476,28,i /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:83518,0x3ba9ddf38d50,~
code-source-info,0x3ba9e5238476,115,83592,83633,C0O83596C4O83608C14O83619C21O83630C27O83632,,
code-creation,LazyCompile,10,180742,0x3ba9e52389ee,133,9140 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:77754,0x3ba9ddf342c8,~
code-source-info,0x3ba9e52389ee,115,77828,78820,C0O77828C14O77851C18O77858C26O77873C34O77858C41O77938C47O77918C51O77954C56O77954C60O77954C62O77964C67O77964C71O77964C73O77978C78O77978C82O77978C84O77986C88O77993C96O78008C101O78049C112O77993C117O78090C121O78108C125O78316C129O78316C132O78819,,
code-creation,LazyCompile,10,180837,0x3ba9e5238cd6,40,7999 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:82475,0x3ba9ddf344e8,~
code-source-info,0x3ba9e5238cd6,115,82549,82699,C0O82570C4O82577C12O82592C20O82577C26O82634C30O82642C34O82657C39O82698,,
code-creation,LazyCompile,10,180986,0x3ba9e52395c6,305,7551 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:75730,0x3ba9ddf341a0,~
code-source-info,0x3ba9e52395c6,115,75804,77822,C0O75804C27O75831C31O75842C37O75860C41O75867C57O75831C59O76032C63O76043C69O76064C73O76071C89O76032C91O76182C95O76193C106O76366C110O76373C121O76388C126O76373C151O76538C157O76523C163O76510C169O76490C175O76467C181O76438C185O76554C190O76556C195O76554C199O76554C201O76567C206O76569C211O76567C215O76567C217O76580C222O76580C226O76580C228O76590C233O76590C237O76590C239O76933C246O76947C253O77197C257O77209C266O77296C273O77299C277O77321C284O77420C288O77448C295O77560C299O77583C304O77821,,
code-creation,LazyCompile,10,181092,0x3ba9e5239a26,18,1631 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92303,0x3ba9ddf34f90,~
code-source-info,0x3ba9e5239a26,115,92377,92419,C0O92394C8O92404C12O92403C17O92418,,
tick,0x108ebf816,181197,0,0x0,0,0x3ba9ddf107ba,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e5239a2e,0x3ba9ddf386db,0x3ba9e5239684,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,181232,0x3ba9e5239d16,37,get BlockList node:net:1779:16,0x3ba9e5208f28,~
code-source-info,0x3ba9e5239d16,118,47366,47455,C0O47375C14O47389C19O47418C26O47385C32O47434C36O47451,,
code-creation,Eval,10,181480,0x3ba9e523a1e6,5, node:internal/blocklist:1:1,0x3ba9e523a000,~
script-source,129,node:internal/blocklist,'use strict';\n\nconst {\n  Boolean\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\n} = primordials;\n\nconst {\n  BlockList: BlockListHandle\x2C\n} = internalBinding('block_list');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst {\n  SocketAddress\x2C\n  kHandle: kSocketAddressHandle\x2C\n} = require('internal/socketaddress');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst kHandle = Symbol('kHandle');\nconst { owner_symbol } = internalBinding('symbols');\n\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\n\nconst { validateInt32\x2C validateString } = require('internal/validators');\n\nclass BlockList extends JSTransferable {\n  constructor() {\n    super();\n    this[kHandle] = new BlockListHandle();\n    this[kHandle][owner_symbol] = this;\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `BlockList ${inspect({\n      rules: this.rules\n    }\x2C opts)}`;\n  }\n\n  addAddress(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      address = new SocketAddress({\n        address\x2C\n        family\x2C\n      });\n    }\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\n  }\n\n  addRange(start\x2C end\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(start)) {\n      validateString(start\x2C 'start');\n      validateString(family\x2C 'family');\n      start = new SocketAddress({\n        address: start\x2C\n        family\x2C\n      });\n    }\n    if (!SocketAddress.isSocketAddress(end)) {\n      validateString(end\x2C 'end');\n      validateString(family\x2C 'family');\n      end = new SocketAddress({\n        address: end\x2C\n        family\x2C\n      });\n    }\n    const ret = this[kHandle].addRange(\n      start[kSocketAddressHandle]\x2C\n      end[kSocketAddressHandle]);\n    if (ret === false)\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\n  }\n\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(network)) {\n      validateString(network\x2C 'network');\n      validateString(family\x2C 'family');\n      network = new SocketAddress({\n        address: network\x2C\n        family\x2C\n      });\n    }\n    switch (network.family) {\n      case 'ipv4':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\n        break;\n      case 'ipv6':\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\n        break;\n    }\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\n  }\n\n  check(address\x2C family = 'ipv4') {\n    if (!SocketAddress.isSocketAddress(address)) {\n      validateString(address\x2C 'address');\n      validateString(family\x2C 'family');\n      try {\n        address = new SocketAddress({\n          address\x2C\n          family\x2C\n        });\n      } catch {\n        // Ignore the error. If it's not a valid address\x2C return false.\n        return false;\n      }\n    }\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\n  }\n\n  get rules() {\n    return this[kHandle].getRules();\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kHandle][owner_symbol] = this;\n  }\n}\n\nclass InternalBlockList extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n    if (handle !== undefined)\n      handle[owner_symbol] = this;\n  }\n}\n\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\n\nmodule.exports = {\n  BlockList\x2C\n  InternalBlockList\x2C\n};\n
code-source-info,0x3ba9e523a1e6,129,0,3877,C0O0C4O3877,,
code-creation,Function,10,181894,0x3ba9e523abee,359, node:internal/blocklist:1:1,0x3ba9e523a160,~
code-source-info,0x3ba9e523abee,129,0,3877,C0O0C35O25C41O36C46O60C51O127C54O127C59O106C65O204C68O204C73O190C78O293C81O293C86O241C92O267C98O385C101O385C106O339C111O357C116O367C121O450C124O450C129O438C135O501C138O501C142O501C144O545C147O545C152O528C158O611C161O611C166O637C171O584C177O688C180O688C185O654C191O669C197O745C204O884C241O3223C251O3384C278O3519C301O3691C306O3725C311O3735C315O3713C319O3787C324O3808C329O3748C334O3821C341O3842C347O3855C353O3836C358O3876,,
code-creation,Eval,10,182235,0x3ba9e523c4be,5, node:internal/socketaddress:1:1,0x3ba9e523c2c8,~
script-source,130,node:internal/socketaddress,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  SocketAddress: _SocketAddress\x2C\n  AF_INET\x2C\n  AF_INET6\x2C\n} = internalBinding('block_list');\n\nconst {\n  validateObject\x2C\n  validateString\x2C\n  validatePort\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst kHandle = Symbol('kHandle');\nconst kDetail = Symbol('kDetail');\n\nclass SocketAddress extends JSTransferable {\n  static isSocketAddress(value) {\n    return value?.[kHandle] !== undefined;\n  }\n\n  constructor(options = {}) {\n    super();\n    validateObject(options\x2C 'options');\n    let { family = 'ipv4' } = options;\n    const {\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\n      port = 0\x2C\n      flowlabel = 0\x2C\n    } = options;\n\n    let type;\n    if (typeof family?.toLowerCase === 'function')\n      family = family.toLowerCase();\n    switch (family) {\n      case 'ipv4':\n        type = AF_INET;\n        break;\n      case 'ipv6':\n        type = AF_INET6;\n        break;\n      default:\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\n    }\n\n    validateString(address\x2C 'options.address');\n    validatePort(port\x2C 'options.port');\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\n\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\n    this[kDetail] = this[kHandle].detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  get address() {\n    return this[kDetail].address;\n  }\n\n  get port() {\n    return this[kDetail].port;\n  }\n\n  get family() {\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\n  }\n\n  get flowlabel() {\n    // The flow label can be changed internally.\n    return this[kHandle].flowlabel();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n    this[kDetail] = handle.detail({\n      address: undefined\x2C\n      port: undefined\x2C\n      family: undefined\x2C\n      flowlabel: undefined\x2C\n    });\n  }\n\n  toJSON() {\n    return {\n      address: this.address\x2C\n      port: this.port\x2C\n      family: this.family\x2C\n      flowlabel: this.flowlabel\x2C\n    };\n  }\n}\n\nclass InternalSocketAddress extends JSTransferable {\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nInternalSocketAddress.prototype.constructor =\n  SocketAddress.prototype.constructor;\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\n\nmodule.exports = {\n  SocketAddress\x2C\n  InternalSocketAddress\x2C\n  kHandle\x2C\n};\n
code-source-info,0x3ba9e523c4be,130,0,3207,C0O0C4O3207,,
code-creation,Function,10,182613,0x3ba9e523cfe6,366, node:internal/socketaddress:1:1,0x3ba9e523c438,~
code-source-info,0x3ba9e523cfe6,130,0,3207,C0O0C38O25C43O49C48O143C51O143C56O100C62O118C68O129C74O257C77O257C82O185C88O203C94O221C100O237C106O345C109O345C114O345C119O313C125O419C128O419C133O405C138O466C141O466C146O454C152O557C155O557C160O511C165O529C170O539C175O618C178O618C182O618C184O653C187O653C191O653C193O701C226O2071C236O2313C246O2482C279O2877C302O2988C307O3028C312O3038C316O3010C320O3094C325O3119C330O3051C335O3132C342O3153C348O3170C354O3195C360O3147C365O3206,,
tick,0x7ff81f29ef90,182718,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9e523ac3f,0x10dd44be3,0x10dd44865,0x3ba9e5239d24,0x108e8e1df,0x10dd46f67,0x10dd463a1,0x3ba9e5223880,0x1083acaa0,0x3ba9e522358a,0x3ba9ddf39e1d,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9e5239a2e,0x3ba9ddf386db,0x3ba9e5239684,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,182814,0x3ba9e523da3e,37,get SocketAddress node:net:1783:20,0x3ba9e5208fa0,~
code-source-info,0x3ba9e523da3e,118,47476,47581,C0O47485C14O47503C19O47536C26O47499C32O47556C36O47577,,
code-creation,LazyCompile,10,182904,0x3ba9e523db6e,119,n /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:76141,0x3ba9e5239168,~
code-source-info,0x3ba9e523db6e,115,76215,76365,C0O76219C4O76227C10O76238C12O76247C13O76253C15O76256C20O76280C33O76275C46O76275C47O76282C52O76291C58O76297C62O76304C67O76314C72O76329C77O76329C97O76340C105O76267C108O76349C111O76356C118O76364,,
code-creation,LazyCompile,10,182992,0x3ba9e523de2e,57,s /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:75808,0x3ba9e5239020,~
code-source-info,0x3ba9e523de2e,115,75882,75981,C0O75882C13O75892C22O75910C26O75917C31O75934C36O75955C50O75917C56O75980,,
code-creation,Function,11,183101,0x10dd47000,480,s /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:75808,0x3ba9e5239020,^
code-source-info,0x10dd47000,115,75882,75981,,,
code-creation,Function,11,183145,0x10dd47240,480,s /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:82996,0x3ba9ddf38bb8,^
code-source-info,0x10dd47240,115,83070,83169,,,
code-creation,Function,11,183189,0x10dd47480,920,n /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:83329,0x3ba9ddf38d00,^
code-source-info,0x10dd47480,115,83403,83553,,,
code-creation,Function,11,183222,0x10dd47880,40,noop node:internal/util/debuglog:47:14,0x3ba95c93aa28,^
code-source-info,0x10dd47880,40,1419,1427,,,
code-creation,Function,11,183255,0x10dd47920,1020,debuglog node:internal/util/debuglog:71:18,0x3ba95c93aac8,^
code-source-info,0x10dd47920,40,2232,3279,,,
code-creation,Function,11,183284,0x10dd47d80,460,__webpack_require__ /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92803,0x3ba9ddf33050,^
code-source-info,0x10dd47d80,115,92877,93081,,,
code-creation,LazyCompile,10,183372,0x3ba9e523e5d6,33,o /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:76012,0x3ba9e52390c8,~
code-source-info,0x3ba9e523e5d6,115,76086,76151,C0O76092C4O76099C12O76114C19O76147C26O76099C32O76150,,
code-creation,LazyCompile,10,183466,0x3ba9e523e6f6,68,8681 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:36545,0x3ba9ddf339a8,~
code-source-info,0x3ba9e523e6f6,115,36619,36753,C0O36650C5O36650C10O36658C15O36682C19O36681C26O36699C30O36698C39O36716C43O36715C52O36733C56O36732C62O36750C67O36752,,
tick,0x1089ce931,183753,0,0x0,2,0x108a8eb80,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9f09c0000,262144
code-creation,LazyCompile,10,184001,0x3ba9f09c16e6,614,2982 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:63282,0x3ba9ddf34008,~
code-source-info,0x3ba9f09c16e
code-creation,LazyCompile,10,184111,0x3ba9f09c1f3e,18,8614 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92052,0x3ba9ddf34ce8,~
code-source-info,0x3ba9f09c1f3e,115,92126,92171,C0O92143C8O92153C12O92152C17O92170,,
code-creation,LazyCompile,10,184209,0x3ba9f09c224e,16,get node:events:98:6,0x3ba960972500,~
code-source-info,0x3ba9f09c224e,13,2894,2947,C0O2903C3O2923C10O2933C12O2932C15O2943,,
code-creation,LazyCompile,10,184253,0x3ba9f09c2336,5,get node:events:133:16,0x3ba960972640,~
code-source-info,0x3ba9f09c2336,13,3823,3863,C0O3832C4O3859,,
code-creation,LazyCompile,10,184308,0x3ba9f09c23fe,18,7211 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92199,0x3ba9ddf34e80,~
code-source-info,0x3ba9f09c23fe,115,92273,92317,C0O92290C8O92300C12O92299C17O92316,,
code-creation,Eval,10,184605,0x3ba9f09c2ad6,5, node:https:1:1,0x3ba9f09c2830,~
script-source,131,node:https,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  FunctionPrototypeCall\x2C\n  JSONStringify\x2C\n  ObjectAssign\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nrequire('internal/util').assertCrypto();\n\nconst tls = require('tls');\nconst { Agent: HttpAgent } = require('_http_agent');\nconst {\n  Server: HttpServer\x2C\n  storeHTTPOptions\x2C\n  _connectionListener\x2C\n} = require('_http_server');\nconst { ClientRequest } = require('_http_client');\nlet debug = require('internal/util/debuglog').debuglog('https'\x2C (fn) => {\n  debug = fn;\n});\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\n\nfunction Server(opts\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(opts\x2C requestListener);\n\n  if (typeof opts === 'function') {\n    requestListener = opts;\n    opts = undefined;\n  }\n  opts = { ...opts };\n\n  if (!opts.ALPNProtocols) {\n    // http/1.0 is not defined as Protocol IDs in IANA\n    // https://www.iana.org/assignments/tls-extensiontype-values\n    //       /tls-extensiontype-values.xhtml#alpn-protocol-ids\n    opts.ALPNProtocols = ['http/1.1'];\n  }\n\n  FunctionPrototypeCall(storeHTTPOptions\x2C this\x2C opts);\n  FunctionPrototypeCall(tls.Server\x2C this\x2C opts\x2C _connectionListener);\n\n  this.httpAllowHalfOpen = false;\n\n  if (requestListener) {\n    this.addListener('request'\x2C requestListener);\n  }\n\n  this.addListener('tlsClientError'\x2C function addListener(err\x2C conn) {\n    if (!this.emit('clientError'\x2C err\x2C conn))\n      conn.destroy(err);\n  });\n\n  this.timeout = 0;\n  this.keepAliveTimeout = 5000;\n  this.maxHeadersCount = null;\n  this.headersTimeout = 60 * 1000; // 60 seconds\n  this.requestTimeout = 0;\n}\nObjectSetPrototypeOf(Server.prototype\x2C tls.Server.prototype);\nObjectSetPrototypeOf(Server\x2C tls.Server);\n\nServer.prototype.setTimeout = HttpServer.prototype.setTimeout;\n\n/**\n * Creates a new `https.Server` instance.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n\n// HTTPS agents.\n\nfunction createConnection(port\x2C host\x2C options) {\n  if (port !== null && typeof port === 'object') {\n    options = port;\n  } else if (host !== null && typeof host === 'object') {\n    options = { ...host };\n  } else if (options === null || typeof options !== 'object') {\n    options = {};\n  } else {\n    options = { ...options };\n  }\n\n  if (typeof port === 'number') {\n    options.port = port;\n  }\n\n  if (typeof host === 'string') {\n    options.host = host;\n  }\n\n  debug('createConnection'\x2C options);\n\n  if (options._agentKey) {\n    const session = this._getSession(options._agentKey);\n    if (session) {\n      debug('reuse session for %j'\x2C options._agentKey);\n      options = {\n        session\x2C\n        ...options\n      };\n    }\n  }\n\n  const socket = tls.connect(options);\n\n  if (options._agentKey) {\n    // Cache new session for reuse\n    socket.on('session'\x2C (session) => {\n      this._cacheSession(options._agentKey\x2C session);\n    });\n\n    // Evict session on error\n    socket.once('close'\x2C (err) => {\n      if (err)\n        this._evictSession(options._agentKey);\n    });\n  }\n\n  return socket;\n}\n\n/**\n * Creates a new `HttpAgent` instance.\n * @param {{\n *   keepAlive?: boolean;\n *   keepAliveMsecs?: number;\n *   maxSockets?: number;\n *   maxTotalSockets?: number;\n *   maxFreeSockets?: number;\n *   scheduling?: string;\n *   timeout?: number;\n *   maxCachedSessions?: number;\n *   servername?: string;\n *   }} [options]\n * @returns {Agent}\n */\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  FunctionPrototypeCall(HttpAgent\x2C this\x2C options);\n  this.defaultPort = 443;\n  this.protocol = 'https:';\n  this.maxCachedSessions = this.options.maxCachedSessions;\n  if (this.maxCachedSessions === undefined)\n    this.maxCachedSessions = 100;\n\n  this._sessionCache = {\n    map: {}\x2C\n    list: []\n  };\n}\nObjectSetPrototypeOf(Agent.prototype\x2C HttpAgent.prototype);\nObjectSetPrototypeOf(Agent\x2C HttpAgent);\nAgent.prototype.createConnection = createConnection;\n\n/**\n * Gets a unique name for a set of options.\n * @param {{\n *   host: string;\n *   port: number;\n *   localAddress: string;\n *   family: number;\n *   }} [options]\n * @returns {string}\n */\nAgent.prototype.getName = function getName(options) {\n  let name = FunctionPrototypeCall(HttpAgent.prototype.getName\x2C this\x2C options);\n\n  name += ':';\n  if (options.ca)\n    name += options.ca;\n\n  name += ':';\n  if (options.cert)\n    name += options.cert;\n\n  name += ':';\n  if (options.clientCertEngine)\n    name += options.clientCertEngine;\n\n  name += ':';\n  if (options.ciphers)\n    name += options.ciphers;\n\n  name += ':';\n  if (options.key)\n    name += options.key;\n\n  name += ':';\n  if (options.pfx)\n    name += options.pfx;\n\n  name += ':';\n  if (options.rejectUnauthorized !== undefined)\n    name += options.rejectUnauthorized;\n\n  name += ':';\n  if (options.servername && options.servername !== options.host)\n    name += options.servername;\n\n  name += ':';\n  if (options.minVersion)\n    name += options.minVersion;\n\n  name += ':';\n  if (options.maxVersion)\n    name += options.maxVersion;\n\n  name += ':';\n  if (options.secureProtocol)\n    name += options.secureProtocol;\n\n  name += ':';\n  if (options.crl)\n    name += options.crl;\n\n  name += ':';\n  if (options.honorCipherOrder !== undefined)\n    name += options.honorCipherOrder;\n\n  name += ':';\n  if (options.ecdhCurve)\n    name += options.ecdhCurve;\n\n  name += ':';\n  if (options.dhparam)\n    name += options.dhparam;\n\n  name += ':';\n  if (options.secureOptions !== undefined)\n    name += options.secureOptions;\n\n  name += ':';\n  if (options.sessionIdContext)\n    name += options.sessionIdContext;\n\n  name += ':';\n  if (options.sigalgs)\n    name += JSONStringify(options.sigalgs);\n\n  name += ':';\n  if (options.privateKeyIdentifier)\n    name += options.privateKeyIdentifier;\n\n  name += ':';\n  if (options.privateKeyEngine)\n    name += options.privateKeyEngine;\n\n  return name;\n};\n\nAgent.prototype._getSession = function _getSession(key) {\n  return this._sessionCache.map[key];\n};\n\nAgent.prototype._cacheSession = function _cacheSession(key\x2C session) {\n  // Cache is disabled\n  if (this.maxCachedSessions === 0)\n    return;\n\n  // Fast case - update existing entry\n  if (this._sessionCache.map[key]) {\n    this._sessionCache.map[key] = session;\n    return;\n  }\n\n  // Put new entry\n  if (this._sessionCache.list.length >= this.maxCachedSessions) {\n    const oldKey = ArrayPrototypeShift(this._sessionCache.list);\n    debug('evicting %j'\x2C oldKey);\n    delete this._sessionCache.map[oldKey];\n  }\n\n  ArrayPrototypePush(this._sessionCache.list\x2C key);\n  this._sessionCache.map[key] = session;\n};\n\nAgent.prototype._evictSession = function _evictSession(key) {\n  const index = ArrayPrototypeIndexOf(this._sessionCache.list\x2C key);\n  if (index === -1)\n    return;\n\n  ArrayPrototypeSplice(this._sessionCache.list\x2C index\x2C 1);\n  delete this._sessionCache.map[key];\n};\n\nconst globalAgent = new Agent();\n\n/**\n * Makes a request to a secure web server.\n * @param {...any} args\n * @returns {ClientRequest}\n */\nfunction request(...args) {\n  let options = {};\n\n  if (typeof args[0] === 'string') {\n    const urlStr = ArrayPrototypeShift(args);\n    options = urlToHttpOptions(new URL(urlStr));\n  } else if (args[0] && args[0][searchParamsSymbol] &&\n             args[0][searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    options = urlToHttpOptions(ArrayPrototypeShift(args));\n  }\n\n  if (args[0] && typeof args[0] !== 'function') {\n    ObjectAssign(options\x2C ArrayPrototypeShift(args));\n  }\n\n  options._defaultAgent = module.exports.globalAgent;\n  ArrayPrototypeUnshift(args\x2C options);\n\n  return ReflectConstruct(ClientRequest\x2C args);\n}\n\n/**\n * Makes a GET request to a secure web server.\n * @param {string | URL} input\n * @param {{\n *   agent?: Agent | boolean;\n *   auth?: string;\n *   createConnection?: Function;\n *   defaultPort?: number;\n *   family?: number;\n *   headers?: Object;\n *   hints?: number;\n *   host?: string;\n *   hostname?: string;\n *   insecureHTTPParser?: boolean;\n *   localAddress?: string;\n *   localPort?: number;\n *   lookup?: Function;\n *   maxHeaderSize?: number;\n *   method?: string;\n *   path?: string;\n *   port?: number;\n *   protocol?: string;\n *   setHost?: boolean;\n *   socketPath?: string;\n *   timeout?: number;\n *   signal?: AbortSignal;\n *   } | string | URL} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(input\x2C options\x2C cb) {\n  const req = request(input\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent\x2C\n  Server\x2C\n  createServer\x2C\n  get\x2C\n  request\n};\n
code-source-info,0x3ba9f09c2ad6,131,0,10048,C0O0C4O10048,,
code-creation,Function,10,185600,0x3ba9f09c3106,523, node:https:1:1,0x3ba9f09c2a50,~
code-source-info,0x3ba9f09c
tick,0x7ff81f29e96a,185718,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,185761,0x3ba9f09c4316,19,assertCrypto node:internal/util:152:22,0x3ba960969ea8,~
code-source-info,0x3ba9f09c4316,12,3948,4001,C0O3955C6O3973C11O3979C16O3973C18O4000,,
code-creation,Eval,10,186092,0x3ba9f09c5076,5, node:tls:1:1,0x3ba9f09c4d00,~
script-source,132,node:tls,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  RegExpPrototypeTest\x2C\n  StringFromCharCode\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst {\n  ERR_TLS_CERT_ALTNAME_INVALID\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst internalUtil = require('internal/util');\ninternalUtil.assertCrypto();\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst net = require('net');\nconst { getOptionValue } = require('internal/options');\nconst { getRootCertificates\x2C getSSLCiphers } = internalBinding('crypto');\nconst { Buffer } = require('buffer');\nconst { URL } = require('internal/url');\nconst { canonicalizeIP } = internalBinding('cares_wrap');\nconst _tls_common = require('_tls_common');\nconst _tls_wrap = require('_tls_wrap');\nconst { createSecurePair } = require('internal/tls/secure-pair');\nconst { parseCertString } = require('internal/tls/parse-cert-string');\n\n// Allow {CLIENT_RENEG_LIMIT} client-initiated session renegotiations\n// every {CLIENT_RENEG_WINDOW} seconds. An error event is emitted if more\n// renegotiations are seen. The settings are applied to all remote client\n// connections.\nexports.CLIENT_RENEG_LIMIT = 3;\nexports.CLIENT_RENEG_WINDOW = 600;\n\nexports.DEFAULT_CIPHERS = getOptionValue('--tls-cipher-list');\n\nexports.DEFAULT_ECDH_CURVE = 'auto';\n\nif (getOptionValue('--tls-min-v1.0'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1';\nelse if (getOptionValue('--tls-min-v1.1'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.1';\nelse if (getOptionValue('--tls-min-v1.2'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\nelse if (getOptionValue('--tls-min-v1.3'))\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.3';\nelse\n  exports.DEFAULT_MIN_VERSION = 'TLSv1.2';\n\nif (getOptionValue('--tls-max-v1.3'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3';\nelse if (getOptionValue('--tls-max-v1.2'))\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.2';\nelse\n  exports.DEFAULT_MAX_VERSION = 'TLSv1.3'; // Will depend on node version.\n\n\nexports.getCiphers = internalUtil.cachedResult(\n  () => internalUtil.filterDuplicateStrings(getSSLCiphers()\x2C true)\n);\n\nlet rootCertificates;\n\nfunction cacheRootCertificates() {\n  rootCertificates = ObjectFreeze(getRootCertificates());\n}\n\nObjectDefineProperty(exports\x2C 'rootCertificates'\x2C {\n  configurable: false\x2C\n  enumerable: true\x2C\n  get: () => {\n    // Out-of-line caching to promote inlining the getter.\n    if (!rootCertificates) cacheRootCertificates();\n    return rootCertificates;\n  }\x2C\n});\n\n// Convert protocols array into valid OpenSSL protocols list\n// ("\\x06spdy/2\\x08http/1.1\\x08http/1.0")\nfunction convertProtocols(protocols) {\n  const lens = new Array(protocols.length);\n  const buff = Buffer.allocUnsafe(ArrayPrototypeReduce(protocols\x2C (p\x2C c\x2C i) => {\n    const len = Buffer.byteLength(c);\n    if (len > 255) {\n      throw new ERR_OUT_OF_RANGE('The byte length of the protocol at index ' +\n        `${i} exceeds the maximum length.`\x2C '<= 255'\x2C len\x2C true);\n    }\n    lens[i] = len;\n    return p + 1 + len;\n  }\x2C 0));\n\n  let offset = 0;\n  for (let i = 0\x2C c = protocols.length; i < c; i++) {\n    buff[offset++] = lens[i];\n    buff.write(protocols[i]\x2C offset);\n    offset += lens[i];\n  }\n\n  return buff;\n}\n\nexports.convertALPNProtocols = function convertALPNProtocols(protocols\x2C out) {\n  // If protocols is Array - translate it into buffer\n  if (ArrayIsArray(protocols)) {\n    out.ALPNProtocols = convertProtocols(protocols);\n  } else if (isArrayBufferView(protocols)) {\n    // Copy new buffer not to be modified by user.\n    out.ALPNProtocols = Buffer.from(protocols);\n  }\n};\n\nfunction unfqdn(host) {\n  return StringPrototypeReplace(host\x2C /[.]$/\x2C '');\n}\n\n// String#toLowerCase() is locale-sensitive so we use\n// a conservative version that only lowercases A-Z.\nfunction toLowerCase(c) {\n  return StringFromCharCode(32 + StringPrototypeCharCodeAt(c\x2C 0));\n}\n\nfunction splitHost(host) {\n  return StringPrototypeSplit(\n    StringPrototypeReplace(unfqdn(host)\x2C /[A-Z]/g\x2C toLowerCase)\x2C\n    '.'\n  );\n}\n\nfunction check(hostParts\x2C pattern\x2C wildcards) {\n  // Empty strings\x2C null\x2C undefined\x2C etc. never match.\n  if (!pattern)\n    return false;\n\n  const patternParts = splitHost(pattern);\n\n  if (hostParts.length !== patternParts.length)\n    return false;\n\n  // Pattern has empty components\x2C e.g. "bad..example.com".\n  if (ArrayPrototypeIncludes(patternParts\x2C ''))\n    return false;\n\n  // RFC 6125 allows IDNA U-labels (Unicode) in names but we have no\n  // good way to detect their encoding or normalize them so we simply\n  // reject them.  Control characters and blanks are rejected as well\n  // because nothing good can come from accepting them.\n  const isBad = (s) => RegExpPrototypeTest(/[^\\u0021-\\u007F]/u\x2C s);\n  if (ArrayPrototypeSome(patternParts\x2C isBad))\n    return false;\n\n  // Check host parts from right to left first.\n  for (let i = hostParts.length - 1; i > 0; i -= 1) {\n    if (hostParts[i] !== patternParts[i])\n      return false;\n  }\n\n  const hostSubdomain = hostParts[0];\n  const patternSubdomain = patternParts[0];\n  const patternSubdomainParts = StringPrototypeSplit(patternSubdomain\x2C '*');\n\n  // Short-circuit when the subdomain does not contain a wildcard.\n  // RFC 6125 does not allow wildcard substitution for components\n  // containing IDNA A-labels (Punycode) so match those verbatim.\n  if (patternSubdomainParts.length === 1 ||\n      StringPrototypeIncludes(patternSubdomain\x2C 'xn--'))\n    return hostSubdomain === patternSubdomain;\n\n  if (!wildcards)\n    return false;\n\n  // More than one wildcard is always wrong.\n  if (patternSubdomainParts.length > 2)\n    return false;\n\n  // *.tld wildcards are not allowed.\n  if (patternParts.length <= 2)\n    return false;\n\n  const { 0: prefix\x2C 1: suffix } = patternSubdomainParts;\n\n  if (prefix.length + suffix.length > hostSubdomain.length)\n    return false;\n\n  if (!StringPrototypeStartsWith(hostSubdomain\x2C prefix))\n    return false;\n\n  if (!StringPrototypeEndsWith(hostSubdomain\x2C suffix))\n    return false;\n\n  return true;\n}\n\nexports.checkServerIdentity = function checkServerIdentity(hostname\x2C cert) {\n  const subject = cert.subject;\n  const altNames = cert.subjectaltname;\n  const dnsNames = [];\n  const uriNames = [];\n  const ips = [];\n\n  hostname = '' + hostname;\n\n  if (altNames) {\n    const splitAltNames = StringPrototypeSplit(altNames\x2C '\x2C ');\n    ArrayPrototypeForEach(splitAltNames\x2C (name) => {\n      if (StringPrototypeStartsWith(name\x2C 'DNS:')) {\n        ArrayPrototypePush(dnsNames\x2C StringPrototypeSlice(name\x2C 4));\n      } else if (StringPrototypeStartsWith(name\x2C 'URI:')) {\n        const uri = new URL(StringPrototypeSlice(name\x2C 4));\n\n        // TODO(bnoordhuis) Also use scheme.\n        ArrayPrototypePush(uriNames\x2C uri.hostname);\n      } else if (StringPrototypeStartsWith(name\x2C 'IP Address:')) {\n        ArrayPrototypePush(ips\x2C canonicalizeIP(StringPrototypeSlice(name\x2C 11)));\n      }\n    });\n  }\n\n  let valid = false;\n  let reason = 'Unknown reason';\n\n  const hasAltNames =\n    dnsNames.length > 0 || ips.length > 0 || uriNames.length > 0;\n\n  hostname = unfqdn(hostname);  // Remove trailing dot for error messages.\n\n  if (net.isIP(hostname)) {\n    valid = ArrayPrototypeIncludes(ips\x2C canonicalizeIP(hostname));\n    if (!valid)\n      reason = `IP: ${hostname} is not in the cert's list: ` +\n               ArrayPrototypeJoin(ips\x2C '\x2C ');\n    // TODO(bnoordhuis) Also check URI SANs that are IP addresses.\n  } else if (hasAltNames || subject) {\n    const hostParts = splitHost(hostname);\n    const wildcard = (pattern) => check(hostParts\x2C pattern\x2C true);\n\n    if (hasAltNames) {\n      const noWildcard = (pattern) => check(hostParts\x2C pattern\x2C false);\n      valid = ArrayPrototypeSome(dnsNames\x2C wildcard) ||\n              ArrayPrototypeSome(uriNames\x2C noWildcard);\n      if (!valid)\n        reason =\n          `Host: ${hostname}. is not in the cert's altnames: ${altNames}`;\n    } else {\n      // Match against Common Name only if no supported identifiers exist.\n      const cn = subject.CN;\n\n      if (ArrayIsArray(cn))\n        valid = ArrayPrototypeSome(cn\x2C wildcard);\n      else if (cn)\n        valid = wildcard(cn);\n\n      if (!valid)\n        reason = `Host: ${hostname}. is not cert's CN: ${cn}`;\n    }\n  } else {\n    reason = 'Cert is empty';\n  }\n\n  if (!valid) {\n    return new ERR_TLS_CERT_ALTNAME_INVALID(reason\x2C hostname\x2C cert);\n  }\n};\n\nexports.createSecureContext = _tls_common.createSecureContext;\nexports.SecureContext = _tls_common.SecureContext;\nexports.TLSSocket = _tls_wrap.TLSSocket;\nexports.Server = _tls_wrap.Server;\nexports.createServer = _tls_wrap.createServer;\nexports.connect = _tls_wrap.connect;\n\nexports.parseCertString = internalUtil.deprecate(\n  parseCertString\x2C\n  'tls.parseCertString() is deprecated. ' +\n  'Please use querystring.parse() instead.'\x2C\n  'DEP0076');\n\nexports.createSecurePair = internalUtil.deprecate(\n  createSecurePair\x2C\n  'tls.createSecurePair() is deprecated. Please use ' +\n  'tls.TLSSocket instead.'\x2C 'DEP0064');\n
code-source-info,0x3ba9f09c5076,132,0,10345,C0O0C4O10345,,
code-creation,Function,10,187097,0x3ba9f09c577e,751, node:tls:1:1,0x3ba9f09c4ff0,~
code-source-info,0x3ba9f09c577e
tick,0x109428654,187253,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x10901a590,187353,1,0x1083b9750,6,0x1085cff20,0x10dd4673a,0x3ba9f09c58c4,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1084e6891,188621,1,0x1083b9750,6,0x1085cff20,0x10dd4673a,0x3ba9f09c58c4,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9b5f80000,262144
new,MemoryChunk,0x3ba946400000,262144
new,MemoryChunk,0x3ba99f0c0000,262144
new,MemoryChunk,0x3ba969cc0000,262144
scavenge,begin,0,193099,1636629464003
scavenge,end,0,193892,1636629464004
tick,0x10850b1c0,189695,1,0x1083b9750,6,0x1085cff20,0x10dd4673a,0x3ba9f09c58c4,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,190199,0x3ba9f09d6286,5, node:_tls_common:1:1,0x3ba9f09d6020,~
script-source,133,node:_tls_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst tls = require('tls');\n\nconst {\n  ArrayPrototypePush\x2C\n  ObjectCreate\x2C\n  StringPrototypeReplace\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_TLS_INVALID_PROTOCOL_VERSION\x2C\n    ERR_TLS_PROTOCOL_VERSION_CONFLICT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  crypto: {\n    SSL_OP_CIPHER_SERVER_PREFERENCE\x2C\n    TLS1_VERSION\x2C\n    TLS1_1_VERSION\x2C\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\n\nconst {\n  configSecureContext\x2C\n} = require('internal/tls/secure-context');\n\nconst {\n  parseCertString\x2C\n} = require('internal/tls/parse-cert-string');\n\nfunction toV(which\x2C v\x2C def) {\n  if (v == null) v = def;\n  if (v === 'TLSv1') return TLS1_VERSION;\n  if (v === 'TLSv1.1') return TLS1_1_VERSION;\n  if (v === 'TLSv1.2') return TLS1_2_VERSION;\n  if (v === 'TLSv1.3') return TLS1_3_VERSION;\n  throw new ERR_TLS_INVALID_PROTOCOL_VERSION(v\x2C which);\n}\n\nconst {\n  SecureContext: NativeSecureContext\x2C\n} = internalBinding('crypto');\n\nfunction SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C maxVersion) {\n  if (!(this instanceof SecureContext)) {\n    return new SecureContext(secureProtocol\x2C secureOptions\x2C minVersion\x2C\n                             maxVersion);\n  }\n\n  if (secureProtocol) {\n    if (minVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(minVersion\x2C secureProtocol);\n    if (maxVersion != null)\n      throw new ERR_TLS_PROTOCOL_VERSION_CONFLICT(maxVersion\x2C secureProtocol);\n  }\n\n  this.context = new NativeSecureContext();\n  this.context.init(secureProtocol\x2C\n                    toV('minimum'\x2C minVersion\x2C tls.DEFAULT_MIN_VERSION)\x2C\n                    toV('maximum'\x2C maxVersion\x2C tls.DEFAULT_MAX_VERSION));\n\n  if (secureOptions) {\n    validateInteger(secureOptions\x2C 'secureOptions');\n    this.context.setOptions(secureOptions);\n  }\n}\n\nfunction createSecureContext(options) {\n  if (!options) options = {};\n\n  const {\n    honorCipherOrder\x2C\n    minVersion\x2C\n    maxVersion\x2C\n    secureProtocol\x2C\n  } = options;\n\n  let { secureOptions } = options;\n\n  if (honorCipherOrder)\n    secureOptions |= SSL_OP_CIPHER_SERVER_PREFERENCE;\n\n  const c = new SecureContext(secureProtocol\x2C secureOptions\x2C\n                              minVersion\x2C maxVersion);\n\n  configSecureContext(c.context\x2C options);\n\n  return c;\n}\n\n// Translate some fields from the handle's C-friendly format into more idiomatic\n// javascript object representations before passing them back to the user.  Can\n// be used on any cert object\x2C but changing the name would be semver-major.\nfunction translatePeerCertificate(c) {\n  if (!c)\n    return null;\n\n  if (c.issuer != null) c.issuer = parseCertString(c.issuer);\n  if (c.issuerCertificate != null && c.issuerCertificate !== c) {\n    c.issuerCertificate = translatePeerCertificate(c.issuerCertificate);\n  }\n  if (c.subject != null) c.subject = parseCertString(c.subject);\n  if (c.infoAccess != null) {\n    const info = c.infoAccess;\n    c.infoAccess = ObjectCreate(null);\n\n    // XXX: More key validation?\n    StringPrototypeReplace(info\x2C /([^\\n:]*):([^\\n]*)(?:\\n|$)/g\x2C\n                           (all\x2C key\x2C val) => {\n                             if (key in c.infoAccess)\n                               ArrayPrototypePush(c.infoAccess[key]\x2C val);\n                             else\n                               c.infoAccess[key] = [val];\n                           });\n  }\n  return c;\n}\n\nmodule.exports = {\n  SecureContext\x2C\n  createSecureContext\x2C\n  translatePeerCertificate\x2C\n};\n
code-source-info,0x3ba9f09d6286,133,0,4647,C0O0C4O4647,,
code-creation,Function,10,190680,0x3ba9f09d657e,255, node:_tls_common:1:1,0x3ba9f09d6200,~
code-source-info,0x3ba9f09d657e,133,0,4647,C0O0C73O1161C76O1161C80O1161C82O1188C88O1210C94O1226C100O1373C103O1373C108O1373C113O1291C119O1329C125O1546C128O1546C133O1546C138O1426C144O1463C150O1481C156O1501C162O1521C168O1608C171O1608C176O1587C182O1676C185O1676C190O1651C196O1748C199O1748C204O1727C210O2137C213O2137C218O2112C224O4557C231O4578C237O4595C243O4618C249O4572C254O4646,,
tick,0x108a27539,190999,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,191036,0x3ba9f09d73f6,5, node:internal/tls/secure-context:1:1,0x3ba9f09d7120,~
script-source,134,node:internal/tls/secure-context,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  toBuf\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    TLS1_2_VERSION\x2C\n    TLS1_3_VERSION\x2C\n  }\x2C\n} = internalBinding('constants');\n\nfunction getDefaultEcdhCurve() {\n  // We do it this way because DEFAULT_ECDH_CURVE can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_ECDH_CURVE || 'auto';\n}\n\nfunction getDefaultCiphers() {\n  // We do it this way because DEFAULT_CIPHERS can be\n  // changed by users\x2C so we need to grab the current\n  // value\x2C but we want the evaluation to be lazy.\n  return require('tls').DEFAULT_CIPHERS;\n}\n\nfunction addCACerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.addCACert(cert);\n  });\n}\n\nfunction setCerts(context\x2C certs\x2C name) {\n  ArrayPrototypeForEach(certs\x2C (cert) => {\n    validateKeyOrCertOption(name\x2C cert);\n    context.setCert(cert);\n  });\n}\n\nfunction validateKeyOrCertOption(name\x2C value) {\n  if (typeof value !== 'string' && !isArrayBufferView(value)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      value\n    );\n  }\n}\n\nfunction setKey(context\x2C key\x2C passphrase\x2C name) {\n  validateKeyOrCertOption(`${name}.key`\x2C key);\n  if (passphrase != null)\n    validateString(passphrase\x2C `${name}.passphrase`);\n  context.setKey(key\x2C passphrase);\n}\n\nfunction processCiphers(ciphers\x2C name) {\n  ciphers = StringPrototypeSplit(ciphers || getDefaultCiphers()\x2C ':');\n\n  const cipherList =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          return cipher.length > 0 &&\n            !StringPrototypeStartsWith(cipher\x2C 'TLS_');\n        })\x2C ':');\n\n  const cipherSuites =\n    ArrayPrototypeJoin(\n      ArrayPrototypeFilter(\n        ciphers\x2C\n        (cipher) => {\n          return cipher.length > 0 &&\n            StringPrototypeStartsWith(cipher\x2C 'TLS_');\n        })\x2C ':');\n\n  // Specifying empty cipher suites for both TLS1.2 and TLS1.3 is invalid\x2C its\n  // not possible to handshake with no suites.\n  if (cipherSuites === '' && cipherList === '')\n    throw new ERR_INVALID_ARG_VALUE(name\x2C ciphers);\n\n  return { cipherList\x2C cipherSuites };\n}\n\nfunction configSecureContext(context\x2C options = {}\x2C name = 'options') {\n  validateObject(options\x2C name);\n\n  const {\n    ca\x2C\n    cert\x2C\n    ciphers = getDefaultCiphers()\x2C\n    clientCertEngine\x2C\n    crl\x2C\n    dhparam\x2C\n    ecdhCurve = getDefaultEcdhCurve()\x2C\n    key\x2C\n    passphrase\x2C\n    pfx\x2C\n    privateKeyIdentifier\x2C\n    privateKeyEngine\x2C\n    sessionIdContext\x2C\n    sessionTimeout\x2C\n    sigalgs\x2C\n    ticketKeys\x2C\n  } = options;\n\n  // Add CA before the cert to be able to load cert's issuer in C++ code.\n  // NOTE(@jasnell): ca\x2C cert\x2C and key are permitted to be falsy\x2C so do not\n  // change the checks to !== undefined checks.\n  if (ca) {\n    addCACerts(context\x2C ArrayIsArray(ca) ? ca : [ca]\x2C `${name}.ca`);\n  } else {\n    context.addRootCerts();\n  }\n\n  if (cert) {\n    setCerts(context\x2C ArrayIsArray(cert) ? cert : [cert]\x2C `${name}.cert`);\n  }\n\n  // Set the key after the cert.\n  // `ssl_set_pkey` returns `0` when the key does not match the cert\x2C but\n  // `ssl_set_cert` returns `1` and nullifies the key in the SSL structure\n  // which leads to the crash later on.\n  if (key) {\n    if (ArrayIsArray(key)) {\n      for (let i = 0; i < key.length; ++i) {\n        const val = key[i];\n        // eslint-disable-next-line eqeqeq\n        const pem = (val != undefined && val.pem !== undefined ? val.pem : val);\n        setKey(context\x2C pem\x2C val.passphrase || passphrase\x2C name);\n      }\n    } else {\n      setKey(context\x2C key\x2C passphrase\x2C name);\n    }\n  }\n\n  if (sigalgs !== undefined) {\n    validateString(sigalgs\x2C `${name}.sigalgs`);\n\n    if (sigalgs === '')\n      throw new ERR_INVALID_ARG_VALUE(`${name}.sigalgs`\x2C sigalgs);\n\n    context.setSigalgs(sigalgs);\n  }\n\n  if (privateKeyIdentifier !== undefined) {\n    if (privateKeyEngine === undefined) {\n      // Engine is required when privateKeyIdentifier is present\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyEngine`\x2C\n                                      privateKeyEngine);\n    }\n    if (key) {\n      // Both data key and engine key can't be set at the same time\n      throw new ERR_INVALID_ARG_VALUE(`${name}.privateKeyIdentifier`\x2C\n                                      privateKeyIdentifier);\n    }\n\n    if (typeof privateKeyIdentifier === 'string' &&\n        typeof privateKeyEngine === 'string') {\n      if (context.setEngineKey)\n        context.setEngineKey(privateKeyIdentifier\x2C privateKeyEngine);\n      else\n        throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    } else if (typeof privateKeyIdentifier !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyIdentifier`\x2C\n                                     ['string'\x2C 'undefined']\x2C\n                                     privateKeyIdentifier);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(`${name}.privateKeyEngine`\x2C\n                                     ['string'\x2C 'undefined']\x2C\n                                     privateKeyEngine);\n    }\n  }\n\n  if (ciphers != null)\n    validateString(ciphers\x2C `${name}.ciphers`);\n\n  // Work around an OpenSSL API quirk. cipherList is for TLSv1.2 and below\x2C\n  // cipherSuites is for TLSv1.3 (and presumably any later versions). TLSv1.3\n  // cipher suites all have a standard name format beginning with TLS_\x2C so split\n  // the ciphers and pass them to the appropriate API.\n  const {\n    cipherList\x2C\n    cipherSuites\x2C\n  } = processCiphers(ciphers\x2C `${name}.ciphers`);\n\n  context.setCipherSuites(cipherSuites);\n  context.setCiphers(cipherList);\n\n  if (cipherSuites === '' &&\n      context.getMaxProto() > TLS1_2_VERSION &&\n      context.getMinProto() < TLS1_3_VERSION) {\n    context.setMaxProto(TLS1_2_VERSION);\n  }\n\n  if (cipherList === '' &&\n      context.getMinProto() < TLS1_3_VERSION &&\n      context.getMaxProto() > TLS1_2_VERSION) {\n    context.setMinProto(TLS1_3_VERSION);\n  }\n\n  validateString(ecdhCurve\x2C `${name}.ecdhCurve`);\n  context.setECDHCurve(ecdhCurve);\n\n  if (dhparam !== undefined) {\n    validateKeyOrCertOption(`${name}.dhparam`\x2C dhparam);\n    const warning = context.setDHParam(dhparam);\n    if (warning)\n      process.emitWarning(warning\x2C 'SecurityWarning');\n  }\n\n  if (crl !== undefined) {\n    if (ArrayIsArray(crl)) {\n      for (const val of crl) {\n        validateKeyOrCertOption(`${name}.crl`\x2C val);\n        context.addCRL(val);\n      }\n    } else {\n      validateKeyOrCertOption(`${name}.crl`\x2C crl);\n      context.addCRL(crl);\n    }\n  }\n\n  if (sessionIdContext !== undefined) {\n    validateString(sessionIdContext\x2C `${name}.sessionIdContext`);\n    context.setSessionIdContext(sessionIdContext);\n  }\n\n  if (pfx !== undefined) {\n    if (ArrayIsArray(pfx)) {\n      ArrayPrototypeForEach(pfx\x2C (val) => {\n        const raw = val.buf ? val.buf : val;\n        const pass = val.passphrase || passphrase;\n        if (pass !== undefined) {\n          context.loadPKCS12(toBuf(raw)\x2C toBuf(pass));\n        } else {\n          context.loadPKCS12(toBuf(raw));\n        }\n      });\n    } else if (passphrase) {\n      context.loadPKCS12(toBuf(pfx)\x2C toBuf(passphrase));\n    } else {\n      context.loadPKCS12(toBuf(pfx));\n    }\n  }\n\n  if (typeof clientCertEngine === 'string') {\n    if (typeof context.setClientCertEngine !== 'function')\n      throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\n    else\n      context.setClientCertEngine(clientCertEngine);\n  } else if (clientCertEngine !== undefined) {\n    throw new ERR_INVALID_ARG_TYPE(`${name}.clientCertEngine`\x2C\n                                   ['string'\x2C 'null'\x2C 'undefined']\x2C\n                                   clientCertEngine);\n  }\n\n  if (ticketKeys !== undefined) {\n    if (!isArrayBufferView(ticketKeys)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        `${name}.ticketKeys`\x2C\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ticketKeys);\n    }\n    if (ticketKeys.byteLength !== 48) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `${name}.ticketKeys`\x2C\n        ticketKeys.byteLength\x2C\n        'must be exactly 48 bytes');\n    }\n    context.setTicketKeys(ticketKeys);\n  }\n\n  if (sessionTimeout !== undefined) {\n    validateInt32(sessionTimeout\x2C `${name}.sessionTimeout`);\n    context.setSessionTimeout(sessionTimeout);\n  }\n}\n\nmodule.exports = {\n  configSecureContext\x2C\n};\n
code-source-info,0x3ba9f09d73f6,134,0,8911,C0O0C4O8911,,
code-creation,Function,10,191915,0x3ba9f09d782e,285, node:internal/tls/secure-context:1:1,0x3ba9f09d7370,~
code-source-info,0x3ba9f09d782e,134,0,8911,C0O0C108O25C114O41C120O65C126O90C132O112C138O136C144O306C150O306C155O306C160O204C166O248C172O274C178O368C184O368C189O345C195O466C201O466C206O411C212O428C218O446C224O520C230O520C235O509C241O623C244O623C249O623C254O578C260O598C266O8866C273O8887C279O8881C284O8910,,
tick,0x108afb1ff,192258,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,192396,0x3ba9f09d95ee,5, node:internal/crypto/util:1:1,0x3ba9f09d9258,~
script-source,135,node:internal/crypto/util,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  BigInt\x2C\n  FunctionPrototypeBind\x2C\n  Number\x2C\n  ObjectKeys\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  getCiphers: _getCiphers\x2C\n  getCurves: _getCurves\x2C\n  getHashes: _getHashes\x2C\n  setEngine: _setEngine\x2C\n  secureHeapUsed: _secureHeapUsed\x2C\n} = internalBinding('crypto');\n\nconst { getOptionValue } = require('internal/options');\n\nconst {\n  crypto: {\n    ENGINE_METHOD_ALL\n  }\n} = internalBinding('constants');\n\nconst normalizeHashName = require('internal/crypto/hashnames');\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_CRYPTO_ENGINE_UNKNOWN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateString\n} = require('internal/validators');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  cachedResult\x2C\n  filterDuplicateStrings\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst kHandle = Symbol('kHandle');\nconst kKeyObject = Symbol('kKeyObject');\n\nconst lazyRequireCache = {};\n\nfunction lazyRequire(name) {\n  let ret = lazyRequireCache[name];\n  if (ret === undefined)\n    ret = lazyRequireCache[name] = require(name);\n  return ret;\n}\n\nvar defaultEncoding = 'buffer';\n\nfunction setDefaultEncoding(val) {\n  defaultEncoding = val;\n}\n\nfunction getDefaultEncoding() {\n  return defaultEncoding;\n}\n\n// This is here because many functions accepted binary strings without\n// any explicit encoding in older versions of node\x2C and we don't want\n// to break them unnecessarily.\nfunction toBuf(val\x2C encoding) {\n  if (typeof val === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(val\x2C encoding);\n  }\n  return val;\n}\n\nconst getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));\nconst getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));\nconst getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));\n\nfunction setEngine(id\x2C flags) {\n  validateString(id\x2C 'id');\n  if (flags)\n    validateNumber(flags\x2C 'flags');\n  flags = flags >>> 0;\n\n  // Use provided engine for everything by default\n  if (flags === 0)\n    flags = ENGINE_METHOD_ALL;\n\n  if (!_setEngine(id\x2C flags))\n    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);\n}\n\nconst getArrayBufferOrView = hideStackFrames((buffer\x2C name\x2C encoding) => {\n  if (isAnyArrayBuffer(buffer))\n    return buffer;\n  if (typeof buffer === 'string') {\n    if (encoding === 'buffer')\n      encoding = 'utf8';\n    return Buffer.from(buffer\x2C encoding);\n  }\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      [\n        'string'\x2C\n        'ArrayBuffer'\x2C\n        'Buffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n      ]\x2C\n      buffer\n    );\n  }\n  return buffer;\n});\n\n// The maximum buffer size that we'll support in the WebCrypto impl\nconst kMaxBufferLength = (2 ** 31) - 1;\n\n// The EC named curves that we currently support via the Web Crypto API.\nconst kNamedCurveAliases = {\n  'P-256': 'prime256v1'\x2C\n  'P-384': 'secp384r1'\x2C\n  'P-521': 'secp521r1'\x2C\n  'NODE-ED25519': 'ed25519'\x2C\n  'NODE-ED448': 'ed448'\x2C\n  'NODE-X25519': 'x25519'\x2C\n  'NODE-X448': 'x448'\x2C\n};\n\nconst kAesKeyLengths = [128\x2C 192\x2C 256];\n\n// These are the only algorithms we currently support\n// via the Web Crypto API\nconst kAlgorithms = {\n  'rsassa-pkcs1-v1_5': 'RSASSA-PKCS1-v1_5'\x2C\n  'rsa-pss': 'RSA-PSS'\x2C\n  'rsa-oaep': 'RSA-OAEP'\x2C\n  'ecdsa': 'ECDSA'\x2C\n  'ecdh': 'ECDH'\x2C\n  'aes-ctr': 'AES-CTR'\x2C\n  'aes-cbc': 'AES-CBC'\x2C\n  'aes-gcm': 'AES-GCM'\x2C\n  'aes-kw': 'AES-KW'\x2C\n  'hmac': 'HMAC'\x2C\n  'sha-1': 'SHA-1'\x2C\n  'sha-256': 'SHA-256'\x2C\n  'sha-384': 'SHA-384'\x2C\n  'sha-512': 'SHA-512'\x2C\n  'hkdf': 'HKDF'\x2C\n  'pbkdf2': 'PBKDF2'\x2C\n  // Following here are Node.js specific extensions. All\n  // should be prefixed with 'node-'\n  'node-dsa': 'NODE-DSA'\x2C\n  'node-dh': 'NODE-DH'\x2C\n  'node-scrypt': 'NODE-SCRYPT'\x2C\n  'node-ed25519': 'NODE-ED25519'\x2C\n  'node-ed448': 'NODE-ED448'\x2C\n};\nconst kAlgorithmsKeys = ObjectKeys(kAlgorithms);\n\n// These are the only export and import formats we currently\n// support via the Web Crypto API\nconst kExportFormats = [\n  'raw'\x2C\n  'pkcs8'\x2C\n  'spki'\x2C\n  'jwk'\x2C\n  'node.keyObject'];\n\n// These are the only hash algorithms we currently support via\n// the Web Crypto API.\nconst kHashTypes = [\n  'SHA-1'\x2C\n  'SHA-256'\x2C\n  'SHA-384'\x2C\n  'SHA-512'\x2C\n];\n\nfunction validateMaxBufferLength(data\x2C name) {\n  if (data.byteLength > kMaxBufferLength) {\n    throw lazyDOMException(\n      `${name} must be less than ${kMaxBufferLength + 1} bits`\x2C\n      'OperationError');\n  }\n}\n\nfunction normalizeAlgorithm(algorithm\x2C label = 'algorithm') {\n  if (algorithm != null) {\n    if (typeof algorithm === 'string')\n      algorithm = { name: algorithm };\n\n    if (typeof algorithm === 'object') {\n      const { name } = algorithm;\n      let hash;\n      if (typeof name !== 'string' ||\n          !ArrayPrototypeIncludes(\n            kAlgorithmsKeys\x2C\n            StringPrototypeToLowerCase(name))) {\n        throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n      }\n      if (algorithm.hash !== undefined) {\n        hash = normalizeAlgorithm(algorithm.hash\x2C 'algorithm.hash');\n        if (!ArrayPrototypeIncludes(kHashTypes\x2C hash.name))\n          throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n      }\n      return {\n        ...algorithm\x2C\n        name: kAlgorithms[StringPrototypeToLowerCase(name)]\x2C\n        hash\x2C\n      };\n    }\n  }\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nfunction hasAnyNotIn(set\x2C checks) {\n  for (const s of set)\n    if (!ArrayPrototypeIncludes(checks\x2C s))\n      return true;\n  return false;\n}\n\nfunction validateBitLength(length\x2C name\x2C required = false) {\n  if (length !== undefined || required) {\n    validateNumber(length\x2C name);\n    if (length < 0)\n      throw new ERR_OUT_OF_RANGE(name\x2C '> 0');\n    if (length % 8) {\n      throw new ERR_INVALID_ARG_VALUE(\n        name\x2C\n        length\x2C\n        'must be a multiple of 8');\n    }\n  }\n}\n\nfunction validateByteLength(buf\x2C name\x2C target) {\n  if (buf.byteLength !== target) {\n    throw lazyDOMException(\n      `${name} must contain exactly ${target} bytes`\x2C\n      'OperationError');\n  }\n}\n\nconst validateByteSource = hideStackFrames((val\x2C name) => {\n  val = toBuf(val);\n\n  if (isAnyArrayBuffer(val) || isArrayBufferView(val))\n    return;\n\n  throw new ERR_INVALID_ARG_TYPE(\n    name\x2C\n    [\n      'string'\x2C\n      'ArrayBuffer'\x2C\n      'TypedArray'\x2C\n      'DataView'\x2C\n      'Buffer'\x2C\n    ]\x2C\n    val);\n});\n\nfunction onDone(resolve\x2C reject\x2C err\x2C result) {\n  if (err) return reject(err);\n  resolve(result);\n}\n\nfunction jobPromise(job) {\n  return new Promise((resolve\x2C reject) => {\n    job.ondone = FunctionPrototypeBind(onDone\x2C job\x2C resolve\x2C reject);\n    job.run();\n  });\n}\n\n// In WebCrypto\x2C the publicExponent option in RSA is represented as a\n// WebIDL "BigInteger"... that is\x2C a Uint8Array that allows an arbitrary\n// number of leading zero bits. Our conventional APIs for reading\n// an unsigned int from a Buffer are not adequate. The implementation\n// here is adapted from the chromium implementation here:\n// https://github.com/chromium/chromium/blob/HEAD/third_party/blink/public/platform/web_crypto_algorithm_params.h\x2C but ported to JavaScript\n// Returns undefined if the conversion was unsuccessful.\nfunction bigIntArrayToUnsignedInt(input) {\n  let result = 0;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    if (n_reversed >= 4 && input[n])\n      return;  // Too large\n    result |= input[n] << 8 * n_reversed;\n  }\n\n  return result;\n}\n\nfunction bigIntArrayToUnsignedBigInt(input) {\n  let result = 0n;\n\n  for (let n = 0; n < input.length; ++n) {\n    const n_reversed = input.length - n - 1;\n    result |= BigInt(input[n]) << 8n * BigInt(n_reversed);\n  }\n\n  return result;\n}\n\nfunction getStringOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null)\n    validateString(value\x2C `options.${key}`);\n  return value;\n}\n\nfunction getUsagesUnion(usageSet\x2C ...usages) {\n  const newset = [];\n  for (let n = 0; n < usages.length; n++) {\n    if (usageSet.has(usages[n]))\n      ArrayPrototypePush(newset\x2C usages[n]);\n  }\n  return newset;\n}\n\nfunction getHashLength(name) {\n  switch (name) {\n    case 'SHA-1': return 160;\n    case 'SHA-256': return 256;\n    case 'SHA-384': return 384;\n    case 'SHA-512': return 512;\n  }\n}\n\nconst kKeyOps = {\n  sign: 1\x2C\n  verify: 2\x2C\n  encrypt: 3\x2C\n  decrypt: 4\x2C\n  wrapKey: 5\x2C\n  unwrapKey: 6\x2C\n  deriveKey: 7\x2C\n  deriveBits: 8\x2C\n};\n\nfunction validateKeyOps(keyOps\x2C usagesSet) {\n  if (keyOps === undefined) return;\n  validateArray(keyOps\x2C 'keyData.key_ops');\n  let flags = 0;\n  for (let n = 0; n < keyOps.length; n++) {\n    const op = keyOps[n];\n    const op_flag = kKeyOps[op];\n    // Skipping unknown key ops\n    if (op_flag === undefined)\n      continue;\n    // Have we seen it already? if so\x2C error\n    if (flags & (1 << op_flag))\n      throw lazyDOMException('Duplicate key operation'\x2C 'DataError');\n    flags |= (1 << op_flag);\n\n    // TODO(@jasnell): RFC7517 section 4.3 strong recommends validating\n    // key usage combinations. Specifically\x2C it says that unrelated key\n    // ops SHOULD NOT be used together. We're not yet validating that here.\n  }\n\n  if (usagesSet !== undefined) {\n    for (const use of usagesSet) {\n      if (!ArrayPrototypeIncludes(keyOps\x2C use)) {\n        throw lazyDOMException(\n          'Key operations and usage mismatch'\x2C\n          'DataError');\n      }\n    }\n  }\n}\n\nfunction secureHeapUsed() {\n  const val = _secureHeapUsed();\n  if (val === undefined)\n    return { total: 0\x2C used: 0\x2C utilization: 0\x2C min: 0 };\n  const used = Number(_secureHeapUsed());\n  const total = Number(getOptionValue('--secure-heap'));\n  const min = Number(getOptionValue('--secure-heap-min'));\n  const utilization = used / total;\n  return { total\x2C used\x2C utilization\x2C min };\n}\n\nmodule.exports = {\n  getArrayBufferOrView\x2C\n  getCiphers\x2C\n  getCurves\x2C\n  getDefaultEncoding\x2C\n  getHashes\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n  setDefaultEncoding\x2C\n  setEngine\x2C\n  toBuf\x2C\n\n  kHashTypes\x2C\n  kNamedCurveAliases\x2C\n  kAesKeyLengths\x2C\n  kExportFormats\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  hasAnyNotIn\x2C\n  validateBitLength\x2C\n  validateByteLength\x2C\n  validateByteSource\x2C\n  validateKeyOps\x2C\n  jobPromise\x2C\n  lazyRequire\x2C\n  validateMaxBufferLength\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n  bigIntArrayToUnsignedInt\x2C\n  getStringOption\x2C\n  getUsagesUnion\x2C\n  getHashLength\x2C\n  secureHeapUsed\x2C\n};\n
code-source-info,0x3ba9f09d95ee,135,0,10573,C0O0C4O10573,,
code-creation,Function,10,193443,0x3ba9f09da64e,848, node:internal/crypto/util:1:1,0x3ba9f09d9568,~
code-source-info,0x3ba9f09da64e
tick,0x7ff81f29ed3e,193727,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,193824,0x3ba9f09dc30e,5, node:internal/crypto/hashnames:1:1,0x3ba9f09dc198,~
script-source,136,node:internal/crypto/hashnames,'use strict';\n\nconst {\n  ObjectKeys\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst kHashContextNode = 1;\nconst kHashContextWebCrypto = 2;\nconst kHashContextJwkRsa = 3;\nconst kHashContextJwkRsaPss = 4;\nconst kHashContextJwkRsaOaep = 5;\nconst kHashContextJwkHmac = 6;\nconst kHashContextJwkDsa = 7;\n\n// WebCrypto and JWK use a bunch of different names for the\n// standard set of SHA-* digest algorithms... which is ... fun.\n// Here we provide a utility for mapping between them in order\n// make it easier in the code.\n\nconst kHashNames = {\n  sha1: {\n    [kHashContextNode]: 'sha1'\x2C\n    [kHashContextWebCrypto]: 'SHA-1'\x2C\n    [kHashContextJwkRsa]: 'RS1'\x2C\n    [kHashContextJwkRsaPss]: 'PS1'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP'\x2C\n    [kHashContextJwkHmac]: 'HS1'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-1'\x2C\n  }\x2C\n  sha256: {\n    [kHashContextNode]: 'sha256'\x2C\n    [kHashContextWebCrypto]: 'SHA-256'\x2C\n    [kHashContextJwkRsa]: 'RS256'\x2C\n    [kHashContextJwkRsaPss]: 'PS256'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-256'\x2C\n    [kHashContextJwkHmac]: 'HS256'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-256'\x2C\n  }\x2C\n  sha384: {\n    [kHashContextNode]: 'sha384'\x2C\n    [kHashContextWebCrypto]: 'SHA-384'\x2C\n    [kHashContextJwkRsa]: 'RS384'\x2C\n    [kHashContextJwkRsaPss]: 'PS384'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-384'\x2C\n    [kHashContextJwkHmac]: 'HS384'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-384'\x2C\n  }\x2C\n  sha512: {\n    [kHashContextNode]: 'sha512'\x2C\n    [kHashContextWebCrypto]: 'SHA-512'\x2C\n    [kHashContextJwkRsa]: 'RS512'\x2C\n    [kHashContextJwkRsaPss]: 'PS512'\x2C\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-512'\x2C\n    [kHashContextJwkHmac]: 'HS512'\x2C\n    [kHashContextJwkDsa]: 'NODE-DSA-SHA-512'\x2C\n  }\n};\n\n{\n  // Index the aliases\n  const keys = ObjectKeys(kHashNames);\n  for (let n = 0; n < keys.length; n++) {\n    const contexts = ObjectKeys(kHashNames[keys[n]]);\n    for (let i = 0; i < contexts.length; i++) {\n      const alias =\n        StringPrototypeToLowerCase(kHashNames[keys[n]][contexts[i]]);\n      if (kHashNames[alias] === undefined)\n        kHashNames[alias] = kHashNames[keys[n]];\n    }\n  }\n}\n\nfunction normalizeHashName(name\x2C context = kHashContextNode) {\n  if (typeof name !== 'string')\n    return name;\n  name = StringPrototypeToLowerCase(name);\n  const alias = kHashNames[name] && kHashNames[name][context];\n  return alias || name;\n}\n\nnormalizeHashName.kContextNode = kHashContextNode;\nnormalizeHashName.kContextWebCrypto = kHashContextWebCrypto;\nnormalizeHashName.kContextJwkRsa = kHashContextJwkRsa;\nnormalizeHashName.kContextJwkRsaPss = kHashContextJwkRsaPss;\nnormalizeHashName.kContextJwkRsaOaep = kHashContextJwkRsaOaep;\nnormalizeHashName.kContextJwkHmac = kHashContextJwkHmac;\nnormalizeHashName.kContextJwkDsa = kHashContextJwkDsa;\n\nmodule.exports = normalizeHashName;\n
code-source-info,0x3ba9f09dc30e,136,0,2786,C0O0C4O2786,,
code-creation,Function,10,194126,0x3ba9f09dc606,584, node:internal/crypto/hashnames:1:1,0x3ba9f09dc288,~
code-source-info,0x3ba9f09dc
code-creation,LazyCompile,10,194396,0x3ba9f09dd516,20,cachedResult node:internal/util:241:22,0x3ba96096a0d0,~
code-source-info,0x3ba9f09dd516,12,6718,6853,C0O6718C12O6731C13O6731C15O6741C19O6851,,
code-creation,LazyCompile,10,194546,0x3ba9f09dd676,43,hideStackFrames node:internal/errors:382:25,0x3ba9609643c0,~
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: "error" */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectIsExtensible\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nconst kNoOverride = Symbol('kNoOverride');\nlet userStackTraceLimit;\nconst nodeInternalPrefix = '__node_internal_';\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  const firstFrame = trace[0]?.getFunctionName();\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\n    for (let l = trace.length - 1; l >= 0; l--) {\n      const fn = trace[l]?.getFunctionName();\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\n        break;\n      }\n    }\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\n    // it is updated at every new exception in `captureLargerStackTrace`.\n    if (trace.length > userStackTraceLimit)\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\n  }\n\n  const globalOverride =\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\n  if (globalOverride !== kNoOverride) return globalOverride;\n\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n};\n\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  return kNoOverride;\n};\n\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\n  if (innerError && outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    const err = new AggregateError(new SafeArrayIterator([\n      outerError\x2C\n      innerError\x2C\n    ])\x2C outerError.message);\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n});\n\n// Lazily loaded\nlet util;\nlet assert;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  if (!internalUtil) {\n    internalUtil = require('internal/util');\n  }\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  if (!internalUtilInspect) {\n    internalUtilInspect = require('internal/util/inspect');\n  }\n  return internalUtilInspect;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  if (buffer === undefined)\n    buffer = require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    super();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    captureLargerStackTrace(this);\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  return function NodeError(...args) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    const error = new Base();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const message = getMessage(key\x2C args\x2C error);\n    ObjectDefineProperties(error\x2C {\n      [kIsNodeError]: {\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      toString: {\n        value() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n    captureLargerStackTrace(error);\n    error.code = key;\n    return error;\n  };\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: any[]) => any} T\n * @type {(fn: T) => T}\n */\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name;\n  ObjectDefineProperty(fn\x2C 'name'\x2C { value: hidden });\n  return fn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n  if (def === SystemError) {\n    def = makeSystemErrorWithCode(sym);\n  } else {\n    def = makeNodeErrorWithCode(def\x2C sym);\n  }\n\n  if (otherClasses.length !== 0) {\n    otherClasses.forEach((clazz) => {\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n    });\n  }\n  codes[sym] = def;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (assert === undefined) assert = require('internal/assert');\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength =\n    (StringPrototypeMatch(msg\x2C /%[dfijoOs]/g) || []).length;\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  if (!uvBinding) {\n    uvBinding = internalBinding('uv');\n  }\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  if (!uvBinding.errmap) {\n    uvBinding.errmap = uvBinding.getErrorMap();\n  }\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\nconst captureLargerStackTrace = hideStackFrames(\n  function captureLargerStackTrace(err) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Infinity;\n    }\n    ErrorCaptureStackTrace(err);\n    // Reset the limit\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\n\n    return err;\n  });\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n *\n * @param {Object} ctx\n * @returns {Error}\n */\nconst uvException = hideStackFrames(function uvException(ctx) {\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n  let path;\n  let dest;\n  if (ctx.path) {\n    path = ctx.path.toString();\n    message += ` '${path}'`;\n  }\n  if (ctx.dest) {\n    dest = ctx.dest.toString();\n    message += ` -> '${dest}'`;\n  }\n\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // Pass the message to the constructor instead of setting it on the object\n  // to make sure it is the same as the one created in C++\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n\n  for (const prop of ObjectKeys(ctx)) {\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\n      continue;\n    }\n    err[prop] = ctx[prop];\n  }\n\n  err.code = code;\n  if (path) {\n    err.path = path;\n  }\n  if (dest) {\n    err.dest = dest;\n  }\n\n  return captureLargerStackTrace(err);\n});\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @returns {Error}\n */\nconst uvExceptionWithHostPort = hideStackFrames(\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${message}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.code = code;\n    ex.errno = err;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * This used to be util._errnoException().\n *\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} [original]\n * @returns {Error}\n */\nconst errnoException = hideStackFrames(\n  function errnoException(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    if (util === undefined) util = require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(message);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nconst exceptionWithHostPort = hideStackFrames(\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    if (util === undefined) util = require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    // Reducing the limit improves the performance significantly. We do not\n    // lose the stack frames due to the `captureStackTrace()` function that\n    // is called later.\n    const tmpLimit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    const ex = new Error(`${syscall} ${code}${details}`);\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n    ex.errno = err;\n    ex.code = code;\n    ex.syscall = syscall;\n    ex.address = address;\n    if (port) {\n      ex.port = port;\n    }\n\n    return captureLargerStackTrace(ex);\n  });\n\n/**\n * @param {number|string} code - A libuv error number or a c-ares error code\n * @param {string} syscall\n * @param {string} [hostname]\n * @returns {Error}\n */\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\n  let errno;\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n  // c-ares error code.\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n  // make them available in a property that's not error.errno (since they\n  // can be in conflict with libuv error codes). Also make sure\n  // util.getSystemErrorName() can understand them when an being informed that\n  // the number is a c-ares error code.\n  if (typeof code === 'number') {\n    errno = code;\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n    // long enough that it's not practical to remove it.\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n      code = 'ENOTFOUND'; // Fabricated error name.\n    } else {\n      code = lazyInternalUtil().getSystemErrorName(code);\n    }\n  }\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\n  // Reducing the limit improves the performance significantly. We do not lose\n  // the stack frames due to the `captureStackTrace()` function that is called\n  // later.\n  const tmpLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(message);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\n  ex.errno = errno;\n  ex.code = code;\n  ex.syscall = syscall;\n  if (hostname) {\n    ex.hostname = hostname;\n  }\n\n  return captureLargerStackTrace(ex);\n});\n\nfunction connResetException(msg) {\n  // eslint-disable-next-line no-restricted-syntax\n  const ex = new Error(msg);\n  ex.code = 'ECONNRESET';\n  return ex;\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n *\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (process.platform === 'win32') {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\n      }\n    } = lazyInternalUtilInspect();\n    const colors = useColors &&\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\n                   require('internal/tty').hasColors()) ||\n                   defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\n      });\n    } catch {\n      return originalStack;\n    }\n  }\n};\n\n// Ensures the printed error line is from user code.\nlet _kArrowMessagePrivateSymbol\x2C _setHiddenValue;\nfunction setArrowMessage(err\x2C arrowMessage) {\n  if (!_kArrowMessagePrivateSymbol) {\n    ({\n      arrow_message_private_symbol: _kArrowMessagePrivateSymbol\x2C\n      setHiddenValue: _setHiddenValue\x2C\n    } = internalBinding('util'));\n  }\n  _setHiddenValue(err\x2C _kArrowMessagePrivateSymbol\x2C arrowMessage);\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor() {\n    super('The operation was aborted');\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\nmodule.exports = {\n  aggregateTwoErrors\x2C\n  codes\x2C\n  dnsException\x2C\n  errnoException\x2C\n  exceptionWithHostPort\x2C\n  getMessage\x2C\n  hideStackFrames\x2C\n  hideInternalStackFrames\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  setArrowMessage\x2C\n  connResetException\x2C\n  uvErrmapGet\x2C\n  uvException\x2C\n  uvExceptionWithHostPort\x2C\n  SystemError\x2C\n  AbortError\x2C\n  // This is exported only to facilitate testing.\n  E\x2C\n  kNoOverride\x2C\n  prepareStackTrace\x2C\n  maybeOverridePrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  kEnhanceStackBeforeInspector\x2C\n  fatalExceptionStackEnhancers\x2C\n  kIsNodeError\x2C\n  captureLargerStackTrace\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeTest(classRegExp\x2C value)) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      if (types.length > 2) {\n        const last = ArrayPrototypePop(types);\n        msg += `one of type ${ArrayPrototypeJoin(types\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}`;\n      } else {\n        msg += `of type ${types[0]}`;\n      }\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      if (instances.length > 2) {\n        const last = ArrayPrototypePop(instances);\n        msg +=\n          `an instance of ${ArrayPrototypeJoin(instances\x2C '\x2C ')}\x2C or ${last}`;\n      } else {\n        msg += `an instance of ${instances[0]}`;\n        if (instances.length === 2) {\n          msg += ` or ${instances[1]}`;\n        }\n      }\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 2) {\n        const last = ArrayPrototypePop(other);\n        msg += `one of ${ArrayPrototypeJoin(other\x2C '\x2C ')}\x2C or ${last}`;\n      } else if (other.length === 2) {\n        msg += `one of ${other[0]} or ${other[1]}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    if (actual == null) {\n      msg += `. Received ${actual}`;\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`;\n    } else if (typeof actual === 'object') {\n      if (actual.constructor && actual.constructor.name) {\n        msg += `. Received an instance of ${actual.constructor.name}`;\n      } else {\n        const inspected = lazyInternalUtilInspect()\n          .inspect(actual\x2C { depth: -1 });\n        msg += `. Received ${inspected}`;\n      }\n    } else {\n      let inspected = lazyInternalUtilInspect()\n        .inspect(actual\x2C { colors: false });\n      if (inspected.length > 25)\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`;\n      msg += `. Received type ${typeof actual} (${inspected})`;\n    }\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CALLBACK'\x2C\n  'Callback must be a function. Received %O'\x2C TypeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${value}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  let type;\n  if (value && value.constructor && value.constructor.name) {\n    type = `instance of ${value.constructor.name}`;\n  } else {\n    type = `type ${typeof value}`;\n  }\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" function but got ${type}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  let type;\n  if (value && value.constructor && value.constructor.name) {\n    type = `instance of ${value.constructor.name}`;\n  } else {\n    type = `type ${typeof value}`;\n  }\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input) {\n  this.input = input;\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\n  (moduleURL\x2C realIntegrities) => {\n    let msg = `The content of "${\n      moduleURL\n    }" does not match the expected integrity.`;\n    if (realIntegrities.size) {\n      const sri = ArrayPrototypeJoin(\n        ArrayFrom(realIntegrities.entries()\x2C\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\n        ' '\n      );\n      msg += ` Integrities found are: ${sri}`;\n    } else {\n      msg += ' The resource was not found in the policy.';\n    }\n    return msg;\n  }\x2C Error);\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\n  'conditions: %s'\x2C\n  Error);\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\n  SyntaxError);\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\n  'Manifest resource %s has invalid property value for %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\n  'Manifest specified unknown error behavior "%s".'\x2C\n  SyntaxError);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\n    );\n    switch (len) {\n      case 1:\n        msg += `${args[0]} argument`;\n        break;\n      case 2:\n        msg += `${args[0]} and ${args[1]} arguments`;\n        break;\n      default:\n        msg += ArrayPrototypeJoin(ArrayPrototypeSlice(args\x2C 0\x2C len - 1)\x2C '\x2C ');\n        msg += `\x2C and ${args[len - 1]} arguments`;\n        break;\n    }\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\n  return `Cannot find ${type} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${port}.`;\n}\x2C RangeError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C\n  'Unknown file extension "%s" for %s'\x2C\n  TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s'\x2C RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\n'resolving ES modules imported from %s'\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url) => {\n  let msg = 'Only file and data URLs are supported by the default ESM loader';\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINKING_ERRORED'\x2C\n  'Linking has already failed for the provided module'\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\n
code-source-info,0x3ba9f09dd676,11,10626,10850,C0O10751C5O10775C9O10770C13O10783C21O10804C28O10825C35O10783C40O10838C42O10848,,
tick,0x7ff81f1742d3,200062,0,0x0,3,0x108a8eb80,0x3ba9f09da896,0x10dd44be3,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ef74,200100,0,0x0,3,0x108a8eb80,0x3ba9f09da896,0x10dd44be3,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ef90,200125,0,0x0,3,0x108a8eb80,0x3ba9f09da896,0x10dd44be3,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29e96a,200166,0,0x0,3,0x108a8eb80,0x3ba9f09da896,0x10dd44be3,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ea25,200191,0,0x0,3,0x108a8eb80,0x3ba9f09da896,0x10dd44be3,0x10dd44865,0x3ba9f09d7914,0x10dd44be3,0x10dd44865,0x3ba9f09d6637,0x10dd44be3,0x10dd44865,0x3ba9f09c5902,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,200288,0x3ba9f09e0da6,5, node:internal/tls/parse-cert-string:1:1,0x3ba9f09e0bf0,~
script-source,137,node:internal/tls/parse-cert-string,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  ObjectCreate\x2C\n} = primordials;\n\n// Example:\n// C=US\\nST=CA\\nL=SF\\nO=Joyent\\nOU=Node.js\\nCN=ca1\\nemailAddress=ry@clouds.org\nfunction parseCertString(s) {\n  const out = ObjectCreate(null);\n  ArrayPrototypeForEach(StringPrototypeSplit(s\x2C '\\n')\x2C (part) => {\n    const sepIndex = StringPrototypeIndexOf(part\x2C '=');\n    if (sepIndex > 0) {\n      const key = StringPrototypeSlice(part\x2C 0\x2C sepIndex);\n      const value = StringPrototypeSlice(part\x2C sepIndex + 1);\n      if (key in out) {\n        if (!ArrayIsArray(out[key])) {\n          out[key] = [out[key]];\n        }\n        ArrayPrototypePush(out[key]\x2C value);\n      } else {\n        out[key] = value;\n      }\n    }\n  });\n  return out;\n}\n\nexports.parseCertString = parseCertString;\n
code-source-info,0x3ba9f09e0da6,137,0,889,C0O0C4O889,,
code-creation,Function,10,200448,0x3ba9f09e0ebe,81, node:internal/tls/parse-cert-string:1:1,0x3ba9f09e0d20,~
code-source-info,0x3ba9f09e0ebe,137,0,889,C0O0C31O25C37O41C43O66C49O88C55O114C61O138C67O162C73O846C75O870C80O888,,
tick,0x1085a0538,201116,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,201545,0x3ba9f09e2dc6,5, node:_tls_wrap:1:1,0x3ba9f09e2630,~
script-source,138,node:_tls_wrap,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototype\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\n} = require('internal/util');\n\nassertCrypto();\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst crypto = require('crypto');\nconst EE = require('events');\nconst net = require('net');\nconst tls = require('tls');\nconst common = require('_tls_common');\nconst JSStreamSocket = require('internal/js_stream_socket');\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('tls'\x2C (fn) => {\n  debug = fn;\n});\nconst { TCP\x2C constants: TCPConstants } = internalBinding('tcp_wrap');\nconst tls_wrap = internalBinding('tls_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { isArrayBufferView } = require('internal/util/types');\nconst { SecureContext: NativeSecureContext } = internalBinding('crypto');\nconst { connResetException\x2C codes } = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_MULTIPLE_CALLBACK\x2C\n  ERR_SOCKET_CLOSED\x2C\n  ERR_TLS_DH_PARAM_SIZE\x2C\n  ERR_TLS_HANDSHAKE_TIMEOUT\x2C\n  ERR_TLS_INVALID_CONTEXT\x2C\n  ERR_TLS_RENEGOTIATION_DISABLED\x2C\n  ERR_TLS_REQUIRED_SERVER_NAME\x2C\n  ERR_TLS_SESSION_ATTACK\x2C\n  ERR_TLS_SNI_FROM_SERVER\x2C\n  ERR_TLS_INVALID_STATE\n} = codes;\nconst { onpskexchange: kOnPskExchange } = internalBinding('symbols');\nconst {\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n} = require('internal/options');\nconst {\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateCallback\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  InternalX509Certificate\n} = require('internal/crypto/x509');\nconst traceTls = getOptionValue('--trace-tls');\nconst tlsKeylog = getOptionValue('--tls-keylog');\nconst { appendFile } = require('fs');\nconst kConnectOptions = Symbol('connect-options');\nconst kDisableRenegotiation = Symbol('disable-renegotiation');\nconst kErrorEmitted = Symbol('error-emitted');\nconst kHandshakeTimeout = Symbol('handshake-timeout');\nconst kRes = Symbol('res');\nconst kSNICallback = Symbol('snicallback');\nconst kEnableTrace = Symbol('enableTrace');\nconst kPskCallback = Symbol('pskcallback');\nconst kPskIdentityHint = Symbol('pskidentityhint');\nconst kPendingSession = Symbol('pendingSession');\nconst kIsVerified = Symbol('verified');\n\nconst noop = FunctionPrototype;\n\nlet ipServernameWarned = false;\nlet tlsTracingWarned = false;\n\n// Server side times how long a handshake is taking to protect against slow\n// handshakes being used for DoS.\nfunction onhandshakestart(now) {\n  debug('server onhandshakestart');\n\n  const { lastHandshakeTime } = this;\n  assert(now >= lastHandshakeTime\x2C\n         `now (${now}) < lastHandshakeTime (${lastHandshakeTime})`);\n\n  this.lastHandshakeTime = now;\n\n  // If this is the first handshake we can skip the rest of the checks.\n  if (lastHandshakeTime === 0)\n    return;\n\n  if ((now - lastHandshakeTime) >= tls.CLIENT_RENEG_WINDOW * 1000)\n    this.handshakes = 1;\n  else\n    this.handshakes++;\n\n  const owner = this[owner_symbol];\n\n  assert(owner._tlsOptions.isServer);\n\n  if (this.handshakes > tls.CLIENT_RENEG_LIMIT) {\n    owner._emitTLSError(new ERR_TLS_SESSION_ATTACK());\n    return;\n  }\n\n  if (owner[kDisableRenegotiation])\n    owner._emitTLSError(new ERR_TLS_RENEGOTIATION_DISABLED());\n}\n\nfunction onhandshakedone() {\n  debug('server onhandshakedone');\n\n  const owner = this[owner_symbol];\n  assert(owner._tlsOptions.isServer);\n\n  // `newSession` callback wasn't called yet\n  if (owner._newSessionPending) {\n    owner._securePending = true;\n    return;\n  }\n\n  owner._finishInit();\n}\n\n\nfunction loadSession(hello) {\n  debug('server onclienthello'\x2C\n        'sessionid.len'\x2C hello.sessionId.length\x2C\n        'ticket?'\x2C hello.tlsTicket\n  );\n  const owner = this[owner_symbol];\n\n  let once = false;\n  function onSession(err\x2C session) {\n    debug('server resumeSession callback(err %j\x2C sess? %s)'\x2C err\x2C !!session);\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    owner._handle.loadSession(session);\n    // Session is loaded. End the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n\n  if (hello.sessionId.length <= 0 ||\n      hello.tlsTicket ||\n      (owner.server &&\n      !owner.server.emit('resumeSession'\x2C hello.sessionId\x2C onSession))) {\n    // Sessions without identifiers can't be resumed.\n    // Sessions with tickets can be resumed directly from the ticket\x2C no server\n    // session storage is necessary.\n    // Without a call to a resumeSession listener\x2C a session will never be\n    // loaded\x2C so end the parser to allow handshaking to continue.\n    owner._handle.endParser();\n  }\n}\n\n\nfunction loadSNI(info) {\n  const owner = this[owner_symbol];\n  const servername = info.servername;\n  if (!servername || !owner._SNICallback)\n    return requestOCSP(owner\x2C info);\n\n  let once = false;\n  owner._SNICallback(servername\x2C (err\x2C context) => {\n    if (once)\n      return owner.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return owner.destroy(err);\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    // TODO(indutny): eventually disallow raw `SecureContext`\n    if (context)\n      owner._handle.sni_context = context.context || context;\n\n    requestOCSP(owner\x2C info);\n  });\n}\n\n\nfunction requestOCSP(socket\x2C info) {\n  if (!info.OCSPRequest || !socket.server)\n    return requestOCSPDone(socket);\n\n  let ctx = socket._handle.sni_context;\n\n  if (!ctx) {\n    ctx = socket.server._sharedCreds;\n\n    // TLS socket is using a `net.Server` instead of a tls.TLSServer.\n    // Some TLS properties like `server._sharedCreds` will not be present\n    if (!ctx)\n      return requestOCSPDone(socket);\n  }\n\n  // TODO(indutny): eventually disallow raw `SecureContext`\n  if (ctx.context)\n    ctx = ctx.context;\n\n  if (socket.server.listenerCount('OCSPRequest') === 0) {\n    return requestOCSPDone(socket);\n  }\n\n  let once = false;\n  const onOCSP = (err\x2C response) => {\n    debug('server OCSPRequest done'\x2C 'handle?'\x2C !!socket._handle\x2C 'once?'\x2C once\x2C\n          'response?'\x2C !!response\x2C 'err?'\x2C err);\n    if (once)\n      return socket.destroy(new ERR_MULTIPLE_CALLBACK());\n    once = true;\n\n    if (err)\n      return socket.destroy(err);\n\n    if (socket._handle === null)\n      return socket.destroy(new ERR_SOCKET_CLOSED());\n\n    if (response)\n      socket._handle.setOCSPResponse(response);\n    requestOCSPDone(socket);\n  };\n\n  debug('server oncertcb emit OCSPRequest');\n  socket.server.emit('OCSPRequest'\x2C\n                     ctx.getCertificate()\x2C\n                     ctx.getIssuer()\x2C\n                     onOCSP);\n}\n\nfunction requestOCSPDone(socket) {\n  debug('server certcb done');\n  try {\n    socket._handle.certCbDone();\n  } catch (e) {\n    debug('server certcb done errored'\x2C e);\n    socket.destroy(e);\n  }\n}\n\nfunction onnewsessionclient(sessionId\x2C session) {\n  debug('client emit session');\n  const owner = this[owner_symbol];\n  if (owner[kIsVerified]) {\n    owner.emit('session'\x2C session);\n  } else {\n    owner[kPendingSession] = session;\n  }\n}\n\nfunction onnewsession(sessionId\x2C session) {\n  debug('onnewsession');\n  const owner = this[owner_symbol];\n\n  // TODO(@sam-github) no server to emit the event on\x2C but handshake won't\n  // continue unless newSessionDone() is called\x2C should it be\x2C or is that\n  // situation unreachable\x2C or only occurring during shutdown?\n  if (!owner.server)\n    return;\n\n  let once = false;\n  const done = () => {\n    debug('onnewsession done');\n    if (once)\n      return;\n    once = true;\n\n    if (owner._handle === null)\n      return owner.destroy(new ERR_SOCKET_CLOSED());\n\n    this.newSessionDone();\n\n    owner._newSessionPending = false;\n    if (owner._securePending)\n      owner._finishInit();\n    owner._securePending = false;\n  };\n\n  owner._newSessionPending = true;\n  if (!owner.server.emit('newSession'\x2C sessionId\x2C session\x2C done))\n    done();\n}\n\nfunction onPskServerCallback(identity\x2C maxPskLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](owner\x2C identity);\n  if (ret == null)\n    return undefined;\n\n  let psk;\n  if (isArrayBufferView(ret)) {\n    psk = ret;\n  } else {\n    if (typeof ret !== 'object') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'ret'\x2C\n        ['Object'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        ret\n      );\n    }\n    psk = ret.psk;\n    validateBuffer(psk\x2C 'psk');\n  }\n\n  if (psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\n    );\n  }\n\n  return psk;\n}\n\nfunction onPskClientCallback(hint\x2C maxPskLen\x2C maxIdentityLen) {\n  const owner = this[owner_symbol];\n  const ret = owner[kPskCallback](hint);\n  if (ret == null)\n    return undefined;\n\n  validateObject(ret\x2C 'ret');\n\n  validateBuffer(ret.psk\x2C 'psk');\n  if (ret.psk.length > maxPskLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'psk'\x2C\n      ret.psk\x2C\n      `Pre-shared key exceeds ${maxPskLen} bytes`\n    );\n  }\n\n  validateString(ret.identity\x2C 'identity');\n  if (Buffer.byteLength(ret.identity) > maxIdentityLen) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'identity'\x2C\n      ret.identity\x2C\n      `PSK identity exceeds ${maxIdentityLen} bytes`\n    );\n  }\n\n  return { psk: ret.psk\x2C identity: ret.identity };\n}\n\nfunction onkeylog(line) {\n  debug('onkeylog');\n  this[owner_symbol].emit('keylog'\x2C line);\n}\n\nfunction onocspresponse(resp) {\n  debug('client onocspresponse');\n  this[owner_symbol].emit('OCSPResponse'\x2C resp);\n}\n\nfunction onerror(err) {\n  const owner = this[owner_symbol];\n  debug('%s onerror %s had? %j'\x2C\n        owner._tlsOptions.isServer ? 'server' : 'client'\x2C err\x2C\n        owner._hadError);\n\n  if (owner._hadError)\n    return;\n\n  owner._hadError = true;\n\n  // Destroy socket if error happened before handshake's finish\n  if (!owner._secureEstablished) {\n    // When handshake fails control is not yet released\x2C\n    // so self._tlsError will return null instead of actual error\n    owner.destroy(err);\n  } else if (owner._tlsOptions.isServer &&\n             owner._rejectUnauthorized &&\n             RegExpPrototypeTest(/peer did not return a certificate/\x2C\n                                 err.message)) {\n    // Ignore server's authorization errors\n    owner.destroy();\n  } else {\n    // Emit error\n    owner._emitTLSError(err);\n  }\n}\n\n// Used by both client and server TLSSockets to start data flowing from _handle\x2C\n// read(0) causes a StreamBase::ReadStart\x2C via Socket._read.\nfunction initRead(tlsSocket\x2C socket) {\n  debug('%s initRead'\x2C\n        tlsSocket._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!tlsSocket._handle\x2C\n        'buffered?'\x2C !!socket && socket.readableLength\n  );\n  // If we were destroyed already don't bother reading\n  if (!tlsSocket._handle)\n    return;\n\n  // Socket already has some buffered data - emulate receiving it\n  if (socket && socket.readableLength) {\n    let buf;\n    while ((buf = socket.read()) !== null)\n      tlsSocket._handle.receive(buf);\n  }\n\n  tlsSocket.read(0);\n}\n\n/**\n * Provides a wrap of socket stream to do encrypted communication.\n */\n\nfunction TLSSocket(socket\x2C opts) {\n  const tlsOptions = { ...opts };\n  let enableTrace = tlsOptions.enableTrace;\n\n  if (enableTrace == null) {\n    enableTrace = traceTls;\n\n    if (enableTrace && !tlsTracingWarned) {\n      tlsTracingWarned = true;\n      process.emitWarning('Enabling --trace-tls can expose sensitive data in ' +\n                          'the resulting log.');\n    }\n  } else {\n    validateBoolean(enableTrace\x2C 'options.enableTrace');\n  }\n\n  if (tlsOptions.ALPNProtocols)\n    tls.convertALPNProtocols(tlsOptions.ALPNProtocols\x2C tlsOptions);\n\n  this._tlsOptions = tlsOptions;\n  this._secureEstablished = false;\n  this._securePending = false;\n  this._newSessionPending = false;\n  this._controlReleased = false;\n  this.secureConnecting = true;\n  this._SNICallback = null;\n  this.servername = null;\n  this.alpnProtocol = null;\n  this.authorized = false;\n  this.authorizationError = null;\n  this[kRes] = null;\n  this[kIsVerified] = false;\n  this[kPendingSession] = null;\n\n  let wrap;\n  if ((socket instanceof net.Socket && socket._handle) || !socket) {\n    // 1. connected socket\n    // 2. no socket\x2C one will be created with net.Socket().connect\n    wrap = socket;\n  } else {\n    // 3. socket has no handle so it is js not c++\n    // 4. unconnected sockets are wrapped\n    // TLS expects to interact from C++ with a net.Socket that has a C++ stream\n    // handle\x2C but a JS stream doesn't have one. Wrap it up to make it look like\n    // a socket.\n    wrap = new JSStreamSocket(socket);\n  }\n\n  // Just a documented property to make secure sockets\n  // distinguishable from regular ones.\n  this.encrypted = true;\n\n  ReflectApply(net.Socket\x2C this\x2C [{\n    handle: this._wrapHandle(wrap)\x2C\n    allowHalfOpen: socket ? socket.allowHalfOpen : tlsOptions.allowHalfOpen\x2C\n    pauseOnCreate: tlsOptions.pauseOnConnect\x2C\n    manualStart: true\x2C\n    highWaterMark: tlsOptions.highWaterMark\x2C\n    onread: !socket ? tlsOptions.onread : null\x2C\n    signal: tlsOptions.signal\x2C\n  }]);\n\n  // Proxy for API compatibility\n  this.ssl = this._handle;  // C++ TLSWrap object\n\n  this.on('error'\x2C this._tlsError);\n\n  this._init(socket\x2C wrap);\n\n  if (enableTrace && this._handle)\n    this._handle.enableTrace();\n\n  // Read on next tick so the caller has a chance to setup listeners\n  process.nextTick(initRead\x2C this\x2C socket);\n}\nObjectSetPrototypeOf(TLSSocket.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(TLSSocket\x2C net.Socket);\nexports.TLSSocket = TLSSocket;\n\nconst proxiedMethods = [\n  'ref'\x2C 'unref'\x2C 'open'\x2C 'bind'\x2C 'listen'\x2C 'connect'\x2C 'bind6'\x2C\n  'connect6'\x2C 'getsockname'\x2C 'getpeername'\x2C 'setNoDelay'\x2C 'setKeepAlive'\x2C\n  'setSimultaneousAccepts'\x2C 'setBlocking'\x2C\n\n  // PipeWrap\n  'setPendingInstances'\x2C\n];\n\n// Proxy HandleWrap\x2C PipeWrap and TCPWrap methods\nfunction makeMethodProxy(name) {\n  return function methodProxy(...args) {\n    if (this._parent[name])\n      return ReflectApply(this._parent[name]\x2C this._parent\x2C args);\n  };\n}\nfor (const proxiedMethod of proxiedMethods) {\n  tls_wrap.TLSWrap.prototype[proxiedMethod] =\n    makeMethodProxy(proxiedMethod);\n}\n\ntls_wrap.TLSWrap.prototype.close = function close(cb) {\n  let ssl;\n  if (this[owner_symbol]) {\n    ssl = this[owner_symbol].ssl;\n    this[owner_symbol].ssl = null;\n  }\n\n  // Invoke `destroySSL` on close to clean up possibly pending write requests\n  // that may self-reference TLSWrap\x2C leading to leak\n  const done = () => {\n    if (ssl) {\n      ssl.destroySSL();\n      if (ssl._secureContext.singleUse) {\n        ssl._secureContext.context.close();\n        ssl._secureContext.context = null;\n      }\n    }\n    if (cb)\n      cb();\n  };\n\n  if (this._parentWrap && this._parentWrap._handle === this._parent) {\n    this._parentWrap.once('close'\x2C done);\n    return this._parentWrap.destroy();\n  }\n  return this._parent.close(done);\n};\n\nTLSSocket.prototype.disableRenegotiation = function disableRenegotiation() {\n  this[kDisableRenegotiation] = true;\n};\n\nTLSSocket.prototype._wrapHandle = function(wrap) {\n  let handle;\n\n  if (wrap)\n    handle = wrap._handle;\n\n  const options = this._tlsOptions;\n  if (!handle) {\n    handle = options.pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    handle[owner_symbol] = this;\n  }\n\n  // Wrap socket's handle\n  const context = options.secureContext ||\n                  options.credentials ||\n                  tls.createSecureContext(options);\n  assert(handle.isStreamBase\x2C 'handle must be a StreamBase');\n  if (!(context.context instanceof NativeSecureContext)) {\n    throw new ERR_TLS_INVALID_CONTEXT('context');\n  }\n  const res = tls_wrap.wrap(handle\x2C context.context\x2C !!options.isServer);\n  res._parent = handle;  // C++ "wrap" object: TCPWrap\x2C JSStream\x2C ...\n  res._parentWrap = wrap;  // JS object: net.Socket\x2C JSStreamSocket\x2C ...\n  res._secureContext = context;\n  res.reading = handle.reading;\n  this[kRes] = res;\n  defineHandleReading(this\x2C handle);\n\n  this.on('close'\x2C onSocketCloseDestroySSL);\n\n  return res;\n};\n\n// This eliminates a cyclic reference to TLSWrap\n// Ref: https://github.com/nodejs/node/commit/f7620fb96d339f704932f9bb9a0dceb9952df2d4\nfunction defineHandleReading(socket\x2C handle) {\n  ObjectDefineProperty(handle\x2C 'reading'\x2C {\n    get: () => {\n      return socket[kRes].reading;\n    }\x2C\n    set: (value) => {\n      socket[kRes].reading = value;\n    }\n  });\n}\n\nfunction onSocketCloseDestroySSL() {\n  // Make sure we are not doing it on OpenSSL's stack\n  setImmediate(destroySSL\x2C this);\n  this[kRes] = null;\n}\n\nfunction destroySSL(self) {\n  self._destroySSL();\n}\n\nTLSSocket.prototype._destroySSL = function _destroySSL() {\n  if (!this.ssl) return;\n  this.ssl.destroySSL();\n  if (this.ssl._secureContext.singleUse) {\n    this.ssl._secureContext.context.close();\n    this.ssl._secureContext.context = null;\n  }\n  this.ssl = null;\n  this[kPendingSession] = null;\n  this[kIsVerified] = false;\n};\n\n// Constructor guts\x2C arbitrarily factored out.\nlet warnOnTlsKeylog = true;\nlet warnOnTlsKeylogError = true;\nTLSSocket.prototype._init = function(socket\x2C wrap) {\n  const options = this._tlsOptions;\n  const ssl = this._handle;\n  this.server = options.server;\n\n  debug('%s _init'\x2C\n        options.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!ssl\n  );\n\n  // Clients (!isServer) always request a cert\x2C servers request a client cert\n  // only on explicit configuration.\n  const requestCert = !!options.requestCert || !options.isServer;\n  const rejectUnauthorized = !!options.rejectUnauthorized;\n\n  this._requestCert = requestCert;\n  this._rejectUnauthorized = rejectUnauthorized;\n  if (requestCert || rejectUnauthorized)\n    ssl.setVerifyMode(requestCert\x2C rejectUnauthorized);\n\n  // Only call .onkeylog if there is a keylog listener.\n  ssl.onkeylog = onkeylog;\n  this.on('newListener'\x2C keylogNewListener);\n\n  function keylogNewListener(event) {\n    if (event !== 'keylog')\n      return;\n\n    // Guard against enableKeylogCallback after destroy\n    if (!this._handle) return;\n    this._handle.enableKeylogCallback();\n\n    // Remove this listener since it's no longer needed.\n    this.removeListener('newListener'\x2C keylogNewListener);\n  }\n\n  if (options.isServer) {\n    ssl.onhandshakestart = onhandshakestart;\n    ssl.onhandshakedone = onhandshakedone;\n    ssl.onclienthello = loadSession;\n    ssl.oncertcb = loadSNI;\n    ssl.onnewsession = onnewsession;\n    ssl.lastHandshakeTime = 0;\n    ssl.handshakes = 0;\n\n    if (this.server) {\n      if (this.server.listenerCount('resumeSession') > 0 ||\n          this.server.listenerCount('newSession') > 0) {\n        // Also starts the client hello parser as a side effect.\n        ssl.enableSessionCallbacks();\n      }\n      if (this.server.listenerCount('OCSPRequest') > 0)\n        ssl.enableCertCb();\n    }\n  } else {\n    ssl.onhandshakestart = noop;\n    ssl.onhandshakedone = () => {\n      debug('client onhandshakedone');\n      this._finishInit();\n    };\n    ssl.onocspresponse = onocspresponse;\n\n    if (options.session)\n      ssl.setSession(options.session);\n\n    ssl.onnewsession = onnewsessionclient;\n\n    // Only call .onnewsession if there is a session listener.\n    this.on('newListener'\x2C newListener);\n\n    function newListener(event) {\n      if (event !== 'session')\n        return;\n\n      // Guard against enableSessionCallbacks after destroy\n      if (!this._handle) return;\n      this._handle.enableSessionCallbacks();\n\n      // Remove this listener since it's no longer needed.\n      this.removeListener('newListener'\x2C newListener);\n    }\n  }\n\n  if (tlsKeylog) {\n    if (warnOnTlsKeylog) {\n      warnOnTlsKeylog = false;\n      process.emitWarning('Using --tls-keylog makes TLS connections insecure ' +\n        'by writing secret key material to file ' + tlsKeylog);\n    }\n    this.on('keylog'\x2C (line) => {\n      appendFile(tlsKeylog\x2C line\x2C { mode: 0o600 }\x2C (err) => {\n        if (err && warnOnTlsKeylogError) {\n          warnOnTlsKeylogError = false;\n          process.emitWarning('Failed to write TLS keylog (this warning ' +\n            'will not be repeated): ' + err);\n        }\n      });\n    });\n  }\n\n  ssl.onerror = onerror;\n\n  // If custom SNICallback was given\x2C or if\n  // there're SNI contexts to perform match against -\n  // set `.onsniselect` callback.\n  if (options.isServer &&\n      options.SNICallback &&\n      (options.SNICallback !== SNICallback ||\n       (options.server && options.server._contexts.length))) {\n    assert(typeof options.SNICallback === 'function');\n    this._SNICallback = options.SNICallback;\n    ssl.enableCertCb();\n  }\n\n  if (options.ALPNProtocols) {\n    // Keep reference in secureContext not to be GC-ed\n    ssl._secureContext.alpnBuffer = options.ALPNProtocols;\n    ssl.setALPNProtocols(ssl._secureContext.alpnBuffer);\n  }\n\n  if (options.pskCallback && ssl.enablePskCallback) {\n    validateFunction(options.pskCallback\x2C 'pskCallback');\n\n    ssl[kOnPskExchange] = options.isServer ?\n      onPskServerCallback : onPskClientCallback;\n\n    this[kPskCallback] = options.pskCallback;\n    ssl.enablePskCallback();\n\n    if (options.pskIdentityHint) {\n      validateString(options.pskIdentityHint\x2C 'options.pskIdentityHint');\n      ssl.setPskIdentityHint(options.pskIdentityHint);\n    }\n  }\n\n\n  if (options.handshakeTimeout > 0)\n    this.setTimeout(options.handshakeTimeout\x2C this._handleTimeout);\n\n  if (socket instanceof net.Socket) {\n    this._parent = socket;\n\n    // To prevent assertion in afterConnect() and properly kick off readStart\n    this.connecting = socket.connecting || !socket._handle;\n    socket.once('connect'\x2C () => {\n      this.connecting = false;\n      this.emit('connect');\n    });\n  }\n\n  // Assume `tls.connect()`\n  if (wrap) {\n    wrap.on('error'\x2C (err) => this._emitTLSError(err));\n  } else {\n    assert(!socket);\n    this.connecting = true;\n  }\n};\n\nTLSSocket.prototype.renegotiate = function(options\x2C callback) {\n  validateObject(options\x2C 'options');\n  if (callback !== undefined) {\n    validateCallback(callback);\n  }\n\n  debug('%s renegotiate()'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'destroyed?'\x2C this.destroyed\n  );\n\n  if (this.destroyed)\n    return;\n\n  let requestCert = !!this._requestCert;\n  let rejectUnauthorized = !!this._rejectUnauthorized;\n\n  if (options.requestCert !== undefined)\n    requestCert = !!options.requestCert;\n  if (options.rejectUnauthorized !== undefined)\n    rejectUnauthorized = !!options.rejectUnauthorized;\n\n  if (requestCert !== this._requestCert ||\n      rejectUnauthorized !== this._rejectUnauthorized) {\n    this._handle.setVerifyMode(requestCert\x2C rejectUnauthorized);\n    this._requestCert = requestCert;\n    this._rejectUnauthorized = rejectUnauthorized;\n  }\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  try {\n    this._handle.renegotiate();\n  } catch (err) {\n    if (callback) {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  // Ensure that we'll cycle through internal openssl's state\n  this.write('');\n\n  if (callback) {\n    this.once('secure'\x2C () => callback(null));\n  }\n\n  return true;\n};\n\nTLSSocket.prototype.exportKeyingMaterial = function(length\x2C label\x2C context) {\n  validateUint32(length\x2C 'length'\x2C true);\n  validateString(label\x2C 'label');\n  if (context !== undefined)\n    validateBuffer(context\x2C 'context');\n\n  if (!this._secureEstablished)\n    throw new ERR_TLS_INVALID_STATE();\n\n  return this._handle.exportKeyingMaterial(length\x2C label\x2C context);\n};\n\nTLSSocket.prototype.setMaxSendFragment = function setMaxSendFragment(size) {\n  validateInt32(size\x2C 'size');\n  return this._handle.setMaxSendFragment(size) === 1;\n};\n\nTLSSocket.prototype._handleTimeout = function() {\n  this._emitTLSError(new ERR_TLS_HANDSHAKE_TIMEOUT());\n};\n\nTLSSocket.prototype._emitTLSError = function(err) {\n  const e = this._tlsError(err);\n  if (e)\n    this.emit('error'\x2C e);\n};\n\nTLSSocket.prototype._tlsError = function(err) {\n  this.emit('_tlsError'\x2C err);\n  if (this._controlReleased)\n    return err;\n  return null;\n};\n\nTLSSocket.prototype._releaseControl = function() {\n  if (this._controlReleased)\n    return false;\n  this._controlReleased = true;\n  this.removeListener('error'\x2C this._tlsError);\n  return true;\n};\n\nTLSSocket.prototype._finishInit = function() {\n  // Guard against getting onhandshakedone() after .destroy().\n  // * 1.2: If destroy() during onocspresponse()\x2C then write of next handshake\n  // record fails\x2C the handshake done info callbacks does not occur\x2C and the\n  // socket closes.\n  // * 1.3: The OCSP response comes in the same record that finishes handshake\x2C\n  // so even after .destroy()\x2C the handshake done info callback occurs\n  // immediately after onocspresponse(). Ignore it.\n  if (!this._handle)\n    return;\n\n  this.alpnProtocol = this._handle.getALPNNegotiatedProtocol();\n  // The servername could be set by TLSWrap::SelectSNIContextCallback().\n  if (this.servername === null) {\n    this.servername = this._handle.getServername();\n  }\n\n  debug('%s _finishInit'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'alpn'\x2C this.alpnProtocol\x2C\n        'servername'\x2C this.servername);\n\n  this._secureEstablished = true;\n  if (this._tlsOptions.handshakeTimeout > 0)\n    this.setTimeout(0\x2C this._handleTimeout);\n  this.emit('secure');\n};\n\nTLSSocket.prototype._start = function() {\n  debug('%s _start'\x2C\n        this._tlsOptions.isServer ? 'server' : 'client'\x2C\n        'handle?'\x2C !!this._handle\x2C\n        'connecting?'\x2C this.connecting\x2C\n        'requestOCSP?'\x2C !!this._tlsOptions.requestOCSP\x2C\n  );\n  if (this.connecting) {\n    this.once('connect'\x2C this._start);\n    return;\n  }\n\n  // Socket was destroyed before the connection was established\n  if (!this._handle)\n    return;\n\n  if (this._tlsOptions.requestOCSP)\n    this._handle.requestOCSP();\n  this._handle.start();\n};\n\nTLSSocket.prototype.setServername = function(name) {\n  validateString(name\x2C 'name');\n\n  if (this._tlsOptions.isServer) {\n    throw new ERR_TLS_SNI_FROM_SERVER();\n  }\n\n  this._handle.setServername(name);\n};\n\nTLSSocket.prototype.setSession = function(session) {\n  if (typeof session === 'string')\n    session = Buffer.from(session\x2C 'latin1');\n  this._handle.setSession(session);\n};\n\nTLSSocket.prototype.getPeerCertificate = function(detailed) {\n  if (this._handle) {\n    return common.translatePeerCertificate(\n      this._handle.getPeerCertificate(detailed)) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getCertificate = function() {\n  if (this._handle) {\n    // It's not a peer cert\x2C but the formatting is identical.\n    return common.translatePeerCertificate(\n      this._handle.getCertificate()) || {};\n  }\n\n  return null;\n};\n\nTLSSocket.prototype.getPeerX509Certificate = function(detailed) {\n  const cert = this._handle?.getPeerX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\nTLSSocket.prototype.getX509Certificate = function() {\n  const cert = this._handle?.getX509Certificate();\n  return cert ? new InternalX509Certificate(cert) : undefined;\n};\n\n// Proxy TLSSocket handle methods\nfunction makeSocketMethodProxy(name) {\n  return function socketMethodProxy(...args) {\n    if (this._handle)\n      return ReflectApply(this._handle[name]\x2C this._handle\x2C args);\n    return null;\n  };\n}\n\nArrayPrototypeForEach([\n  'getCipher'\x2C\n  'getSharedSigalgs'\x2C\n  'getEphemeralKeyInfo'\x2C\n  'getFinished'\x2C\n  'getPeerFinished'\x2C\n  'getProtocol'\x2C\n  'getSession'\x2C\n  'getTLSTicket'\x2C\n  'isSessionReused'\x2C\n  'enableTrace'\x2C\n]\x2C (method) => {\n  TLSSocket.prototype[method] = makeSocketMethodProxy(method);\n});\n\n// TODO: support anonymous (nocert)\n\n\nfunction onServerSocketSecure() {\n  if (this._requestCert) {\n    const verifyError = this._handle.verifyError();\n    if (verifyError) {\n      this.authorizationError = verifyError.code;\n\n      if (this._rejectUnauthorized)\n        this.destroy();\n    } else {\n      this.authorized = true;\n    }\n  }\n\n  if (!this.destroyed && this._releaseControl()) {\n    debug('server emit secureConnection');\n    this.secureConnecting = false;\n    this._tlsOptions.server.emit('secureConnection'\x2C this);\n  }\n}\n\nfunction onSocketTLSError(err) {\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    debug('server emit tlsClientError:'\x2C err);\n    this._tlsOptions.server.emit('tlsClientError'\x2C err\x2C this);\n  }\n}\n\nfunction onSocketKeylog(line) {\n  this._tlsOptions.server.emit('keylog'\x2C line\x2C this);\n}\n\nfunction onSocketClose(err) {\n  // Closed because of error - no need to emit it twice\n  if (err)\n    return;\n\n  // Emit ECONNRESET\n  if (!this._controlReleased && !this[kErrorEmitted]) {\n    this[kErrorEmitted] = true;\n    const connReset = connResetException('socket hang up');\n    this._tlsOptions.server.emit('tlsClientError'\x2C connReset\x2C this);\n  }\n}\n\nfunction tlsConnectionListener(rawSocket) {\n  debug('net.Server.on(connection): new TLSSocket');\n  const socket = new TLSSocket(rawSocket\x2C {\n    secureContext: this._sharedCreds\x2C\n    isServer: true\x2C\n    server: this\x2C\n    requestCert: this.requestCert\x2C\n    rejectUnauthorized: this.rejectUnauthorized\x2C\n    handshakeTimeout: this[kHandshakeTimeout]\x2C\n    ALPNProtocols: this.ALPNProtocols\x2C\n    SNICallback: this[kSNICallback] || SNICallback\x2C\n    enableTrace: this[kEnableTrace]\x2C\n    pauseOnConnect: this.pauseOnConnect\x2C\n    pskCallback: this[kPskCallback]\x2C\n    pskIdentityHint: this[kPskIdentityHint]\x2C\n  });\n\n  socket.on('secure'\x2C onServerSocketSecure);\n\n  if (this.listenerCount('keylog') > 0)\n    socket.on('keylog'\x2C onSocketKeylog);\n\n  socket[kErrorEmitted] = false;\n  socket.on('close'\x2C onSocketClose);\n  socket.on('_tlsError'\x2C onSocketTLSError);\n}\n\n// AUTHENTICATION MODES\n//\n// There are several levels of authentication that TLS/SSL supports.\n// Read more about this in "man SSL_set_verify".\n//\n// 1. The server sends a certificate to the client but does not request a\n// cert from the client. This is common for most HTTPS servers. The browser\n// can verify the identity of the server\x2C but the server does not know who\n// the client is. Authenticating the client is usually done over HTTP using\n// login boxes and cookies and stuff.\n//\n// 2. The server sends a cert to the client and requests that the client\n// also send it a cert. The client knows who the server is and the server is\n// requesting the client also identify themselves. There are several\n// outcomes:\n//\n//   A) verifyError returns null meaning the client's certificate is signed\n//   by one of the server's CAs. The server now knows the client's identity\n//   and the client is authorized.\n//\n//   B) For some reason the client's certificate is not acceptable -\n//   verifyError returns a string indicating the problem. The server can\n//   either (i) reject the client or (ii) allow the client to connect as an\n//   unauthorized connection.\n//\n// The mode is controlled by two boolean variables.\n//\n// requestCert\n//   If true the server requests a certificate from client connections. For\n//   the common HTTPS case\x2C users will want this to be false\x2C which is what\n//   it defaults to.\n//\n// rejectUnauthorized\n//   If true clients whose certificates are invalid for any reason will not\n//   be allowed to make connections. If false\x2C they will simply be marked as\n//   unauthorized but secure communication will continue. By default this is\n//   true.\n//\n//\n//\n// Options:\n// - requestCert. Send verify request. Default to false.\n// - rejectUnauthorized. Boolean\x2C default to true.\n// - key. string.\n// - cert: string.\n// - clientCertEngine: string.\n// - ca: string or array of strings.\n// - sessionTimeout: integer.\n//\n// emit 'secureConnection'\n//   function (tlsSocket) { }\n//\n//   "UNABLE_TO_GET_ISSUER_CERT"\x2C "UNABLE_TO_GET_CRL"\x2C\n//   "UNABLE_TO_DECRYPT_CERT_SIGNATURE"\x2C "UNABLE_TO_DECRYPT_CRL_SIGNATURE"\x2C\n//   "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY"\x2C "CERT_SIGNATURE_FAILURE"\x2C\n//   "CRL_SIGNATURE_FAILURE"\x2C "CERT_NOT_YET_VALID" "CERT_HAS_EXPIRED"\x2C\n//   "CRL_NOT_YET_VALID"\x2C "CRL_HAS_EXPIRED" "ERROR_IN_CERT_NOT_BEFORE_FIELD"\x2C\n//   "ERROR_IN_CERT_NOT_AFTER_FIELD"\x2C "ERROR_IN_CRL_LAST_UPDATE_FIELD"\x2C\n//   "ERROR_IN_CRL_NEXT_UPDATE_FIELD"\x2C "OUT_OF_MEM"\x2C\n//   "DEPTH_ZERO_SELF_SIGNED_CERT"\x2C "SELF_SIGNED_CERT_IN_CHAIN"\x2C\n//   "UNABLE_TO_GET_ISSUER_CERT_LOCALLY"\x2C "UNABLE_TO_VERIFY_LEAF_SIGNATURE"\x2C\n//   "CERT_CHAIN_TOO_LONG"\x2C "CERT_REVOKED" "INVALID_CA"\x2C\n//   "PATH_LENGTH_EXCEEDED"\x2C "INVALID_PURPOSE" "CERT_UNTRUSTED"\x2C\n//   "CERT_REJECTED"\n//\nfunction Server(options\x2C listener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C listener);\n\n  if (typeof options === 'function') {\n    listener = options;\n    options = {};\n  } else if (options == null || typeof options === 'object') {\n    options = options || {};\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n\n  this._contexts = [];\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n\n  this.setSecureContext(options);\n\n  this[kHandshakeTimeout] = options.handshakeTimeout || (120 * 1000);\n  this[kSNICallback] = options.SNICallback;\n  this[kPskCallback] = options.pskCallback;\n  this[kPskIdentityHint] = options.pskIdentityHint;\n\n  validateNumber(this[kHandshakeTimeout]\x2C 'options.handshakeTimeout');\n\n  if (this[kSNICallback] && typeof this[kSNICallback] !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.SNICallback'\x2C 'function'\x2C options.SNICallback);\n  }\n\n  if (this[kPskCallback] && typeof this[kPskCallback] !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.pskCallback'\x2C 'function'\x2C options.pskCallback);\n  }\n  if (this[kPskIdentityHint] && typeof this[kPskIdentityHint] !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.pskIdentityHint'\x2C\n      'string'\x2C\n      options.pskIdentityHint\n    );\n  }\n\n  // constructor call\n  ReflectApply(net.Server\x2C this\x2C [options\x2C tlsConnectionListener]);\n\n  if (listener) {\n    this.on('secureConnection'\x2C listener);\n  }\n\n  this[kEnableTrace] = options.enableTrace;\n}\n\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\nexports.Server = Server;\nexports.createServer = function createServer(options\x2C listener) {\n  return new Server(options\x2C listener);\n};\n\n\nServer.prototype.setSecureContext = function(options) {\n  validateObject(options\x2C 'options');\n\n  if (options.pfx)\n    this.pfx = options.pfx;\n  else\n    this.pfx = undefined;\n\n  if (options.key)\n    this.key = options.key;\n  else\n    this.key = undefined;\n\n  if (options.passphrase)\n    this.passphrase = options.passphrase;\n  else\n    this.passphrase = undefined;\n\n  if (options.cert)\n    this.cert = options.cert;\n  else\n    this.cert = undefined;\n\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  else\n    this.clientCertEngine = undefined;\n\n  if (options.ca)\n    this.ca = options.ca;\n  else\n    this.ca = undefined;\n\n  if (options.minVersion)\n    this.minVersion = options.minVersion;\n  else\n    this.minVersion = undefined;\n\n  if (options.maxVersion)\n    this.maxVersion = options.maxVersion;\n  else\n    this.maxVersion = undefined;\n\n  if (options.secureProtocol)\n    this.secureProtocol = options.secureProtocol;\n  else\n    this.secureProtocol = undefined;\n\n  if (options.crl)\n    this.crl = options.crl;\n  else\n    this.crl = undefined;\n\n  this.sigalgs = options.sigalgs;\n\n  if (options.ciphers)\n    this.ciphers = options.ciphers;\n  else\n    this.ciphers = undefined;\n\n  this.ecdhCurve = options.ecdhCurve;\n\n  if (options.dhparam)\n    this.dhparam = options.dhparam;\n  else\n    this.dhparam = undefined;\n\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n\n  const secureOptions = options.secureOptions || 0;\n\n  if (secureOptions)\n    this.secureOptions = secureOptions;\n  else\n    this.secureOptions = undefined;\n\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = StringPrototypeSlice(\n      crypto.createHash('sha1')\n        .update(ArrayPrototypeJoin(process.argv\x2C ' '))\n        .digest('hex')\x2C 0\x2C 32);\n  }\n\n  if (options.sessionTimeout)\n    this.sessionTimeout = options.sessionTimeout;\n\n  if (options.ticketKeys)\n    this.ticketKeys = options.ticketKeys;\n\n  this.privateKeyIdentifier = options.privateKeyIdentifier;\n  this.privateKeyEngine = options.privateKeyEngine;\n\n  this._sharedCreds = tls.createSecureContext({\n    pfx: this.pfx\x2C\n    key: this.key\x2C\n    passphrase: this.passphrase\x2C\n    cert: this.cert\x2C\n    clientCertEngine: this.clientCertEngine\x2C\n    ca: this.ca\x2C\n    ciphers: this.ciphers\x2C\n    sigalgs: this.sigalgs\x2C\n    ecdhCurve: this.ecdhCurve\x2C\n    dhparam: this.dhparam\x2C\n    minVersion: this.minVersion\x2C\n    maxVersion: this.maxVersion\x2C\n    secureProtocol: this.secureProtocol\x2C\n    secureOptions: this.secureOptions\x2C\n    honorCipherOrder: this.honorCipherOrder\x2C\n    crl: this.crl\x2C\n    sessionIdContext: this.sessionIdContext\x2C\n    ticketKeys: this.ticketKeys\x2C\n    sessionTimeout: this.sessionTimeout\x2C\n    privateKeyIdentifier: this.privateKeyIdentifier\x2C\n    privateKeyEngine: this.privateKeyEngine\x2C\n  });\n};\n\n\nServer.prototype._getServerData = function() {\n  return {\n    ticketKeys: this.getTicketKeys().toString('hex')\n  };\n};\n\n\nServer.prototype._setServerData = function(data) {\n  this.setTicketKeys(Buffer.from(data.ticketKeys\x2C 'hex'));\n};\n\n\nServer.prototype.getTicketKeys = function getTicketKeys() {\n  return this._sharedCreds.context.getTicketKeys();\n};\n\n\nServer.prototype.setTicketKeys = function setTicketKeys(keys) {\n  validateBuffer(keys);\n  assert(keys.byteLength === 48\x2C\n         'Session ticket keys must be a 48-byte buffer');\n  this._sharedCreds.context.setTicketKeys(keys);\n};\n\n\nServer.prototype.setOptions = deprecate(function(options) {\n  this.requestCert = options.requestCert === true;\n  this.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  if (options.pfx) this.pfx = options.pfx;\n  if (options.key) this.key = options.key;\n  if (options.passphrase) this.passphrase = options.passphrase;\n  if (options.cert) this.cert = options.cert;\n  if (options.clientCertEngine)\n    this.clientCertEngine = options.clientCertEngine;\n  if (options.ca) this.ca = options.ca;\n  if (options.minVersion) this.minVersion = options.minVersion;\n  if (options.maxVersion) this.maxVersion = options.maxVersion;\n  if (options.secureProtocol) this.secureProtocol = options.secureProtocol;\n  if (options.crl) this.crl = options.crl;\n  if (options.ciphers) this.ciphers = options.ciphers;\n  if (options.ecdhCurve !== undefined)\n    this.ecdhCurve = options.ecdhCurve;\n  if (options.dhparam) this.dhparam = options.dhparam;\n  if (options.sessionTimeout) this.sessionTimeout = options.sessionTimeout;\n  if (options.ticketKeys) this.ticketKeys = options.ticketKeys;\n  const secureOptions = options.secureOptions || 0;\n  if (options.honorCipherOrder !== undefined)\n    this.honorCipherOrder = !!options.honorCipherOrder;\n  else\n    this.honorCipherOrder = true;\n  if (secureOptions) this.secureOptions = secureOptions;\n  if (options.ALPNProtocols)\n    tls.convertALPNProtocols(options.ALPNProtocols\x2C this);\n  if (options.sessionIdContext) {\n    this.sessionIdContext = options.sessionIdContext;\n  } else {\n    this.sessionIdContext = StringPrototypeSlice(\n      crypto.createHash('sha1')\n        .update(ArrayPrototypeJoin(process.argv\x2C ' '))\n        .digest('hex')\x2C 0\x2C 32);\n  }\n  if (options.pskCallback) this[kPskCallback] = options.pskCallback;\n  if (options.pskIdentityHint) this[kPskIdentityHint] = options.pskIdentityHint;\n  if (options.sigalgs) this.sigalgs = options.sigalgs;\n  if (options.privateKeyIdentifier !== undefined)\n    this.privateKeyIdentifier = options.privateKeyIdentifier;\n  if (options.privateKeyEngine !== undefined)\n    this.privateKeyEngine = options.privateKeyEngine;\n}\x2C 'Server.prototype.setOptions() is deprecated'\x2C 'DEP0122');\n\n// SNI Contexts High-Level API\nServer.prototype.addContext = function(servername\x2C context) {\n  if (!servername) {\n    throw new ERR_TLS_REQUIRED_SERVER_NAME();\n  }\n\n  const re = new RegExp('^' + StringPrototypeReplace(\n    StringPrototypeReplace(servername\x2C /([.^$+?\\-\\\\[\\]{}])/g\x2C '\\\\$1')\x2C\n    /\\*/g\x2C '[^.]*'\n  ) + '$');\n  ArrayPrototypePush(this._contexts\x2C\n                     [re\x2C tls.createSecureContext(context).context]);\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'secureConnection':\n      sock.destroy(err);\n      break;\n    default:\n      ReflectApply(net.Server.prototype[SymbolFor('nodejs.rejection')]\x2C this\x2C\n                   [err\x2C event\x2C sock]);\n  }\n};\n\nfunction SNICallback(servername\x2C callback) {\n  const contexts = this.server._contexts;\n\n  for (let i = contexts.length - 1; i >= 0; --i) {\n    const elem = contexts[i];\n    if (RegExpPrototypeTest(elem[0]\x2C servername)) {\n      callback(null\x2C elem[1]);\n      return;\n    }\n  }\n\n  callback(null\x2C undefined);\n}\n\n\n// Target API:\n//\n//  let s = tls.connect({port: 8000\x2C host: "google.com"}\x2C function() {\n//    if (!s.authorized) {\n//      s.destroy();\n//      return;\n//    }\n//\n//    // s.socket;\n//\n//    s.end("hello world\\n");\n//  });\n//\n//\nfunction normalizeConnectArgs(listArgs) {\n  const args = net._normalizeArgs(listArgs);\n  const options = args[0];\n  const cb = args[1];\n\n  // If args[0] was options\x2C then normalize dealt with it.\n  // If args[0] is port\x2C or args[0]\x2C args[1] is host\x2C port\x2C we need to\n  // find the options and merge them in\x2C normalize's options has only\n  // the host/port/path args that it knows about\x2C not the tls options.\n  // This means that options.host overrides a host arg.\n  if (listArgs[1] !== null && typeof listArgs[1] === 'object') {\n    ObjectAssign(options\x2C listArgs[1]);\n  } else if (listArgs[2] !== null && typeof listArgs[2] === 'object') {\n    ObjectAssign(options\x2C listArgs[2]);\n  }\n\n  return cb ? [options\x2C cb] : [options];\n}\n\nfunction onConnectSecure() {\n  const options = this[kConnectOptions];\n\n  // Check the size of DHE parameter above minimum requirement\n  // specified in options.\n  const ekeyinfo = this.getEphemeralKeyInfo();\n  if (ekeyinfo.type === 'DH' && ekeyinfo.size < options.minDHSize) {\n    const err = new ERR_TLS_DH_PARAM_SIZE(ekeyinfo.size);\n    debug('client emit:'\x2C err);\n    this.emit('error'\x2C err);\n    this.destroy();\n    return;\n  }\n\n  let verifyError = this._handle.verifyError();\n\n  // Verify that server's identity matches it's certificate's names\n  // Unless server has resumed our existing session\n  if (!verifyError && !this.isSessionReused()) {\n    const hostname = options.servername ||\n                   options.host ||\n                   (options.socket && options.socket._host) ||\n                   'localhost';\n    const cert = this.getPeerCertificate(true);\n    verifyError = options.checkServerIdentity(hostname\x2C cert);\n  }\n\n  if (verifyError) {\n    this.authorized = false;\n    this.authorizationError = verifyError.code || verifyError.message;\n\n    // rejectUnauthorized property can be explicitly defined as `undefined`\n    // causing the assignment to default value (`true`) fail. Before assigning\n    // it to the tlssock connection options\x2C explicitly check if it is false\n    // and update rejectUnauthorized property. The property gets used by\n    // TLSSocket connection handler to allow or reject connection if\n    // unauthorized.\n    // This check is potentially redundant\x2C however it is better to keep it\n    // in case the option object gets modified somewhere.\n    if (options.rejectUnauthorized !== false) {\n      this.destroy(verifyError);\n      return;\n    }\n    debug('client emit secureConnect. rejectUnauthorized: %s\x2C ' +\n          'authorizationError: %s'\x2C options.rejectUnauthorized\x2C\n          this.authorizationError);\n    this.secureConnecting = false;\n    this.emit('secureConnect');\n  } else {\n    this.authorized = true;\n    debug('client emit secureConnect. authorized:'\x2C this.authorized);\n    this.secureConnecting = false;\n    this.emit('secureConnect');\n  }\n\n  this[kIsVerified] = true;\n  const session = this[kPendingSession];\n  this[kPendingSession] = null;\n  if (session)\n    this.emit('session'\x2C session);\n\n  this.removeListener('end'\x2C onConnectEnd);\n}\n\nfunction onConnectEnd() {\n  // NOTE: This logic is shared with _http_client.js\n  if (!this._hadError) {\n    const options = this[kConnectOptions];\n    this._hadError = true;\n    const error = connResetException('Client network socket disconnected ' +\n                                     'before secure TLS connection was ' +\n                                     'established');\n    error.path = options.path;\n    error.host = options.host;\n    error.port = options.port;\n    error.localAddress = options.localAddress;\n    this.destroy(error);\n  }\n}\n\n// Arguments: [port\x2C] [host\x2C] [options\x2C] [cb]\nexports.connect = function connect(...args) {\n  args = normalizeConnectArgs(args);\n  let options = args[0];\n  const cb = args[1];\n  const allowUnauthorized = getAllowUnauthorized();\n\n  options = {\n    rejectUnauthorized: !allowUnauthorized\x2C\n    ciphers: tls.DEFAULT_CIPHERS\x2C\n    checkServerIdentity: tls.checkServerIdentity\x2C\n    minDHSize: 1024\x2C\n    ...options\n  };\n\n  if (!options.keepAlive)\n    options.singleUse = true;\n\n  assert(typeof options.checkServerIdentity === 'function');\n  assert(typeof options.minDHSize === 'number'\x2C\n         'options.minDHSize is not a number: ' + options.minDHSize);\n  assert(options.minDHSize > 0\x2C\n         'options.minDHSize is not a positive number: ' +\n         options.minDHSize);\n\n  const context = options.secureContext || tls.createSecureContext(options);\n\n  const tlssock = new TLSSocket(options.socket\x2C {\n    allowHalfOpen: options.allowHalfOpen\x2C\n    pipe: !!options.path\x2C\n    secureContext: context\x2C\n    isServer: false\x2C\n    requestCert: true\x2C\n    rejectUnauthorized: options.rejectUnauthorized !== false\x2C\n    session: options.session\x2C\n    ALPNProtocols: options.ALPNProtocols\x2C\n    requestOCSP: options.requestOCSP\x2C\n    enableTrace: options.enableTrace\x2C\n    pskCallback: options.pskCallback\x2C\n    highWaterMark: options.highWaterMark\x2C\n    onread: options.onread\x2C\n    signal: options.signal\x2C\n  });\n\n  // rejectUnauthorized property can be explicitly defined as `undefined`\n  // causing the assignment to default value (`true`) fail. Before assigning\n  // it to the tlssock connection options\x2C explicitly check if it is false\n  // and update rejectUnauthorized property. The property gets used by TLSSocket\n  // connection handler to allow or reject connection if unauthorized\n  options.rejectUnauthorized = options.rejectUnauthorized !== false;\n\n  tlssock[kConnectOptions] = options;\n\n  if (cb)\n    tlssock.once('secureConnect'\x2C cb);\n\n  if (!options.socket) {\n    // If user provided the socket\x2C it's their responsibility to manage its\n    // connectivity. If we created one internally\x2C we connect it.\n    if (options.timeout) {\n      tlssock.setTimeout(options.timeout);\n    }\n\n    tlssock.connect(options\x2C tlssock._start);\n  }\n\n  tlssock._releaseControl();\n\n  if (options.session)\n    tlssock.setSession(options.session);\n\n  if (options.servername) {\n    if (!ipServernameWarned && net.isIP(options.servername)) {\n      process.emitWarning(\n        'Setting the TLS ServerName to an IP address is not permitted by ' +\n        'RFC 6066. This will be ignored in a future version.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0123'\n      );\n      ipServernameWarned = true;\n    }\n    tlssock.setServername(options.servername);\n  }\n\n  if (options.socket)\n    tlssock._start();\n\n  tlssock.on('secure'\x2C onConnectSecure);\n  tlssock.prependListener('end'\x2C onConnectEnd);\n\n  return tlssock;\n};\n
code-source-info,0x3ba9f09e2dc6,138,0,49531,C0O0C4O49531,,
code-creation,Function,10,206137,0x3ba9f09e4ed6,2023, node:_tls_wrap:1:1,0x3ba9f09e2d40,~
code-source-info,0x3ba9f09e4ed
tick,0x7ff81f29ed3e,206398,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f174132,206432,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f26732d,206454,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269ae6,206476,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,206827,0x3ba9f09ea4b6,5, node:crypto:1:1,0x3ba9f09ea2a0,~
script-source,139,node:crypto,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Note: In 0.8 and before\x2C crypto functions all defaulted to using\n// binary-encoded strings rather than buffers.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n} = primordials;\n\nconst {\n  assertCrypto\x2C\n  deprecate\n} = require('internal/util');\nassertCrypto();\n\nconst {\n  ERR_CRYPTO_FIPS_FORCED\x2C\n} = require('internal/errors').codes;\nconst constants = internalBinding('constants').crypto;\nconst { getOptionValue } = require('internal/options');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\nconst fipsForced = getOptionValue('--force-fips');\nconst {\n  getFipsCrypto\x2C\n  setFipsCrypto\x2C\n  timingSafeEqual\x2C\n} = internalBinding('crypto');\nconst {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n} = require('internal/crypto/random');\nconst {\n  pbkdf2\x2C\n  pbkdf2Sync\n} = require('internal/crypto/pbkdf2');\nconst {\n  scrypt\x2C\n  scryptSync\n} = require('internal/crypto/scrypt');\nconst {\n  hkdf\x2C\n  hkdfSync\n} = require('internal/crypto/hkdf');\nconst {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n} = require('internal/crypto/keygen');\nconst {\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n} = require('internal/crypto/keys');\nconst {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\n} = require('internal/crypto/diffiehellman');\nconst {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n} = require('internal/crypto/cipher');\nconst {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\n} = require('internal/crypto/sig');\nconst {\n  Hash\x2C\n  Hmac\n} = require('internal/crypto/hash');\nconst {\n  X509Certificate\n} = require('internal/crypto/x509');\nconst {\n  getCiphers\x2C\n  getCurves\x2C\n  getDefaultEncoding\x2C\n  getHashes\x2C\n  setDefaultEncoding\x2C\n  setEngine\x2C\n  lazyRequire\x2C\n  secureHeapUsed\x2C\n} = require('internal/crypto/util');\nconst Certificate = require('internal/crypto/certificate');\n\n// These helper functions are needed because the constructors can\n// use new\x2C in which case V8 cannot inline the recursive constructor call\nfunction createHash(algorithm\x2C options) {\n  return new Hash(algorithm\x2C options);\n}\n\nfunction createCipher(cipher\x2C password\x2C options) {\n  return new Cipher(cipher\x2C password\x2C options);\n}\n\nfunction createCipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDecipher(cipher\x2C password\x2C options) {\n  return new Decipher(cipher\x2C password\x2C options);\n}\n\nfunction createDecipheriv(cipher\x2C key\x2C iv\x2C options) {\n  return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n}\n\nfunction createDiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n}\n\nfunction createDiffieHellmanGroup(name) {\n  return new DiffieHellmanGroup(name);\n}\n\nfunction createECDH(curve) {\n  return new ECDH(curve);\n}\n\nfunction createHmac(hmac\x2C key\x2C options) {\n  return new Hmac(hmac\x2C key\x2C options);\n}\n\nfunction createSign(algorithm\x2C options) {\n  return new Sign(algorithm\x2C options);\n}\n\nfunction createVerify(algorithm\x2C options) {\n  return new Verify(algorithm\x2C options);\n}\n\nmodule.exports = {\n  // Methods\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  createCipheriv\x2C\n  createDecipheriv\x2C\n  createDiffieHellman\x2C\n  createDiffieHellmanGroup\x2C\n  createECDH\x2C\n  createHash\x2C\n  createHmac\x2C\n  createPrivateKey\x2C\n  createPublicKey\x2C\n  createSecretKey\x2C\n  createSign\x2C\n  createVerify\x2C\n  diffieHellman\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n  getCiphers\x2C\n  getCipherInfo\x2C\n  getCurves\x2C\n  getDiffieHellman: createDiffieHellmanGroup\x2C\n  getHashes\x2C\n  hkdf\x2C\n  hkdfSync\x2C\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  randomUUID\x2C\n  scrypt\x2C\n  scryptSync\x2C\n  sign: signOneShot\x2C\n  setEngine\x2C\n  timingSafeEqual\x2C\n  getFips: fipsForced ? getFipsForced : getFipsCrypto\x2C\n  setFips: fipsForced ? setFipsForced : setFipsCrypto\x2C\n  verify: verifyOneShot\x2C\n\n  // Classes\n  Certificate\x2C\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  Hash\x2C\n  Hmac\x2C\n  KeyObject\x2C\n  Sign\x2C\n  Verify\x2C\n  X509Certificate\x2C\n  secureHeapUsed\x2C\n};\n\nfunction setFipsForced(val) {\n  if (val) return;\n  throw new ERR_CRYPTO_FIPS_FORCED();\n}\n\nfunction getFipsForced() {\n  return 1;\n}\n\nObjectDefineProperty(constants\x2C 'defaultCipherList'\x2C {\n  value: getOptionValue('--tls-cipher-list')\n});\n\nObjectDefineProperties(module.exports\x2C {\n  createCipher: {\n    enumerable: false\x2C\n    value: deprecate(createCipher\x2C\n                     'crypto.createCipher is deprecated.'\x2C 'DEP0106')\n  }\x2C\n  createDecipher: {\n    enumerable: false\x2C\n    value: deprecate(createDecipher\x2C\n                     'crypto.createDecipher is deprecated.'\x2C 'DEP0106')\n  }\x2C\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\n  fips: {\n    get: fipsForced ? getFipsForced : getFipsCrypto\x2C\n    set: fipsForced ? setFipsForced : setFipsCrypto\n  }\x2C\n  DEFAULT_ENCODING: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: deprecate(getDefaultEncoding\x2C\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\x2C\n    set: deprecate(setDefaultEncoding\x2C\n                   'crypto.DEFAULT_ENCODING is deprecated.'\x2C 'DEP0091')\n  }\x2C\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n\n  webcrypto: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    get() { return lazyRequire('internal/crypto/webcrypto').crypto; }\n  }\x2C\n\n  // Aliases for randomBytes are deprecated.\n  // The ecosystem needs those to exist for backwards compatibility.\n  prng: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C 'crypto.prng is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\x2C\n  pseudoRandomBytes: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C\n                'crypto.pseudoRandomBytes is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\x2C\n  rng: {\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: pendingDeprecation ?\n      deprecate(randomBytes\x2C 'crypto.rng is deprecated.'\x2C 'DEP0115') :\n      randomBytes\n  }\n});\n
code-source-info,0x3ba9f09ea4b6,139,0,7610,C0O0C4O7610,,
code-creation,Function,10,207644,0x3ba9f09eb57e,1692, node:crypto:1:1,0x3ba9f09ea430,~
code-source-info,0x3ba9f09eb57e
tick,0x7ff81f29ef20,207840,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,208298,0x3ba9f09ed62e,5, node:internal/crypto/random:1:1,0x3ba9f09ed128,~
script-source,140,node:internal/crypto/random,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSplice\x2C\n  BigInt\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  NumberIsNaN\x2C\n  NumberIsSafeInteger\x2C\n  NumberPrototypeToString\x2C\n  StringPrototypePadStart\x2C\n} = primordials;\n\nconst {\n  RandomBytesJob\x2C\n  RandomPrimeJob\x2C\n  CheckPrimeJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  secureBuffer\x2C\n} = internalBinding('crypto');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst { Buffer\x2C kMaxLength } = require('buffer');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_OPERATION_FAILED\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateNumber\x2C\n  validateBoolean\x2C\n  validateCallback\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n} = require('internal/util/types');\n\nconst { FastBuffer } = require('internal/buffer');\n\nconst kMaxInt32 = 2 ** 31 - 1;\nconst kMaxPossibleLength = MathMin(kMaxLength\x2C kMaxInt32);\n\nfunction assertOffset(offset\x2C elementSize\x2C length) {\n  validateNumber(offset\x2C 'offset');\n  offset *= elementSize;\n\n  const maxLength = MathMin(length\x2C kMaxPossibleLength);\n  if (NumberIsNaN(offset) || offset > maxLength || offset < 0) {\n    throw new ERR_OUT_OF_RANGE('offset'\x2C `>= 0 && <= ${maxLength}`\x2C offset);\n  }\n\n  return offset >>> 0;  // Convert to uint32.\n}\n\nfunction assertSize(size\x2C elementSize\x2C offset\x2C length) {\n  validateNumber(size\x2C 'size');\n  size *= elementSize;\n\n  if (NumberIsNaN(size) || size > kMaxPossibleLength || size < 0) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C\n                               `>= 0 && <= ${kMaxPossibleLength}`\x2C size);\n  }\n\n  if (size + offset > length) {\n    throw new ERR_OUT_OF_RANGE('size + offset'\x2C `<= ${length}`\x2C size + offset);\n  }\n\n  return size >>> 0;  // Convert to uint32.\n}\n\nfunction randomBytes(size\x2C callback) {\n  size = assertSize(size\x2C 1\x2C 0\x2C Infinity);\n  if (callback !== undefined) {\n    validateCallback(callback);\n  }\n\n  const buf = new FastBuffer(size);\n\n  if (callback === undefined) {\n    randomFillSync(buf.buffer\x2C 0\x2C size);\n    return buf;\n  }\n\n  // Keep the callback as a regular function so this is propagated.\n  randomFill(buf.buffer\x2C 0\x2C size\x2C function(error) {\n    if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n    FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n  });\n}\n\nfunction randomFillSync(buf\x2C offset = 0\x2C size) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0)\n    return buf;\n\n  const job = new RandomBytesJob(\n    kCryptoJobSync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n\n  const err = job.run()[0];\n  if (err)\n    throw err;\n\n  return buf;\n}\n\nfunction randomFill(buf\x2C offset\x2C size\x2C callback) {\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'buf'\x2C\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n      buf);\n  }\n\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\n\n  if (typeof offset === 'function') {\n    callback = offset;\n    offset = 0;\n    // Size is a length here\x2C assertSize() call turns it into a number of bytes\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    callback = size;\n    size = buf.length - offset;\n  } else {\n    validateCallback(callback);\n  }\n\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\n\n  if (size === undefined) {\n    size = buf.byteLength - offset;\n  } else {\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\n  }\n\n  if (size === 0) {\n    callback(null\x2C buf);\n    return;\n  }\n\n  const job = new RandomBytesJob(\n    kCryptoJobAsync\x2C\n    buf\x2C\n    offset\x2C\n    size);\n  job.ondone = FunctionPrototypeBind(onJobDone\x2C job\x2C buf\x2C callback);\n  job.run();\n}\n\n// Largest integer we can read from a buffer.\n// e.g.: Buffer.from("ff".repeat(6)\x2C "hex").readUIntBE(0\x2C 6);\nconst RAND_MAX = 0xFFFF_FFFF_FFFF;\n\n// Cache random data to use in randomInt. The cache size must be evenly\n// divisible by 6 because each attempt to obtain a random int uses 6 bytes.\nconst randomCache = new FastBuffer(6 * 1024);\nlet randomCacheOffset = randomCache.length;\nlet asyncCacheFillInProgress = false;\nconst asyncCachePendingTasks = [];\n\n// Generates an integer in [min\x2C max) range where min is inclusive and max is\n// exclusive.\nfunction randomInt(min\x2C max\x2C callback) {\n  // Detect optional min syntax\n  // randomInt(max)\n  // randomInt(max\x2C callback)\n  const minNotSpecified = typeof max === 'undefined' ||\n    typeof max === 'function';\n\n  if (minNotSpecified) {\n    callback = max;\n    max = min;\n    min = 0;\n  }\n\n  const isSync = typeof callback === 'undefined';\n  if (!isSync) {\n    validateCallback(callback);\n  }\n  if (!NumberIsSafeInteger(min)) {\n    throw new ERR_INVALID_ARG_TYPE('min'\x2C 'a safe integer'\x2C min);\n  }\n  if (!NumberIsSafeInteger(max)) {\n    throw new ERR_INVALID_ARG_TYPE('max'\x2C 'a safe integer'\x2C max);\n  }\n  if (max <= min) {\n    throw new ERR_OUT_OF_RANGE(\n      'max'\x2C `greater than the value of "min" (${min})`\x2C max\n    );\n  }\n\n  // First we generate a random int between [0..range)\n  const range = max - min;\n\n  if (!(range <= RAND_MAX)) {\n    throw new ERR_OUT_OF_RANGE(`max${minNotSpecified ? '' : ' - min'}`\x2C\n                               `<= ${RAND_MAX}`\x2C range);\n  }\n\n  // For (x % range) to produce an unbiased value greater than or equal to 0 and\n  // less than range\x2C x must be drawn randomly from the set of integers greater\n  // than or equal to 0 and less than randLimit.\n  const randLimit = RAND_MAX - (RAND_MAX % range);\n\n  // If we don't have a callback\x2C or if there is still data in the cache\x2C we can\n  // do this synchronously\x2C which is super fast.\n  while (isSync || (randomCacheOffset < randomCache.length)) {\n    if (randomCacheOffset === randomCache.length) {\n      // This might block the thread for a bit\x2C but we are in sync mode.\n      randomFillSync(randomCache);\n      randomCacheOffset = 0;\n    }\n\n    const x = randomCache.readUIntBE(randomCacheOffset\x2C 6);\n    randomCacheOffset += 6;\n\n    if (x < randLimit) {\n      const n = (x % range) + min;\n      if (isSync) return n;\n      process.nextTick(callback\x2C undefined\x2C n);\n      return;\n    }\n  }\n\n  // At this point\x2C we are in async mode with no data in the cache. We cannot\n  // simply refill the cache\x2C because another async call to randomInt might\n  // already be doing that. Instead\x2C queue this call for when the cache has\n  // been refilled.\n  ArrayPrototypePush(asyncCachePendingTasks\x2C { min\x2C max\x2C callback });\n  asyncRefillRandomIntCache();\n}\n\nfunction asyncRefillRandomIntCache() {\n  if (asyncCacheFillInProgress)\n    return;\n\n  asyncCacheFillInProgress = true;\n  randomFill(randomCache\x2C (err) => {\n    asyncCacheFillInProgress = false;\n\n    const tasks = asyncCachePendingTasks;\n    const errorReceiver = err && ArrayPrototypeShift(tasks);\n    if (!err)\n      randomCacheOffset = 0;\n\n    // Restart all pending tasks. If an error occurred\x2C we only notify a single\n    // callback (errorReceiver) about it. This way\x2C every async call to\n    // randomInt has a chance of being successful\x2C and it avoids complex\n    // exception handling here.\n    ArrayPrototypeForEach(ArrayPrototypeSplice(tasks\x2C 0)\x2C (task) => {\n      randomInt(task.min\x2C task.max\x2C task.callback);\n    });\n\n    // This is the only call that might throw\x2C and is therefore done at the end.\n    if (errorReceiver)\n      errorReceiver.callback(err);\n  });\n}\n\n\nfunction onJobDone(buf\x2C callback\x2C error) {\n  if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\n  FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\n}\n\n// Really just the Web Crypto API alternative\n// to require('crypto').randomFillSync() with an\n// additional limitation that the input buffer is\n// not allowed to exceed 65536 bytes\x2C and can only\n// be an integer-type TypedArray.\nfunction getRandomValues(data) {\n  if (!isArrayBufferView(data) ||\n      isFloat32Array(data) ||\n      isFloat64Array(data)) {\n    // Ordinarily this would be an ERR_INVALID_ARG_TYPE. However\x2C\n    // the Web Crypto API and web platform tests expect this to\n    // be a DOMException with type TypeMismatchError.\n    throw lazyDOMException(\n      'The data argument must be an integer-type TypedArray'\x2C\n      'TypeMismatchError');\n  }\n  if (data.byteLength > 65536) {\n    throw lazyDOMException(\n      'The requested length exceeds 65\x2C536 bytes'\x2C\n      'QuotaExceededError');\n  }\n  randomFillSync(data\x2C 0);\n  return data;\n}\n\n// Implements an RFC 4122 version 4 random UUID.\n// To improve performance\x2C random data is generated in batches\n// large enough to cover kBatchSize UUID's at a time. The uuidData\n// buffer is reused. Each call to randomUUID() consumes 16 bytes\n// from the buffer.\n\nconst kBatchSize = 128;\nlet uuidData;\nlet uuidNotBuffered;\nlet uuidBatch = 0;\n\nlet hexBytesCache;\nfunction getHexBytes() {\n  if (hexBytesCache === undefined) {\n    hexBytesCache = new Array(256);\n    for (let i = 0; i < hexBytesCache.length; i++) {\n      const hex = NumberPrototypeToString(i\x2C 16);\n      hexBytesCache[i] = StringPrototypePadStart(hex\x2C 2\x2C '0');\n    }\n  }\n  return hexBytesCache;\n}\n\nfunction serializeUUID(buf\x2C offset = 0) {\n  const kHexBytes = getHexBytes();\n  // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n  return kHexBytes[buf[offset]] +\n    kHexBytes[buf[offset + 1]] +\n    kHexBytes[buf[offset + 2]] +\n    kHexBytes[buf[offset + 3]] +\n    '-' +\n    kHexBytes[buf[offset + 4]] +\n    kHexBytes[buf[offset + 5]] +\n    '-' +\n    kHexBytes[(buf[offset + 6] & 0x0f) | 0x40] +\n    kHexBytes[buf[offset + 7]] +\n    '-' +\n    kHexBytes[(buf[offset + 8] & 0x3f) | 0x80] +\n    kHexBytes[buf[offset + 9]] +\n    '-' +\n    kHexBytes[buf[offset + 10]] +\n    kHexBytes[buf[offset + 11]] +\n    kHexBytes[buf[offset + 12]] +\n    kHexBytes[buf[offset + 13]] +\n    kHexBytes[buf[offset + 14]] +\n    kHexBytes[buf[offset + 15]];\n}\n\nfunction getBufferedUUID() {\n  uuidData ??= secureBuffer(16 * kBatchSize);\n  if (uuidData === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n\n  if (uuidBatch === 0) randomFillSync(uuidData);\n  uuidBatch = (uuidBatch + 1) % kBatchSize;\n  return serializeUUID(uuidData\x2C uuidBatch * 16);\n}\n\nfunction getUnbufferedUUID() {\n  uuidNotBuffered ??= secureBuffer(16);\n  if (uuidNotBuffered === undefined)\n    throw new ERR_OPERATION_FAILED('Out of memory');\n  randomFillSync(uuidNotBuffered);\n  return serializeUUID(uuidNotBuffered);\n}\n\nfunction randomUUID(options) {\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n  const {\n    disableEntropyCache = false\x2C\n  } = options || {};\n\n  validateBoolean(disableEntropyCache\x2C 'options.disableEntropyCache');\n\n  return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID();\n}\n\nfunction createRandomPrimeJob(type\x2C size\x2C options) {\n  validateObject(options\x2C 'options');\n\n  const {\n    safe = false\x2C\n    bigint = false\x2C\n  } = options;\n  let {\n    add\x2C\n    rem\x2C\n  } = options;\n\n  validateBoolean(safe\x2C 'options.safe');\n  validateBoolean(bigint\x2C 'options.bigint');\n\n  if (add !== undefined) {\n    if (typeof add === 'bigint') {\n      add = unsignedBigIntToBuffer(add\x2C 'options.add');\n    } else if (!isAnyArrayBuffer(add) && !isArrayBufferView(add)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.add'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        add);\n    }\n  }\n\n  if (rem !== undefined) {\n    if (typeof rem === 'bigint') {\n      rem = unsignedBigIntToBuffer(rem\x2C 'options.rem');\n    } else if (!isAnyArrayBuffer(rem) && !isArrayBufferView(rem)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.rem'\x2C\n        [\n          'ArrayBuffer'\x2C\n          'TypedArray'\x2C\n          'Buffer'\x2C\n          'DataView'\x2C\n          'bigint'\x2C\n        ]\x2C\n        rem);\n    }\n  }\n\n  const job = new RandomPrimeJob(type\x2C size\x2C safe\x2C add\x2C rem);\n  job.result = bigint ? arrayBufferToUnsignedBigInt : (p) => p;\n  return job;\n}\n\nfunction generatePrime(size\x2C options\x2C callback) {\n  validateUint32(size\x2C 'size'\x2C true);\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  validateCallback(callback);\n\n  const job = createRandomPrimeJob(kCryptoJobAsync\x2C size\x2C options);\n  job.ondone = (err\x2C prime) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    callback(\n      undefined\x2C\n      job.result(prime));\n  };\n  job.run();\n}\n\nfunction generatePrimeSync(size\x2C options = {}) {\n  validateUint32(size\x2C 'size'\x2C true);\n\n  const job = createRandomPrimeJob(kCryptoJobSync\x2C size\x2C options);\n  const { 0: err\x2C 1: prime } = job.run();\n  if (err)\n    throw err;\n  return job.result(prime);\n}\n\nfunction arrayBufferToUnsignedBigInt(arrayBuffer) {\n  return BigInt(`0x${Buffer.from(arrayBuffer).toString('hex')}`);\n}\n\nfunction unsignedBigIntToBuffer(bigint\x2C name) {\n  if (bigint < 0) {\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 0'\x2C bigint);\n  }\n\n  const hex = bigint.toString(16);\n  const padded = hex.padStart(hex.length + (hex.length % 2)\x2C 0);\n  return Buffer.from(padded\x2C 'hex');\n}\n\nfunction checkPrime(candidate\x2C options = {}\x2C callback) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\n    );\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  validateCallback(callback);\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  validateUint32(checks\x2C 'options.checks');\n\n  const job = new CheckPrimeJob(kCryptoJobAsync\x2C candidate\x2C checks);\n  job.ondone = callback;\n  job.run();\n}\n\nfunction checkPrimeSync(candidate\x2C options = {}) {\n  if (typeof candidate === 'bigint')\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'candidate'\x2C\n      [\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'Buffer'\x2C\n        'DataView'\x2C\n        'bigint'\x2C\n      ]\x2C\n      candidate\n    );\n  }\n  validateObject(options\x2C 'options');\n  const {\n    checks = 0\x2C\n  } = options;\n\n  validateUint32(checks\x2C 'options.checks');\n\n  const job = new CheckPrimeJob(kCryptoJobSync\x2C candidate\x2C checks);\n  const { 0: err\x2C 1: result } = job.run();\n  if (err)\n    throw err;\n\n  return result;\n}\n\nmodule.exports = {\n  checkPrime\x2C\n  checkPrimeSync\x2C\n  randomBytes\x2C\n  randomFill\x2C\n  randomFillSync\x2C\n  randomInt\x2C\n  getRandomValues\x2C\n  randomUUID\x2C\n  generatePrime\x2C\n  generatePrimeSync\x2C\n};\n
code-source-info,0x3ba9f09ed62e,140,0,15075,C0O0C4O15075,,
code-creation,Function,10,209778,0x3ba9f09ee09e,678, node:internal/crypto/random:1:1,0x3ba9f09ed5a8,~
code-source-info,0x3ba9f09ee09e,140,0,15075,C0O0C263O25C269O34C275O59C281O81C287O104C293O128C299O138C305O163C311O188C317O199C323O214C329O237C335O264C341O425C344O425C349O317C355O335C361O353C367O370C373O389C379O407C385O485C388O485C393O463C399O543C402O543C407O520C413O528C418O664C421O664C426O664C431O586C437O612C443O634C449O798C452O798C457O703C463O721C469O740C475O760C481O778C487O920C490O920C495O841C501O862C507O882C513O900C519O976C522O976C527O961C533O1023C540O1063C543O1063C548O1063C550O4291C552O4291C554O4478C564O4478C569O4478C571O4528C574O4540C578O4528C580O4579C581O4579C583O4617C585O4617C587O9123C591O9123C593O9132C594O9132C596O9146C597O9146C599O9179C600O9179C602O9187C603O9187C605O14890C612O14911C618O14925C624O14943C630O14958C636O14972C642O14990C648O15003C654O15022C660O15036C666O15053C672O14905C677O15074,,
tick,0x7ff81f174171,209988,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb67c,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f1a2812,210025,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb67c,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,210256,0x3ba9f09efdde,5, node:internal/crypto/pbkdf2:1:1,0x3ba9f09efb78,~
script-source,141,node:internal/crypto/pbkdf2,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  PBKDF2Job\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst { ERR_MISSING_OPTION } = require('internal/errors').codes;\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  normalizeHashName\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nfunction pbkdf2(password\x2C salt\x2C iterations\x2C keylen\x2C digest\x2C callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  validateCallback(callback);\n\n  const job = new PBKDF2Job(\n    kCryptoJobAsync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const encoding = getDefaultEncoding();\n  job.ondone = (err\x2C result) => {\n    if (err !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C err);\n    const buf = Buffer.from(result);\n    if (encoding === 'buffer')\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\n  };\n\n  job.run();\n}\n\nfunction pbkdf2Sync(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\n\n  const job = new PBKDF2Job(\n    kCryptoJobSync\x2C\n    password\x2C\n    salt\x2C\n    iterations\x2C\n    keylen\x2C\n    digest);\n\n  const { 0: err\x2C 1: result } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  const buf = Buffer.from(result);\n  const encoding = getDefaultEncoding();\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\n}\n\nfunction check(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\n  validateString(digest\x2C 'digest');\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateUint32(iterations\x2C 'iterations'\x2C true);\n  validateUint32(keylen\x2C 'keylen');\n\n  return { password\x2C salt\x2C iterations\x2C keylen\x2C digest };\n}\n\nasync function pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const { iterations } = algorithm;\n  let { hash } = algorithm;\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\n  if (hash === undefined)\n    throw new ERR_MISSING_OPTION('algorithm.hash');\n  validateInteger(iterations\x2C 'algorithm.iterations'\x2C 1);\n\n  hash = normalizeHashName(hash.name);\n\n  const raw = baseKey[kKeyObject].export();\n\n  let byteLength = 64;  // the default\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    pbkdf2(raw\x2C salt\x2C iterations\x2C byteLength\x2C hash\x2C (err\x2C result) => {\n      if (err) return reject(err);\n      resolve(result.buffer);\n    });\n  });\n}\n\nmodule.exports = {\n  pbkdf2\x2C\n  pbkdf2Sync\x2C\n  pbkdf2DeriveBits\x2C\n};\n
code-source-info,0x3ba9f09efdde,141,0,3284,C0O0C4O3284,,
code-creation,Function,10,210628,0x3ba9f09f00e6,255, node:internal/crypto/pbkdf2:1:1,0x3ba9f09efd58,~
code-source-info,0x3ba9f09f00e6,141,0,3284,C0O0C75O25C81O50C87O96C90O96C95O85C101O178C104O178C109O126C115O139C121O158C127O293C130O293C135O216C141O236C147O255C153O273C159O357C162O357C167O383C172O334C178O485C181O485C186O402C192O426C198O448C204O469C210O551C213O551C218O529C224O3218C231O3239C237O3249C243O3263C249O3233C254O3283,,
code-creation,Eval,10,210912,0x3ba9f09f0b96,5, node:internal/crypto/scrypt:1:1,0x3ba9f09f0920,~
script-source,142,node:internal/crypto/scrypt,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  ScryptJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateInt32\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_SCRYPT_INVALID_PARAMETER\x2C\n    ERR_CRYPTO_SCRYPT_NOT_SUPPORTED\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst defaults = {\n  N: 16384\x2C\n  r: 8\x2C\n  p: 1\x2C\n  maxmem: 32 << 20\x2C  // 32 MB\x2C matches SCRYPT_MAX_MEM.\n};\n\nfunction scrypt(password\x2C salt\x2C keylen\x2C options\x2C callback = defaults) {\n  if (callback === defaults) {\n    callback = options;\n    options = defaults;\n  }\n\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n\n  validateCallback(callback);\n\n  const job = new ScryptJob(\n    kCryptoJobAsync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n\n  const encoding = getDefaultEncoding();\n  job.ondone = (error\x2C result) => {\n    if (error !== undefined)\n      return FunctionPrototypeCall(callback\x2C job\x2C error);\n    const buf = Buffer.from(result);\n    if (encoding === 'buffer')\n      return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf.toString(encoding));\n  };\n\n  job.run();\n}\n\nfunction scryptSync(password\x2C salt\x2C keylen\x2C options = defaults) {\n  options = check(password\x2C salt\x2C keylen\x2C options);\n  const { N\x2C r\x2C p\x2C maxmem } = options;\n  ({ password\x2C salt\x2C keylen } = options);\n  const job = new ScryptJob(\n    kCryptoJobSync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\n  const { 0: err\x2C 1: result } = job.run();\n\n  if (err !== undefined)\n    throw err;\n\n  const buf = Buffer.from(result);\n  const encoding = getDefaultEncoding();\n  return encoding === 'buffer' ? buf : buf.toString(encoding);\n}\n\nfunction check(password\x2C salt\x2C keylen\x2C options) {\n  if (ScryptJob === undefined)\n    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();\n\n  password = getArrayBufferOrView(password\x2C 'password');\n  salt = getArrayBufferOrView(salt\x2C 'salt');\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\n\n  let { N\x2C r\x2C p\x2C maxmem } = defaults;\n  if (options && options !== defaults) {\n    let has_N\x2C has_r\x2C has_p;\n    if (has_N = (options.N !== undefined)) {\n      N = options.N;\n      validateUint32(N\x2C 'N');\n    }\n    if (options.cost !== undefined) {\n      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      N = options.cost;\n      validateUint32(N\x2C 'cost');\n    }\n    if (has_r = (options.r !== undefined)) {\n      r = options.r;\n      validateUint32(r\x2C 'r');\n    }\n    if (options.blockSize !== undefined) {\n      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      r = options.blockSize;\n      validateUint32(r\x2C 'blockSize');\n    }\n    if (has_p = (options.p !== undefined)) {\n      p = options.p;\n      validateUint32(p\x2C 'p');\n    }\n    if (options.parallelization !== undefined) {\n      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\n      p = options.parallelization;\n      validateUint32(p\x2C 'parallelization');\n    }\n    if (options.maxmem !== undefined) {\n      maxmem = options.maxmem;\n      validateInteger(maxmem\x2C 'maxmem'\x2C 0);\n    }\n    if (N === 0) N = defaults.N;\n    if (r === 0) r = defaults.r;\n    if (p === 0) p = defaults.p;\n    if (maxmem === 0) maxmem = defaults.maxmem;\n  }\n\n  return { password\x2C salt\x2C keylen\x2C N\x2C r\x2C p\x2C maxmem };\n}\n\nasync function scryptDeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const {\n    N = 16384\x2C\n    r = 8\x2C\n    p = 1\x2C\n    maxmem = 32 * 1024 * 1024\x2C\n    encoding\x2C\n  } = algorithm;\n  validateUint32(N\x2C 'algorithm.N');\n  validateUint32(r\x2C 'algorithm.r');\n  validateUint32(p\x2C 'algorithm.p');\n  validateUint32(maxmem\x2C 'algorithm.maxmem');\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt'\x2C encoding);\n\n  const raw = baseKey[kKeyObject].export();\n\n  let byteLength = 64;  // the default\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    scrypt(raw\x2C salt\x2C byteLength\x2C { N\x2C r\x2C p\x2C maxmem }\x2C (err\x2C result) => {\n      if (err) return reject(err);\n      resolve(result.buffer);\n    });\n  });\n}\n\nmodule.exports = {\n  scrypt\x2C\n  scryptSync\x2C\n  scryptDeriveBits\x2C\n};\n
code-source-info,0x3ba9f09f0b96,142,0,4693,C0O0C4O4693,,
code-creation,Function,10,211434,0x3ba9f09f0efe,264, node:internal/crypto/scrypt:1:1,0x3ba9f09f0b10,~
code-source-info,0x3ba9f09f0efe,142,0,4693,C0O0C78O25C84O50C90O96C93O96C98O85C104O178C107O178C112O126C118O139C124O158C130O292C133O292C138O216C144O236C150O255C156O272C162O430C165O430C170O430C175O348C181O389C187O531C190O531C195O469C201O493C207O515C213O597C216O597C221O575C227O641C231O641C233O4627C240O4648C246O4658C252O4672C258O4642C263O4692,,
tick,0x7ff81f29ee4e,211526,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb6cd,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,211710,0x3ba9f09f1bbe,5, node:internal/crypto/hkdf:1:1,0x3ba9f09f18c8,~
script-source,143,node:internal/crypto/hkdf,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  Promise\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  HKDFJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateCallback\x2C\n  validateInteger\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst { kMaxLength } = require('buffer');\n\nconst {\n  getArrayBufferOrView\x2C\n  normalizeHashName\x2C\n  toBuf\x2C\n  validateByteSource\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  createSecretKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\n\nconst validateParameters = hideStackFrames((hash\x2C key\x2C salt\x2C info\x2C length) => {\n  key = prepareKey(key);\n  salt = toBuf(salt);\n  info = toBuf(info);\n\n  validateString(hash\x2C 'digest');\n  validateByteSource(salt\x2C 'salt');\n  validateByteSource(info\x2C 'info');\n\n  validateInteger(length\x2C 'length'\x2C 0\x2C kMaxLength);\n\n  if (info.byteLength > 1024) {\n    throw ERR_OUT_OF_RANGE(\n      'info'\x2C\n      'must not contain more than 1024 bytes'\x2C\n      info.byteLength);\n  }\n\n  return {\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  };\n});\n\nfunction prepareKey(key) {\n  if (isKeyObject(key))\n    return key;\n\n  // TODO(@jasnell): createSecretKey should allow using an ArrayBuffer\n  if (isAnyArrayBuffer(key))\n    return createSecretKey(new Uint8Array(key));\n\n  key = toBuf(key);\n\n  if (!isArrayBufferView(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'ikm'\x2C\n      [\n        'string'\x2C\n        'SecretKeyObject'\x2C\n        'ArrayBuffer'\x2C\n        'TypedArray'\x2C\n        'DataView'\x2C\n        'Buffer'\x2C\n      ]\x2C\n      key);\n  }\n\n  return createSecretKey(key);\n}\n\nfunction hkdf(hash\x2C key\x2C salt\x2C info\x2C length\x2C callback) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  validateCallback(callback);\n\n  const job = new HKDFJob(kCryptoJobAsync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n\n  job.run();\n}\n\nfunction hkdfSync(hash\x2C key\x2C salt\x2C info\x2C length) {\n  ({\n    hash\x2C\n    key\x2C\n    salt\x2C\n    info\x2C\n    length\x2C\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\n\n  const job = new HKDFJob(kCryptoJobSync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\n  const { 0: err\x2C 1: bits } = job.run();\n  if (err !== undefined)\n    throw err;\n\n  return bits;\n}\n\nasync function hkdfDeriveBits(algorithm\x2C baseKey\x2C length) {\n  validateUint32(length\x2C 'length');\n  const { hash } = algorithm;\n  const salt = getArrayBufferOrView(algorithm.salt\x2C 'algorithm.salt');\n  const info = getArrayBufferOrView(algorithm.info\x2C 'algorithm.info');\n  if (hash === undefined)\n    throw new ERR_MISSING_OPTION('algorithm.hash');\n\n  let byteLength = 512 / 8;\n  if (length !== undefined) {\n    if (length === 0)\n      throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\n    if (length % 8) {\n      throw lazyDOMException(\n        'length must be a multiple of 8'\x2C\n        'OperationError');\n    }\n    byteLength = length / 8;\n  }\n\n  return new Promise((resolve\x2C reject) => {\n    hkdf(\n      normalizeHashName(hash.name)\x2C\n      baseKey[kKeyObject]\x2C\n      salt\x2C\n      info\x2C\n      byteLength\x2C\n      (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n}\n\nmodule.exports = {\n  hkdf\x2C\n  hkdfSync\x2C\n  hkdfDeriveBits\x2C\n};\n
code-source-info,0x3ba9f09f1bbe,143,0,3678,C0O0C4O3678,,
code-creation,Function,10,212124,0x3ba9f09f1f76,362, node:internal/crypto/hkdf:1:1,0x3ba9f09f1b38,~
code-source-info,0x3ba9f09f1f76,143,0,3678,C0O0C102O25C108O50C114O61C120O151C123O151C128O101C134O112C140O131C146O266C149O266C154O189C160O209C166O228C172O246C178O322C181O322C186O307C192O444C195O444C200O352C206O376C212O397C218O406C224O428C230O524C233O524C238O488C244O507C250O590C253O590C258O568C264O670C267O670C272O627C278O647C284O822C287O822C292O822C297O726C303O752C309O774C315O801C320O878C325O878C329O878C331O3618C338O3639C344O3647C350O3659C356O3633C361O3677,,
tick,0x1085b4640,212422,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09f205f,0x10dd44be3,0x10dd44865,0x3ba9f09eb6e3,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,212789,0x3ba9f09f369e,5, node:internal/crypto/keys:1:1,0x3ba9f09f3178,~
script-source,144,node:internal/crypto/keys,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeSlice\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  KeyObjectHandle\x2C\n  createNativeKeyObjectClass\x2C\n  kKeyTypeSecret\x2C\n  kKeyTypePublic\x2C\n  kKeyTypePrivate\x2C\n  kKeyFormatPEM\x2C\n  kKeyFormatDER\x2C\n  kKeyFormatJWK\x2C\n  kKeyEncodingPKCS1\x2C\n  kKeyEncodingPKCS8\x2C\n  kKeyEncodingSPKI\x2C\n  kKeyEncodingSEC1\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_CRYPTO_INVALID_JWK\x2C\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  kHandle\x2C\n  kKeyObject\x2C\n  getArrayBufferOrView\x2C\n  bigIntArrayToUnsignedBigInt\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst kAlgorithm = Symbol('kAlgorithm');\nconst kExtractable = Symbol('kExtractable');\nconst kKeyType = Symbol('kKeyType');\nconst kKeyUsages = Symbol('kKeyUsages');\n\n// Key input contexts.\nconst kConsumePublic = 0;\nconst kConsumePrivate = 1;\nconst kCreatePublic = 2;\nconst kCreatePrivate = 3;\n\nconst encodingNames = [];\nfor (const m of [[kKeyEncodingPKCS1\x2C 'pkcs1']\x2C [kKeyEncodingPKCS8\x2C 'pkcs8']\x2C\n                 [kKeyEncodingSPKI\x2C 'spki']\x2C [kKeyEncodingSEC1\x2C 'sec1']])\n  encodingNames[m[0]] = m[1];\n\n// Creating the KeyObject class is a little complicated due to inheritance\n// and that fact that KeyObjects should be transferrable between threads\x2C\n// which requires the KeyObject base class to be implemented in C++.\n// The creation requires a callback to make sure that the NativeKeyObject\n// base class cannot exist without the other KeyObject implementations.\nconst {\n  0: KeyObject\x2C\n  1: SecretKeyObject\x2C\n  2: PublicKeyObject\x2C\n  3: PrivateKeyObject\x2C\n} = createNativeKeyObjectClass((NativeKeyObject) => {\n  // Publicly visible KeyObject class.\n  class KeyObject extends NativeKeyObject {\n    constructor(type\x2C handle) {\n      if (type !== 'secret' && type !== 'public' && type !== 'private')\n        throw new ERR_INVALID_ARG_VALUE('type'\x2C type);\n      if (typeof handle !== 'object' || !(handle instanceof KeyObjectHandle))\n        throw new ERR_INVALID_ARG_TYPE('handle'\x2C 'object'\x2C handle);\n\n      super(handle);\n\n      this[kKeyType] = type;\n\n      ObjectDefineProperty(this\x2C kHandle\x2C {\n        value: handle\x2C\n        enumerable: false\x2C\n        configurable: false\x2C\n        writable: false\n      });\n    }\n\n    get type() {\n      return this[kKeyType];\n    }\n\n    static from(key) {\n      if (!isCryptoKey(key))\n        throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n      return key[kKeyObject];\n    }\n  }\n\n  class SecretKeyObject extends KeyObject {\n    constructor(handle) {\n      super('secret'\x2C handle);\n    }\n\n    get symmetricKeySize() {\n      return this[kHandle].getSymmetricKeySize();\n    }\n\n    export(options) {\n      if (options !== undefined) {\n        validateObject(options\x2C 'options');\n        validateOneOf(\n          options.format\x2C 'options.format'\x2C [undefined\x2C 'buffer'\x2C 'jwk']);\n        if (options.format === 'jwk') {\n          return this[kHandle].exportJwk({}\x2C false);\n        }\n      }\n      return this[kHandle].export();\n    }\n  }\n\n  const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');\n  const kAsymmetricKeyDetails = Symbol('kAsymmetricKeyDetails');\n\n  function normalizeKeyDetails(details = {}) {\n    if (details.publicExponent !== undefined) {\n      return {\n        ...details\x2C\n        publicExponent:\n          bigIntArrayToUnsignedBigInt(new Uint8Array(details.publicExponent))\n      };\n    }\n    return details;\n  }\n\n  class AsymmetricKeyObject extends KeyObject {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(type\x2C handle) {\n      super(type\x2C handle);\n    }\n\n    get asymmetricKeyType() {\n      return this[kAsymmetricKeyType] ||\n             (this[kAsymmetricKeyType] = this[kHandle].getAsymmetricKeyType());\n    }\n\n    get asymmetricKeyDetails() {\n      switch (this.asymmetricKeyType) {\n        case 'rsa':\n        case 'rsa-pss':\n        case 'dsa':\n        case 'ec':\n          return this[kAsymmetricKeyDetails] ||\n             (this[kAsymmetricKeyDetails] = normalizeKeyDetails(\n               this[kHandle].keyDetail({})\n             ));\n        default:\n          return {};\n      }\n    }\n  }\n\n  class PublicKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('public'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        return this[kHandle].exportJwk({}\x2C false);\n      }\n      const {\n        format\x2C\n        type\n      } = parsePublicKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type);\n    }\n  }\n\n  class PrivateKeyObject extends AsymmetricKeyObject {\n    constructor(handle) {\n      super('private'\x2C handle);\n    }\n\n    export(options) {\n      if (options && options.format === 'jwk') {\n        if (options.passphrase !== undefined) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            'jwk'\x2C 'does not support encryption');\n        }\n        return this[kHandle].exportJwk({}\x2C false);\n      }\n      const {\n        format\x2C\n        type\x2C\n        cipher\x2C\n        passphrase\n      } = parsePrivateKeyEncoding(options\x2C this.asymmetricKeyType);\n      return this[kHandle].export(format\x2C type\x2C cipher\x2C passphrase);\n    }\n  }\n\n  return [KeyObject\x2C SecretKeyObject\x2C PublicKeyObject\x2C PrivateKeyObject];\n});\n\nfunction parseKeyFormat(formatStr\x2C defaultFormat\x2C optionName) {\n  if (formatStr === undefined && defaultFormat !== undefined)\n    return defaultFormat;\n  else if (formatStr === 'pem')\n    return kKeyFormatPEM;\n  else if (formatStr === 'der')\n    return kKeyFormatDER;\n  else if (formatStr === 'jwk')\n    return kKeyFormatJWK;\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C formatStr);\n}\n\nfunction parseKeyType(typeStr\x2C required\x2C keyType\x2C isPublic\x2C optionName) {\n  if (typeStr === undefined && !required) {\n    return undefined;\n  } else if (typeStr === 'pkcs1') {\n    if (keyType !== undefined && keyType !== 'rsa') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for RSA keys');\n    }\n    return kKeyEncodingPKCS1;\n  } else if (typeStr === 'spki' && isPublic !== false) {\n    return kKeyEncodingSPKI;\n  } else if (typeStr === 'pkcs8' && isPublic !== true) {\n    return kKeyEncodingPKCS8;\n  } else if (typeStr === 'sec1' && isPublic !== true) {\n    if (keyType !== undefined && keyType !== 'ec') {\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n        typeStr\x2C 'can only be used for EC keys');\n    }\n    return kKeyEncodingSEC1;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C typeStr);\n}\n\nfunction option(name\x2C objName) {\n  return objName === undefined ?\n    `options.${name}` : `options.${objName}.${name}`;\n}\n\nfunction parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName) {\n  const { format: formatStr\x2C type: typeStr } = enc;\n\n  const isInput = keyType === undefined;\n  const format = parseKeyFormat(formatStr\x2C\n                                isInput ? kKeyFormatPEM : undefined\x2C\n                                option('format'\x2C objName));\n\n  const isRequired = (!isInput ||\n                      format === kKeyFormatDER) &&\n                      format !== kKeyFormatJWK;\n  const type = parseKeyType(typeStr\x2C\n                            isRequired\x2C\n                            keyType\x2C\n                            isPublic\x2C\n                            option('type'\x2C objName));\n  return { format\x2C type };\n}\n\nfunction isStringOrBuffer(val) {\n  return typeof val === 'string' ||\n         isArrayBufferView(val) ||\n         isAnyArrayBuffer(val);\n}\n\nfunction parseKeyEncoding(enc\x2C keyType\x2C isPublic\x2C objName) {\n  validateObject(enc\x2C 'options');\n\n  const isInput = keyType === undefined;\n\n  const {\n    format\x2C\n    type\n  } = parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName);\n\n  let cipher\x2C passphrase\x2C encoding;\n  if (isPublic !== true) {\n    ({ cipher\x2C passphrase\x2C encoding } = enc);\n\n    if (!isInput) {\n      if (cipher != null) {\n        if (typeof cipher !== 'string')\n          throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n        if (format === kKeyFormatDER &&\n            (type === kKeyEncodingPKCS1 ||\n             type === kKeyEncodingSEC1)) {\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\n            encodingNames[type]\x2C 'does not support encryption');\n        }\n      } else if (passphrase !== undefined) {\n        throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\n      }\n    }\n\n    if ((isInput && passphrase !== undefined &&\n         !isStringOrBuffer(passphrase)) ||\n        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {\n      throw new ERR_INVALID_ARG_VALUE(option('passphrase'\x2C objName)\x2C\n                                      passphrase);\n    }\n  }\n\n  if (passphrase !== undefined)\n    passphrase = getArrayBufferOrView(passphrase\x2C 'key.passphrase'\x2C encoding);\n\n  return { format\x2C type\x2C cipher\x2C passphrase };\n}\n\n// Parses the public key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePublicKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C keyType ? true : undefined\x2C objName);\n}\n\n// Parses the private key encoding based on an object. keyType must be undefined\n// when this is used to parse an input encoding and must be a valid key type if\n// used to parse an output encoding.\nfunction parsePrivateKeyEncoding(enc\x2C keyType\x2C objName) {\n  return parseKeyEncoding(enc\x2C keyType\x2C false\x2C objName);\n}\n\nfunction getKeyObjectHandle(key\x2C ctx) {\n  if (ctx === kCreatePrivate) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      ['string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      key\n    );\n  }\n\n  if (key.type !== 'private') {\n    if (ctx === kConsumePrivate || ctx === kCreatePublic)\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'private');\n    if (key.type !== 'public') {\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C\n                                                   'private or public');\n    }\n  }\n\n  return key[kHandle];\n}\n\nfunction getKeyTypes(allowKeyObject\x2C bufferOnly = false) {\n  const types = [\n    'ArrayBuffer'\x2C\n    'Buffer'\x2C\n    'TypedArray'\x2C\n    'DataView'\x2C\n    'string'\x2C // Only if bufferOnly == false\n    'KeyObject'\x2C // Only if allowKeyObject == true && bufferOnly == false\n    'CryptoKey'\x2C // Only if allowKeyObject == true && bufferOnly == false\n  ];\n  if (bufferOnly) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 4);\n  } else if (!allowKeyObject) {\n    return ArrayPrototypeSlice(types\x2C 0\x2C 5);\n  }\n  return types;\n}\n\nfunction getKeyObjectHandleFromJwk(key\x2C ctx) {\n  validateObject(key\x2C 'key');\n  validateOneOf(\n    key.kty\x2C 'key.kty'\x2C ['RSA'\x2C 'EC'\x2C 'OKP']);\n  const isPublic = ctx === kConsumePublic || ctx === kCreatePublic;\n\n  if (key.kty === 'OKP') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['Ed25519'\x2C 'Ed448'\x2C 'X25519'\x2C 'X448']);\n    validateString(key.x\x2C 'key.x');\n\n    if (!isPublic)\n      validateString(key.d\x2C 'key.d');\n\n    let keyData;\n    if (isPublic)\n      keyData = Buffer.from(key.x\x2C 'base64');\n    else\n      keyData = Buffer.from(key.d\x2C 'base64');\n\n    switch (key.crv) {\n      case 'Ed25519':\n      case 'X25519':\n        if (keyData.byteLength !== 32) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'Ed448':\n        if (keyData.byteLength !== 57) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n      case 'X448':\n        if (keyData.byteLength !== 56) {\n          throw new ERR_CRYPTO_INVALID_JWK();\n        }\n        break;\n    }\n\n    const handle = new KeyObjectHandle();\n\n    const keyType = isPublic ? kKeyTypePublic : kKeyTypePrivate;\n    if (!handle.initEDRaw(`NODE-${key.crv.toUpperCase()}`\x2C keyData\x2C keyType)) {\n      throw new ERR_CRYPTO_INVALID_JWK();\n    }\n\n    return handle;\n  }\n\n  if (key.kty === 'EC') {\n    validateString(key.crv\x2C 'key.crv');\n    validateOneOf(\n      key.crv\x2C 'key.crv'\x2C ['P-256'\x2C 'secp256k1'\x2C 'P-384'\x2C 'P-521']);\n    validateString(key.x\x2C 'key.x');\n    validateString(key.y\x2C 'key.y');\n\n    const jwk = {\n      kty: key.kty\x2C\n      crv: key.crv\x2C\n      x: key.x\x2C\n      y: key.y\n    };\n\n    if (!isPublic) {\n      validateString(key.d\x2C 'key.d');\n      jwk.d = key.d;\n    }\n\n    const handle = new KeyObjectHandle();\n    const type = handle.initJwk(jwk\x2C jwk.crv);\n    if (type === undefined)\n      throw new ERR_CRYPTO_INVALID_JWK();\n\n    return handle;\n  }\n\n  // RSA\n  validateString(key.n\x2C 'key.n');\n  validateString(key.e\x2C 'key.e');\n\n  const jwk = {\n    kty: key.kty\x2C\n    n: key.n\x2C\n    e: key.e\n  };\n\n  if (!isPublic) {\n    validateString(key.d\x2C 'key.d');\n    validateString(key.p\x2C 'key.p');\n    validateString(key.q\x2C 'key.q');\n    validateString(key.dp\x2C 'key.dp');\n    validateString(key.dq\x2C 'key.dq');\n    validateString(key.qi\x2C 'key.qi');\n    jwk.d = key.d;\n    jwk.p = key.p;\n    jwk.q = key.q;\n    jwk.dp = key.dp;\n    jwk.dq = key.dq;\n    jwk.qi = key.qi;\n  }\n\n  const handle = new KeyObjectHandle();\n  const type = handle.initJwk(jwk);\n  if (type === undefined)\n    throw new ERR_CRYPTO_INVALID_JWK();\n\n  return handle;\n}\n\nfunction prepareAsymmetricKey(key\x2C ctx) {\n  if (isKeyObject(key)) {\n    // Best case: A key object\x2C as simple as that.\n    return { data: getKeyObjectHandle(key\x2C ctx) };\n  } else if (isCryptoKey(key)) {\n    return { data: getKeyObjectHandle(key[kKeyObject]\x2C ctx) };\n  } else if (isStringOrBuffer(key)) {\n    // Expect PEM by default\x2C mostly for backward compatibility.\n    return { format: kKeyFormatPEM\x2C data: getArrayBufferOrView(key\x2C 'key') };\n  } else if (typeof key === 'object') {\n    const { key: data\x2C encoding\x2C format } = key;\n    // The 'key' property can be a KeyObject as well to allow specifying\n    // additional options such as padding along with the key.\n    if (isKeyObject(data))\n      return { data: getKeyObjectHandle(data\x2C ctx) };\n    else if (isCryptoKey(data))\n      return { data: getKeyObjectHandle(data[kKeyObject]\x2C ctx) };\n    else if (isJwk(data) && format === 'jwk')\n      return { data: getKeyObjectHandleFromJwk(data\x2C ctx)\x2C format: 'jwk' };\n    // Either PEM or DER using PKCS#1 or SPKI.\n    if (!isStringOrBuffer(data)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'key.key'\x2C\n        getKeyTypes(ctx !== kCreatePrivate)\x2C\n        data);\n    }\n\n    const isPublic =\n      (ctx === kConsumePrivate || ctx === kCreatePrivate) ? false : undefined;\n    return {\n      data: getArrayBufferOrView(data\x2C 'key'\x2C encoding)\x2C\n      ...parseKeyEncoding(key\x2C undefined\x2C isPublic)\n    };\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'key'\x2C\n    getKeyTypes(ctx !== kCreatePrivate)\x2C\n    key);\n}\n\nfunction preparePrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePrivate);\n}\n\nfunction preparePublicOrPrivateKey(key) {\n  return prepareAsymmetricKey(key\x2C kConsumePublic);\n}\n\nfunction prepareSecretKey(key\x2C encoding\x2C bufferOnly = false) {\n  if (!bufferOnly) {\n    if (isKeyObject(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kHandle];\n    } else if (isCryptoKey(key)) {\n      if (key.type !== 'secret')\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\n      return key[kKeyObject][kHandle];\n    }\n  }\n  if (typeof key !== 'string' &&\n      !isArrayBufferView(key) &&\n      !isAnyArrayBuffer(key)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'key'\x2C\n      getKeyTypes(!bufferOnly\x2C bufferOnly)\x2C\n      key);\n  }\n  return getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n}\n\nfunction createSecretKey(key\x2C encoding) {\n  key = prepareSecretKey(key\x2C encoding\x2C true);\n  if (key.byteLength === 0)\n    throw new ERR_OUT_OF_RANGE('key.byteLength'\x2C '> 0'\x2C key.byteLength);\n  const handle = new KeyObjectHandle();\n  handle.init(kKeyTypeSecret\x2C key);\n  return new SecretKeyObject(handle);\n}\n\nfunction createPublicKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePublic);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePublic\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PublicKeyObject(handle);\n}\n\nfunction createPrivateKey(key) {\n  const { format\x2C type\x2C data\x2C passphrase } =\n    prepareAsymmetricKey(key\x2C kCreatePrivate);\n  let handle;\n  if (format === 'jwk') {\n    handle = data;\n  } else {\n    handle = new KeyObjectHandle();\n    handle.init(kKeyTypePrivate\x2C data\x2C format\x2C type\x2C passphrase);\n  }\n  return new PrivateKeyObject(handle);\n}\n\nfunction isKeyObject(obj) {\n  return obj != null && obj[kKeyType] !== undefined;\n}\n\n// Our implementation of CryptoKey is a simple wrapper around a KeyObject\n// that adapts it to the standard interface. This implementation also\n// extends the JSTransferable class\x2C allowing the CryptoKey to be cloned\n// to Workers.\n// TODO(@jasnell): Embedder environments like electron may have issues\n// here similar to other things like URL. A chromium provided CryptoKey\n// will not be recognized as a Node.js CryptoKey\x2C and vice versa. It\n// would be fantastic if we could find a way of making those interop.\nclass CryptoKey extends JSTransferable {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `CryptoKey ${inspect({\n      type: this.type\x2C\n      extractable: this.extractable\x2C\n      algorithm: this.algorithm\x2C\n      usages: this.usages\n    }\x2C opts)}`;\n  }\n\n  get type() {\n    return this[kKeyObject].type;\n  }\n\n  get extractable() {\n    return this[kExtractable];\n  }\n\n  get algorithm() {\n    return this[kAlgorithm];\n  }\n\n  get usages() {\n    return ArrayFrom(this[kKeyUsages]);\n  }\n\n  [kClone]() {\n    const keyObject = this[kKeyObject];\n    const algorithm = this.algorithm;\n    const extractable = this.extractable;\n    const usages = this.usages;\n\n    return {\n      data: {\n        keyObject\x2C\n        algorithm\x2C\n        usages\x2C\n        extractable\x2C\n      }\x2C\n      deserializeInfo: 'internal/crypto/keys:InternalCryptoKey'\n    };\n  }\n\n  [kDeserialize]({ keyObject\x2C algorithm\x2C usages\x2C extractable }) {\n    this[kKeyObject] = keyObject;\n    this[kAlgorithm] = algorithm;\n    this[kKeyUsages] = usages;\n    this[kExtractable] = extractable;\n  }\n}\n\n// All internal code must use new InternalCryptoKey to create\n// CryptoKey instances. The CryptoKey class is exposed to end\n// user code but is not permitted to be constructed directly.\nclass InternalCryptoKey extends JSTransferable {\n  constructor(\n    keyObject\x2C\n    algorithm\x2C\n    keyUsages\x2C\n    extractable) {\n    super();\n    // Using symbol properties here currently instead of private\n    // properties because (for now) the performance penalty of\n    // private fields is still too high.\n    this[kKeyObject] = keyObject;\n    this[kAlgorithm] = algorithm;\n    this[kExtractable] = extractable;\n    this[kKeyUsages] = keyUsages;\n  }\n}\n\nInternalCryptoKey.prototype.constructor = CryptoKey;\nObjectSetPrototypeOf(InternalCryptoKey.prototype\x2C CryptoKey.prototype);\n\nfunction isCryptoKey(obj) {\n  return obj != null && obj[kKeyObject] !== undefined;\n}\n\nfunction isJwk(obj) {\n  return obj != null && obj.kty !== undefined;\n}\n\nmodule.exports = {\n  // Public API.\n  createSecretKey\x2C\n  createPublicKey\x2C\n  createPrivateKey\x2C\n  KeyObject\x2C\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n\n  // These are designed for internal use only and should not be exposed.\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  parseKeyEncoding\x2C\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n  SecretKeyObject\x2C\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  isKeyObject\x2C\n  isCryptoKey\x2C\n  isJwk\x2C\n};\n
code-source-info,0x3ba9f09f369e,144,0,20392,C0O0C4O20392,,
code-creation,Function,10,214751,0x3ba9f09f4c96,1232, node:internal/crypto/keys:1:1,0x3ba9f09f3618,~
code-source-info,0x3ba9f09f4c
tick,0x7ff81f2b61a0,214925,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09f205f,0x10dd44be3,0x10dd44865,0x3ba9f09eb6e3,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f2b6797,214962,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09f205f,0x10dd44be3,0x10dd44865,0x3ba9f09eb6e3,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,215212,0x3ba9f09f7f06,247, node:internal/crypto/keys:97:32,0x3ba9f09f3d60,~
code-source-info,0x3ba9f09f7f06,144,2259,5896,C0O2259C17O2347C50O3130C83O3679C93O3679C97O3679C99O3741C109O3741C113O3741C115O4083C148O4792C176O5211C204O5823C213O5831C222O5842C231O5859C240O5876C246O5894,,
code-creation,Eval,10,215650,0x3ba9f09fa22e,5, node:internal/crypto/keygen:1:1,0x3ba9f09f9e28,~
script-source,145,node:internal/crypto/keygen,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  SafeArrayIterator\x2C\n} = primordials;\n\nconst {\n  DhKeyPairGenJob\x2C\n  DsaKeyPairGenJob\x2C\n  EcKeyPairGenJob\x2C\n  NidKeyPairGenJob\x2C\n  RsaKeyPairGenJob\x2C\n  SecretKeyGenJob\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kKeyVariantRSA_PSS\x2C\n  kKeyVariantRSA_SSA_PKCS1_v1_5\x2C\n  EVP_PKEY_ED25519\x2C\n  EVP_PKEY_ED448\x2C\n  EVP_PKEY_X25519\x2C\n  EVP_PKEY_X448\x2C\n  OPENSSL_EC_NAMED_CURVE\x2C\n  OPENSSL_EC_EXPLICIT_CURVE\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  PrivateKeyObject\x2C\n  SecretKeyObject\x2C\n  parsePublicKeyEncoding\x2C\n  parsePrivateKeyEncoding\x2C\n  isJwk\n} = require('internal/crypto/keys');\n\nconst {\n  kAesKeyLengths\x2C\n} = require('internal/crypto/util');\n\nconst { customPromisifyArgs } = require('internal/util');\n\nconst {\n  isInt32\x2C\n  isUint32\x2C\n  validateCallback\x2C\n  validateString\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n} = require('internal/validators');\n\nconst {\n  codes: {\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_OPTION\x2C\n  }\n} = require('internal/errors');\n\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst { getOptionValue } = require('internal/options');\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\nfunction wrapKey(key\x2C ctor) {\n  if (typeof key === 'string' ||\n      isArrayBufferView(key) ||\n      isJwk(key))\n    return key;\n  return new ctor(key);\n}\n\nfunction generateKeyPair(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  validateCallback(callback);\n\n  const job = createJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    // If no encoding was chosen\x2C return key objects instead.\n    let { 0: pubkey\x2C 1: privkey } = result;\n    pubkey = wrapKey(pubkey\x2C PublicKeyObject);\n    privkey = wrapKey(privkey\x2C PrivateKeyObject);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C pubkey\x2C privkey);\n  };\n\n  job.run();\n}\n\nObjectDefineProperty(generateKeyPair\x2C customPromisifyArgs\x2C {\n  value: ['publicKey'\x2C 'privateKey']\x2C\n  enumerable: false\n});\n\nfunction generateKeyPairSync(type\x2C options) {\n  return handleError(createJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nfunction handleError(ret) {\n  if (ret == null)\n    return; // async\n\n  const { 0: err\x2C 1: keys } = ret;\n  if (err !== undefined)\n    throw err;\n\n  const { 0: publicKey\x2C 1: privateKey } = keys;\n\n  // If no encoding was chosen\x2C return key objects instead.\n  return {\n    publicKey: wrapKey(publicKey\x2C PublicKeyObject)\x2C\n    privateKey: wrapKey(privateKey\x2C PrivateKeyObject)\n  };\n}\n\nfunction parseKeyEncoding(keyType\x2C options = {}) {\n  const { publicKeyEncoding\x2C privateKeyEncoding } = options;\n\n  let publicFormat\x2C publicType;\n  if (publicKeyEncoding == null) {\n    publicFormat = publicType = undefined;\n  } else if (typeof publicKeyEncoding === 'object') {\n    ({\n      format: publicFormat\x2C\n      type: publicType\n    } = parsePublicKeyEncoding(publicKeyEncoding\x2C keyType\x2C\n                               'publicKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.publicKeyEncoding'\x2C\n                                    publicKeyEncoding);\n  }\n\n  let privateFormat\x2C privateType\x2C cipher\x2C passphrase;\n  if (privateKeyEncoding == null) {\n    privateFormat = privateType = undefined;\n  } else if (typeof privateKeyEncoding === 'object') {\n    ({\n      format: privateFormat\x2C\n      type: privateType\x2C\n      cipher\x2C\n      passphrase\n    } = parsePrivateKeyEncoding(privateKeyEncoding\x2C keyType\x2C\n                                'privateKeyEncoding'));\n  } else {\n    throw new ERR_INVALID_ARG_VALUE('options.privateKeyEncoding'\x2C\n                                    privateKeyEncoding);\n  }\n\n  return [\n    publicFormat\x2C\n    publicType\x2C\n    privateFormat\x2C\n    privateType\x2C\n    cipher\x2C\n    passphrase\x2C\n  ];\n}\n\nfunction createJob(mode\x2C type\x2C options) {\n  validateString(type\x2C 'type');\n\n  const encoding = new SafeArrayIterator(parseKeyEncoding(type\x2C options));\n\n  if (options !== undefined)\n    validateObject(options\x2C 'options');\n\n  switch (type) {\n    case 'rsa':\n    case 'rsa-pss':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      if (!isUint32(modulusLength))\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\n\n      let { publicExponent } = options;\n      if (publicExponent == null) {\n        publicExponent = 0x10001;\n      } else if (!isUint32(publicExponent)) {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.publicExponent'\x2C\n          publicExponent);\n      }\n\n      if (type === 'rsa') {\n        return new RsaKeyPairGenJob(\n          mode\x2C\n          kKeyVariantRSA_SSA_PKCS1_v1_5\x2C  // Used also for RSA-OAEP\n          modulusLength\x2C\n          publicExponent\x2C\n          ...encoding);\n      }\n\n      const {\n        hash\x2C mgf1Hash\x2C hashAlgorithm\x2C mgf1HashAlgorithm\x2C saltLength\n      } = options;\n      if (saltLength !== undefined && (!isInt32(saltLength) || saltLength < 0))\n        throw new ERR_INVALID_ARG_VALUE('options.saltLength'\x2C saltLength);\n      if (hashAlgorithm !== undefined && typeof hashAlgorithm !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.hashAlgorithm'\x2C hashAlgorithm);\n      if (mgf1HashAlgorithm !== undefined &&\n          typeof mgf1HashAlgorithm !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.mgf1HashAlgorithm'\x2C\n                                        mgf1HashAlgorithm);\n      if (hash !== undefined) {\n        pendingDeprecation && process.emitWarning(\n          '"options.hash" is deprecated\x2C ' +\n          'use "options.hashAlgorithm" instead.'\x2C\n          'DeprecationWarning'\x2C\n          'DEP0154');\n        if (typeof hash !== 'string' ||\n          (hashAlgorithm && hash !== hashAlgorithm)) {\n          throw new ERR_INVALID_ARG_VALUE('options.hash'\x2C hash);\n        }\n      }\n      if (mgf1Hash !== undefined) {\n        pendingDeprecation && process.emitWarning(\n          '"options.mgf1Hash" is deprecated\x2C ' +\n          'use "options.mgf1HashAlgorithm" instead.'\x2C\n          'DeprecationWarning'\x2C\n          'DEP0154');\n        if (typeof mgf1Hash !== 'string' ||\n          (mgf1HashAlgorithm && mgf1Hash !== mgf1HashAlgorithm)) {\n          throw new ERR_INVALID_ARG_VALUE('options.mgf1Hash'\x2C mgf1Hash);\n        }\n      }\n\n      return new RsaKeyPairGenJob(\n        mode\x2C\n        kKeyVariantRSA_PSS\x2C\n        modulusLength\x2C\n        publicExponent\x2C\n        hashAlgorithm || hash\x2C\n        mgf1HashAlgorithm || mgf1Hash\x2C\n        saltLength\x2C\n        ...encoding);\n    }\n    case 'dsa':\n    {\n      validateObject(options\x2C 'options');\n      const { modulusLength } = options;\n      if (!isUint32(modulusLength))\n        throw new ERR_INVALID_ARG_VALUE('options.modulusLength'\x2C modulusLength);\n\n      let { divisorLength } = options;\n      if (divisorLength == null) {\n        divisorLength = -1;\n      } else if (!isInt32(divisorLength) || divisorLength < 0) {\n        throw new ERR_INVALID_ARG_VALUE('options.divisorLength'\x2C divisorLength);\n      }\n\n      return new DsaKeyPairGenJob(\n        mode\x2C\n        modulusLength\x2C\n        divisorLength\x2C\n        ...encoding);\n    }\n    case 'ec':\n    {\n      validateObject(options\x2C 'options');\n      const { namedCurve } = options;\n      if (typeof namedCurve !== 'string')\n        throw new ERR_INVALID_ARG_VALUE('options.namedCurve'\x2C namedCurve);\n      let { paramEncoding } = options;\n      if (paramEncoding == null || paramEncoding === 'named')\n        paramEncoding = OPENSSL_EC_NAMED_CURVE;\n      else if (paramEncoding === 'explicit')\n        paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;\n      else\n        throw new ERR_INVALID_ARG_VALUE('options.paramEncoding'\x2C paramEncoding);\n\n      return new EcKeyPairGenJob(\n        mode\x2C\n        namedCurve\x2C\n        paramEncoding\x2C\n        ...encoding);\n    }\n    case 'ed25519':\n    case 'ed448':\n    case 'x25519':\n    case 'x448':\n    {\n      let id;\n      switch (type) {\n        case 'ed25519':\n          id = EVP_PKEY_ED25519;\n          break;\n        case 'ed448':\n          id = EVP_PKEY_ED448;\n          break;\n        case 'x25519':\n          id = EVP_PKEY_X25519;\n          break;\n        case 'x448':\n          id = EVP_PKEY_X448;\n          break;\n      }\n      return new NidKeyPairGenJob(mode\x2C id\x2C ...encoding);\n    }\n    case 'dh':\n    {\n      validateObject(options\x2C 'options');\n      const { group\x2C primeLength\x2C prime\x2C generator } = options;\n      if (group != null) {\n        if (prime != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'prime');\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'primeLength');\n        if (generator != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'generator');\n        if (typeof group !== 'string')\n          throw new ERR_INVALID_ARG_VALUE('options.group'\x2C group);\n\n        return new DhKeyPairGenJob(mode\x2C group\x2C ...encoding);\n      }\n\n      if (prime != null) {\n        if (primeLength != null)\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('prime'\x2C 'primeLength');\n        if (!isArrayBufferView(prime))\n          throw new ERR_INVALID_ARG_VALUE('options.prime'\x2C prime);\n      } else if (primeLength != null) {\n        if (!isInt32(primeLength) || primeLength < 0)\n          throw new ERR_INVALID_ARG_VALUE('options.primeLength'\x2C primeLength);\n      } else {\n        throw new ERR_MISSING_OPTION(\n          'At least one of the group\x2C prime\x2C or primeLength options');\n      }\n\n      if (generator != null) {\n        if (!isInt32(generator) || generator < 0)\n          throw new ERR_INVALID_ARG_VALUE('options.generator'\x2C generator);\n      }\n      return new DhKeyPairGenJob(\n        mode\x2C\n        prime != null ? prime : primeLength\x2C\n        generator == null ? 2 : generator\x2C\n        ...encoding);\n    }\n    default:\n      // Fall through\n  }\n  throw new ERR_INVALID_ARG_VALUE('type'\x2C type\x2C 'must be a supported key type');\n}\n\n// Symmetric Key Generation\n\nfunction generateKeyJob(mode\x2C keyType\x2C options) {\n  validateString(keyType\x2C 'type');\n  validateObject(options\x2C 'options');\n  const { length } = options;\n  switch (keyType) {\n    case 'hmac':\n      validateInteger(length\x2C 'options.length'\x2C 1\x2C 2 ** 31 - 1);\n      break;\n    case 'aes':\n      validateOneOf(length\x2C 'options.length'\x2C kAesKeyLengths);\n      break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE(\n        'type'\x2C\n        keyType\x2C\n        'must be a supported key type');\n  }\n\n  return new SecretKeyGenJob(mode\x2C length);\n}\n\nfunction handleGenerateKeyError(ret) {\n  if (ret === undefined)\n    return; // async\n\n  const { 0: err\x2C 1: key } = ret;\n  if (err !== undefined)\n    throw err;\n\n  return wrapKey(key\x2C SecretKeyObject);\n}\n\nfunction generateKey(type\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  validateCallback(callback);\n\n  const job = generateKeyJob(kCryptoJobAsync\x2C type\x2C options);\n\n  job.ondone = (error\x2C key) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C wrapKey(key\x2C SecretKeyObject));\n  };\n\n  handleGenerateKeyError(job.run());\n}\n\nfunction generateKeySync(type\x2C options) {\n  return handleGenerateKeyError(\n    generateKeyJob(kCryptoJobSync\x2C type\x2C options).run());\n}\n\nmodule.exports = {\n  generateKeyPair\x2C\n  generateKeyPairSync\x2C\n  generateKey\x2C\n  generateKeySync\x2C\n};\n
code-source-info,0x3ba9f09fa22e,145,0,11480,C0O0C4O11480,,
code-creation,Function,10,216789,0x3ba9f09fa8a6,538, node:internal/crypto/keygen:1:1,0x3ba9f09fa1a8,~
code-source-info,0x3ba9f09fa8a6,145,0,11480,C0O0C176O25C182O50C187O74C193O461C196O461C201O121C207O140C213O160C219O179C225O199C231O219C237O238C243O257C249O275C255O297C261O330C267O350C273O368C279O387C285O404C291O430C297O620C300O620C305O499C311O518C317O538C323O557C329O583C335O610C341O684C344O684C349O664C355O750C358O750C363O726C368O904C371O904C376O787C382O798C388O810C394O830C400O848C406O867C412O885C418O1049C421O1049C426O1049C431O960C437O994C443O1021C449O1108C452O1108C457O1086C463O1168C466O1168C471O1149C476O1224C479O1224C483O1224C485O2086C496O2048C501O11382C508O11403C514O11422C520O11445C526O11460C532O11397C537O11479,,
tick,0x7ff81f29ed43,216901,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb6f9,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1087fc86c,217378,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb73d,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,217437,0x3ba9f09fc446,5, node:internal/crypto/diffiehellman:1:1,0x3ba9f09fbf60,~
script-source,146,node:internal/crypto/diffiehellman,'use strict';\n\nconst {\n  ArrayBufferPrototypeSlice\x2C\n  FunctionPrototypeCall\x2C\n  MathFloor\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\n\nconst {\n  DHBitsJob\x2C\n  DHKeyExportJob\x2C\n  DiffieHellman: _DiffieHellman\x2C\n  DiffieHellmanGroup: _DiffieHellmanGroup\x2C\n  ECDH: _ECDH\x2C\n  ECDHBitsJob\x2C\n  ECDHConvertKey: _ECDHConvertKey\x2C\n  statelessDH\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  codes: {\n    ERR_CRYPTO_ECDH_INVALID_FORMAT\x2C\n    ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY\x2C\n    ERR_CRYPTO_INCOMPATIBLE_KEY\x2C\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateCallback\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n} = require('internal/util/types');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  KeyObject\x2C\n  InternalCryptoKey\x2C\n  createPrivateKey\x2C\n  createPublicKey\x2C\n  isCryptoKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  generateKeyPair\x2C\n} = require('internal/crypto/keygen');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  getUsagesUnion\x2C\n  hasAnyNotIn\x2C\n  jobPromise\x2C\n  toBuf\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  crypto: {\n    POINT_CONVERSION_COMPRESSED\x2C\n    POINT_CONVERSION_HYBRID\x2C\n    POINT_CONVERSION_UNCOMPRESSED\x2C\n  }\n} = internalBinding('constants');\n\nconst DH_GENERATOR = 2;\n\nfunction DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\n  if (!(this instanceof DiffieHellman))\n    return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\n\n  if (typeof sizeOrKey !== 'number' &&\n      typeof sizeOrKey !== 'string' &&\n      !isArrayBufferView(sizeOrKey) &&\n      !isAnyArrayBuffer(sizeOrKey)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'sizeOrKey'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      sizeOrKey\n    );\n  }\n\n  // Sizes < 0 don't make sense but they _are_ accepted (and subsequently\n  // rejected with ERR_OSSL_BN_BITS_TOO_SMALL) by OpenSSL. The glue code\n  // in node_crypto.cc accepts values that are IsInt32() for that reason\n  // and that's why we do that here too.\n  if (typeof sizeOrKey === 'number')\n    validateInt32(sizeOrKey\x2C 'sizeOrKey');\n\n  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&\n      keyEncoding !== 'buffer') {\n    genEncoding = generator;\n    generator = keyEncoding;\n    keyEncoding = false;\n  }\n\n  const encoding = getDefaultEncoding();\n  keyEncoding = keyEncoding || encoding;\n  genEncoding = genEncoding || encoding;\n\n  if (typeof sizeOrKey !== 'number')\n    sizeOrKey = toBuf(sizeOrKey\x2C keyEncoding);\n\n  if (!generator) {\n    generator = DH_GENERATOR;\n  } else if (typeof generator === 'number') {\n    validateInt32(generator\x2C 'generator');\n  } else if (typeof generator === 'string') {\n    generator = toBuf(generator\x2C genEncoding);\n  } else if (!isArrayBufferView(generator) && !isAnyArrayBuffer(generator)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'generator'\x2C\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      generator\n    );\n  }\n\n\n  this[kHandle] = new _DiffieHellman(sizeOrKey\x2C generator);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\n  });\n}\n\n\nfunction DiffieHellmanGroup(name) {\n  if (!(this instanceof DiffieHellmanGroup))\n    return new DiffieHellmanGroup(name);\n  this[kHandle] = new _DiffieHellmanGroup(name);\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\n    enumerable: true\x2C\n    value: this[kHandle].verifyError\x2C\n    writable: false\n  });\n}\n\n\nDiffieHellmanGroup.prototype.generateKeys =\n    DiffieHellman.prototype.generateKeys =\n    dhGenerateKeys;\n\nfunction dhGenerateKeys(encoding) {\n  const keys = this[kHandle].generateKeys();\n  encoding = encoding || getDefaultEncoding();\n  return encode(keys\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.computeSecret =\n    DiffieHellman.prototype.computeSecret =\n    dhComputeSecret;\n\nfunction dhComputeSecret(key\x2C inEnc\x2C outEnc) {\n  const encoding = getDefaultEncoding();\n  inEnc = inEnc || encoding;\n  outEnc = outEnc || encoding;\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\n  const ret = this[kHandle].computeSecret(key);\n  if (typeof ret === 'string')\n    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();\n  return encode(ret\x2C outEnc);\n}\n\n\nDiffieHellmanGroup.prototype.getPrime =\n    DiffieHellman.prototype.getPrime =\n    dhGetPrime;\n\nfunction dhGetPrime(encoding) {\n  const prime = this[kHandle].getPrime();\n  encoding = encoding || getDefaultEncoding();\n  return encode(prime\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getGenerator =\n    DiffieHellman.prototype.getGenerator =\n    dhGetGenerator;\n\nfunction dhGetGenerator(encoding) {\n  const generator = this[kHandle].getGenerator();\n  encoding = encoding || getDefaultEncoding();\n  return encode(generator\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPublicKey =\n    DiffieHellman.prototype.getPublicKey =\n    dhGetPublicKey;\n\nfunction dhGetPublicKey(encoding) {\n  const key = this[kHandle].getPublicKey();\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellmanGroup.prototype.getPrivateKey =\n    DiffieHellman.prototype.getPrivateKey =\n    dhGetPrivateKey;\n\nfunction dhGetPrivateKey(encoding) {\n  const key = this[kHandle].getPrivateKey();\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n}\n\n\nDiffieHellman.prototype.setPublicKey = function setPublicKey(key\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPublicKey(key);\n  return this;\n};\n\n\nDiffieHellman.prototype.setPrivateKey = function setPrivateKey(key\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  this[kHandle].setPrivateKey(key);\n  return this;\n};\n\n\nfunction ECDH(curve) {\n  if (!(this instanceof ECDH))\n    return new ECDH(curve);\n\n  validateString(curve\x2C 'curve');\n  this[kHandle] = new _ECDH(curve);\n}\n\nECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;\nECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;\nECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;\nECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;\n\nECDH.prototype.generateKeys = function generateKeys(encoding\x2C format) {\n  this[kHandle].generateKeys();\n\n  return this.getPublicKey(encoding\x2C format);\n};\n\nECDH.prototype.getPublicKey = function getPublicKey(encoding\x2C format) {\n  const f = getFormat(format);\n  const key = this[kHandle].getPublicKey(f);\n  encoding = encoding || getDefaultEncoding();\n  return encode(key\x2C encoding);\n};\n\nECDH.convertKey = function convertKey(key\x2C curve\x2C inEnc\x2C outEnc\x2C format) {\n  validateString(curve\x2C 'curve');\n  const encoding = inEnc || getDefaultEncoding();\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\n  outEnc = outEnc || encoding;\n  const f = getFormat(format);\n  const convertedKey = _ECDHConvertKey(key\x2C curve\x2C f);\n  return encode(convertedKey\x2C outEnc);\n};\n\nfunction encode(buffer\x2C encoding) {\n  if (encoding && encoding !== 'buffer')\n    buffer = buffer.toString(encoding);\n  return buffer;\n}\n\nfunction getFormat(format) {\n  if (format) {\n    if (format === 'compressed')\n      return POINT_CONVERSION_COMPRESSED;\n    if (format === 'hybrid')\n      return POINT_CONVERSION_HYBRID;\n    if (format !== 'uncompressed')\n      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);\n  }\n  return POINT_CONVERSION_UNCOMPRESSED;\n}\n\nconst dhEnabledKeyTypes = new SafeSet(['dh'\x2C 'ec'\x2C 'x448'\x2C 'x25519']);\n\nfunction diffieHellman(options) {\n  validateObject(options\x2C 'options');\n\n  const { privateKey\x2C publicKey } = options;\n  if (!(privateKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.privateKey'\x2C privateKey);\n\n  if (!(publicKey instanceof KeyObject))\n    throw new ERR_INVALID_ARG_VALUE('options.publicKey'\x2C publicKey);\n\n  if (privateKey.type !== 'private')\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(privateKey.type\x2C 'private');\n\n  if (publicKey.type !== 'public' && publicKey.type !== 'private') {\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(publicKey.type\x2C\n                                                 'private or public');\n  }\n\n  const privateType = privateKey.asymmetricKeyType;\n  const publicType = publicKey.asymmetricKeyType;\n  if (privateType !== publicType || !dhEnabledKeyTypes.has(privateType)) {\n    throw new ERR_CRYPTO_INCOMPATIBLE_KEY('key types for Diffie-Hellman'\x2C\n                                          `${privateType} and ${publicType}`);\n  }\n\n  return statelessDH(privateKey[kHandle]\x2C publicKey[kHandle]);\n}\n\n// The deriveBitsECDH function is part of the Web Crypto API and serves both\n// deriveKeys and deriveBits functions.\nfunction deriveBitsECDH(name\x2C publicKey\x2C privateKey\x2C callback) {\n  validateString(name\x2C 'name');\n  validateObject(publicKey\x2C 'publicKey');\n  validateObject(privateKey\x2C 'privateKey');\n  validateCallback(callback);\n  const job = new ECDHBitsJob(kCryptoJobAsync\x2C name\x2C publicKey\x2C privateKey);\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n  job.run();\n}\n\n// The deriveBitsDH function is part of the Web Crypto API and serves both\n// deriveKeys and deriveBits functions.\nfunction deriveBitsDH(publicKey\x2C privateKey\x2C callback) {\n  validateObject(publicKey\x2C 'publicKey');\n  validateObject(privateKey\x2C 'privateKey');\n  validateCallback(callback);\n  const job = new DHBitsJob(kCryptoJobAsync\x2C publicKey\x2C privateKey);\n  job.ondone = (error\x2C bits) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\n  };\n  job.run();\n}\n\nfunction verifyAcceptableDhKeyUse(name\x2C type\x2C usages) {\n  let checkSet;\n  switch (type) {\n    case 'private':\n      checkSet = ['deriveBits'\x2C 'deriveKey'];\n      break;\n    case 'public':\n      checkSet = [];\n      break;\n  }\n  if (hasAnyNotIn(usages\x2C checkSet)) {\n    throw lazyDOMException(\n      `Unsupported key usage for an ${name} key`\x2C\n      'SyntaxError');\n  }\n}\n\nasync function dhGenerateKey(\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  const usageSet = new SafeSet(keyUsages);\n\n  if (hasAnyNotIn(usageSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n    throw lazyDOMException(\n      'Unsupported key usage for a DH key'\x2C\n      'SyntaxError');\n  }\n\n  const {\n    name\x2C\n    primeLength\x2C\n    generator\x2C\n    group\n  } = algorithm;\n  let { prime } = algorithm;\n\n  if (prime !== undefined)\n    prime = getArrayBufferOrView(prime);\n\n  return new Promise((resolve\x2C reject) => {\n    generateKeyPair('dh'\x2C {\n      prime\x2C\n      primeLength\x2C\n      generator\x2C\n      group\x2C\n    }\x2C (err\x2C pubKey\x2C privKey) => {\n      if (err) {\n        return reject(lazyDOMException(\n          'The operation failed for an operation-specific reason'\x2C\n          'OperationError'));\n      }\n\n      const algorithm = { name\x2C prime\x2C primeLength\x2C generator\x2C group };\n\n      const publicKey = new InternalCryptoKey(pubKey\x2C algorithm\x2C []\x2C true);\n\n      const privateKey =\n        new InternalCryptoKey(\n          privKey\x2C\n          algorithm\x2C\n          getUsagesUnion(usageSet\x2C 'deriveBits'\x2C 'deriveKey')\x2C\n          extractable);\n\n      resolve({ publicKey\x2C privateKey });\n    });\n  });\n}\n\nasync function asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length) {\n  const { 'public': key } = algorithm;\n\n  // Null means that we're not asking for a specific number of bits\x2C just\n  // give us everything that is generated.\n  if (length !== null)\n    validateUint32(length\x2C 'length');\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\n\n  if (key.type !== 'public') {\n    throw lazyDOMException(\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\n  }\n  if (baseKey.type !== 'private') {\n    throw lazyDOMException(\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== 'ECDH') {\n    throw lazyDOMException('Keys must be ECDH keys'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== baseKey.algorithm.name) {\n    throw lazyDOMException(\n      'The public and private keys must be of the same type'\x2C\n      'InvalidAccessError');\n  }\n\n  if (key.algorithm.namedCurve !== baseKey.algorithm.namedCurve)\n    throw lazyDOMException('Named curve mismatch'\x2C 'InvalidAccessError');\n\n  const bits = await new Promise((resolve\x2C reject) => {\n    deriveBitsECDH(\n      baseKey.algorithm.namedCurve\x2C\n      key[kKeyObject][kHandle]\x2C\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n\n  // If a length is not specified\x2C return the full derived secret\n  if (length === null)\n    return bits;\n\n  // If the length is not a multiple of 8\x2C it will be truncated\n  // down to the nearest multiple of 8.\n  length = MathFloor(length / 8);\n  const { byteLength } = bits;\n\n  // If the length is larger than the derived secret\x2C throw.\n  // Otherwise\x2C we either return the secret or a truncated\n  // slice.\n  if (byteLength < length)\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\n\n  return length === byteLength ?\n    bits :\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\n}\n\nasync function asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length) {\n  const { 'public': key } = algorithm;\n  // Null has a specific meaning for DH\n  if (length !== null)\n    validateUint32(length\x2C 'length');\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('algorithm.public'\x2C 'CryptoKey'\x2C key);\n\n  if (key.type !== 'public') {\n    throw lazyDOMException(\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\n  }\n  if (baseKey.type !== 'private') {\n    throw lazyDOMException(\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\n  }\n\n  if (key.algorithm.name !== 'NODE-DH')\n    throw lazyDOMException('Keys must be DH keys'\x2C 'InvalidAccessError');\n\n  if (key.algorithm.name !== baseKey.algorithm.name) {\n    throw lazyDOMException(\n      'The public and private keys must be of the same type'\x2C\n      'InvalidAccessError');\n  }\n\n  const bits = await new Promise((resolve\x2C reject) => {\n    deriveBitsDH(\n      key[kKeyObject][kHandle]\x2C\n      baseKey[kKeyObject][kHandle]\x2C (err\x2C bits) => {\n        if (err) return reject(err);\n        resolve(bits);\n      });\n  });\n\n  // If a length is not specified\x2C return the full derived secret\n  if (length === null)\n    return bits;\n\n  // If the length is not a multiple of 8\x2C it will be truncated\n  // down to the nearest multiple of 8.\n  length = MathFloor(length / 8);\n  const { byteLength } = bits;\n\n  // If the length is larger than the derived secret\x2C throw.\n  // Otherwise\x2C we either return the secret or a truncated\n  // slice.\n  if (byteLength < length)\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\n\n  return length === byteLength ?\n    bits :\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\n}\n\nfunction dhExportKey(key\x2C format) {\n  return jobPromise(new DHKeyExportJob(\n    kCryptoJobAsync\x2C\n    format\x2C\n    key[kKeyObject][kHandle]));\n}\n\nasync function dhImportKey(\n  format\x2C\n  keyData\x2C\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  const usagesSet = new SafeSet(keyUsages);\n  let keyObject;\n  switch (format) {\n    case 'node.keyObject': {\n      if (!isKeyObject(keyData))\n        throw new ERR_INVALID_ARG_TYPE('keyData'\x2C 'KeyObject'\x2C keyData);\n      if (keyData.type === 'secret')\n        throw lazyDOMException('Invalid key type'\x2C 'InvalidAccessException');\n      verifyAcceptableDhKeyUse(algorithm.name\x2C keyData.type\x2C usagesSet);\n      keyObject = keyData;\n      break;\n    }\n    case 'spki': {\n      verifyAcceptableDhKeyUse(algorithm.name\x2C 'public'\x2C usagesSet);\n      keyObject = createPublicKey({\n        key: keyData\x2C\n        format: 'der'\x2C\n        type: 'spki'\n      });\n      break;\n    }\n    case 'pkcs8': {\n      verifyAcceptableDhKeyUse(algorithm.name\x2C 'private'\x2C usagesSet);\n      keyObject = createPrivateKey({\n        key: keyData\x2C\n        format: 'der'\x2C\n        type: 'pkcs8'\n      });\n      break;\n    }\n    default:\n      throw lazyDOMException(\n        `Unable to import DH key with format ${format}`\x2C\n        'NotSupportedError');\n  }\n\n  const {\n    prime\x2C\n    primeLength\x2C\n    generator\x2C\n    group\x2C\n  } = keyObject[kHandle].keyDetail({});\n\n  return new InternalCryptoKey(keyObject\x2C {\n    name: algorithm.name\x2C\n    prime\x2C\n    primeLength\x2C\n    generator\x2C\n    group\x2C\n  }\x2C keyUsages\x2C extractable);\n}\n\nmodule.exports = {\n  DiffieHellman\x2C\n  DiffieHellmanGroup\x2C\n  ECDH\x2C\n  diffieHellman\x2C\n  deriveBitsECDH\x2C\n  deriveBitsDH\x2C\n  dhGenerateKey\x2C\n  asyncDeriveBitsECDH\x2C\n  asyncDeriveBitsDH\x2C\n  dhExportKey\x2C\n  dhImportKey\x2C\n};\n
code-source-info,0x3ba9f09fc446,146,0,16942,C0O0C4O16942,,
code-creation,Function,10,219082,0x3ba9f09fd0ee,1080, node:internal/crypto/diffiehellman:1:1,0x3ba9f09fc3c0,~
code-source-info,0x3ba9f09fd0ee
tick,0x7ff81f29ed43,219261,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb73d,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9b4340000,262144
code-creation,Eval,10,219749,0x3ba9f09ff7c6,5, node:internal/crypto/cipher:1:1,0x3ba9f09ff470,~
script-source,147,node:internal/crypto/cipher,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CipherBase\x2C\n  privateDecrypt: _privateDecrypt\x2C\n  privateEncrypt: _privateEncrypt\x2C\n  publicDecrypt: _publicDecrypt\x2C\n  publicEncrypt: _publicEncrypt\x2C\n  getCipherInfo: _getCipherInfo\x2C\n} = internalBinding('crypto');\n\nconst {\n  crypto: {\n    RSA_PKCS1_OAEP_PADDING\x2C\n    RSA_PKCS1_PADDING\x2C\n  }\n} = internalBinding('constants');\n\nconst {\n  codes: {\n    ERR_CRYPTO_INVALID_STATE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  getDefaultEncoding\x2C\n  getArrayBufferOrView\x2C\n  getStringOption\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst { normalizeEncoding } = require('internal/util');\n\nconst { StringDecoder } = require('string_decoder');\n\nfunction rsaFunctionFor(method\x2C defaultPadding\x2C keyType) {\n  return (options\x2C buffer) => {\n    const { format\x2C type\x2C data\x2C passphrase } =\n      keyType === 'private' ?\n        preparePrivateKey(options) :\n        preparePublicOrPrivateKey(options);\n    const padding = options.padding || defaultPadding;\n    const { oaepHash\x2C encoding } = options;\n    let { oaepLabel } = options;\n    if (oaepHash !== undefined)\n      validateString(oaepHash\x2C 'key.oaepHash');\n    if (oaepLabel !== undefined)\n      oaepLabel = getArrayBufferOrView(oaepLabel\x2C 'key.oaepLabel'\x2C encoding);\n    buffer = getArrayBufferOrView(buffer\x2C 'buffer'\x2C encoding);\n    return method(data\x2C format\x2C type\x2C passphrase\x2C buffer\x2C padding\x2C oaepHash\x2C\n                  oaepLabel);\n  };\n}\n\nconst publicEncrypt = rsaFunctionFor(_publicEncrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                     'public');\nconst publicDecrypt = rsaFunctionFor(_publicDecrypt\x2C RSA_PKCS1_PADDING\x2C\n                                     'public');\nconst privateEncrypt = rsaFunctionFor(_privateEncrypt\x2C RSA_PKCS1_PADDING\x2C\n                                      'private');\nconst privateDecrypt = rsaFunctionFor(_privateDecrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\n                                      'private');\n\nfunction getDecoder(decoder\x2C encoding) {\n  encoding = normalizeEncoding(encoding);\n  decoder = decoder || new StringDecoder(encoding);\n  assert(decoder.encoding === encoding\x2C 'Cannot change encoding');\n  return decoder;\n}\n\nfunction getUIntOption(options\x2C key) {\n  let value;\n  if (options && (value = options[key]) != null) {\n    if (value >>> 0 !== value)\n      throw new ERR_INVALID_ARG_VALUE(`options.${key}`\x2C value);\n    return value;\n  }\n  return -1;\n}\n\nfunction createCipherBase(cipher\x2C credential\x2C options\x2C decipher\x2C iv) {\n  const authTagLength = getUIntOption(options\x2C 'authTagLength');\n  this[kHandle] = new CipherBase(decipher);\n  if (iv === undefined) {\n    this[kHandle].init(cipher\x2C credential\x2C authTagLength);\n  } else {\n    this[kHandle].initiv(cipher\x2C credential\x2C iv\x2C authTagLength);\n  }\n  this._decoder = null;\n\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nfunction createCipher(cipher\x2C password\x2C options\x2C decipher) {\n  validateString(cipher\x2C 'cipher');\n  password = getArrayBufferOrView(password\x2C 'password');\n\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C password\x2C options\x2C decipher]);\n}\n\nfunction createCipherWithIV(cipher\x2C key\x2C options\x2C decipher\x2C iv) {\n  validateString(cipher\x2C 'cipher');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  iv = iv === null ? null : getArrayBufferOrView(iv\x2C 'iv');\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C key\x2C options\x2C decipher\x2C iv]);\n}\n\n// The Cipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Cipher))\n    return new Cipher(cipher\x2C password\x2C options);\n\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C true]);\n}\n\nObjectSetPrototypeOf(Cipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipher\x2C LazyTransform);\n\nCipher.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this.push(this[kHandle].update(chunk\x2C encoding));\n  callback();\n};\n\nCipher.prototype._flush = function _flush(callback) {\n  try {\n    this.push(this[kHandle].final());\n  } catch (e) {\n    callback(e);\n    return;\n  }\n  callback();\n};\n\nCipher.prototype.update = function update(data\x2C inputEncoding\x2C outputEncoding) {\n  const encoding = getDefaultEncoding();\n  inputEncoding = inputEncoding || encoding;\n  outputEncoding = outputEncoding || encoding;\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C inputEncoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  const ret = this[kHandle].update(data\x2C inputEncoding);\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.write(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.final = function final(outputEncoding) {\n  outputEncoding = outputEncoding || getDefaultEncoding();\n  const ret = this[kHandle].final();\n\n  if (outputEncoding && outputEncoding !== 'buffer') {\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\n    return this._decoder.end(ret);\n  }\n\n  return ret;\n};\n\n\nCipher.prototype.setAutoPadding = function setAutoPadding(ap) {\n  if (!this[kHandle].setAutoPadding(!!ap))\n    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');\n  return this;\n};\n\nCipher.prototype.getAuthTag = function getAuthTag() {\n  const ret = this[kHandle].getAuthTag();\n  if (ret === undefined)\n    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');\n  return ret;\n};\n\n\nfunction setAuthTag(tagbuf\x2C encoding) {\n  tagbuf = getArrayBufferOrView(tagbuf\x2C 'buffer'\x2C encoding);\n  if (!this[kHandle].setAuthTag(tagbuf))\n    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');\n  return this;\n}\n\nCipher.prototype.setAAD = function setAAD(aadbuf\x2C options) {\n  const encoding = getStringOption(options\x2C 'encoding');\n  const plaintextLength = getUIntOption(options\x2C 'plaintextLength');\n  aadbuf = getArrayBufferOrView(aadbuf\x2C 'aadbuf'\x2C encoding);\n  if (!this[kHandle].setAAD(aadbuf\x2C plaintextLength))\n    throw new ERR_CRYPTO_INVALID_STATE('setAAD');\n  return this;\n};\n\n// The Cipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Cipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Cipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Cipheriv))\n    return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C true\x2C iv]);\n}\n\nfunction addCipherPrototypeFunctions(constructor) {\n  constructor.prototype._transform = Cipher.prototype._transform;\n  constructor.prototype._flush = Cipher.prototype._flush;\n  constructor.prototype.update = Cipher.prototype.update;\n  constructor.prototype.final = Cipher.prototype.final;\n  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;\n  if (constructor === Cipheriv) {\n    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;\n  } else {\n    constructor.prototype.setAuthTag = setAuthTag;\n  }\n  constructor.prototype.setAAD = Cipher.prototype.setAAD;\n}\n\nObjectSetPrototypeOf(Cipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Cipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Cipheriv);\n\n// The Decipher class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipher class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipher(cipher\x2C password\x2C options) {\n  if (!(this instanceof Decipher))\n    return new Decipher(cipher\x2C password\x2C options);\n\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C false]);\n}\n\nObjectSetPrototypeOf(Decipher.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipher\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipher);\n\n// The Decipheriv class is part of the legacy Node.js crypto API. It exposes\n// a stream-based encryption/decryption model. For backwards compatibility\n// the Decipheriv class is defined using the legacy function syntax rather than\n// ES6 classes.\n\nfunction Decipheriv(cipher\x2C key\x2C iv\x2C options) {\n  if (!(this instanceof Decipheriv))\n    return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\n\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C false\x2C iv]);\n}\n\nObjectSetPrototypeOf(Decipheriv.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Decipheriv\x2C LazyTransform);\naddCipherPrototypeFunctions(Decipheriv);\n\nfunction getCipherInfo(nameOrNid\x2C options) {\n  if (typeof nameOrNid !== 'string' && typeof nameOrNid !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'nameOrNid'\x2C\n      ['string'\x2C 'number']\x2C\n      nameOrNid);\n  }\n  if (typeof nameOrNid === 'number')\n    validateInt32(nameOrNid\x2C 'nameOrNid');\n  let keyLength\x2C ivLength;\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n    ({ keyLength\x2C ivLength } = options);\n    if (keyLength !== undefined)\n      validateInt32(keyLength\x2C 'options.keyLength');\n    if (ivLength !== undefined)\n      validateInt32(ivLength\x2C 'options.ivLength');\n  }\n\n  const ret = _getCipherInfo({}\x2C nameOrNid\x2C keyLength\x2C ivLength);\n  if (ret !== undefined) {\n    if (ret.name) ret.name = StringPrototypeToLowerCase(ret.name);\n    if (ret.type) ret.type = StringPrototypeToLowerCase(ret.type);\n  }\n  return ret;\n}\n\nmodule.exports = {\n  Cipher\x2C\n  Cipheriv\x2C\n  Decipher\x2C\n  Decipheriv\x2C\n  privateDecrypt\x2C\n  privateEncrypt\x2C\n  publicDecrypt\x2C\n  publicEncrypt\x2C\n  getCipherInfo\x2C\n};\n
code-source-info,0x3ba9f09ff7c6,147,0,10241,C0O0C4O10241,,
code-creation,Function,10,220760,0x3ba9b43413c6,843, node:internal/crypto/cipher:1:1,0x3ba9f09ff740,~
code-source-info,0x3ba9b43413c
tick,0x7ff81f213c32,220927,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb75f,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108abf23c,221035,1,0x10843a650,5,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b4341549,0x10dd44be3,0x10dd44865,0x3ba9f09eb75f,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,221077,0x3ba9b43428c6,5, node:internal/streams/lazy_transform:1:1,0x3ba9b4342750,~
script-source,148,node:internal/streams/lazy_transform,// LazyTransform is a special type of Transform stream that is lazily loaded.\n// This is used for performance with bi-API-ship: when two APIs are available\n// for the stream\x2C one conventional and one non-conventional.\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst stream = require('stream');\n\nconst {\n  getDefaultEncoding\n} = require('internal/crypto/util');\n\nmodule.exports = LazyTransform;\n\nfunction LazyTransform(options) {\n  this._options = options;\n}\nObjectSetPrototypeOf(LazyTransform.prototype\x2C stream.Transform.prototype);\nObjectSetPrototypeOf(LazyTransform\x2C stream.Transform);\n\nfunction makeGetter(name) {\n  return function() {\n    stream.Transform.call(this\x2C this._options);\n    this._writableState.decodeStrings = false;\n\n    if (!this._options || !this._options.defaultEncoding) {\n      this._writableState.defaultEncoding = getDefaultEncoding();\n    }\n\n    return this[name];\n  };\n}\n\nfunction makeSetter(name) {\n  return function(val) {\n    ObjectDefineProperty(this\x2C name\x2C {\n      value: val\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\n    });\n  };\n}\n\nObjectDefineProperties(LazyTransform.prototype\x2C {\n  _readableState: {\n    get: makeGetter('_readableState')\x2C\n    set: makeSetter('_readableState')\x2C\n    configurable: true\x2C\n    enumerable: true\n  }\x2C\n  _writableState: {\n    get: makeGetter('_writableState')\x2C\n    set: makeSetter('_writableState')\x2C\n    configurable: true\x2C\n    enumerable: true\n  }\n});\n
code-source-info,0x3ba9b43428c6,148,0,1518,C0O0C4O1518,,
code-creation,Function,10,221269,0x3ba9b4342c06,193, node:internal/streams/lazy_transform:1:1,0x3ba9b4342840,~
code-source-info,0x3ba9b4342c06,148,0,1518,C0O0C29O243C34O269C40O293C45O348C48O348C52O348C54O401C57O401C62O378C68O435C70O450C74O566C82O584C87O594C92O531C97O606C100O649C105O606C110O1206C120O1237C128O1248C139O1287C153O1385C161O1396C172O1435C186O1169C192O1517,,
code-creation,LazyCompile,10,221389,0x3ba9b434313e,14,makeGetter node:internal/streams/lazy_transform:26:20,0x3ba9b4342948,~
code-source-info,0x3ba9b434313e,148,681,970,C0O681C9O692C13O968,,
code-creation,LazyCompile,10,221438,0x3ba9b43434c6,14,makeSetter node:internal/streams/lazy_transform:39:20,0x3ba9b43429c0,~
code-source-info,0x3ba9b43434c6,148,991,1167,C0O991C9O1002C13O1165,,
code-creation,LazyCompile,10,221547,0x3ba9b43436ce,22,rsaFunctionFor node:internal/crypto/cipher:65:24,0x3ba9f09ff7f8,~
code-source-info,0x3ba9b43436ce,147,1250,1975,C0O1250C17O1288C21O1973,,
code-creation,LazyCompile,10,221631,0x3ba9b4344466,169,addCipherPrototypeFunctions node:internal/crypto/cipher:246:37,0x3ba9f09ffac8,~
code-source-info,0x3ba9b4344466,147,7273,7828,C0O7303C8O7333C13O7343C17O7324C21O7369C29O7395C34O7405C38O7386C42O7427C50O7453C55O7463C59O7444C63O7485C71O7510C76O7520C80O7501C84O7541C92O7575C97O7585C101O7566C105O7603C107O7619C112O7651C120O7681C125O7691C129O7672C135O7730C142O7751C146O7783C154O7809C159O7819C163O7800C168O7827,,
code-creation,Eval,10,221955,0x3ba9b4344c56,5, node:internal/crypto/sig:1:1,0x3ba9b4344920,~
script-source,149,node:internal/crypto/sig,'use strict';\n\nconst {\n  FunctionPrototypeCall\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_CRYPTO_SIGN_KEY_REQUIRED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateCallback\x2C\n  validateEncoding\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  Sign: _Sign\x2C\n  SignJob\x2C\n  Verify: _Verify\x2C\n  kCryptoJobAsync\x2C\n  kCryptoJobSync\x2C\n  kSigEncDER\x2C\n  kSigEncP1363\x2C\n  kSignJobModeSign\x2C\n  kSignJobModeVerify\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  preparePrivateKey\x2C\n  preparePublicOrPrivateKey\x2C\n} = require('internal/crypto/keys');\n\nconst { Writable } = require('stream');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nfunction Sign(algorithm\x2C options) {\n  if (!(this instanceof Sign))\n    return new Sign(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Sign();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Sign.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Sign\x2C Writable);\n\nSign.prototype._write = function _write(chunk\x2C encoding\x2C callback) {\n  this.update(chunk\x2C encoding);\n  callback();\n};\n\nSign.prototype.update = function update(data\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  this[kHandle].update(data\x2C encoding);\n  return this;\n};\n\nfunction getPadding(options) {\n  return getIntOption('padding'\x2C options);\n}\n\nfunction getSaltLength(options) {\n  return getIntOption('saltLength'\x2C options);\n}\n\nfunction getDSASignatureEncoding(options) {\n  if (typeof options === 'object') {\n    const { dsaEncoding = 'der' } = options;\n    if (dsaEncoding === 'der')\n      return kSigEncDER;\n    else if (dsaEncoding === 'ieee-p1363')\n      return kSigEncP1363;\n    throw new ERR_INVALID_ARG_VALUE('options.dsaEncoding'\x2C dsaEncoding);\n  }\n\n  return kSigEncDER;\n}\n\nfunction getIntOption(name\x2C options) {\n  const value = options[name];\n  if (value !== undefined) {\n    if (value === value >> 0) {\n      return value;\n    }\n    throw new ERR_INVALID_ARG_VALUE(`options.${name}`\x2C value);\n  }\n  return undefined;\n}\n\nSign.prototype.sign = function sign(options\x2C encoding) {\n  if (!options)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  const { data\x2C format\x2C type\x2C passphrase } = preparePrivateKey(options\x2C true);\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  const ret = this[kHandle].sign(data\x2C format\x2C type\x2C passphrase\x2C rsaPadding\x2C\n                                 pssSaltLength\x2C dsaSigEnc);\n\n  encoding = encoding || getDefaultEncoding();\n  if (encoding && encoding !== 'buffer')\n    return ret.toString(encoding);\n\n  return ret;\n};\n\nfunction signOneShot(algorithm\x2C data\x2C key\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateCallback(callback);\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!key)\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\n  } = preparePrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeSign\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc);\n\n  if (!callback) {\n    const { 0: err\x2C 1: signature } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return Buffer.from(signature);\n  }\n\n  job.ondone = (error\x2C signature) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C Buffer.from(signature));\n  };\n  job.run();\n}\n\nfunction Verify(algorithm\x2C options) {\n  if (!(this instanceof Verify))\n    return new Verify(algorithm\x2C options);\n  validateString(algorithm\x2C 'algorithm');\n  this[kHandle] = new _Verify();\n  this[kHandle].init(algorithm);\n\n  ReflectApply(Writable\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Verify.prototype\x2C Writable.prototype);\nObjectSetPrototypeOf(Verify\x2C Writable);\n\nVerify.prototype._write = Sign.prototype._write;\nVerify.prototype.update = Sign.prototype.update;\n\nVerify.prototype.verify = function verify(options\x2C signature\x2C sigEncoding) {\n  const {\n    data\x2C\n    format\x2C\n    type\x2C\n    passphrase\n  } = preparePublicOrPrivateKey(options\x2C true);\n\n  sigEncoding = sigEncoding || getDefaultEncoding();\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(options);\n  const pssSaltLength = getSaltLength(options);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(options);\n\n  signature = getArrayBufferOrView(signature\x2C 'signature'\x2C sigEncoding);\n\n  return this[kHandle].verify(data\x2C format\x2C type\x2C passphrase\x2C signature\x2C\n                              rsaPadding\x2C pssSaltLength\x2C dsaSigEnc);\n};\n\nfunction verifyOneShot(algorithm\x2C data\x2C key\x2C signature\x2C callback) {\n  if (algorithm != null)\n    validateString(algorithm\x2C 'algorithm');\n\n  if (callback !== undefined)\n    validateCallback(callback);\n\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      data\n    );\n  }\n\n  // Options specific to RSA\n  const rsaPadding = getPadding(key);\n  const pssSaltLength = getSaltLength(key);\n\n  // Options specific to (EC)DSA\n  const dsaSigEnc = getDSASignatureEncoding(key);\n\n  if (!isArrayBufferView(signature)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'signature'\x2C\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      signature\n    );\n  }\n\n  const {\n    data: keyData\x2C\n    format: keyFormat\x2C\n    type: keyType\x2C\n    passphrase: keyPassphrase\n  } = preparePublicOrPrivateKey(key);\n\n  const job = new SignJob(\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\n    kSignJobModeVerify\x2C\n    keyData\x2C\n    keyFormat\x2C\n    keyType\x2C\n    keyPassphrase\x2C\n    data\x2C\n    algorithm\x2C\n    pssSaltLength\x2C\n    rsaPadding\x2C\n    dsaSigEnc\x2C\n    signature);\n\n  if (!callback) {\n    const { 0: err\x2C 1: result } = job.run();\n    if (err !== undefined)\n      throw err;\n\n    return result;\n  }\n\n  job.ondone = (error\x2C result) => {\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C result);\n  };\n  job.run();\n}\n\nmodule.exports = {\n  Sign\x2C\n  signOneShot\x2C\n  Verify\x2C\n  verifyOneShot\x2C\n};\n
code-source-info,0x3ba9b4344c56,149,0,7083,C0O0C4O7083,,
code-creation,Function,10,222700,0x3ba9b43452ae,563, node:internal/crypto/sig:1:1,0x3ba9b4344bd0,~
code-source-info,0x3ba9b43452ae,149,0,7083,C0O0C126O25C132O50C137O74C143O220C146O220C151O220C156O129C162O163C168O189C174O319C177O319C182O259C188O279C194O299C200O518C203O518C208O368C214O377C220O396C226O407C232O426C238O444C244O458C250O474C256O494C262O615C265O615C270O556C276O580C282O602C288O711C291O711C296O659C302O680C308O766C311O766C316O753C322O805C325O805C330O794C336O858C339O858C344O835C350O1152C353O1178C361O1198C366O1152C371O1210C377O1210C382O1249C385O1254C394O1271C398O1368C401O1373C410O1390C414O2517C417O2522C426O2537C430O4681C433O4709C441O4729C446O4681C451O4741C457O4741C462O4782C465O4789C473O4813C478O4823C482O4806C486O4831C489O4838C497O4862C502O4872C506O4855C510O4881C513O4888C522O4905C526O7011C533O7032C539O7040C545O7055C551O7065C557O7026C562O7082,,
tick,0x7ff81f29ed3e,222820,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb79f,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,223047,0x3ba9b43466fe,5, node:internal/crypto/hash:1:1,0x3ba9b4346408,~
script-source,150,node:internal/crypto/hash,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  Hash: _Hash\x2C\n  HashJob\x2C\n  Hmac: _Hmac\x2C\n  kCryptoJobAsync\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n  getDefaultEncoding\x2C\n  getStringOption\x2C\n  jobPromise\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst {\n  prepareSecretKey\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  Buffer\x2C\n} = require('buffer');\n\nconst {\n  codes: {\n    ERR_CRYPTO_HASH_FINALIZED\x2C\n    ERR_CRYPTO_HASH_UPDATE_FAILED\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  validateEncoding\x2C\n  validateString\x2C\n  validateUint32\x2C\n} = require('internal/validators');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst LazyTransform = require('internal/streams/lazy_transform');\n\nconst kState = Symbol('kState');\nconst kFinalized = Symbol('kFinalized');\n\nfunction Hash(algorithm\x2C options) {\n  if (!(this instanceof Hash))\n    return new Hash(algorithm\x2C options);\n  if (!(algorithm instanceof _Hash))\n    validateString(algorithm\x2C 'algorithm');\n  const xofLen = typeof options === 'object' && options !== null ?\n    options.outputLength : undefined;\n  if (xofLen !== undefined)\n    validateUint32(xofLen\x2C 'options.outputLength');\n  this[kHandle] = new _Hash(algorithm\x2C xofLen);\n  this[kState] = {\n    [kFinalized]: false\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hash.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hash\x2C LazyTransform);\n\nHash.prototype.copy = function copy(options) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  return new Hash(this[kHandle]\x2C options);\n};\n\nHash.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\n  this[kHandle].update(chunk\x2C encoding);\n  callback();\n};\n\nHash.prototype._flush = function _flush(callback) {\n  this.push(this[kHandle].digest());\n  callback();\n};\n\nHash.prototype.update = function update(data\x2C encoding) {\n  encoding = encoding || getDefaultEncoding();\n\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n\n  if (typeof data === 'string') {\n    validateEncoding(data\x2C encoding);\n  } else if (!isArrayBufferView(data)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\n  }\n\n  if (!this[kHandle].update(data\x2C encoding))\n    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();\n  return this;\n};\n\n\nHash.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  if (state[kFinalized])\n    throw new ERR_CRYPTO_HASH_FINALIZED();\n  outputEncoding = outputEncoding || getDefaultEncoding();\n\n  // Explicit conversion for backward compatibility.\n  const ret = this[kHandle].digest(`${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nfunction Hmac(hmac\x2C key\x2C options) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hmac\x2C key\x2C options);\n  validateString(hmac\x2C 'hmac');\n  const encoding = getStringOption(options\x2C 'encoding');\n  key = prepareSecretKey(key\x2C encoding);\n  this[kHandle] = new _Hmac();\n  this[kHandle].init(hmac\x2C key);\n  this[kState] = {\n    [kFinalized]: false\n  };\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\n}\n\nObjectSetPrototypeOf(Hmac.prototype\x2C LazyTransform.prototype);\nObjectSetPrototypeOf(Hmac\x2C LazyTransform);\n\nHmac.prototype.update = Hash.prototype.update;\n\nHmac.prototype.digest = function digest(outputEncoding) {\n  const state = this[kState];\n  outputEncoding = outputEncoding || getDefaultEncoding();\n\n  if (state[kFinalized]) {\n    const buf = Buffer.from('');\n    return outputEncoding === 'buffer' ? buf : buf.toString(outputEncoding);\n  }\n\n  // Explicit conversion for backward compatibility.\n  const ret = this[kHandle].digest(`${outputEncoding}`);\n  state[kFinalized] = true;\n  return ret;\n};\n\nHmac.prototype._flush = Hash.prototype._flush;\nHmac.prototype._transform = Hash.prototype._transform;\n\n// Implementation for WebCrypto subtle.digest()\n\nasync function asyncDigest(algorithm\x2C data) {\n  algorithm = normalizeAlgorithm(algorithm);\n  data = getArrayBufferOrView(data\x2C 'data');\n  validateMaxBufferLength(data\x2C 'data');\n\n  if (algorithm.length !== undefined)\n    validateUint32(algorithm.length\x2C 'algorithm.length');\n\n  return jobPromise(new HashJob(\n    kCryptoJobAsync\x2C\n    normalizeHashName(algorithm.name)\x2C\n    data\x2C\n    algorithm.length));\n}\n\nmodule.exports = {\n  Hash\x2C\n  Hmac\x2C\n  asyncDigest\x2C\n};\n
code-source-info,0x3ba9b43466fe,150,0,4550,C0O0C4O4550,,
code-creation,Function,10,223536,0x3ba9b4346c3e,590, node:internal/crypto/hash:1:1,0x3ba9b4346678,~
code-source-info,0x3ba9b4346c3e,150,0,4550,C0O0C97O25C102O49C108O65C113O163C116O163C121O107C127O116C133O133C139O142C145O363C148O363C153O201C159O225C165O247C171O266C177O280C183O302C189O323C195O350C201O429C204O429C209O407C215O485C218O485C223O473C229O624C232O624C237O624C242O528C248O559C254O594C260O721C263O721C268O663C274O683C280O701C286O787C289O787C294O764C300O842C303O842C307O842C309O902C312O902C316O902C318O939C321O939C325O939C327O1483C330O1509C338O1534C343O1483C348O1546C354O1546C359O1590C362O1595C371O1610C375O1783C378O1788C387O1809C391O1919C394O1924C403O1941C407O2026C410O2031C419O2048C423O2566C426O2571C435O2588C439O3339C442O3365C450O3390C455O3339C460O3402C466O3402C471O3446C474O3451C482O3475C487O3485C491O3468C495O3494C498O3499C507O3516C511O3940C514O3945C522O3969C527O3979C531O3962C535O3987C538O3992C546O4020C551O4030C555O4013C559O4497C566O4518C572O4526C578O4534C584O4512C589O4549,,
tick,0x7ff81f29ef90,223681,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb7c1,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,224015,0x3ba9b434807e,5, node:internal/crypto/x509:1:1,0x3ba9b4347cb8,~
script-source,151,node:internal/crypto/x509,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  SafeMap\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  parseX509\x2C\n  X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\x2C\n  X509_CHECK_FLAG_NO_WILDCARDS\x2C\n  X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS\x2C\n  X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS\x2C\n  X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS\x2C\n} = internalBinding('crypto');\n\nconst {\n  PublicKeyObject\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n} = require('internal/util');\n\nconst {\n  validateBoolean\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { inspect } = require('internal/util/inspect');\n\nconst { Buffer } = require('buffer');\n\nconst {\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  JSTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  kHandle\x2C\n} = require('internal/crypto/util');\n\nconst kInternalState = Symbol('kInternalState');\n\nfunction isX509Certificate(value) {\n  return value[kInternalState] !== undefined;\n}\n\nfunction getFlags(options = {}) {\n  validateObject(options\x2C 'options');\n  const {\n    subject = 'always'\x2C  // Can be 'always' or 'never'\n    wildcards = true\x2C\n    partialWildcards = true\x2C\n    multiLabelWildcards = false\x2C\n    singleLabelSubdomains = false\x2C\n  } = { ...options };\n  let flags = 0;\n  validateString(subject\x2C 'options.subject');\n  validateBoolean(wildcards\x2C 'options.wildcards');\n  validateBoolean(partialWildcards\x2C 'options.partialWildcards');\n  validateBoolean(multiLabelWildcards\x2C 'options.multiLabelWildcards');\n  validateBoolean(singleLabelSubdomains\x2C 'options.singleLabelSubdomains');\n  switch (subject) {\n    case 'always': flags |= X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT; break;\n    case 'never': flags |= X509_CHECK_FLAG_NEVER_CHECK_SUBJECT; break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('options.subject'\x2C subject);\n  }\n  if (!wildcards) flags |= X509_CHECK_FLAG_NO_WILDCARDS;\n  if (!partialWildcards) flags |= X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\n  if (multiLabelWildcards) flags |= X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\n  if (singleLabelSubdomains) flags |= X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\n  return flags;\n}\n\nclass InternalX509Certificate extends JSTransferable {\n  [kInternalState] = new SafeMap();\n\n  constructor(handle) {\n    super();\n    this[kHandle] = handle;\n  }\n}\n\nclass X509Certificate extends JSTransferable {\n  [kInternalState] = new SafeMap();\n\n  constructor(buffer) {\n    if (typeof buffer === 'string')\n      buffer = Buffer.from(buffer);\n    if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n        buffer);\n    }\n    super();\n    this[kHandle] = parseX509(buffer);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\n    };\n\n    return `X509Certificate ${inspect({\n      subject: this.subject\x2C\n      subjectAltName: this.subjectAltName\x2C\n      issuer: this.issuer\x2C\n      infoAccess: this.infoAccess\x2C\n      validFrom: this.validFrom\x2C\n      validTo: this.validTo\x2C\n      fingerprint: this.fingerprint\x2C\n      fingerprint256: this.fingerprint256\x2C\n      keyUsage: this.keyUsage\x2C\n      serialNumber: this.serialNumber\x2C\n    }\x2C opts)}`;\n  }\n\n  [kClone]() {\n    const handle = this[kHandle];\n    return {\n      data: { handle }\x2C\n      deserializeInfo: 'internal/crypto/x509:InternalX509Certificate'\n    };\n  }\n\n  [kDeserialize]({ handle }) {\n    this[kHandle] = handle;\n  }\n\n  get subject() {\n    let value = this[kInternalState].get('subject');\n    if (value === undefined) {\n      value = this[kHandle].subject();\n      this[kInternalState].set('subject'\x2C value);\n    }\n    return value;\n  }\n\n  get subjectAltName() {\n    let value = this[kInternalState].get('subjectAltName');\n    if (value === undefined) {\n      value = this[kHandle].subjectAltName();\n      this[kInternalState].set('subjectAltName'\x2C value);\n    }\n    return value;\n  }\n\n  get issuer() {\n    let value = this[kInternalState].get('issuer');\n    if (value === undefined) {\n      value = this[kHandle].issuer();\n      this[kInternalState].set('issuer'\x2C value);\n    }\n    return value;\n  }\n\n  get issuerCertificate() {\n    let value = this[kInternalState].get('issuerCertificate');\n    if (value === undefined) {\n      const cert = this[kHandle].getIssuerCert();\n      if (cert)\n        value = new InternalX509Certificate(this[kHandle].getIssuerCert());\n      this[kInternalState].set('issuerCertificate'\x2C value);\n    }\n    return value;\n  }\n\n  get infoAccess() {\n    let value = this[kInternalState].get('infoAccess');\n    if (value === undefined) {\n      value = this[kHandle].infoAccess();\n      this[kInternalState].set('infoAccess'\x2C value);\n    }\n    return value;\n  }\n\n  get validFrom() {\n    let value = this[kInternalState].get('validFrom');\n    if (value === undefined) {\n      value = this[kHandle].validFrom();\n      this[kInternalState].set('validFrom'\x2C value);\n    }\n    return value;\n  }\n\n  get validTo() {\n    let value = this[kInternalState].get('validTo');\n    if (value === undefined) {\n      value = this[kHandle].validTo();\n      this[kInternalState].set('validTo'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint() {\n    let value = this[kInternalState].get('fingerprint');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint();\n      this[kInternalState].set('fingerprint'\x2C value);\n    }\n    return value;\n  }\n\n  get fingerprint256() {\n    let value = this[kInternalState].get('fingerprint256');\n    if (value === undefined) {\n      value = this[kHandle].fingerprint256();\n      this[kInternalState].set('fingerprint256'\x2C value);\n    }\n    return value;\n  }\n\n  get keyUsage() {\n    let value = this[kInternalState].get('keyUsage');\n    if (value === undefined) {\n      value = this[kHandle].keyUsage();\n      this[kInternalState].set('keyUsage'\x2C value);\n    }\n    return value;\n  }\n\n  get serialNumber() {\n    let value = this[kInternalState].get('serialNumber');\n    if (value === undefined) {\n      value = this[kHandle].serialNumber();\n      this[kInternalState].set('serialNumber'\x2C value);\n    }\n    return value;\n  }\n\n  get raw() {\n    let value = this[kInternalState].get('raw');\n    if (value === undefined) {\n      value = this[kHandle].raw();\n      this[kInternalState].set('raw'\x2C value);\n    }\n    return value;\n  }\n\n  get publicKey() {\n    let value = this[kInternalState].get('publicKey');\n    if (value === undefined) {\n      value = new PublicKeyObject(this[kHandle].publicKey());\n      this[kInternalState].set('publicKey'\x2C value);\n    }\n    return value;\n  }\n\n  toString() {\n    let value = this[kInternalState].get('pem');\n    if (value === undefined) {\n      value = this[kHandle].pem();\n      this[kInternalState].set('pem'\x2C value);\n    }\n    return value;\n  }\n\n  // There's no standardized JSON encoding for X509 certs so we\n  // fallback to providing the PEM encoding as a string.\n  toJSON() { return this.toString(); }\n\n  get ca() {\n    let value = this[kInternalState].get('ca');\n    if (value === undefined) {\n      value = this[kHandle].checkCA();\n      this[kInternalState].set('ca'\x2C value);\n    }\n    return value;\n  }\n\n  checkHost(name\x2C options) {\n    validateString(name\x2C 'name');\n    return this[kHandle].checkHost(name\x2C getFlags(options));\n  }\n\n  checkEmail(email\x2C options) {\n    validateString(email\x2C 'email');\n    return this[kHandle].checkEmail(email\x2C getFlags(options));\n  }\n\n  checkIP(ip\x2C options) {\n    validateString(ip\x2C 'ip');\n    return this[kHandle].checkIP(ip\x2C getFlags(options));\n  }\n\n  checkIssued(otherCert) {\n    if (!isX509Certificate(otherCert))\n      throw new ERR_INVALID_ARG_TYPE('otherCert'\x2C 'X509Certificate'\x2C otherCert);\n    return this[kHandle].checkIssued(otherCert[kHandle]);\n  }\n\n  checkPrivateKey(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'private')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].checkPrivateKey(pkey[kHandle]);\n  }\n\n  verify(pkey) {\n    if (!isKeyObject(pkey))\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\n    if (pkey.type !== 'public')\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\n    return this[kHandle].verify(pkey[kHandle]);\n  }\n\n  toLegacyObject() {\n    return this[kHandle].toLegacy();\n  }\n}\n\nInternalX509Certificate.prototype.constructor = X509Certificate;\nObjectSetPrototypeOf(\n  InternalX509Certificate.prototype\x2C\n  X509Certificate.prototype);\n\nmodule.exports = {\n  X509Certificate\x2C\n  InternalX509Certificate\x2C\n  isX509Certificate\x2C\n};\n
code-source-info,0x3ba9b434807e,151,0,8836,C0O0C4O8836,,
code-creation,Function,10,224893,0x3ba9b43499e6,651, node:internal/crypto/x509:1:1,0x3ba9b4347ff8,~
code-source-info,0x3ba9b43499e6,151,0,8836,C0O0C80O25C85O49C91O60C96O346C99O346C104O96C110O109C116O149C122O188C128O220C134O260C140O301C146O420C149O420C154O384C160O403C166O499C169O499C174O485C179O593C182O593C187O536C193O555C199O573C205O646C208O646C213O634C219O700C222O700C227O689C233O753C236O753C241O730C247O866C250O866C255O866C260O809C266O835C272O951C275O951C280O905C285O923C290O933C295O1019C298O1019C303O1006C309O1076C312O1076C316O1076C325O2380C333O2400C368O2342C377O2536C385O2556C395O2919C403O3503C412O3671C588O8592C591O8616C598O8638C602O8657C605O8705C610O8734C615O8657C620O8747C627O8768C633O8787C639O8814C645O8762C650O8835,,
code-creation,Function,10,224963,0x3ba9b4349dde,26,<instance_members_initializer> node:internal/crypto/x509:103:3,0x3ba9b4348c10,~
code-source-info,0x3ba9b4349dde,151,2555,2587,C3O2574C10O2574C25O2587,,
code-creation,Function,10,224986,0x3ba9b4349e7e,26,<instance_members_initializer> node:internal/crypto/x509:94:3,0x3ba9b43481a0,~
tick,0x108599a49,225004,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09eb7d7,0x10dd44be3,0x10dd44865,0x3ba9f09e50ea,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-source-info,0x3ba9b4349e7e,151,2399,2431,C3O2418C10O2418C25O2431,,
code-creation,Eval,10,225315,0x3ba9b434b22e,5, node:internal/crypto/certificate:1:1,0x3ba9b434b098,~
script-source,152,node:internal/crypto/certificate,'use strict';\n\nconst {\n  certExportChallenge\x2C\n  certExportPublicKey\x2C\n  certVerifySpkac\x2C\n} = internalBinding('crypto');\n\nconst {\n  getArrayBufferOrView\x2C\n} = require('internal/crypto/util');\n\n// The functions contained in this file cover the SPKAC format\n// (also referred to as Netscape SPKI). A general description of\n// the format can be found at https://en.wikipedia.org/wiki/SPKAC\n\nfunction verifySpkac(spkac\x2C encoding) {\n  return certVerifySpkac(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportPublicKey(spkac\x2C encoding) {\n  return certExportPublicKey(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\nfunction exportChallenge(spkac\x2C encoding) {\n  return certExportChallenge(\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\n}\n\n// The legacy implementation of this exposed the Certificate\n// object and required that users create an instance before\n// calling the member methods. This API pattern has been\n// deprecated\x2C however\x2C as the method implementations do not\n// rely on any object state.\n\n// For backwards compatibility reasons\x2C this cannot be converted into a\n// ES6 Class.\nfunction Certificate() {\n  if (!(this instanceof Certificate))\n    return new Certificate();\n}\n\nCertificate.prototype.verifySpkac = verifySpkac;\nCertificate.prototype.exportPublicKey = exportPublicKey;\nCertificate.prototype.exportChallenge = exportChallenge;\n\nCertificate.exportChallenge = exportChallenge;\nCertificate.exportPublicKey = exportPublicKey;\nCertificate.verifySpkac = verifySpkac;\n\nmodule.exports = Certificate;\n
code-source-info,0x3ba9b434b22e,152,0,1546,C0O0C4O1546,,
code-creation,Function,10,225496,0x3ba9b434b466,155, node:internal/crypto/certificate:1:1,0x3ba9b434b1a8,~
code-source-info,0x3ba9b434b466,152,0,1546,C0O0C38O92C41O92C46O25C52O48C58O71C64O156C67O156C72O130C78O1218C81O1230C88O1252C92O1267C95O1279C102O1305C106O1324C109O1336C116O1362C120O1382C125O1410C129O1429C134O1457C138O1476C143O1500C147O1516C149O1531C154O1545,,
code-creation,Eval,10,226020,0x3ba9b434c28e,5, node:internal/js_stream_socket:1:1,0x3ba9b434c010,~
script-source,153,node:internal/js_stream_socket,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { setImmediate } = require('timers');\nconst assert = require('internal/assert');\nconst { Socket } = require('net');\nconst { JSStream } = internalBinding('js_stream');\nconst uv = internalBinding('uv');\nlet debug = require('internal/util/debuglog').debuglog(\n  'stream_socket'\x2C\n  (fn) => {\n    debug = fn;\n  }\n);\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { ERR_STREAM_WRAP } = require('internal/errors').codes;\n\nconst kCurrentWriteRequest = Symbol('kCurrentWriteRequest');\nconst kCurrentShutdownRequest = Symbol('kCurrentShutdownRequest');\nconst kPendingShutdownRequest = Symbol('kPendingShutdownRequest');\n\nfunction checkReusedHandle(self) {\n  let socket = self[owner_symbol];\n\n  if (socket.constructor.name === 'ReusedHandle')\n    socket = socket.handle;\n\n  return socket;\n}\n\nfunction isClosing() {\n  const socket = checkReusedHandle(this);\n\n  return socket.isClosing();\n}\n\nfunction onreadstart() {\n  const socket = checkReusedHandle(this);\n\n  return socket.readStart();\n}\n\nfunction onreadstop() {\n  const socket = checkReusedHandle(this);\n\n  return socket.readStop();\n}\n\nfunction onshutdown(req) {\n  const socket = checkReusedHandle(this);\n\n  return socket.doShutdown(req);\n}\n\nfunction onwrite(req\x2C bufs) {\n  const socket = checkReusedHandle(this);\n\n  return socket.doWrite(req\x2C bufs);\n}\n\n/* This class serves as a wrapper for when the C++ side of Node wants access\n * to a standard JS stream. For example\x2C TLS or HTTP do not operate on network\n * resources conceptually\x2C although that is the common case and what we are\n * optimizing for; in theory\x2C they are completely composable and can work with\n * any stream resource they see.\n *\n * For the common case\x2C i.e. a TLS socket wrapping around a net.Socket\x2C we\n * can skip going through the JS layer and let TLS access the raw C++ handle\n * of a net.Socket. The flipside of this is that\x2C to maintain composability\x2C\n * we need a way to create "fake" net.Socket instances that call back into a\n * "real" JavaScript stream. JSStreamSocket is exactly this.\n */\nclass JSStreamSocket extends Socket {\n  constructor(stream) {\n    const handle = new JSStream();\n    handle.close = (cb) => {\n      debug('close');\n      this.doClose(cb);\n    };\n    // Inside of the following functions\x2C `this` refers to the handle\n    // and `this[owner_symbol]` refers to this JSStreamSocket instance.\n    handle.isClosing = isClosing;\n    handle.onreadstart = onreadstart;\n    handle.onreadstop = onreadstop;\n    handle.onshutdown = onshutdown;\n    handle.onwrite = onwrite;\n\n    stream.pause();\n    stream.on('error'\x2C (err) => this.emit('error'\x2C err));\n    const ondata = (chunk) => {\n      if (typeof chunk === 'string' ||\n          stream.readableObjectMode === true) {\n        // Make sure that no further `data` events will happen.\n        stream.pause();\n        stream.removeListener('data'\x2C ondata);\n\n        this.emit('error'\x2C new ERR_STREAM_WRAP());\n        return;\n      }\n\n      debug('data'\x2C chunk.length);\n      if (this._handle)\n        this._handle.readBuffer(chunk);\n    };\n    stream.on('data'\x2C ondata);\n    stream.once('end'\x2C () => {\n      debug('end');\n      if (this._handle)\n        this._handle.emitEOF();\n    });\n    // Some `Stream` don't pass `hasError` parameters when closed.\n    stream.once('close'\x2C () => {\n      // Errors emitted from `stream` have also been emitted to this instance\n      // so that we don't pass errors to `destroy()` again.\n      this.destroy();\n    });\n\n    super({ handle\x2C manualStart: true });\n    this.stream = stream;\n    this[kCurrentWriteRequest] = null;\n    this[kCurrentShutdownRequest] = null;\n    this[kPendingShutdownRequest] = null;\n    this.readable = stream.readable;\n    this.writable = stream.writable;\n\n    // Start reading.\n    this.read(0);\n  }\n\n  // Allow legacy requires in the test suite to keep working:\n  //   const { StreamWrap } = require('internal/js_stream_socket')\n  static get StreamWrap() {\n    return JSStreamSocket;\n  }\n\n  isClosing() {\n    return !this.readable || !this.writable;\n  }\n\n  readStart() {\n    this.stream.resume();\n    return 0;\n  }\n\n  readStop() {\n    this.stream.pause();\n    return 0;\n  }\n\n  doShutdown(req) {\n    // TODO(addaleax): It might be nice if we could get into a state where\n    // DoShutdown() is not called on streams while a write is still pending.\n    //\n    // Currently\x2C the only part of the code base where that happens is the\n    // TLS implementation\x2C which calls both DoWrite() and DoShutdown() on the\n    // underlying network stream inside of its own DoShutdown() method.\n    // Working around that on the native side is not quite trivial (yet?)\x2C\n    // so for now that is supported here.\n\n    if (this[kCurrentWriteRequest] !== null) {\n      this[kPendingShutdownRequest] = req;\n      return 0;\n    }\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n    this[kCurrentShutdownRequest] = req;\n\n    const handle = this._handle;\n\n    setImmediate(() => {\n      // Ensure that write is dispatched asynchronously.\n      this.stream.end(() => {\n        this.finishShutdown(handle\x2C 0);\n      });\n    });\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishShutdown(handle\x2C errCode) {\n    // The shutdown request might already have been cancelled.\n    if (this[kCurrentShutdownRequest] === null)\n      return;\n    const req = this[kCurrentShutdownRequest];\n    this[kCurrentShutdownRequest] = null;\n    handle.finishShutdown(req\x2C errCode);\n  }\n\n  doWrite(req\x2C bufs) {\n    assert(this[kCurrentWriteRequest] === null);\n    assert(this[kCurrentShutdownRequest] === null);\n\n    const handle = this._handle;\n    const self = this;\n\n    let pending = bufs.length;\n\n    this.stream.cork();\n    // Use `var` over `let` for performance optimization.\n    for (var i = 0; i < bufs.length; ++i)\n      this.stream.write(bufs[i]\x2C done);\n    this.stream.uncork();\n\n    // Only set the request here\x2C because the `write()` calls could throw.\n    this[kCurrentWriteRequest] = req;\n\n    function done(err) {\n      if (!err && --pending !== 0)\n        return;\n\n      // Ensure that this is called once in case of error\n      pending = 0;\n\n      let errCode = 0;\n      if (err) {\n        errCode = uv[`UV_${err.code}`] || uv.UV_EPIPE;\n      }\n\n      // Ensure that write was dispatched\n      setImmediate(() => {\n        self.finishWrite(handle\x2C errCode);\n      });\n    }\n\n    return 0;\n  }\n\n  // handle === this._handle except when called from doClose().\n  finishWrite(handle\x2C errCode) {\n    // The write request might already have been cancelled.\n    if (this[kCurrentWriteRequest] === null)\n      return;\n    const req = this[kCurrentWriteRequest];\n    this[kCurrentWriteRequest] = null;\n\n    handle.finishWrite(req\x2C errCode);\n    if (this[kPendingShutdownRequest]) {\n      const req = this[kPendingShutdownRequest];\n      this[kPendingShutdownRequest] = null;\n      this.doShutdown(req);\n    }\n  }\n\n  doClose(cb) {\n    const handle = this._handle;\n\n    // When sockets of the "net" module destroyed\x2C they will call\n    // `this._handle.close()` which will also emit EOF if not emitted before.\n    // This feature makes sockets on the other side emit "end" and "close"\n    // even though we haven't called `end()`. As `stream` are likely to be\n    // instances of `net.Socket`\x2C calling `stream.destroy()` manually will\n    // avoid issues that don't properly close wrapped connections.\n    this.stream.destroy();\n\n    setImmediate(() => {\n      // Should be already set by net.js\n      assert(this._handle === null);\n\n      this.finishWrite(handle\x2C uv.UV_ECANCELED);\n      this.finishShutdown(handle\x2C uv.UV_ECANCELED);\n\n      cb();\n    });\n  }\n}\n\nmodule.exports = JSStreamSocket;\n
code-source-info,0x3ba9b434c28e,153,0,7784,C0O0C4O7784,,
code-creation,Function,10,226792,0x3ba9b434cc16,318, node:internal/js_stream_socket:1:1,0x3ba9b434c208,~
code-source-info,0x3ba9b434cc16,153,0,7784,C0O0C71O25C76O76C79O76C84O59C90O110C93O110C97O110C99O157C102O157C107O146C112O194C115O194C120O181C126O235C129O235C133O235C135O270C138O270C143O303C156O304C162O270C164O393C167O393C172O424C177O376C183O462C186O462C191O488C196O442C202O526C205O526C209O526C211O590C214O590C218O590C220O657C223O657C227O657C236O2124C310O7751C312O7766C317O7783,,
tick,0x7ff81f174132,226886,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09e511b,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,227204,0x3ba9b43529b6,14,makeMethodProxy node:_tls_wrap:551:25,0x3ba9f09e32d0,~
code-source-info,0x3ba9b43529b6,138,15534,15685,C0O15534C9O15545C13O15683,,
code-creation,LazyCompile,10,227286,0x3ba9b43564c6,21, node:_tls_wrap:1033:4,0x3ba9f09e4288,~
code-source-info,0x3ba9b43564c6,138,29115,29193,C0O29131C3O29141C11O29161C15O29159C20O29192,,
code-creation,LazyCompile,10,227359,0x3ba9b435661e,14,makeSocketMethodProxy node:_tls_wrap:1014:31,0x3ba9f09e3438,~
code-source-info,0x3ba9b435661e,138,28729,28897,C0O28729C9O28740C13O28895,,
tick,0x1089a16cf,227432,0,0x0,2,0x108a8eb80,0x3ba9b43564d1,0x108e53dcf,0x3ba9f09e5565,0x10dd44be3,0x10dd44865,0x3ba9f09c590a,0x10dd44be3,0x10dd44865,0x3ba9f09c31b5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,227577,0x3ba9b4356ec6,5, node:internal/tls/secure-pair:1:1,0x3ba9b4356cf0,~
script-source,154,node:internal/tls/secure-pair,'use strict';\n\nconst EventEmitter = require('events');\nconst { Duplex } = require('stream');\nconst _tls_wrap = require('_tls_wrap');\nconst _tls_common = require('_tls_common');\n\nconst {\n  Symbol\x2C\n  ReflectConstruct\x2C\n} = primordials;\n\nconst kCallback = Symbol('Callback');\nconst kOtherSide = Symbol('Other');\n\nclass DuplexSocket extends Duplex {\n  constructor() {\n    super();\n    this[kCallback] = null;\n    this[kOtherSide] = null;\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this[kOtherSide].push(chunk);\n      this[kOtherSide][kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this[kOtherSide].on('end'\x2C callback);\n    this[kOtherSide].push(null);\n  }\n}\n\nclass DuplexPair {\n  constructor() {\n    this.socket1 = new DuplexSocket();\n    this.socket2 = new DuplexSocket();\n    this.socket1[kOtherSide] = this.socket2;\n    this.socket2[kOtherSide] = this.socket1;\n  }\n}\n\nclass SecurePair extends EventEmitter {\n  constructor(secureContext = _tls_common.createSecureContext()\x2C\n              isServer = false\x2C\n              requestCert = !isServer\x2C\n              rejectUnauthorized = false\x2C\n              options = {}) {\n    super();\n    const { socket1\x2C socket2 } = new DuplexPair();\n\n    this.server = options.server;\n    this.credentials = secureContext;\n\n    this.encrypted = socket1;\n    this.cleartext = new _tls_wrap.TLSSocket(socket2\x2C {\n      secureContext\x2C\n      isServer\x2C\n      requestCert\x2C\n      rejectUnauthorized\x2C\n      ...options\n    });\n    this.cleartext.once('secure'\x2C () => this.emit('secure'));\n  }\n\n  destroy() {\n    this.cleartext.destroy();\n    this.encrypted.destroy();\n  }\n}\n\nexports.createSecurePair = function createSecurePair(...args) {\n  return ReflectConstruct(SecurePair\x2C args);\n};\n
code-source-info,0x3ba9b4356ec6,154,0,1929,C0O0C4O1929,,
code-creation,Function,10,227791,0x3ba9b4357676,202, node:internal/tls/secure-pair:1:1,0x3ba9b4356e40,~
code-source-info,0x3ba9b4357676,154,0,1929,C0O0C33O36C36O36C41O74C44O74C49O63C54O111C57O111C61O111C63O153C66O153C70O153C72O188C77O198C83O252C86O252C90O252C92O291C95O291C99O291C101O336C138O309C161O878C163O1115C190O1090C192O1817C196O1842C201O1928,,
code-creation,Eval,10,228353,0x3ba9b4358666,5, node:_http_agent:1:1,0x3ba9b43582d0,~
script-source,155,node:_http_agent,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSome\x2C\n  ArrayPrototypeSplice\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSubstr\x2C\n  Symbol\x2C\n} = primordials;\n\nconst net = require('net');\nconst EventEmitter = require('events');\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\nconst { AsyncResource } = require('async_hooks');\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\nconst {\n  codes: {\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst { once } = require('internal/util');\nconst {\n  validateNumber\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst kOnKeylog = Symbol('onkeylog');\nconst kRequestOptions = Symbol('requestOptions');\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\n// New Agent code.\n\n// The largest departure from the previous implementation is that\n// an Agent instance holds connections for a variable number of host:ports.\n// Surprisingly\x2C this is still API compatible as far as third parties are\n// concerned. The only code that really notices the difference is the\n// request object.\n\n// Another departure is that all code related to HTTP parsing is in\n// ClientRequest.onSocket(). The Agent is now *strictly*\n// concerned with managing a connection pool.\n\nclass ReusedHandle {\n  constructor(type\x2C handle) {\n    this.type = type;\n    this.handle = handle;\n  }\n}\n\nfunction freeSocketErrorListener(err) {\n  const socket = this;\n  debug('SOCKET ERROR on FREE socket:'\x2C err.message\x2C err.stack);\n  socket.destroy();\n  socket.emit('agentRemove');\n}\n\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this.defaultPort = 80;\n  this.protocol = 'http:';\n\n  this.options = { __proto__: null\x2C ...options };\n\n  // Don't confuse net and make it think that we're connecting to a pipe\n  this.options.path = null;\n  this.requests = ObjectCreate(null);\n  this.sockets = ObjectCreate(null);\n  this.freeSockets = ObjectCreate(null);\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\n  this.keepAlive = this.options.keepAlive || false;\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\n  this.scheduling = this.options.scheduling || 'lifo';\n  this.maxTotalSockets = this.options.maxTotalSockets;\n  this.totalSocketCount = 0;\n\n  validateOneOf(this.scheduling\x2C 'scheduling'\x2C ['fifo'\x2C 'lifo']);\n\n  if (this.maxTotalSockets !== undefined) {\n    validateNumber(this.maxTotalSockets\x2C 'maxTotalSockets');\n    if (this.maxTotalSockets <= 0 || NumberIsNaN(this.maxTotalSockets))\n      throw new ERR_OUT_OF_RANGE('maxTotalSockets'\x2C '> 0'\x2C\n                                 this.maxTotalSockets);\n  } else {\n    this.maxTotalSockets = Infinity;\n  }\n\n  this.on('free'\x2C (socket\x2C options) => {\n    const name = this.getName(options);\n    debug('agent.on(free)'\x2C name);\n\n    // TODO(ronag): socket.destroy(err) might have been called\n    // before coming here and have an 'error' scheduled. In the\n    // case of socket.destroy() below this 'error' has no handler\n    // and could cause unhandled exception.\n\n    if (!socket.writable) {\n      socket.destroy();\n      return;\n    }\n\n    const requests = this.requests[name];\n    if (requests && requests.length) {\n      const req = ArrayPrototypeShift(requests);\n      const reqAsyncRes = req[kRequestAsyncResource];\n      if (reqAsyncRes) {\n        // Run request within the original async context.\n        reqAsyncRes.runInAsyncScope(() => {\n          asyncResetHandle(socket);\n          setRequestSocket(this\x2C req\x2C socket);\n        });\n        req[kRequestAsyncResource] = null;\n      } else {\n        setRequestSocket(this\x2C req\x2C socket);\n      }\n      if (requests.length === 0) {\n        delete this.requests[name];\n      }\n      return;\n    }\n\n    // If there are no pending requests\x2C then put it in\n    // the freeSockets pool\x2C but only if we're allowed to do so.\n    const req = socket._httpMessage;\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\n      socket.destroy();\n      return;\n    }\n\n    const freeSockets = this.freeSockets[name] || [];\n    const freeLen = freeSockets.length;\n    let count = freeLen;\n    if (this.sockets[name])\n      count += this.sockets[name].length;\n\n    if (this.totalSocketCount > this.maxTotalSockets ||\n        count > this.maxSockets ||\n        freeLen >= this.maxFreeSockets ||\n        !this.keepSocketAlive(socket)) {\n      socket.destroy();\n      return;\n    }\n\n    this.freeSockets[name] = freeSockets;\n    socket[async_id_symbol] = -1;\n    socket._httpMessage = null;\n    this.removeSocket(socket\x2C options);\n\n    socket.once('error'\x2C freeSocketErrorListener);\n    ArrayPrototypePush(freeSockets\x2C socket);\n  });\n\n  // Don't emit keylog events unless there is a listener for them.\n  this.on('newListener'\x2C maybeEnableKeylog);\n}\nObjectSetPrototypeOf(Agent.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Agent\x2C EventEmitter);\n\nfunction maybeEnableKeylog(eventName) {\n  if (eventName === 'keylog') {\n    this.removeListener('newListener'\x2C maybeEnableKeylog);\n    // Future sockets will listen on keylog at creation.\n    const agent = this;\n    this[kOnKeylog] = function onkeylog(keylog) {\n      agent.emit('keylog'\x2C keylog\x2C this);\n    };\n    // Existing sockets will start listening on keylog now.\n    const sockets = ObjectValues(this.sockets);\n    for (let i = 0; i < sockets.length; i++) {\n      sockets[i].on('keylog'\x2C this[kOnKeylog]);\n    }\n  }\n}\n\nAgent.defaultMaxSockets = Infinity;\n\nAgent.prototype.createConnection = net.createConnection;\n\n// Get the key for a given set of request options\nAgent.prototype.getName = function getName(options) {\n  let name = options.host || 'localhost';\n\n  name += ':';\n  if (options.port)\n    name += options.port;\n\n  name += ':';\n  if (options.localAddress)\n    name += options.localAddress;\n\n  // Pacify parallel/test-http-agent-getname by only appending\n  // the ':' when options.family is set.\n  if (options.family === 4 || options.family === 6)\n    name += `:${options.family}`;\n\n  if (options.socketPath)\n    name += `:${options.socketPath}`;\n\n  return name;\n};\n\nAgent.prototype.addRequest = function addRequest(req\x2C options\x2C port/* legacy */\x2C\n                                                 localAddress/* legacy */) {\n  // Legacy API: addRequest(req\x2C host\x2C port\x2C localAddress)\n  if (typeof options === 'string') {\n    options = {\n      __proto__: null\x2C\n      host: options\x2C\n      port\x2C\n      localAddress\n    };\n  }\n\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n\n  const name = this.getName(options);\n  if (!this.sockets[name]) {\n    this.sockets[name] = [];\n  }\n\n  const freeSockets = this.freeSockets[name];\n  let socket;\n  if (freeSockets) {\n    while (freeSockets.length && freeSockets[0].destroyed) {\n      ArrayPrototypeShift(freeSockets);\n    }\n    socket = this.scheduling === 'fifo' ?\n      ArrayPrototypeShift(freeSockets) :\n      ArrayPrototypePop(freeSockets);\n    if (!freeSockets.length)\n      delete this.freeSockets[name];\n  }\n\n  const freeLen = freeSockets ? freeSockets.length : 0;\n  const sockLen = freeLen + this.sockets[name].length;\n\n  if (socket) {\n    asyncResetHandle(socket);\n    this.reuseSocket(socket\x2C req);\n    setRequestSocket(this\x2C req\x2C socket);\n    ArrayPrototypePush(this.sockets[name]\x2C socket);\n    this.totalSocketCount++;\n  } else if (sockLen < this.maxSockets &&\n             this.totalSocketCount < this.maxTotalSockets) {\n    debug('call onSocket'\x2C sockLen\x2C freeLen);\n    // If we are under maxSockets create a new one.\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        setRequestSocket(this\x2C req\x2C socket);\n    });\n  } else {\n    debug('wait for socket');\n    // We are over limit so we'll add it to the queue.\n    if (!this.requests[name]) {\n      this.requests[name] = [];\n    }\n\n    // Used to create sockets for pending requests from different origin\n    req[kRequestOptions] = options;\n    // Used to capture the original async context.\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\n\n    ArrayPrototypePush(this.requests[name]\x2C req);\n  }\n};\n\nAgent.prototype.createSocket = function createSocket(req\x2C options\x2C cb) {\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\n  if (options.socketPath)\n    options.path = options.socketPath;\n\n  if (!options.servername && options.servername !== '')\n    options.servername = calculateServerName(options\x2C req);\n\n  const name = this.getName(options);\n  options._agentKey = name;\n\n  debug('createConnection'\x2C name\x2C options);\n  options.encoding = null;\n\n  const oncreate = once((err\x2C s) => {\n    if (err)\n      return cb(err);\n    if (!this.sockets[name]) {\n      this.sockets[name] = [];\n    }\n    ArrayPrototypePush(this.sockets[name]\x2C s);\n    this.totalSocketCount++;\n    debug('sockets'\x2C name\x2C this.sockets[name].length\x2C this.totalSocketCount);\n    installListeners(this\x2C s\x2C options);\n    cb(null\x2C s);\n  });\n\n  const newSocket = this.createConnection(options\x2C oncreate);\n  if (newSocket)\n    oncreate(null\x2C newSocket);\n};\n\nfunction calculateServerName(options\x2C req) {\n  let servername = options.host;\n  const hostHeader = req.getHeader('host');\n  if (hostHeader) {\n    validateString(hostHeader\x2C 'options.headers.host');\n\n    // abc => abc\n    // abc:123 => abc\n    // [::1] => ::1\n    // [::1]:123 => ::1\n    if (StringPrototypeStartsWith(hostHeader\x2C '[')) {\n      const index = StringPrototypeIndexOf(hostHeader\x2C ']');\n      if (index === -1) {\n        // Leading '['\x2C but no ']'. Need to do something...\n        servername = hostHeader;\n      } else {\n        servername = StringPrototypeSubstr(hostHeader\x2C 1\x2C index - 1);\n      }\n    } else {\n      servername = StringPrototypeSplit(hostHeader\x2C ':'\x2C 1)[0];\n    }\n  }\n  // Don't implicitly set invalid (IP) servernames.\n  if (net.isIP(servername))\n    servername = '';\n  return servername;\n}\n\nfunction installListeners(agent\x2C s\x2C options) {\n  function onFree() {\n    debug('CLIENT socket onFree');\n    agent.emit('free'\x2C s\x2C options);\n  }\n  s.on('free'\x2C onFree);\n\n  function onClose(err) {\n    debug('CLIENT socket onClose');\n    // This is the only place where sockets get removed from the Agent.\n    // If you want to remove a socket from the pool\x2C just close it.\n    // All socket errors end in a close event anyway.\n    agent.removeSocket(s\x2C options);\n  }\n  s.on('close'\x2C onClose);\n\n  function onTimeout() {\n    debug('CLIENT socket onTimeout');\n\n    // Destroy if in free list.\n    // TODO(ronag): Always destroy\x2C even if not in free list.\n    const sockets = agent.freeSockets;\n    if (ArrayPrototypeSome(ObjectKeys(sockets)\x2C (name) =>\n      ArrayPrototypeIncludes(sockets[name]\x2C s)\n    )) {\n      return s.destroy();\n    }\n  }\n  s.on('timeout'\x2C onTimeout);\n\n  function onRemove() {\n    // We need this function for cases like HTTP 'upgrade'\n    // (defined by WebSockets) where we need to remove a socket from the\n    // pool because it'll be locked up indefinitely\n    debug('CLIENT socket onRemove');\n    agent.removeSocket(s\x2C options);\n    s.removeListener('close'\x2C onClose);\n    s.removeListener('free'\x2C onFree);\n    s.removeListener('timeout'\x2C onTimeout);\n    s.removeListener('agentRemove'\x2C onRemove);\n  }\n  s.on('agentRemove'\x2C onRemove);\n\n  if (agent[kOnKeylog]) {\n    s.on('keylog'\x2C agent[kOnKeylog]);\n  }\n}\n\nAgent.prototype.removeSocket = function removeSocket(s\x2C options) {\n  const name = this.getName(options);\n  debug('removeSocket'\x2C name\x2C 'writable:'\x2C s.writable);\n  const sets = [this.sockets];\n\n  // If the socket was destroyed\x2C remove it from the free buffers too.\n  if (!s.writable)\n    ArrayPrototypePush(sets\x2C this.freeSockets);\n\n  for (let sk = 0; sk < sets.length; sk++) {\n    const sockets = sets[sk];\n\n    if (sockets[name]) {\n      const index = ArrayPrototypeIndexOf(sockets[name]\x2C s);\n      if (index !== -1) {\n        ArrayPrototypeSplice(sockets[name]\x2C index\x2C 1);\n        // Don't leak\n        if (sockets[name].length === 0)\n          delete sockets[name];\n        this.totalSocketCount--;\n      }\n    }\n  }\n\n  let req;\n  if (this.requests[name] && this.requests[name].length) {\n    debug('removeSocket\x2C have a request\x2C make a socket');\n    req = this.requests[name][0];\n  } else {\n    // TODO(rickyes): this logic will not be FIFO across origins.\n    // There might be older requests in a different origin\x2C but\n    // if the origin which releases the socket has pending requests\n    // that will be prioritized.\n    const keys = ObjectKeys(this.requests);\n    for (let i = 0; i < keys.length; i++) {\n      const prop = keys[i];\n      // Check whether this specific origin is already at maxSockets\n      if (this.sockets[prop] && this.sockets[prop].length) break;\n      debug('removeSocket\x2C have a request with different origin\x2C' +\n        ' make a socket');\n      req = this.requests[prop][0];\n      options = req[kRequestOptions];\n      break;\n    }\n  }\n\n  if (req && options) {\n    req[kRequestOptions] = undefined;\n    // If we have pending requests and a socket gets closed make a new one\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\n      if (err)\n        req.onSocket(socket\x2C err);\n      else\n        socket.emit('free');\n    });\n  }\n\n};\n\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\n  socket.setKeepAlive(true\x2C this.keepAliveMsecs);\n  socket.unref();\n\n  const agentTimeout = this.options.timeout || 0;\n  if (socket.timeout !== agentTimeout) {\n    socket.setTimeout(agentTimeout);\n  }\n\n  return true;\n};\n\nAgent.prototype.reuseSocket = function reuseSocket(socket\x2C req) {\n  debug('have free socket');\n  socket.removeListener('error'\x2C freeSocketErrorListener);\n  req.reusedSocket = true;\n  socket.ref();\n};\n\nAgent.prototype.destroy = function destroy() {\n  const sets = [this.freeSockets\x2C this.sockets];\n  for (let s = 0; s < sets.length; s++) {\n    const set = sets[s];\n    const keys = ObjectKeys(set);\n    for (let v = 0; v < keys.length; v++) {\n      const setName = set[keys[v]];\n      for (let n = 0; n < setName.length; n++) {\n        setName[n].destroy();\n      }\n    }\n  }\n};\n\nfunction setRequestSocket(agent\x2C req\x2C socket) {\n  req.onSocket(socket);\n  const agentTimeout = agent.options.timeout || 0;\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\n    return;\n  }\n  socket.setTimeout(req.timeout);\n}\n\nfunction asyncResetHandle(socket) {\n  // Guard against an uninitialized or user supplied Socket.\n  const handle = socket._handle;\n  if (handle && typeof handle.asyncReset === 'function') {\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\n    handle.asyncReset(new ReusedHandle(handle.getProviderType()\x2C socket));\n    socket[async_id_symbol] = handle.getAsyncId();\n  }\n}\n\nmodule.exports = {\n  Agent\x2C\n  globalAgent: new Agent()\n};\n
code-source-info,0x3ba9b4358666,155,0,16460,C0O0C4O16460,,
code-creation,Function,10,229944,0x3ba9b4358ff6,636, node:_http_agent:1:1,0x3ba9b43585e0,~
code-source-info,0x3ba9b4358ff
tick,0x1083565de,230073,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31be,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f213c7d,230106,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31be,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,230336,0x3ba9b435acce,505,Agent node:_http_agent:93:15,0x3ba9b43586e8,~
code-source-info,0x3ba9b435acce
code-creation,LazyCompile,10,230446,0x3ba9b435c1ae,21,EventEmitter node:events:84:22,0x3ba960971b50,~
code-source-info,0x3ba9b435c1ae,13,2479,2527,C0O2490C3O2503C8O2508C13O2508C20O2526,,
code-creation,LazyCompile,10,230533,0x3ba9b435c2f6,149,EventEmitter.init node:events:194:29,0x3ba960972850,~
code-source-info,0x3ba9b435c2f6,13,5579,6168,C0O5600C6O5636C13O5648C16O5648C21O5674C25O5644C30O5690C32O5705C37O5705C41O5703C45O5729C46O5747C50O5785C60O5778C64O5817C71O5825C80O5852C85O5873C93O5852C98O5926C100O5931C105O5943C108O5956C113O5943C117O5941C123O6112C125O6117C131O6142C138O6152C140O6151C143O6127C148O6167,,
code-creation,LazyCompile,10,230652,0x3ba9b435c5b6,75, node:internal/validators:127:39,0x3ba99921a008,~
code-source-info,0x3ba9b435c5b6,17,3681,4014,C0O3709C5O3714C12O3774C19O3800C22O3818C27O3800C36O3774C42O3921C47O3940C51O3955C67O3961C72O3955C74O4013,,
tick,0x108afb1ff,231168,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,231435,0x3ba9b435ea46,5, node:_http_server:1:1,0x3ba9b435e3a0,~
script-source,156,node:_http_server,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Error\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst net = require('net');\nconst EE = require('events');\nconst assert = require('internal/assert');\nconst {\n  parsers\x2C\n  freeParser\x2C\n  continueExpression\x2C\n  chunkExpression\x2C\n  kIncomingMessage\x2C\n  kRequestTimeout\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst { OutgoingMessage } = require('_http_outgoing');\nconst {\n  kOutHeaders\x2C\n  kNeedDrain\x2C\n  emitStatistics\n} = require('internal/http');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  getOrSetAsyncId\n} = require('internal/async_hooks');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  connResetException\x2C\n  codes\n} = require('internal/errors');\nconst {\n  ERR_HTTP_REQUEST_TIMEOUT\x2C\n  ERR_HTTP_HEADERS_SENT\x2C\n  ERR_HTTP_INVALID_STATUS_CODE\x2C\n  ERR_HTTP_SOCKET_ENCODING\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_CHAR\n} = codes;\nconst {\n  validateInteger\x2C\n  validateBoolean\n} = require('internal/validators');\nconst Buffer = require('buffer').Buffer;\nconst {\n  DTRACE_HTTP_SERVER_REQUEST\x2C\n  DTRACE_HTTP_SERVER_RESPONSE\n} = require('internal/dtrace');\nconst { setTimeout\x2C clearTimeout } = require('timers');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst onRequestStartChannel = dc.channel('http.server.request.start');\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\n\nconst kServerResponse = Symbol('ServerResponse');\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\n\nconst {\n  hasObserver\x2C\n} = require('internal/perf/observe');\n\nconst STATUS_CODES = {\n  100: 'Continue'\x2C                   // RFC 7231 6.2.1\n  101: 'Switching Protocols'\x2C        // RFC 7231 6.2.2\n  102: 'Processing'\x2C                 // RFC 2518 10.1 (obsoleted by RFC 4918)\n  103: 'Early Hints'\x2C                // RFC 8297 2\n  200: 'OK'\x2C                         // RFC 7231 6.3.1\n  201: 'Created'\x2C                    // RFC 7231 6.3.2\n  202: 'Accepted'\x2C                   // RFC 7231 6.3.3\n  203: 'Non-Authoritative Information'\x2C // RFC 7231 6.3.4\n  204: 'No Content'\x2C                 // RFC 7231 6.3.5\n  205: 'Reset Content'\x2C              // RFC 7231 6.3.6\n  206: 'Partial Content'\x2C            // RFC 7233 4.1\n  207: 'Multi-Status'\x2C               // RFC 4918 11.1\n  208: 'Already Reported'\x2C           // RFC 5842 7.1\n  226: 'IM Used'\x2C                    // RFC 3229 10.4.1\n  300: 'Multiple Choices'\x2C           // RFC 7231 6.4.1\n  301: 'Moved Permanently'\x2C          // RFC 7231 6.4.2\n  302: 'Found'\x2C                      // RFC 7231 6.4.3\n  303: 'See Other'\x2C                  // RFC 7231 6.4.4\n  304: 'Not Modified'\x2C               // RFC 7232 4.1\n  305: 'Use Proxy'\x2C                  // RFC 7231 6.4.5\n  307: 'Temporary Redirect'\x2C         // RFC 7231 6.4.7\n  308: 'Permanent Redirect'\x2C         // RFC 7238 3\n  400: 'Bad Request'\x2C                // RFC 7231 6.5.1\n  401: 'Unauthorized'\x2C               // RFC 7235 3.1\n  402: 'Payment Required'\x2C           // RFC 7231 6.5.2\n  403: 'Forbidden'\x2C                  // RFC 7231 6.5.3\n  404: 'Not Found'\x2C                  // RFC 7231 6.5.4\n  405: 'Method Not Allowed'\x2C         // RFC 7231 6.5.5\n  406: 'Not Acceptable'\x2C             // RFC 7231 6.5.6\n  407: 'Proxy Authentication Required'\x2C // RFC 7235 3.2\n  408: 'Request Timeout'\x2C            // RFC 7231 6.5.7\n  409: 'Conflict'\x2C                   // RFC 7231 6.5.8\n  410: 'Gone'\x2C                       // RFC 7231 6.5.9\n  411: 'Length Required'\x2C            // RFC 7231 6.5.10\n  412: 'Precondition Failed'\x2C        // RFC 7232 4.2\n  413: 'Payload Too Large'\x2C          // RFC 7231 6.5.11\n  414: 'URI Too Long'\x2C               // RFC 7231 6.5.12\n  415: 'Unsupported Media Type'\x2C     // RFC 7231 6.5.13\n  416: 'Range Not Satisfiable'\x2C      // RFC 7233 4.4\n  417: 'Expectation Failed'\x2C         // RFC 7231 6.5.14\n  418: 'I\\'m a Teapot'\x2C              // RFC 7168 2.3.3\n  421: 'Misdirected Request'\x2C        // RFC 7540 9.1.2\n  422: 'Unprocessable Entity'\x2C       // RFC 4918 11.2\n  423: 'Locked'\x2C                     // RFC 4918 11.3\n  424: 'Failed Dependency'\x2C          // RFC 4918 11.4\n  425: 'Too Early'\x2C                  // RFC 8470 5.2\n  426: 'Upgrade Required'\x2C           // RFC 2817 and RFC 7231 6.5.15\n  428: 'Precondition Required'\x2C      // RFC 6585 3\n  429: 'Too Many Requests'\x2C          // RFC 6585 4\n  431: 'Request Header Fields Too Large'\x2C // RFC 6585 5\n  451: 'Unavailable For Legal Reasons'\x2C // RFC 7725 3\n  500: 'Internal Server Error'\x2C      // RFC 7231 6.6.1\n  501: 'Not Implemented'\x2C            // RFC 7231 6.6.2\n  502: 'Bad Gateway'\x2C                // RFC 7231 6.6.3\n  503: 'Service Unavailable'\x2C        // RFC 7231 6.6.4\n  504: 'Gateway Timeout'\x2C            // RFC 7231 6.6.5\n  505: 'HTTP Version Not Supported'\x2C // RFC 7231 6.6.6\n  506: 'Variant Also Negotiates'\x2C    // RFC 2295 8.1\n  507: 'Insufficient Storage'\x2C       // RFC 4918 11.5\n  508: 'Loop Detected'\x2C              // RFC 5842 7.2\n  509: 'Bandwidth Limit Exceeded'\x2C\n  510: 'Not Extended'\x2C               // RFC 2774 7\n  511: 'Network Authentication Required' // RFC 6585 6\n};\n\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nclass HTTPServerAsyncResource {\n  constructor(type\x2C socket) {\n    this.type = type;\n    this.socket = socket;\n  }\n}\n\nfunction ServerResponse(req) {\n  OutgoingMessage.call(this);\n\n  if (req.method === 'HEAD') this._hasBody = false;\n\n  this.req = req;\n  this.sendDate = true;\n  this._sent100 = false;\n  this._expect_continue = false;\n\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\n    this.useChunkedEncodingByDefault = RegExpPrototypeTest(chunkExpression\x2C\n                                                           req.headers.te);\n    this.shouldKeepAlive = false;\n  }\n\n  if (hasObserver('http')) {\n    this[kServerResponseStatistics] = {\n      startTime: process.hrtime()\n    };\n  }\n}\nObjectSetPrototypeOf(ServerResponse.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ServerResponse\x2C OutgoingMessage);\n\nServerResponse.prototype._finish = function _finish() {\n  DTRACE_HTTP_SERVER_RESPONSE(this.socket);\n  emitStatistics(this[kServerResponseStatistics]);\n  OutgoingMessage.prototype._finish.call(this);\n};\n\n\nServerResponse.prototype.statusCode = 200;\nServerResponse.prototype.statusMessage = undefined;\n\nfunction onServerResponseClose() {\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\n  // but if detachSocket() is called\x2C directly or indirectly\x2C by a 'close'\n  // listener\x2C onServerResponseClose is still in that copy of the listeners\n  // array. That is\x2C in the example below\x2C b still gets called even though\n  // it's been removed by a:\n  //\n  //   var EventEmitter = require('events');\n  //   var obj = new EventEmitter();\n  //   obj.on('event'\x2C a);\n  //   obj.on('event'\x2C b);\n  //   function a() { obj.removeListener('event'\x2C b) }\n  //   function b() { throw "BAM!" }\n  //   obj.emit('event');  // throws\n  //\n  // Ergo\x2C we need to deal with stale 'close' events and handle the case\n  // where the ServerResponse object has already been deconstructed.\n  // Fortunately\x2C that requires only a single if check. :-)\n  if (this._httpMessage) {\n    this._httpMessage.destroyed = true;\n    this._httpMessage._closed = true;\n    this._httpMessage.emit('close');\n  }\n}\n\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\n  assert(!socket._httpMessage);\n  socket._httpMessage = this;\n  socket.on('close'\x2C onServerResponseClose);\n  this.socket = socket;\n  this.emit('socket'\x2C socket);\n  this._flush();\n};\n\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\n  assert(socket._httpMessage === this);\n  socket.removeListener('close'\x2C onServerResponseClose);\n  socket._httpMessage = null;\n  this.socket = null;\n};\n\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\n  this._writeRaw('HTTP/1.1 100 Continue\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\n  this._sent100 = true;\n};\n\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\n  this._writeRaw('HTTP/1.1 102 Processing\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\n};\n\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\n  this.writeHead(this.statusCode);\n};\n\nServerResponse.prototype.writeHead = writeHead;\nfunction writeHead(statusCode\x2C reason\x2C obj) {\n  const originalStatusCode = statusCode;\n\n  statusCode |= 0;\n  if (statusCode < 100 || statusCode > 999) {\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\n  }\n\n\n  if (typeof reason === 'string') {\n    // writeHead(statusCode\x2C reasonPhrase[\x2C headers])\n    this.statusMessage = reason;\n  } else {\n    // writeHead(statusCode[\x2C headers])\n    if (!this.statusMessage)\n      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';\n    obj = reason;\n  }\n  this.statusCode = statusCode;\n\n  let headers;\n  if (this[kOutHeaders]) {\n    // Slow-case: when progressive API and header fields are passed.\n    let k;\n    if (ArrayIsArray(obj)) {\n      if (obj.length % 2 !== 0) {\n        throw new ERR_INVALID_ARG_VALUE('headers'\x2C obj);\n      }\n\n      for (let n = 0; n < obj.length; n += 2) {\n        k = obj[n + 0];\n        if (k) this.setHeader(k\x2C obj[n + 1]);\n      }\n    } else if (obj) {\n      const keys = ObjectKeys(obj);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        k = keys[i];\n        if (k) this.setHeader(k\x2C obj[k]);\n      }\n    }\n    if (k === undefined && this._header) {\n      throw new ERR_HTTP_HEADERS_SENT('render');\n    }\n    // Only progressive api is used\n    headers = this[kOutHeaders];\n  } else {\n    // Only writeHead() called\n    headers = obj;\n  }\n\n  if (checkInvalidHeaderChar(this.statusMessage))\n    throw new ERR_INVALID_CHAR('statusMessage');\n\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\\n`;\n\n  if (statusCode === 204 || statusCode === 304 ||\n      (statusCode >= 100 && statusCode <= 199)) {\n    // RFC 2616\x2C 10.2.5:\n    // The 204 response MUST NOT include a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.3.5:\n    // The 304 response MUST NOT contain a message-body\x2C and thus is always\n    // terminated by the first empty line after the header fields.\n    // RFC 2616\x2C 10.1 Informational 1xx:\n    // This class of status code indicates a provisional response\x2C\n    // consisting only of the Status-Line and optional headers\x2C and is\n    // terminated by an empty line.\n    this._hasBody = false;\n  }\n\n  // Don't keep alive connections where the client expects 100 Continue\n  // but we sent a final status; they may put extra bytes on the wire.\n  if (this._expect_continue && !this._sent100) {\n    this.shouldKeepAlive = false;\n  }\n\n  this._storeHeader(statusLine\x2C headers);\n\n  return this;\n}\n\n// Docs-only deprecated: DEP0063\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\n\nfunction storeHTTPOptions(options) {\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined)\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\n  this.insecureHTTPParser = insecureHTTPParser;\n}\n\nfunction Server(options\x2C requestListener) {\n  if (!(this instanceof Server)) return new Server(options\x2C requestListener);\n\n  if (typeof options === 'function') {\n    requestListener = options;\n    options = {};\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'object'\x2C options);\n  }\n\n  storeHTTPOptions.call(this\x2C options);\n  net.Server.call(this\x2C { allowHalfOpen: true });\n\n  if (requestListener) {\n    this.on('request'\x2C requestListener);\n  }\n\n  // Similar option to this. Too lazy to write my own docs.\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\n  this.httpAllowHalfOpen = false;\n\n  this.on('connection'\x2C connectionListener);\n\n  this.timeout = 0;\n  this.keepAliveTimeout = 5000;\n  this.maxHeadersCount = null;\n  this.maxRequestsPerSocket = 0;\n  this.headersTimeout = 60 * 1000; // 60 seconds\n  this.requestTimeout = 0;\n}\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\nObjectSetPrototypeOf(Server\x2C net.Server);\n\n\nServer.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  this.timeout = msecs;\n  if (callback)\n    this.on('timeout'\x2C callback);\n  return this;\n};\n\nServer.prototype[EE.captureRejectionSymbol] = function(err\x2C event\x2C ...args) {\n  switch (event) {\n    case 'request':\n      const { 1: res } = args;\n      if (!res.headersSent && !res.writableEnded) {\n        // Don't leak headers.\n        const names = res.getHeaderNames();\n        for (let i = 0; i < names.length; i++) {\n          res.removeHeader(names[i]);\n        }\n        res.statusCode = 500;\n        res.end(STATUS_CODES[500]);\n      } else {\n        res.destroy();\n      }\n      break;\n    default:\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\n        .apply(this\x2C arguments);\n  }\n};\n\nfunction connectionListener(socket) {\n  defaultTriggerAsyncIdScope(\n    getOrSetAsyncId(socket)\x2C connectionListenerInternal\x2C this\x2C socket\n  );\n}\n\nfunction connectionListenerInternal(server\x2C socket) {\n  debug('SERVER new http connection');\n\n  // Ensure that the server property of the socket is correctly set.\n  // See https://github.com/nodejs/node/issues/13435\n  socket.server = server;\n\n  // If the user has added a listener to the server\x2C\n  // request\x2C or response\x2C then it's their responsibility.\n  // otherwise\x2C destroy on timeout by default\n  if (server.timeout && typeof socket.setTimeout === 'function')\n    socket.setTimeout(server.timeout);\n  socket.on('timeout'\x2C socketOnTimeout);\n\n  const parser = parsers.alloc();\n\n  const lenient = server.insecureHTTPParser === undefined ?\n    isLenient() : server.insecureHTTPParser;\n\n  // TODO(addaleax): This doesn't play well with the\n  // `async_hooks.currentResource()` proposal\x2C see\n  // https://github.com/nodejs/node/pull/21313\n  parser.initialize(\n    HTTPParser.REQUEST\x2C\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE'\x2C socket)\x2C\n    server.maxHeaderSize || 0\x2C\n    lenient ? kLenientAll : kLenientNone\x2C\n    server.headersTimeout || 0\x2C\n  );\n  parser.socket = socket;\n  socket.parser = parser;\n\n  // Propagate headers limit from server instance to parser\n  if (typeof server.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\n  }\n\n  const state = {\n    onData: null\x2C\n    onEnd: null\x2C\n    onClose: null\x2C\n    onDrain: null\x2C\n    outgoing: []\x2C\n    incoming: []\x2C\n    // `outgoingData` is an approximate amount of bytes queued through all\n    // inactive responses. If more data than the high watermark is queued - we\n    // need to pause TCP socket/HTTP parser\x2C and wait until the data will be\n    // sent to the client.\n    outgoingData: 0\x2C\n    requestsCount: 0\x2C\n    keepAliveTimeoutSet: false\n  };\n  state.onData = socketOnData.bind(undefined\x2C\n                                   server\x2C socket\x2C parser\x2C state);\n  state.onEnd = socketOnEnd.bind(undefined\x2C\n                                 server\x2C socket\x2C parser\x2C state);\n  state.onClose = socketOnClose.bind(undefined\x2C\n                                     socket\x2C state);\n  state.onDrain = socketOnDrain.bind(undefined\x2C\n                                     socket\x2C state);\n  socket.on('data'\x2C state.onData);\n  socket.on('error'\x2C socketOnError);\n  socket.on('end'\x2C state.onEnd);\n  socket.on('close'\x2C state.onClose);\n  socket.on('drain'\x2C state.onDrain);\n  parser.onIncoming = parserOnIncoming.bind(undefined\x2C\n                                            server\x2C socket\x2C state);\n\n  // We are consuming socket\x2C so it won't get any actual data\n  socket.on('resume'\x2C onSocketResume);\n  socket.on('pause'\x2C onSocketPause);\n\n  // Overrides to unconsume on `data`\x2C `readable` listeners\n  socket.on = generateSocketListenerWrapper('on');\n  socket.addListener = generateSocketListenerWrapper('addListener');\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\n  socket.setEncoding = socketSetEncoding;\n\n  // We only consume the socket if it has never been consumed before.\n  if (socket._handle && socket._handle.isStreamBase &&\n      !socket._handle._consumed) {\n    parser._consumed = true;\n    socket._handle._consumed = true;\n    parser.consume(socket._handle);\n  }\n  parser[kOnExecute] =\n    onParserExecute.bind(undefined\x2C\n                         server\x2C socket\x2C parser\x2C state);\n\n  parser[kOnTimeout] =\n    onParserTimeout.bind(undefined\x2C\n                         server\x2C socket);\n\n  // When receiving new requests on the same socket (pipelining or keep alive)\n  // make sure the requestTimeout is active.\n  parser[kOnMessageBegin] =\n    setRequestTimeout.bind(undefined\x2C\n                           server\x2C socket);\n\n  // This protects from DOS attack where an attacker establish the connection\n  // without sending any data on applications where server.timeout is left to\n  // the default value of zero.\n  setRequestTimeout(server\x2C socket);\n\n  socket._paused = false;\n}\n\nfunction socketSetEncoding() {\n  throw new ERR_HTTP_SOCKET_ENCODING();\n}\n\nfunction updateOutgoingData(socket\x2C state\x2C delta) {\n  state.outgoingData += delta;\n  socketOnDrain(socket\x2C state);\n}\n\nfunction socketOnDrain(socket\x2C state) {\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\n\n  // If we previously paused\x2C then start reading again.\n  if (socket._paused && !needPause) {\n    socket._paused = false;\n    if (socket.parser)\n      socket.parser.resume();\n    socket.resume();\n  }\n\n  const msg = socket._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketOnTimeout() {\n  const req = this.parser && this.parser.incoming;\n  const reqTimeout = req && !req.complete && req.emit('timeout'\x2C this);\n  const res = this._httpMessage;\n  const resTimeout = res && res.emit('timeout'\x2C this);\n  const serverTimeout = this.server.emit('timeout'\x2C this);\n\n  if (!reqTimeout && !resTimeout && !serverTimeout)\n    this.destroy();\n}\n\nfunction socketOnClose(socket\x2C state) {\n  debug('server socket close');\n  freeParser(socket.parser\x2C null\x2C socket);\n  abortIncoming(state.incoming);\n}\n\nfunction abortIncoming(incoming) {\n  while (incoming.length) {\n    const req = incoming.shift();\n    req.destroy(connResetException('aborted'));\n  }\n  // Abort socket._httpMessage ?\n}\n\nfunction socketOnEnd(server\x2C socket\x2C parser\x2C state) {\n  const ret = parser.finish();\n\n  if (ret instanceof Error) {\n    debug('parse error');\n    // socketOnError has additional logic and will call socket.destroy(err).\n    socketOnError.call(socket\x2C ret);\n  } else if (!server.httpAllowHalfOpen) {\n    socket.end();\n  } else if (state.outgoing.length) {\n    state.outgoing[state.outgoing.length - 1]._last = true;\n  } else if (socket._httpMessage) {\n    socket._httpMessage._last = true;\n  } else {\n    socket.end();\n  }\n}\n\nfunction socketOnData(server\x2C socket\x2C parser\x2C state\x2C d) {\n  assert(!socket._paused);\n  debug('SERVER socketOnData %d'\x2C d.length);\n\n  const ret = parser.execute(d);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d);\n}\n\nfunction onRequestTimeout(socket) {\n  socket[kRequestTimeout] = undefined;\n  // socketOnError has additional logic and will call socket.destroy(err).\n  socketOnError.call(socket\x2C new ERR_HTTP_REQUEST_TIMEOUT());\n}\n\nfunction onParserExecute(server\x2C socket\x2C parser\x2C state\x2C ret) {\n  // When underlying `net.Socket` instance is consumed - no\n  // `data` events are emitted\x2C and thus `socket.setTimeout` fires the\n  // callback even if the data is constantly flowing into the socket.\n  // See\x2C https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\n  socket._unrefTimer();\n  debug('SERVER socketOnParserExecute %d'\x2C ret);\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C undefined);\n}\n\nfunction onParserTimeout(server\x2C socket) {\n  const serverTimeout = server.emit('timeout'\x2C socket);\n\n  if (!serverTimeout)\n    socket.destroy();\n}\n\nconst noop = () => {};\nconst badRequestResponse = Buffer.from(\n  `HTTP/1.1 400 ${STATUS_CODES[400]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\n);\nconst requestTimeoutResponse = Buffer.from(\n  `HTTP/1.1 408 ${STATUS_CODES[408]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\n);\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\n  `HTTP/1.1 431 ${STATUS_CODES[431]}\\r\\n` +\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\n);\nfunction socketOnError(e) {\n  // Ignore further errors\n  this.removeListener('error'\x2C socketOnError);\n  this.on('error'\x2C noop);\n\n  if (!this.server.emit('clientError'\x2C e\x2C this)) {\n    if (this.writable && this.bytesWritten === 0) {\n      let response;\n\n      switch (e.code) {\n        case 'HPE_HEADER_OVERFLOW':\n          response = requestHeaderFieldsTooLargeResponse;\n          break;\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\n          response = requestTimeoutResponse;\n          break;\n        default:\n          response = badRequestResponse;\n          break;\n      }\n\n      this.write(response);\n    }\n    this.destroy(e);\n  }\n}\n\nfunction onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    ret.rawPacket = d || parser.getCurrentBuffer();\n    debug('parse error'\x2C ret);\n    socketOnError.call(socket\x2C ret);\n  } else if (parser.incoming && parser.incoming.upgrade) {\n    // Upgrade or CONNECT\n    const req = parser.incoming;\n    debug('SERVER upgrade or connect'\x2C req.method);\n\n    if (!d)\n      d = parser.getCurrentBuffer();\n\n    socket.removeListener('data'\x2C state.onData);\n    socket.removeListener('end'\x2C state.onEnd);\n    socket.removeListener('close'\x2C state.onClose);\n    socket.removeListener('drain'\x2C state.onDrain);\n    socket.removeListener('error'\x2C socketOnError);\n    socket.removeListener('timeout'\x2C socketOnTimeout);\n    unconsume(parser\x2C socket);\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n    parser = null;\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\n      debug('SERVER have listener for %s'\x2C eventName);\n      const bodyHead = d.slice(ret\x2C d.length);\n\n      socket.readableFlowing = null;\n\n      // Clear the requestTimeout after upgrading the connection.\n      clearRequestTimeout(req);\n\n      server.emit(eventName\x2C req\x2C socket\x2C bodyHead);\n    } else {\n      // Got CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\n    debug('SERVER got PRI request');\n    socket.destroy();\n  } else {\n    // When receiving new requests on the same socket (pipelining or keep alive)\n    // make sure the requestTimeout is active.\n    parser[kOnMessageBegin] =\n      setRequestTimeout.bind(undefined\x2C server\x2C socket);\n  }\n\n  if (socket._paused && socket.parser) {\n    // onIncoming paused the socket\x2C we should pause the parser as well\n    debug('pause parser');\n    socket.parser.pause();\n  }\n}\n\nfunction clearIncoming(req) {\n  req = req || this;\n  const parser = req.socket && req.socket.parser;\n  // Reset the .incoming property so that the request object can be gc'ed.\n  if (parser && parser.incoming === req) {\n    if (req.readableEnded) {\n      parser.incoming = null;\n    } else {\n      req.on('end'\x2C clearIncoming);\n    }\n  }\n}\n\nfunction setRequestTimeout(server\x2C socket) {\n  // Set the request timeout handler.\n  if (\n    !socket[kRequestTimeout] &&\n    server.requestTimeout && server.requestTimeout > 0\n  ) {\n    debug('requestTimeout timer set');\n    socket[kRequestTimeout] =\n      setTimeout(onRequestTimeout\x2C server.requestTimeout\x2C socket).unref();\n  }\n}\n\nfunction clearRequestTimeout(req) {\n  if (!req) {\n    req = this;\n  }\n\n  if (!req[kRequestTimeout]) {\n    return;\n  }\n\n  debug('requestTimeout timer cleared');\n  clearTimeout(req[kRequestTimeout]);\n  req[kRequestTimeout] = undefined;\n}\n\nfunction resOnFinish(req\x2C res\x2C socket\x2C state\x2C server) {\n  if (onResponseFinishChannel.hasSubscribers) {\n    onResponseFinishChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\n    });\n  }\n\n  // Usually the first incoming element should be our request.  it may\n  // be that in the case abortIncoming() was called that the incoming\n  // array will be empty.\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\n\n  state.incoming.shift();\n\n  // If the user never called req.read()\x2C and didn't pipe() or\n  // .resume() or .on('data')\x2C then we call req._dump() so that the\n  // bytes will be pulled off the wire.\n  if (!req._consuming && !req._readableState.resumeScheduled)\n    req._dump();\n\n  // Make sure the requestTimeout is cleared before finishing.\n  // This might occur if the application has sent a response\n  // without consuming the request body\x2C which would have already\n  // cleared the timer.\n  // clearRequestTimeout can be executed even if the timer is not active\x2C\n  // so this is safe.\n  clearRequestTimeout(req);\n\n  res.detachSocket(socket);\n  clearIncoming(req);\n  process.nextTick(emitCloseNT\x2C res);\n\n  if (res._last) {\n    if (typeof socket.destroySoon === 'function') {\n      socket.destroySoon();\n    } else {\n      socket.end();\n    }\n  } else if (state.outgoing.length === 0) {\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\n      socket.setTimeout(server.keepAliveTimeout);\n      state.keepAliveTimeoutSet = true;\n    }\n  } else {\n    // Start sending the next message\n    const m = state.outgoing.shift();\n    if (m) {\n      m.assignSocket(socket);\n    }\n  }\n}\n\nfunction emitCloseNT(self) {\n  self.destroyed = true;\n  self._closed = true;\n  self.emit('close');\n}\n\n// The following callback is issued after the headers have been read on a\n// new message. In this callback we setup the response object and pass it\n// to the user.\nfunction parserOnIncoming(server\x2C socket\x2C state\x2C req\x2C keepAlive) {\n  resetSocketTimeout(server\x2C socket\x2C state);\n\n  if (req.upgrade) {\n    req.upgrade = req.method === 'CONNECT' ||\n                  server.listenerCount('upgrade') > 0;\n    if (req.upgrade)\n      return 2;\n  }\n\n  state.incoming.push(req);\n\n  // If the writable end isn't consuming\x2C then stop reading\n  // so that we don't become overwhelmed by a flood of\n  // pipelined requests that may never be resolved.\n  if (!socket._paused) {\n    const ws = socket._writableState;\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\n      socket._paused = true;\n      // We also need to pause the parser\x2C but don't do that until after\n      // the call to execute\x2C because we may still be processing the last\n      // chunk.\n      socket.pause();\n    }\n  }\n\n  const res = new server[kServerResponse](req);\n  res._keepAliveTimeout = server.keepAliveTimeout;\n  res._onPendingData = updateOutgoingData.bind(undefined\x2C\n                                               socket\x2C state);\n\n  res.shouldKeepAlive = keepAlive;\n  DTRACE_HTTP_SERVER_REQUEST(req\x2C socket);\n\n  if (onRequestStartChannel.hasSubscribers) {\n    onRequestStartChannel.publish({\n      request: req\x2C\n      response: res\x2C\n      socket\x2C\n      server\n    });\n  }\n\n  if (socket._httpMessage) {\n    // There are already pending outgoing res\x2C append.\n    state.outgoing.push(res);\n  } else {\n    res.assignSocket(socket);\n  }\n\n  // When we're finished writing the response\x2C check if this is the last\n  // response\x2C if so destroy the socket.\n  res.on('finish'\x2C\n         resOnFinish.bind(undefined\x2C\n                          req\x2C res\x2C socket\x2C state\x2C server));\n\n  let handled = false;\n\n  if (req.httpVersionMajor === 1 && req.httpVersionMinor === 1) {\n    const isRequestsLimitSet = (\n      typeof server.maxRequestsPerSocket === 'number' &&\n      server.maxRequestsPerSocket > 0\n    );\n\n    if (isRequestsLimitSet) {\n      state.requestsCount++;\n      res.maxRequestsOnConnectionReached = (\n        server.maxRequestsPerSocket <= state.requestsCount);\n    }\n\n    if (isRequestsLimitSet &&\n      (server.maxRequestsPerSocket < state.requestsCount)) {\n      handled = true;\n\n      res.writeHead(503);\n      res.end();\n    } else if (req.headers.expect !== undefined) {\n      handled = true;\n\n      if (RegExpPrototypeTest(continueExpression\x2C req.headers.expect)) {\n        res._expect_continue = true;\n\n        if (server.listenerCount('checkContinue') > 0) {\n          server.emit('checkContinue'\x2C req\x2C res);\n        } else {\n          res.writeContinue();\n          server.emit('request'\x2C req\x2C res);\n        }\n      } else if (server.listenerCount('checkExpectation') > 0) {\n        server.emit('checkExpectation'\x2C req\x2C res);\n      } else {\n        res.writeHead(417);\n        res.end();\n      }\n    }\n  }\n\n  if (!handled) {\n    req.on('end'\x2C clearRequestTimeout);\n    server.emit('request'\x2C req\x2C res);\n  }\n\n  return 0;  // No special treatment.\n}\n\nfunction resetSocketTimeout(server\x2C socket\x2C state) {\n  if (!state.keepAliveTimeoutSet)\n    return;\n\n  socket.setTimeout(server.timeout || 0);\n  state.keepAliveTimeoutSet = false;\n}\n\nfunction onSocketResume() {\n  // It may seem that the socket is resumed\x2C but this is an enemy's trick to\n  // deceive us! `resume` is emitted asynchronously\x2C and may be called from\n  // `incoming.readStart()`. Stop the socket again here\x2C just to preserve the\n  // state.\n  //\n  // We don't care about stream semantics for the consumed socket anyway.\n  if (this._paused) {\n    this.pause();\n    return;\n  }\n\n  if (this._handle && !this._handle.reading) {\n    this._handle.reading = true;\n    this._handle.readStart();\n  }\n}\n\nfunction onSocketPause() {\n  if (this._handle && this._handle.reading) {\n    this._handle.reading = false;\n    this._handle.readStop();\n  }\n}\n\nfunction unconsume(parser\x2C socket) {\n  if (socket._handle) {\n    if (parser._consumed)\n      parser.unconsume();\n    parser._consumed = false;\n    socket.removeListener('pause'\x2C onSocketPause);\n    socket.removeListener('resume'\x2C onSocketResume);\n  }\n}\n\nfunction generateSocketListenerWrapper(originalFnName) {\n  return function socketListenerWrap(ev\x2C fn) {\n    const res = net.Socket.prototype[originalFnName].call(this\x2C\n                                                          ev\x2C fn);\n    if (!this.parser) {\n      this.on = net.Socket.prototype.on;\n      this.addListener = net.Socket.prototype.addListener;\n      this.prependListener = net.Socket.prototype.prependListener;\n      return res;\n    }\n\n    if (ev === 'data' || ev === 'readable')\n      unconsume(this.parser\x2C this);\n\n    return res;\n  };\n}\n\nmodule.exports = {\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\x2C\n  storeHTTPOptions\x2C\n  _connectionListener: connectionListener\x2C\n  kServerResponse\n};\n
code-source-info,0x3ba9b435ea46,156,0,32691,C0O0C4O32691,,
code-creation,Function,10,234502,0x3ba9b4360266,1356, node:_http_server:1:1,0x3ba9b435e9c0,~
code-source-info,0x3ba9b4360266,156,0,32691,C0O0C359O1159C365O1175C371O1184C377O1198C382O1222C388O1245C393O1255C399O1296C402O1296C406O1296C408O1323C411O1323C416O1357C419O1357C423O1357C425O1596C428O1596C433O1395C439O1406C445O1420C451O1442C457O1461C463O1481C469O1500C475O1514C481O1552C487O1578C493O1649C496O1649C501O1629C507O1734C510O1734C515O1686C521O1701C527O1715C533O1820C536O1820C541O1770C547O1800C553O1881C556O1881C561O1861C567O1950C570O1950C575O1918C581O1940C586O1988C592O2016C598O2041C604O2073C610O2101C616O2125C622O2150C628O2227C631O2227C636O2188C642O2207C648O2274C651O2274C656O2291C661O2372C664O2372C669O2310C675O2340C681O2437C684O2437C689O2408C695O2420C701O2469C704O2469C709O2502C722O2503C728O2469C730O2560C733O2560C738O2625C746O2625C751O2622C753O2698C761O2698C766O2695C768O2763C771O2763C775O2763C777O2823C780O2823C784O2823C786O2887C789O2887C794O2870C800O2943C804O2943C806O6422C809O6433C813O6449C816O6422C818O6473C821O6484C825O6495C828O6473C830O6519C833O6530C837O6541C840O6519C842O6566C845O6577C849O6589C852O6566C854O6615C857O6626C861O6639C864O6615C887O6645C889O7347C892O7383C900O7410C905O7347C910O7422C916O7422C921O7478C924O7493C933O7511C937O7682C940O7697C949O7718C953O7725C956O7740C962O7764C966O8845C969O8860C978O8883C982O9100C985O9115C994O9138C998O9325C1001O9340C1010O9364C1014O9487C1017O9502C1026O9528C1030O9631C1033O9646C1042O9672C1046O9742C1049O9757C1056O9777C1060O12420C1063O12435C1071O12474C1076O12484C1080O12457C1084O14113C1087O14141C1095O14156C1100O14163C1105O14113C1110O14175C1116O14208C1121O14175C1126O14219C1129O14226C1138O14247C1142O14381C1145O14388C1150O14401C1159O14425C1163O22016C1167O22016C1169O22060C1184O22096C1200O22108C1207O22060C1213O22053C1215O22190C1230O22226C1246O22238C1253O22190C1259O22183C1261O22333C1276O22369C1292O22381C1299O22333C1305O22326C1307O32544C1314O32565C1320O32581C1326O32591C1332O32609C1338O32650C1344O32672C1350O32559C1355O32690,,
tick,0x7ff81f213c64,234706,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ed3e,234739,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108af1e7b,234833,1,0x10843a650,6,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,235055,0x3ba9b436385e,5, node:_http_common:1:1,0x3ba9b4363528,~
script-source,157,node:_http_common,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  MathMin\x2C\n  Symbol\x2C\n  RegExpPrototypeTest\x2C\n} = primordials;\nconst { setImmediate } = require('timers');\n\nconst { methods\x2C HTTPParser } = internalBinding('http_parser');\nconst { getOptionValue } = require('internal/options');\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\n\nconst FreeList = require('internal/freelist');\nconst incoming = require('_http_incoming');\nconst {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\n} = incoming;\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst kIncomingMessage = Symbol('IncomingMessage');\nconst kRequestTimeout = Symbol('RequestTimeout');\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\nconst kOnBody = HTTPParser.kOnBody | 0;\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\nconst kOnExecute = HTTPParser.kOnExecute | 0;\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\n\nconst MAX_HEADER_PAIRS = 2000;\n\n// Only called in the slow case where slow means\n// that the request headers were either fragmented\n// across multiple TCP packets or too large to be\n// processed in a single run. This method is also\n// called to process trailing HTTP headers.\nfunction parserOnHeaders(headers\x2C url) {\n  // Once we exceeded headers limit - stop collecting them\n  if (this.maxHeaderPairs <= 0 ||\n      this._headers.length < this.maxHeaderPairs) {\n    this._headers.push(...headers);\n  }\n  this._url += url;\n}\n\n// `headers` and `url` are set only if .onHeaders() has not been called for\n// this request.\n// `url` is not set for response parsers but that's not applicable here since\n// all our parsers are request parsers.\nfunction parserOnHeadersComplete(versionMajor\x2C versionMinor\x2C headers\x2C method\x2C\n                                 url\x2C statusCode\x2C statusMessage\x2C upgrade\x2C\n                                 shouldKeepAlive) {\n  const parser = this;\n  const { socket } = parser;\n\n  if (headers === undefined) {\n    headers = parser._headers;\n    parser._headers = [];\n  }\n\n  if (url === undefined) {\n    url = parser._url;\n    parser._url = '';\n  }\n\n  // Parser is also used by http client\n  const ParserIncomingMessage = (socket && socket.server &&\n                                 socket.server[kIncomingMessage]) ||\n                                 IncomingMessage;\n\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\n  incoming.httpVersionMajor = versionMajor;\n  incoming.httpVersionMinor = versionMinor;\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\n  incoming.url = url;\n  incoming.upgrade = upgrade;\n\n  if (socket) {\n    debug('requestTimeout timer moved to req');\n    incoming[kRequestTimeout] = incoming.socket[kRequestTimeout];\n    incoming.socket[kRequestTimeout] = undefined;\n  }\n\n  let n = headers.length;\n\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\n  if (parser.maxHeaderPairs > 0)\n    n = MathMin(n\x2C parser.maxHeaderPairs);\n\n  incoming._addHeaderLines(headers\x2C n);\n\n  if (typeof method === 'number') {\n    // server only\n    incoming.method = methods[method];\n  } else {\n    // client only\n    incoming.statusCode = statusCode;\n    incoming.statusMessage = statusMessage;\n  }\n\n  return parser.onIncoming(incoming\x2C shouldKeepAlive);\n}\n\nfunction parserOnBody(b\x2C start\x2C len) {\n  const stream = this.incoming;\n\n  // If the stream has already been removed\x2C then drop it.\n  if (stream === null)\n    return;\n\n  // Pretend this was the result of a stream._read call.\n  if (len > 0 && !stream._dumped) {\n    const slice = b.slice(start\x2C start + len);\n    const ret = stream.push(slice);\n    if (!ret)\n      readStop(this.socket);\n  }\n}\n\nfunction parserOnMessageComplete() {\n  const parser = this;\n  const stream = parser.incoming;\n\n  if (stream !== null) {\n    stream.complete = true;\n    // Emit any trailing headers.\n    const headers = parser._headers;\n    if (headers.length) {\n      stream._addHeaderLines(headers\x2C headers.length);\n      parser._headers = [];\n      parser._url = '';\n    }\n\n    // For emit end event\n    stream.push(null);\n  }\n\n  // Force to read the next incoming message\n  readStart(parser.socket);\n}\n\n\nconst parsers = new FreeList('parsers'\x2C 1000\x2C function parsersCb() {\n  const parser = new HTTPParser();\n\n  cleanParser(parser);\n\n  parser[kOnHeaders] = parserOnHeaders;\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\n  parser[kOnBody] = parserOnBody;\n  parser[kOnMessageComplete] = parserOnMessageComplete;\n\n  return parser;\n});\n\nfunction closeParserInstance(parser) { parser.close(); }\n\n// Free the parser and also break any links that it\n// might have to any other things.\n// TODO: All parser data should be attached to a\n// single object\x2C so that it can be easily cleaned\n// up by doing `parser.data = {}`\x2C which should\n// be done in FreeList.free.  `parsers.free(parser)`\n// should be all that is needed.\nfunction freeParser(parser\x2C req\x2C socket) {\n  if (parser) {\n    if (parser._consumed)\n      parser.unconsume();\n    cleanParser(parser);\n    if (parsers.free(parser) === false) {\n      // Make sure the parser's stack has unwound before deleting the\n      // corresponding C++ object through .close().\n      setImmediate(closeParserInstance\x2C parser);\n    } else {\n      // Since the Parser destructor isn't going to run the destroy() callbacks\n      // it needs to be triggered manually.\n      parser.free();\n    }\n  }\n  if (req) {\n    req.parser = null;\n  }\n  if (socket) {\n    socket.parser = null;\n  }\n}\n\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\n/**\n * Verifies that the given val is a valid HTTP token\n * per the rules defined in RFC 7230\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nfunction checkIsHttpToken(val) {\n  return RegExpPrototypeTest(tokenRegExp\x2C val);\n}\n\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n/**\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nfunction checkInvalidHeaderChar(val) {\n  return RegExpPrototypeTest(headerCharRegex\x2C val);\n}\n\nfunction cleanParser(parser) {\n  parser._headers = [];\n  parser._url = '';\n  parser.socket = null;\n  parser.incoming = null;\n  parser.outgoing = null;\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\n  parser[kOnMessageBegin] = null;\n  parser[kOnExecute] = null;\n  parser[kOnTimeout] = null;\n  parser._consumed = false;\n  parser.onIncoming = null;\n}\n\nfunction prepareError(err\x2C parser\x2C rawPacket) {\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\n  if (typeof err.reason === 'string')\n    err.message = `Parse Error: ${err.reason}`;\n}\n\nlet warnedLenient = false;\n\nfunction isLenient() {\n  if (insecureHTTPParser && !warnedLenient) {\n    warnedLenient = true;\n    process.emitWarning('Using insecure HTTP parsing');\n  }\n  return insecureHTTPParser;\n}\n\nmodule.exports = {\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i\x2C\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i\x2C\n  CRLF: '\\r\\n'\x2C // TODO: Deprecate this.\n  freeParser\x2C\n  methods\x2C\n  parsers\x2C\n  kIncomingMessage\x2C\n  kRequestTimeout\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n};\n
code-source-info,0x3ba9b436385e,157,0,8466,C0O0C4O8466,,
code-creation,Function,10,235870,0x3ba9b4363f96,512, node:_http_common:1:1,0x3ba9b43637d8,~
code-source-info,0x3ba9b4363f
tick,0x108987ee7,236096,1,0x1083b9750,5,0x1085cff20,0x10dd4673a,0x3ba9b4364046,0x10dd44be3,0x10dd44865,0x3ba9b4360412,0x10dd44be3,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,236193,0x3ba9b4366056,5, node:internal/freelist:1:1,0x3ba9b4365f00,~
script-source,158,node:internal/freelist,'use strict';\n\nconst {\n  ReflectApply\x2C\n} = primordials;\n\nclass FreeList {\n  constructor(name\x2C max\x2C ctor) {\n    this.name = name;\n    this.ctor = ctor;\n    this.max = max;\n    this.list = [];\n  }\n\n  alloc() {\n    return this.list.length > 0 ?\n      this.list.pop() :\n      ReflectApply(this.ctor\x2C this\x2C arguments);\n  }\n\n  free(obj) {\n    if (this.list.length < this.max) {\n      this.list.push(obj);\n      return true;\n    }\n    return false;\n  }\n}\n\nmodule.exports = FreeList;\n
code-source-info,0x3ba9b4366056,158,0,476,C0O0C4O476,,
code-creation,Function,10,236278,0x3ba9b436635e,54, node:internal/freelist:1:1,0x3ba9b4365fd0,~
code-source-info,0x3ba9b436635e,158,0,476,C0O0C8O25C46O449C48O464C53O475,,
code-creation,Eval,10,236596,0x3ba9b4366a4e,5, node:_http_incoming:1:1,0x3ba9b4366848,~
script-source,159,node:_http_incoming,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\n} = primordials;\n\nconst { Readable\x2C finished } = require('stream');\n\nconst kHeaders = Symbol('kHeaders');\nconst kHeadersCount = Symbol('kHeadersCount');\nconst kTrailers = Symbol('kTrailers');\nconst kTrailersCount = Symbol('kTrailersCount');\n\nfunction readStart(socket) {\n  if (socket && !socket._paused && socket.readable)\n    socket.resume();\n}\n\nfunction readStop(socket) {\n  if (socket)\n    socket.pause();\n}\n\n/* Abstract base class for ServerRequest and ClientResponse. */\nfunction IncomingMessage(socket) {\n  let streamOptions;\n\n  if (socket) {\n    streamOptions = {\n      highWaterMark: socket.readableHighWaterMark\n    };\n  }\n\n  Readable.call(this\x2C streamOptions);\n\n  this._readableState.readingMore = true;\n\n  this.socket = socket;\n\n  this.httpVersionMajor = null;\n  this.httpVersionMinor = null;\n  this.httpVersion = null;\n  this.complete = false;\n  this[kHeaders] = null;\n  this[kHeadersCount] = 0;\n  this.rawHeaders = [];\n  this[kTrailers] = null;\n  this[kTrailersCount] = 0;\n  this.rawTrailers = [];\n\n  this.aborted = false;\n\n  this.upgrade = null;\n\n  // request (server) only\n  this.url = '';\n  this.method = null;\n\n  // response (client) only\n  this.statusCode = null;\n  this.statusMessage = null;\n  this.client = socket;\n\n  this._consuming = false;\n  // Flag for when we decide that this message cannot possibly be\n  // read by the user\x2C so there's no point continuing to handle it.\n  this._dumped = false;\n}\nObjectSetPrototypeOf(IncomingMessage.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(IncomingMessage\x2C Readable);\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'connection'\x2C {\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headers'\x2C {\n  get: function() {\n    if (!this[kHeaders]) {\n      this[kHeaders] = {};\n\n      const src = this.rawHeaders;\n      const dst = this[kHeaders];\n\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kHeaders];\n  }\x2C\n  set: function(val) {\n    this[kHeaders] = val;\n  }\n});\n\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailers'\x2C {\n  get: function() {\n    if (!this[kTrailers]) {\n      this[kTrailers] = {};\n\n      const src = this.rawTrailers;\n      const dst = this[kTrailers];\n\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\n      }\n    }\n    return this[kTrailers];\n  }\x2C\n  set: function(val) {\n    this[kTrailers] = val;\n  }\n});\n\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (callback)\n    this.on('timeout'\x2C callback);\n  this.socket.setTimeout(msecs);\n  return this;\n};\n\n// Argument n cannot be factored out due to the overhead of\n// argument adaptor frame creation inside V8 in case that number of actual\n// arguments is different from expected arguments.\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\n// Refactoring `n` out might be possible when V8 is upgraded to that\n// version.\n// Ref: https://v8.dev/blog/v8-release-89\nIncomingMessage.prototype._read = function _read(n) {\n  if (!this._consuming) {\n    this._readableState.readingMore = false;\n    this._consuming = true;\n  }\n\n  // We actually do almost nothing here\x2C because the parserOnBody\n  // function fills up our internal buffer directly.  However\x2C we\n  // do need to unpause the underlying socket so that it flows.\n  if (this.socket.readable)\n    readStart(this.socket);\n};\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nIncomingMessage.prototype._destroy = function _destroy(err\x2C cb) {\n  if (!this.readableEnded || !this.complete) {\n    this.aborted = true;\n    this.emit('aborted');\n  }\n\n  // If aborted and the underlying socket is not already destroyed\x2C\n  // destroy it.\n  // We have to check if the socket is already destroyed because finished\n  // does not call the callback when this methdod is invoked from `_http_client`\n  // in `test/parallel/test-http-client-spurious-aborted.js`\n  if (this.socket && !this.socket.destroyed && this.aborted) {\n    this.socket.destroy(err);\n    const cleanup = finished(this.socket\x2C (e) => {\n      cleanup();\n      onError(this\x2C e || err\x2C cb);\n    });\n  } else {\n    onError(this\x2C err\x2C cb);\n  }\n};\n\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\nfunction _addHeaderLines(headers\x2C n) {\n  if (headers && headers.length) {\n    let dest;\n    if (this.complete) {\n      this.rawTrailers = headers;\n      this[kTrailersCount] = n;\n      dest = this[kTrailers];\n    } else {\n      this.rawHeaders = headers;\n      this[kHeadersCount] = n;\n      dest = this[kHeaders];\n    }\n\n    if (dest) {\n      for (let i = 0; i < n; i += 2) {\n        this._addHeaderLine(headers[i]\x2C headers[i + 1]\x2C dest);\n      }\n    }\n  }\n}\n\n\n// This function is used to help avoid the lowercasing of a field name if it\n// matches a 'traditional cased' version of a field name. It then returns the\n// lowercased name to both avoid calling toLowerCase() a second time and to\n// indicate whether the field was a 'no duplicates' field. If a field is not a\n// 'no duplicates' field\x2C a `0` byte is prepended as a flag. The one exception\n// to this is the Set-Cookie header which is indicated by a `1` byte flag\x2C since\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\n// of known header names to avoid us having to call toLowerCase() for those\n// headers.\nfunction matchKnownFields(field\x2C lowercased) {\n  switch (field.length) {\n    case 3:\n      if (field === 'Age' || field === 'age') return 'age';\n      break;\n    case 4:\n      if (field === 'Host' || field === 'host') return 'host';\n      if (field === 'From' || field === 'from') return 'from';\n      if (field === 'ETag' || field === 'etag') return 'etag';\n      if (field === 'Date' || field === 'date') return '\\u0000date';\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\n      break;\n    case 6:\n      if (field === 'Server' || field === 'server') return 'server';\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\n      break;\n    case 7:\n      if (field === 'Referer' || field === 'referer') return 'referer';\n      if (field === 'Expires' || field === 'expires') return 'expires';\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\n      break;\n    case 8:\n      if (field === 'Location' || field === 'location')\n        return 'location';\n      if (field === 'If-Match' || field === 'if-match')\n        return '\\u0000if-match';\n      break;\n    case 10:\n      if (field === 'User-Agent' || field === 'user-agent')\n        return 'user-agent';\n      if (field === 'Set-Cookie' || field === 'set-cookie')\n        return '\\u0001';\n      if (field === 'Connection' || field === 'connection')\n        return '\\u0000connection';\n      break;\n    case 11:\n      if (field === 'Retry-After' || field === 'retry-after')\n        return 'retry-after';\n      break;\n    case 12:\n      if (field === 'Content-Type' || field === 'content-type')\n        return 'content-type';\n      if (field === 'Max-Forwards' || field === 'max-forwards')\n        return 'max-forwards';\n      break;\n    case 13:\n      if (field === 'Authorization' || field === 'authorization')\n        return 'authorization';\n      if (field === 'Last-Modified' || field === 'last-modified')\n        return 'last-modified';\n      if (field === 'Cache-Control' || field === 'cache-control')\n        return '\\u0000cache-control';\n      if (field === 'If-None-Match' || field === 'if-none-match')\n        return '\\u0000if-none-match';\n      break;\n    case 14:\n      if (field === 'Content-Length' || field === 'content-length')\n        return 'content-length';\n      break;\n    case 15:\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\n        return '\\u0000accept-encoding';\n      if (field === 'Accept-Language' || field === 'accept-language')\n        return '\\u0000accept-language';\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\n        return '\\u0000x-forwarded-for';\n      break;\n    case 16:\n      if (field === 'Content-Encoding' || field === 'content-encoding')\n        return '\\u0000content-encoding';\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\n        return '\\u0000x-forwarded-host';\n      break;\n    case 17:\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\n        return 'if-modified-since';\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\n        return '\\u0000transfer-encoding';\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\n        return '\\u0000x-forwarded-proto';\n      break;\n    case 19:\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\n        return 'proxy-authorization';\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\n        return 'if-unmodified-since';\n      break;\n  }\n  if (lowercased) {\n    return '\\u0000' + field;\n  }\n  return matchKnownFields(StringPrototypeToLowerCase(field)\x2C true);\n}\n// Add the given (field\x2C value) pair to the message\n//\n// Per RFC2616\x2C section 4.2 it is acceptable to join multiple instances of the\n// same header with a '\x2C ' if the header in question supports specification of\n// multiple values this way. The one exception to this is the Cookie header\x2C\n// which has multiple values joined with a '; ' instead. If a header's values\n// cannot be joined in either of these ways\x2C we declare the first instance the\n// winner and drop the second. Extended header fields (those beginning with\n// 'x-') are always joined.\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\nfunction _addHeaderLine(field\x2C value\x2C dest) {\n  field = matchKnownFields(field);\n  const flag = StringPrototypeCharCodeAt(field\x2C 0);\n  if (flag === 0 || flag === 2) {\n    field = StringPrototypeSlice(field\x2C 1);\n    // Make a delimited list\n    if (typeof dest[field] === 'string') {\n      dest[field] += (flag === 0 ? '\x2C ' : '; ') + value;\n    } else {\n      dest[field] = value;\n    }\n  } else if (flag === 1) {\n    // Array header -- only Set-Cookie at the moment\n    if (dest['set-cookie'] !== undefined) {\n      dest['set-cookie'].push(value);\n    } else {\n      dest['set-cookie'] = [value];\n    }\n  } else if (dest[field] === undefined) {\n    // Drop duplicates\n    dest[field] = value;\n  }\n}\n\n\n// Call this instead of resume() if we want to just\n// dump all the data to /dev/null\nIncomingMessage.prototype._dump = function _dump() {\n  if (!this._dumped) {\n    this._dumped = true;\n    // If there is buffered data\x2C it may trigger 'data' events.\n    // Remove 'data' event listeners explicitly.\n    this.removeAllListeners('data');\n    this.resume();\n  }\n};\n\nfunction onError(self\x2C error\x2C cb) {\n  // This is to keep backward compatible behavior.\n  // An error is emitted only if there are listeners attached to the event.\n  if (self.listenerCount('error') === 0) {\n    cb();\n  } else {\n    cb(error);\n  }\n}\n\nmodule.exports = {\n  IncomingMessage\x2C\n  readStart\x2C\n  readStop\n};\n
code-source-info,0x3ba9b4366a4e,159,0,12951,C0O0C4O12951,,
code-creation,Function,10,237817,0x3ba9b43673ee,392, node:_http_incoming:1:1,0x3ba9b43669c8,~
code-source-info,0x3ba9b43673ee
tick,0x7ff81f29ef20,237930,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b4364078,0x10dd44be3,0x10dd44865,0x3ba9b4360412,0x10dd44be3,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,238012,0x3ba9b4368796,26,FreeList node:internal/freelist:8:14,0x3ba9b4366088,~
code-source-info,0x3ba9b4368796,158,87,194,C0O111C2O121C6O133C8O143C12O155C14O164C18O175C20O185C25O193,,
tick,0x108a0aa1c,238622,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b4360456,0x10dd44be3,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,238797,0x3ba9b4369736,5, node:_http_outgoing:1:1,0x3ba9b4369280,~
script-source,160,node:_http_outgoing,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  MathFloor\x2C\n  NumberPrototypeToString\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeTest\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\nconst assert = require('internal/assert');\nconst EE = require('events');\nconst Stream = require('stream');\nconst internalUtil = require('internal/util');\nconst { kOutHeaders\x2C utcDate\x2C kNeedDrain } = require('internal/http');\nconst { Buffer } = require('buffer');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\n  chunkExpression: RE_TE_CHUNKED\x2C\n} = require('_http_common');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol }\n} = require('internal/async_hooks');\nconst {\n  codes: {\n    ERR_HTTP_HEADERS_SENT\x2C\n    ERR_HTTP_INVALID_HEADER_VALUE\x2C\n    ERR_HTTP_TRAILER_INVALID\x2C\n    ERR_INVALID_HTTP_TOKEN\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_CHAR\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_DESTROYED\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\nconst { isUint8Array } = require('internal/util/types');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst HIGH_WATER_MARK = getDefaultHighWaterMark();\n\nconst kCorked = Symbol('corked');\n\nconst nop = () => {};\n\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\n\n// isCookieField performs a case-insensitive comparison of a provided string\n// against the word "cookie." As of V8 6.6 this is faster than handrolling or\n// using a case-insensitive RegExp.\nfunction isCookieField(s) {\n  return s.length === 6 && StringPrototypeToLowerCase(s) === 'cookie';\n}\n\nfunction OutgoingMessage() {\n  Stream.call(this);\n\n  // Queue that holds all currently pending data\x2C until the response will be\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\n  this.outputData = [];\n\n  // `outputSize` is an approximate measure of how much data is queued on this\n  // response. `_onPendingData` will be invoked to update similar global\n  // per-connection counter. That counter will be used to pause/unpause the\n  // TCP socket and HTTP Parser and thus handle the backpressure.\n  this.outputSize = 0;\n\n  this.writable = true;\n  this.destroyed = false;\n\n  this._last = false;\n  this.chunkedEncoding = false;\n  this.shouldKeepAlive = true;\n  this.maxRequestsOnConnectionReached = false;\n  this._defaultKeepAlive = true;\n  this.useChunkedEncodingByDefault = true;\n  this.sendDate = false;\n  this._removedConnection = false;\n  this._removedContLen = false;\n  this._removedTE = false;\n\n  this._contentLength = null;\n  this._hasBody = true;\n  this._trailer = '';\n  this[kNeedDrain] = false;\n\n  this.finished = false;\n  this._headerSent = false;\n  this[kCorked] = 0;\n  this._closed = false;\n\n  this.socket = null;\n  this._header = null;\n  this[kOutHeaders] = null;\n\n  this._keepAliveTimeout = 0;\n\n  this._onPendingData = nop;\n}\nObjectSetPrototypeOf(OutgoingMessage.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(OutgoingMessage\x2C Stream);\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableFinished'\x2C {\n  get() {\n    return (\n      this.finished &&\n      this.outputSize === 0 &&\n      (!this.socket || this.socket.writableLength === 0)\n    );\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableObjectMode'\x2C {\n  get() {\n    return false;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableLength'\x2C {\n  get() {\n    return this.outputSize + (this.socket ? this.socket.writableLength : 0);\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableHighWaterMark'\x2C {\n  get() {\n    return this.socket ? this.socket.writableHighWaterMark : HIGH_WATER_MARK;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableCorked'\x2C {\n  get() {\n    const corked = this.socket ? this.socket.writableCorked : 0;\n    return corked + this[kCorked];\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headers'\x2C {\n  get: internalUtil.deprecate(function() {\n    return this.getHeaders();\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (val == null) {\n      this[kOutHeaders] = null;\n    } else if (typeof val === 'object') {\n      const headers = this[kOutHeaders] = ObjectCreate(null);\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const name = keys[i];\n        headers[StringPrototypeToLowerCase(name)] = [name\x2C val[name]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'connection'\x2C {\n  get: function() {\n    return this.socket;\n  }\x2C\n  set: function(val) {\n    this.socket = val;\n  }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headerNames'\x2C {\n  get: internalUtil.deprecate(function() {\n    const headers = this[kOutHeaders];\n    if (headers !== null) {\n      const out = ObjectCreate(null);\n      const keys = ObjectKeys(headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        const val = headers[key][0];\n        out[key] = val;\n      }\n      return out;\n    }\n    return null;\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\n  set: internalUtil.deprecate(function(val) {\n    if (typeof val === 'object' && val !== null) {\n      const headers = this[kOutHeaders];\n      if (!headers)\n        return;\n      const keys = ObjectKeys(val);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; ++i) {\n        const header = headers[keys[i]];\n        if (header)\n          header[0] = val[keys[i]];\n      }\n    }\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\n});\n\n\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n\n  const headersMap = this[kOutHeaders];\n  const headers = {};\n\n  if (headersMap !== null) {\n    const keys = ObjectKeys(headersMap);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0\x2C l = keys.length; i < l; i++) {\n      const key = keys[i];\n      headers[headersMap[key][0]] = headersMap[key][1];\n    }\n  }\n  return headers;\n};\n\nOutgoingMessage.prototype.cork = function() {\n  if (this.socket) {\n    this.socket.cork();\n  } else {\n    this[kCorked]++;\n  }\n};\n\nOutgoingMessage.prototype.uncork = function() {\n  if (this.socket) {\n    this.socket.uncork();\n  } else if (this[kCorked]) {\n    this[kCorked]--;\n  }\n};\n\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n\n  if (callback) {\n    this.on('timeout'\x2C callback);\n  }\n\n  if (!this.socket) {\n    this.once('socket'\x2C function socketSetTimeoutOnConnect(socket) {\n      socket.setTimeout(msecs);\n    });\n  } else {\n    this.socket.setTimeout(msecs);\n  }\n  return this;\n};\n\n\n// It's possible that the socket will be destroyed\x2C and removed from\n// any messages\x2C before ever calling this.  In that case\x2C just skip\n// it\x2C since something else is destroying this connection anyway.\nOutgoingMessage.prototype.destroy = function destroy(error) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  if (this.socket) {\n    this.socket.destroy(error);\n  } else {\n    this.once('socket'\x2C function socketDestroyOnConnect(socket) {\n      socket.destroy(error);\n    });\n  }\n\n  return this;\n};\n\n\n// This abstract either writing directly to the socket or buffering it.\nOutgoingMessage.prototype._send = function _send(data\x2C encoding\x2C callback) {\n  // This is a shameful hack to get the headers and first body chunk onto\n  // the same packet. Future versions of Node are going to take care of\n  // this at a lower level and in a more general way.\n  if (!this._headerSent) {\n    if (typeof data === 'string' &&\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\n      data = this._header + data;\n    } else {\n      const header = this._header;\n      this.outputData.unshift({\n        data: header\x2C\n        encoding: 'latin1'\x2C\n        callback: null\n      });\n      this.outputSize += header.length;\n      this._onPendingData(header.length);\n    }\n    this._headerSent = true;\n  }\n  return this._writeRaw(data\x2C encoding\x2C callback);\n};\n\n\nOutgoingMessage.prototype._writeRaw = _writeRaw;\nfunction _writeRaw(data\x2C encoding\x2C callback) {\n  const conn = this.socket;\n  if (conn && conn.destroyed) {\n    // The socket was destroyed. If we're still trying to write to it\x2C\n    // then we haven't gotten the 'close' event yet.\n    return false;\n  }\n\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (conn && conn._httpMessage === this && conn.writable) {\n    // There might be pending data in the this.output buffer.\n    if (this.outputData.length) {\n      this._flushOutput(conn);\n    }\n    // Directly write to socket.\n    return conn.write(data\x2C encoding\x2C callback);\n  }\n  // Buffer\x2C as long as we're not destroyed.\n  this.outputData.push({ data\x2C encoding\x2C callback });\n  this.outputSize += data.length;\n  this._onPendingData(data.length);\n  return this.outputSize < HIGH_WATER_MARK;\n}\n\n\nOutgoingMessage.prototype._storeHeader = _storeHeader;\nfunction _storeHeader(firstLine\x2C headers) {\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\n  const state = {\n    connection: false\x2C\n    contLen: false\x2C\n    te: false\x2C\n    date: false\x2C\n    expect: false\x2C\n    trailer: false\x2C\n    header: firstLine\n  };\n\n  if (headers) {\n    if (headers === this[kOutHeaders]) {\n      for (const key in headers) {\n        const entry = headers[key];\n        processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C false);\n      }\n    } else if (ArrayIsArray(headers)) {\n      if (headers.length && ArrayIsArray(headers[0])) {\n        for (let i = 0; i < headers.length; i++) {\n          const entry = headers[i];\n          processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C true);\n        }\n      } else {\n        if (headers.length % 2 !== 0) {\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\n        }\n\n        for (let n = 0; n < headers.length; n += 2) {\n          processHeader(this\x2C state\x2C headers[n + 0]\x2C headers[n + 1]\x2C true);\n        }\n      }\n    } else {\n      for (const key in headers) {\n        if (ObjectPrototypeHasOwnProperty(headers\x2C key)) {\n          processHeader(this\x2C state\x2C key\x2C headers[key]\x2C true);\n        }\n      }\n    }\n  }\n\n  let { header } = state;\n\n  // Date header\n  if (this.sendDate && !state.date) {\n    header += 'Date: ' + utcDate() + '\\r\\n';\n  }\n\n  // Force the connection to close when the response is a 204 No Content or\n  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"\n  // header.\n  //\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\n  // node.js used to send out a zero chunk anyway to accommodate clients\n  // that don't have special handling for those responses.\n  //\n  // It was pointed out that this might confuse reverse proxies to the point\n  // of creating security liabilities\x2C so suppress the zero chunk and force\n  // the connection to close.\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\n                               this.statusCode === 304)) {\n    debug(this.statusCode + ' response should not use chunked encoding\x2C' +\n          ' closing connection.');\n    this.chunkedEncoding = false;\n    this.shouldKeepAlive = false;\n  }\n\n  // keep-alive logic\n  if (this._removedConnection) {\n    this._last = true;\n    this.shouldKeepAlive = false;\n  } else if (!state.connection) {\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\n    if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\n      header += 'Connection: close\\r\\n';\n    } else if (shouldSendKeepAlive) {\n      header += 'Connection: keep-alive\\r\\n';\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\n        header += `Keep-Alive: timeout=${timeoutSeconds}\\r\\n`;\n      }\n    } else {\n      this._last = true;\n      header += 'Connection: close\\r\\n';\n    }\n  }\n\n  if (!state.contLen && !state.te) {\n    if (!this._hasBody) {\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\n      this.chunkedEncoding = false;\n    } else if (!this.useChunkedEncodingByDefault) {\n      this._last = true;\n    } else if (!state.trailer &&\n               !this._removedContLen &&\n               typeof this._contentLength === 'number') {\n      header += 'Content-Length: ' + this._contentLength + '\\r\\n';\n    } else if (!this._removedTE) {\n      header += 'Transfer-Encoding: chunked\\r\\n';\n      this.chunkedEncoding = true;\n    } else {\n      // We should only be able to get here if both Content-Length and\n      // Transfer-Encoding are removed by the user.\n      // See: test/parallel/test-http-remove-header-stays-removed.js\n      debug('Both Content-Length and Transfer-Encoding are removed');\n    }\n  }\n\n  // Test non-chunked message does not have trailer header set\x2C\n  // message will be terminated by the first empty line after the\n  // header fields\x2C regardless of the header fields present in the\n  // message\x2C and thus cannot contain a message body or 'trailers'.\n  if (this.chunkedEncoding !== true && state.trailer) {\n    throw new ERR_HTTP_TRAILER_INVALID();\n  }\n\n  this._header = header + '\\r\\n';\n  this._headerSent = false;\n\n  // Wait until the first body chunk\x2C or close()\x2C is sent to flush\x2C\n  // UNLESS we're sending Expect: 100-continue.\n  if (state.expect) this._send('');\n}\n\nfunction processHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderName(key);\n  if (ArrayIsArray(value)) {\n    if (value.length < 2 || !isCookieField(key)) {\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < value.length; i++)\n        storeHeader(self\x2C state\x2C key\x2C value[i]\x2C validate);\n      return;\n    }\n    value = ArrayPrototypeJoin(value\x2C '; ');\n  }\n  storeHeader(self\x2C state\x2C key\x2C value\x2C validate);\n}\n\nfunction storeHeader(self\x2C state\x2C key\x2C value\x2C validate) {\n  if (validate)\n    validateHeaderValue(key\x2C value);\n  state.header += key + ': ' + value + '\\r\\n';\n  matchHeader(self\x2C state\x2C key\x2C value);\n}\n\nfunction matchHeader(self\x2C state\x2C field\x2C value) {\n  if (field.length < 4 || field.length > 17)\n    return;\n  field = StringPrototypeToLowerCase(field);\n  switch (field) {\n    case 'connection':\n      state.connection = true;\n      self._removedConnection = false;\n      if (RegExpPrototypeTest(RE_CONN_CLOSE\x2C value))\n        self._last = true;\n      else\n        self.shouldKeepAlive = true;\n      break;\n    case 'transfer-encoding':\n      state.te = true;\n      self._removedTE = false;\n      if (RegExpPrototypeTest(RE_TE_CHUNKED\x2C value))\n        self.chunkedEncoding = true;\n      break;\n    case 'content-length':\n      state.contLen = true;\n      self._removedContLen = false;\n      break;\n    case 'date':\n    case 'expect':\n    case 'trailer':\n      state[field] = true;\n      break;\n    case 'keep-alive':\n      self._defaultKeepAlive = false;\n      break;\n  }\n}\n\nconst validateHeaderName = hideStackFrames((name) => {\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\n    throw new ERR_INVALID_HTTP_TOKEN('Header name'\x2C name);\n  }\n});\n\nconst validateHeaderValue = hideStackFrames((name\x2C value) => {\n  if (value === undefined) {\n    throw new ERR_HTTP_INVALID_HEADER_VALUE(value\x2C name);\n  }\n  if (checkInvalidHeaderChar(value)) {\n    debug('Header "%s" contains invalid characters'\x2C name);\n    throw new ERR_INVALID_CHAR('header content'\x2C name);\n  }\n});\n\nOutgoingMessage.prototype.setHeader = function setHeader(name\x2C value) {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('set');\n  }\n  validateHeaderName(name);\n  validateHeaderValue(name\x2C value);\n\n  let headers = this[kOutHeaders];\n  if (headers === null)\n    this[kOutHeaders] = headers = ObjectCreate(null);\n\n  headers[StringPrototypeToLowerCase(name)] = [name\x2C value];\n  return this;\n};\n\n\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\n  validateString(name\x2C 'name');\n\n  const headers = this[kOutHeaders];\n  if (headers === null)\n    return;\n\n  const entry = headers[StringPrototypeToLowerCase(name)];\n  return entry && entry[1];\n};\n\n\n// Returns an array of the names of the current outgoing headers.\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\n};\n\n\n// Returns an array of the names of the current outgoing raw headers.\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\n  const headersMap = this[kOutHeaders];\n  if (headersMap === null) return [];\n\n  const values = ObjectValues(headersMap);\n  const headers = Array(values.length);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = values.length; i < l; i++) {\n    headers[i] = values[i][0];\n  }\n\n  return headers;\n};\n\n\n// Returns a shallow copy of the current outgoing headers.\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\n  const headers = this[kOutHeaders];\n  const ret = ObjectCreate(null);\n  if (headers) {\n    const keys = ObjectKeys(headers);\n    // Retain for(;;) loop for performance reasons\n    // Refs: https://github.com/nodejs/node/pull/30958\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const val = headers[key][1];\n      ret[key] = val;\n    }\n  }\n  return ret;\n};\n\n\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\n  validateString(name\x2C 'name');\n  return this[kOutHeaders] !== null &&\n    !!this[kOutHeaders][StringPrototypeToLowerCase(name)];\n};\n\n\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\n  validateString(name\x2C 'name');\n\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('remove');\n  }\n\n  const key = StringPrototypeToLowerCase(name);\n\n  switch (key) {\n    case 'connection':\n      this._removedConnection = true;\n      break;\n    case 'content-length':\n      this._removedContLen = true;\n      break;\n    case 'transfer-encoding':\n      this._removedTE = true;\n      break;\n    case 'date':\n      this.sendDate = false;\n      break;\n  }\n\n  if (this[kOutHeaders] !== null) {\n    delete this[kOutHeaders][key];\n  }\n};\n\n\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\n};\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'headersSent'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: function() { return !!this._header; }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableEnded'\x2C {\n  get: function() { return this.finished; }\n});\n\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableNeedDrain'\x2C {\n  get: function() {\n    return !this.destroyed && !this.finished && this[kNeedDrain];\n  }\n});\n\nconst crlf_buf = Buffer.from('\\r\\n');\nOutgoingMessage.prototype.write = function write(chunk\x2C encoding\x2C callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  const ret = write_(this\x2C chunk\x2C encoding\x2C callback\x2C false);\n  if (!ret)\n    this[kNeedDrain] = true;\n  return ret;\n};\n\nfunction onError(msg\x2C err\x2C callback) {\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\n  defaultTriggerAsyncIdScope(triggerAsyncId\x2C\n                             process.nextTick\x2C\n                             emitErrorNt\x2C\n                             msg\x2C\n                             err\x2C\n                             callback);\n}\n\nfunction emitErrorNt(msg\x2C err\x2C callback) {\n  callback(err);\n  if (typeof msg.emit === 'function' && !msg._closed) {\n    msg.emit('error'\x2C err);\n  }\n}\n\nfunction write_(msg\x2C chunk\x2C encoding\x2C callback\x2C fromEnd) {\n  if (typeof callback !== 'function')\n    callback = nop;\n\n  let len;\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk === 'string') {\n    len = Buffer.byteLength(chunk\x2C encoding);\n  } else if (isUint8Array(chunk)) {\n    len = chunk.length;\n  } else {\n    throw new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\n  }\n\n  let err;\n  if (msg.finished) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if (msg.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    if (!msg.destroyed) {\n      onError(msg\x2C err\x2C callback);\n    } else {\n      process.nextTick(callback\x2C err);\n    }\n    return false;\n  }\n\n  if (!msg._header) {\n    if (fromEnd) {\n      msg._contentLength = len;\n    }\n    msg._implicitHeader();\n  }\n\n  if (!msg._hasBody) {\n    debug('This type of response MUST NOT have a body. ' +\n          'Ignoring write() calls.');\n    process.nextTick(callback);\n    return true;\n  }\n\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\n    msg.socket.cork();\n    process.nextTick(connectionCorkNT\x2C msg.socket);\n  }\n\n  let ret;\n  if (msg.chunkedEncoding && chunk.length !== 0) {\n    msg._send(NumberPrototypeToString(len\x2C 16)\x2C 'latin1'\x2C null);\n    msg._send(crlf_buf\x2C null\x2C null);\n    msg._send(chunk\x2C encoding\x2C null);\n    ret = msg._send(crlf_buf\x2C null\x2C callback);\n  } else {\n    ret = msg._send(chunk\x2C encoding\x2C callback);\n  }\n\n  debug('write ret = ' + ret);\n  return ret;\n}\n\n\nfunction connectionCorkNT(conn) {\n  conn.uncork();\n}\n\n\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\n  this._trailer = '';\n  const keys = ObjectKeys(headers);\n  const isArray = ArrayIsArray(headers);\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0\x2C l = keys.length; i < l; i++) {\n    let field\x2C value;\n    const key = keys[i];\n    if (isArray) {\n      field = headers[key][0];\n      value = headers[key][1];\n    } else {\n      field = key;\n      value = headers[key];\n    }\n    if (typeof field !== 'string' || !field || !checkIsHttpToken(field)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Trailer name'\x2C field);\n    }\n    if (checkInvalidHeaderChar(value)) {\n      debug('Trailer "%s" contains invalid characters'\x2C field);\n      throw new ERR_INVALID_CHAR('trailer content'\x2C field);\n    }\n    this._trailer += field + ': ' + value + '\\r\\n';\n  }\n};\n\nfunction onFinish(outmsg) {\n  if (outmsg && outmsg.socket && outmsg.socket._hadError) return;\n  outmsg.emit('finish');\n}\n\nOutgoingMessage.prototype.end = function end(chunk\x2C encoding\x2C callback) {\n  if (typeof chunk === 'function') {\n    callback = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = null;\n  }\n\n  if (chunk) {\n    if (this.finished) {\n      onError(this\x2C\n              new ERR_STREAM_WRITE_AFTER_END()\x2C\n              typeof callback !== 'function' ? nop : callback);\n      return this;\n    }\n\n    if (this.socket) {\n      this.socket.cork();\n    }\n\n    write_(this\x2C chunk\x2C encoding\x2C null\x2C true);\n  } else if (this.finished) {\n    if (typeof callback === 'function') {\n      if (!this.writableFinished) {\n        this.on('finish'\x2C callback);\n      } else {\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\n      }\n    }\n    return this;\n  } else if (!this._header) {\n    if (this.socket) {\n      this.socket.cork();\n    }\n\n    this._contentLength = 0;\n    this._implicitHeader();\n  }\n\n  if (typeof callback === 'function')\n    this.once('finish'\x2C callback);\n\n  const finish = onFinish.bind(undefined\x2C this);\n\n  if (this._hasBody && this.chunkedEncoding) {\n    this._send('0\\r\\n' + this._trailer + '\\r\\n'\x2C 'latin1'\x2C finish);\n  } else {\n    // Force a flush\x2C HACK.\n    this._send(''\x2C 'latin1'\x2C finish);\n  }\n\n  if (this.socket) {\n    // Fully uncork connection on end().\n    this.socket._writableState.corked = 1;\n    this.socket.uncork();\n  }\n  this[kCorked] = 0;\n\n  this.finished = true;\n\n  // There is the first message on the outgoing queue\x2C and we've sent\n  // everything to the socket.\n  debug('outgoing message end.');\n  if (this.outputData.length === 0 &&\n      this.socket &&\n      this.socket._httpMessage === this) {\n    this._finish();\n  }\n\n  return this;\n};\n\n\nOutgoingMessage.prototype._finish = function _finish() {\n  assert(this.socket);\n  this.emit('prefinish');\n};\n\n\n// This logic is probably a bit confusing. Let me explain a bit:\n//\n// In both HTTP servers and clients it is possible to queue up several\n// outgoing messages. This is easiest to imagine in the case of a client.\n// Take the following situation:\n//\n//    req1 = client.request('GET'\x2C '/');\n//    req2 = client.request('POST'\x2C '/');\n//\n// When the user does\n//\n//   req2.write('hello world\\n');\n//\n// it's possible that the first request has not been completely flushed to\n// the socket yet. Thus the outgoing messages need to be prepared to queue\n// up data internally before sending it on further to the socket's queue.\n//\n// This function\x2C outgoingFlush()\x2C is called by both the Server and Client\n// to attempt to flush any pending messages out to the socket.\nOutgoingMessage.prototype._flush = function _flush() {\n  const socket = this.socket;\n\n  if (socket && socket.writable) {\n    // There might be remaining data in this.output; write it out\n    const ret = this._flushOutput(socket);\n\n    if (this.finished) {\n      // This is a queue to the server or client to bring in the next this.\n      this._finish();\n    } else if (ret && this[kNeedDrain]) {\n      this[kNeedDrain] = false;\n      this.emit('drain');\n    }\n  }\n};\n\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\n  while (this[kCorked]) {\n    this[kCorked]--;\n    socket.cork();\n  }\n\n  const outputLength = this.outputData.length;\n  if (outputLength <= 0)\n    return undefined;\n\n  const outputData = this.outputData;\n  socket.cork();\n  let ret;\n  // Retain for(;;) loop for performance reasons\n  // Refs: https://github.com/nodejs/node/pull/30958\n  for (let i = 0; i < outputLength; i++) {\n    const { data\x2C encoding\x2C callback } = outputData[i];\n    ret = socket.write(data\x2C encoding\x2C callback);\n  }\n  socket.uncork();\n\n  this.outputData = [];\n  this._onPendingData(-this.outputSize);\n  this.outputSize = 0;\n\n  return ret;\n};\n\n\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\n  if (!this._header) {\n    this._implicitHeader();\n  }\n\n  // Force-flush the headers.\n  this._send('');\n};\n\nOutgoingMessage.prototype.pipe = function pipe() {\n  // OutgoingMessage should be write-only. Piping from it is disabled.\n  this.emit('error'\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\nfunction(err\x2C event) {\n  this.destroy(err);\n};\n\nmodule.exports = {\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\n};\n
code-source-info,0x3ba9b4369736,160,0,28695,C0O0C4O28695,,
code-creation,Function,10,241482,0x3ba9b436b216,1459, node:_http_outgoing:1:1,0x3ba9b43696b0,~
code-source-info,0x3ba9b436b216,160,0,28695,C0O0C213O1159C219O1168C225O1184C231O1206C237O1219C243O1246C249O1262C254O1286C260O1300C266O1316C272O1349C277O1373C283O1396C289O1426C294O1488C297O1488C302O1460C307O1538C310O1538C314O1538C316O1577C319O1577C324O1611C327O1611C331O1611C333O1651C336O1651C341O1722C344O1722C349O1685C355O1698C361O1707C367O1767C370O1767C375O1756C381O1922C384O1922C389O1815C395O1860C401O1903C407O2020C410O2020C415O1957C426O1998C432O2472C435O2472C440O2472C445O2076C451O2103C457O2138C463O2168C469O2196C475O2222C481O2249C487O2271C493O2303C499O2331C505O2364C511O2396C517O2424C523O2452C528O2527C531O2527C536O2508C542O2584C545O2584C550O2567C556O2629C559O2629C564O2662C577O2663C583O2629C585O2733C588O2733C590O2777C593O2777C597O2777C599O2808C603O2808C605O2841C609O2841C611O4463C619O4481C624O4426C629O4493C632O4493C637O4578C650O4613C658O4541C663O4798C676O4835C684O4761C689O4907C702O4940C710O4870C715O5071C728O5111C736O5034C741O5243C754O5276C762O5206C767O5430C780O5475C802O5475C811O5617C833O5617C842O5393C847O6219C860O6253C868O6302C876O6182C881O6387C894O6436C916O6436C925O6992C947O6992C956O6350C961O7543C970O7568C974O8093C983O8108C987O8224C996O8241C1000O8378C1009O8399C1013O8918C1022O8936C1026O9315C1035O9331C1039O10100C1046O10120C1050O10991C1057O11014C1061O17124C1066O17124C1070O17124C1072O17318C1077O17318C1081O17318C1083O17624C1092O17644C1096O18026C1105O18046C1109O18356C1118O18381C1122O18576C1131O18604C1135O19086C1144O19107C1148O19538C1157O19558C1161O19738C1170O19761C1174O20348C1183O20374C1187O20507C1200O20584C1208O20470C1213O20664C1226O20701C1234O20627C1239O20780C1252O20821C1260O20743C1265O20926C1268O20933C1276O20933C1281O20926C1283O20963C1292O20979C1296O23375C1305O23397C1309O24388C1318O24402C1322O26141C1331O26159C1335O27014C1344O27031C1348O27482C1357O27505C1361O28170C1370O28193C1374O28345C1383O28360C1387O28523C1392O28536C1401O28560C1409O28610C1419O28631C1429O28653C1439O28676C1449O28625C1458O28694,,
tick,0x7ff81f29eee9,241687,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b4360456,0x10dd44be3,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f213cf8,241721,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b4360456,0x10dd44be3,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,241873,0x3ba9b436e43e,5, node:internal/http:1:1,0x3ba9b436e248,~
script-source,161,node:internal/http,'use strict';\n\nconst {\n  Symbol\x2C\n  Date\x2C\n  DatePrototypeGetMilliseconds\x2C\n  DatePrototypeToUTCString\x2C\n} = primordials;\n\nconst { setUnrefTimeout } = require('internal/timers');\n\nconst { InternalPerformanceEntry } = require('internal/perf/performance_entry');\n\nconst {\n  enqueue\x2C\n  hasObserver\x2C\n} = require('internal/perf/observe');\n\nlet utcCache;\n\nfunction utcDate() {\n  if (!utcCache) cache();\n  return utcCache;\n}\n\nfunction cache() {\n  const d = new Date();\n  utcCache = DatePrototypeToUTCString(d);\n  setUnrefTimeout(resetCache\x2C 1000 - DatePrototypeGetMilliseconds(d));\n}\n\nfunction resetCache() {\n  utcCache = undefined;\n}\n\nfunction emitStatistics(statistics) {\n  if (!hasObserver('http') || statistics == null) return;\n  const startTime = statistics.startTime;\n  const diff = process.hrtime(startTime);\n  const entry = new InternalPerformanceEntry(\n    'HttpRequest'\x2C\n    'http'\x2C\n    startTime[0] * 1000 + startTime[1] / 1e6\x2C\n    diff[0] * 1000 + diff[1] / 1e6\x2C\n    undefined\x2C\n  );\n  enqueue(entry);\n}\n\nmodule.exports = {\n  kOutHeaders: Symbol('kOutHeaders')\x2C\n  kNeedDrain: Symbol('kNeedDrain')\x2C\n  utcDate\x2C\n  emitStatistics\x2C\n};\n
code-source-info,0x3ba9b436e43e,161,0,1130,C0O0C4O1130,,
code-creation,Function,10,242030,0x3ba9b436e6fe,176, node:internal/http:1:1,0x3ba9b436e3b8,~
code-source-info,0x3ba9b436e6fe,161,0,1130,C0O0C55O25C60O35C66O43C72O75C78O147C81O147C86O127C92O213C95O213C100O184C106O296C109O296C114O268C120O279C126O335C127O335C129O1005C137O1039C148O1076C158O1100C164O1111C170O1020C175O1129,,
code-creation,LazyCompile,10,242153,0x3ba9b436eb96,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x3ba9691d8f18,~
script-source,53,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024;\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\n};\n
code-source-info,0x3ba9b436eb96,53,343,397,C0O360C12O395,,
tick,0x108ddbd5e,242410,0,0x0,0,0x3ba9c5afd694,0x3ba9c5afac9a,0x3ba9b436b712,0x10dd44be3,0x10dd44865,0x3ba9b4360456,0x10dd44be3,0x10dd44865,0x3ba9f09c31cc,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,242540,0x3ba9b436f92e,5, node:diagnostics_channel:1:1,0x3ba9b436f6e0,~
script-source,162,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectCreate\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = internalBinding('util');\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index >= 0) {\n      ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\n\n      // When there are no more active subscribers\x2C restore to fast prototype.\n      if (!this._subscribers.length) {\n        // eslint-disable-next-line no-use-before-define\n        ObjectSetPrototypeOf(this\x2C Channel.prototype);\n      }\n    }\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    for (let i = 0; i < this._subscribers.length; i++) {\n      try {\n        const onMessage = this._subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this.name = name;\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    ObjectSetPrototypeOf(this\x2C ActiveChannel.prototype);\n    this._subscribers = [];\n    this.subscribe(subscription);\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n}\n\nconst channels = ObjectCreate(null);\n\nfunction channel(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  channel = new Channel(name);\n  channels[name] = new WeakReference(channel);\n  return channel;\n}\n\nfunction hasSubscribers(name) {\n  let channel;\n  const ref = channels[name];\n  if (ref) channel = ref.get();\n  if (!channel) {\n    return false;\n  }\n\n  return channel.hasSubscribers;\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  Channel\n};\n
code-source-info,0x3ba9b436f92e,162,0,2641,C0O0C4O2641,,
code-creation,Function,10,242831,0x3ba9b437042e,308, node:diagnostics_channel:1:1,0x3ba9b436f8a8,~
code-source-info,0x3ba9b437042e,162,0,2641,C0O0C55O25C61O50C67O72C73O96C78O112C84O136C90O160C95O250C98O250C103O250C108O220C114O310C117O310C122O288C128O380C131O380C136O351C142O434C145O434C150O416C197O516C215O1577C267O1467C269O1998C271O1998C275O1998C277O2580C284O2601C290O2612C296O2630C302O2595C307O2640,,
code-creation,LazyCompile,10,243011,0x3ba9b4370cb6,105,channel node:diagnostics_channel:91:17,0x3ba9b436f960,~
code-source-info,0x3ba9b4370cb6,162,2035,2392,C0O2050C2O2073C9O2081C13O2091C15O2114C20O2114C25O2123C29O2136C31O2151C32O2155C44O2219C62O2225C67O2219C68O2297C75O2307C81O2328C88O2349C93O2345C98O2343C102O2375C104O2390,,
code-creation,LazyCompile,10,243075,0x3ba9b437122e,13,Channel node:diagnostics_channel:65:14,0x3ba9b436fbb8,~
code-source-info,0x3ba9b437122e,162,1496,1565,C0O1509C1O1527C5O1544C7O1554C12O1564,,
code-creation,LazyCompile,10,243203,0x3ba9b437158e,5,byteLength node:buffer:627:17,0x3ba999225dd0,~
code-source-info,0x3ba9b437158e,18,17976,18001,C0O17995C4O18001,,
code-creation,LazyCompile,10,243252,0x3ba9b4371666,23,write node:buffer:628:12,0x3ba999225eb8,~
code-source-info,0x3ba9b4371666,18,18014,18079,C0O18048C17O18048C22O18079,,
tick,0x108a1f683,243672,1,0x10843a650,2,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31e5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,Eval,10,243889,0x3ba9b437230e,5, node:_http_client:1:1,0x3ba9b4371d58,~
script-source,163,node:_http_client,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsFinite\x2C\n  ObjectAssign\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  RegExpPrototypeTest\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSlice\x2C\n} = primordials;\n\nconst net = require('net');\nconst assert = require('internal/assert');\nconst { once } = require('internal/util');\nconst {\n  _checkIsHttpToken: checkIsHttpToken\x2C\n  freeParser\x2C\n  parsers\x2C\n  HTTPParser\x2C\n  isLenient\x2C\n  prepareError\x2C\n} = require('_http_common');\nconst { OutgoingMessage } = require('_http_outgoing');\nconst Agent = require('_http_agent');\nconst { Buffer } = require('buffer');\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\nconst { URL\x2C urlToHttpOptions\x2C searchParamsSymbol } = require('internal/url');\nconst { kOutHeaders\x2C kNeedDrain } = require('internal/http');\nconst { connResetException\x2C codes } = require('internal/errors');\nconst {\n  ERR_HTTP_HEADERS_SENT\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_HTTP_TOKEN\x2C\n  ERR_INVALID_PROTOCOL\x2C\n  ERR_UNESCAPED_CHARACTERS\n} = codes;\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\nconst { getTimerDuration } = require('internal/timers');\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\n  DTRACE_HTTP_CLIENT_RESPONSE\n} = require('internal/dtrace');\n\nconst { addAbortSignal\x2C finished } = require('stream');\n\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\n  debug = fn;\n});\n\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\nconst kError = Symbol('kError');\n\nconst kLenientAll = HTTPParser.kLenientAll | 0;\nconst kLenientNone = HTTPParser.kLenientNone | 0;\n\nfunction validateHost(host\x2C name) {\n  if (host !== null && host !== undefined && typeof host !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`\x2C\n                                   ['string'\x2C 'undefined'\x2C 'null']\x2C\n                                   host);\n  }\n  return host;\n}\n\nclass HTTPClientAsyncResource {\n  constructor(type\x2C req) {\n    this.type = type;\n    this.req = req;\n  }\n}\n\nfunction ClientRequest(input\x2C options\x2C cb) {\n  FunctionPrototypeCall(OutgoingMessage\x2C this);\n\n  if (typeof input === 'string') {\n    const urlStr = input;\n    input = urlToHttpOptions(new URL(urlStr));\n  } else if (input && input[searchParamsSymbol] &&\n             input[searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    input = urlToHttpOptions(input);\n  } else {\n    cb = options;\n    options = input;\n    input = null;\n  }\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = input || {};\n  } else {\n    options = ObjectAssign(input || {}\x2C options);\n  }\n\n  let agent = options.agent;\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\n  if (agent === false) {\n    agent = new defaultAgent.constructor();\n  } else if (agent === null || agent === undefined) {\n    if (typeof options.createConnection !== 'function') {\n      agent = defaultAgent;\n    }\n    // Explicitly pass through this statement as agent will not be used\n    // when createConnection is provided.\n  } else if (typeof agent.addRequest !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('options.agent'\x2C\n                                   ['Agent-like Object'\x2C 'undefined'\x2C 'false']\x2C\n                                   agent);\n  }\n  this.agent = agent;\n\n  const protocol = options.protocol || defaultAgent.protocol;\n  let expectedProtocol = defaultAgent.protocol;\n  if (this.agent && this.agent.protocol)\n    expectedProtocol = this.agent.protocol;\n\n  if (options.path) {\n    const path = String(options.path);\n    if (RegExpPrototypeTest(INVALID_PATH_REGEX\x2C path))\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\n  }\n\n  if (protocol !== expectedProtocol) {\n    throw new ERR_INVALID_PROTOCOL(protocol\x2C expectedProtocol);\n  }\n\n  const defaultPort = options.defaultPort ||\n                    (this.agent && this.agent.defaultPort);\n\n  const port = options.port = options.port || defaultPort || 80;\n  const host = options.host = validateHost(options.hostname\x2C 'hostname') ||\n                            validateHost(options.host\x2C 'host') || 'localhost';\n\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\n\n  this.socketPath = options.socketPath;\n\n  if (options.timeout !== undefined)\n    this.timeout = getTimerDuration(options.timeout\x2C 'timeout');\n\n  const signal = options.signal;\n  if (signal) {\n    addAbortSignal(signal\x2C this);\n  }\n  let method = options.method;\n  const methodIsString = (typeof method === 'string');\n  if (method !== null && method !== undefined && !methodIsString) {\n    throw new ERR_INVALID_ARG_TYPE('options.method'\x2C 'string'\x2C method);\n  }\n\n  if (methodIsString && method) {\n    if (!checkIsHttpToken(method)) {\n      throw new ERR_INVALID_HTTP_TOKEN('Method'\x2C method);\n    }\n    method = this.method = StringPrototypeToUpperCase(method);\n  } else {\n    method = this.method = 'GET';\n  }\n\n  const maxHeaderSize = options.maxHeaderSize;\n  if (maxHeaderSize !== undefined)\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\n  this.maxHeaderSize = maxHeaderSize;\n\n  const insecureHTTPParser = options.insecureHTTPParser;\n  if (insecureHTTPParser !== undefined &&\n      typeof insecureHTTPParser !== 'boolean') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'options.insecureHTTPParser'\x2C 'boolean'\x2C insecureHTTPParser);\n  }\n  this.insecureHTTPParser = insecureHTTPParser;\n\n  this.path = options.path || '/';\n  if (cb) {\n    this.once('response'\x2C cb);\n  }\n\n  if (method === 'GET' ||\n      method === 'HEAD' ||\n      method === 'DELETE' ||\n      method === 'OPTIONS' ||\n      method === 'TRACE' ||\n      method === 'CONNECT') {\n    this.useChunkedEncodingByDefault = false;\n  } else {\n    this.useChunkedEncodingByDefault = true;\n  }\n\n  this._ended = false;\n  this.res = null;\n  this.aborted = false;\n  this.timeoutCb = null;\n  this.upgradeOrConnect = false;\n  this.parser = null;\n  this.maxHeadersCount = null;\n  this.reusedSocket = false;\n  this.host = host;\n  this.protocol = protocol;\n\n  if (this.agent) {\n    // If there is an agent we should default to Connection:keep-alive\x2C\n    // but only if the Agent will actually reuse the connection!\n    // If it's not a keepAlive agent\x2C and the maxSockets==Infinity\x2C then\n    // there's never a case where this socket will actually be reused\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\n      this._last = true;\n      this.shouldKeepAlive = false;\n    } else {\n      this._last = false;\n      this.shouldKeepAlive = true;\n    }\n  }\n\n  const headersArray = ArrayIsArray(options.headers);\n  if (!headersArray) {\n    if (options.headers) {\n      const keys = ObjectKeys(options.headers);\n      // Retain for(;;) loop for performance reasons\n      // Refs: https://github.com/nodejs/node/pull/30958\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        this.setHeader(key\x2C options.headers[key]);\n      }\n    }\n\n    if (host && !this.getHeader('host') && setHost) {\n      let hostHeader = host;\n\n      // For the Host header\x2C ensure that IPv6 addresses are enclosed\n      // in square brackets\x2C as defined by URI formatting\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\n      const posColon = StringPrototypeIndexOf(hostHeader\x2C ':');\n      if (posColon !== -1 &&\n          StringPrototypeIncludes(hostHeader\x2C ':'\x2C posColon + 1) &&\n          StringPrototypeCharCodeAt(hostHeader\x2C 0) !== 91/* '[' */) {\n        hostHeader = `[${hostHeader}]`;\n      }\n\n      if (port && +port !== defaultPort) {\n        hostHeader += ':' + port;\n      }\n      this.setHeader('Host'\x2C hostHeader);\n    }\n\n    if (options.auth && !this.getHeader('Authorization')) {\n      this.setHeader('Authorization'\x2C 'Basic ' +\n                     Buffer.from(options.auth).toString('base64'));\n    }\n\n    if (this.getHeader('expect')) {\n      if (this._header) {\n        throw new ERR_HTTP_HEADERS_SENT('render');\n      }\n\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                        this[kOutHeaders]);\n    }\n  } else {\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                      options.headers);\n  }\n\n  let optsWithoutSignal = options;\n  if (optsWithoutSignal.signal) {\n    optsWithoutSignal = ObjectAssign({}\x2C options);\n    delete optsWithoutSignal.signal;\n  }\n\n  // initiate connection\n  if (this.agent) {\n    this.agent.addRequest(this\x2C optsWithoutSignal);\n  } else {\n    // No agent\x2C default to Connection:close.\n    this._last = true;\n    this.shouldKeepAlive = false;\n    if (typeof optsWithoutSignal.createConnection === 'function') {\n      const oncreate = once((err\x2C socket) => {\n        if (err) {\n          process.nextTick(() => this.emit('error'\x2C err));\n        } else {\n          this.onSocket(socket);\n        }\n      });\n\n      try {\n        const newSocket = optsWithoutSignal.createConnection(optsWithoutSignal\x2C\n                                                             oncreate);\n        if (newSocket) {\n          oncreate(null\x2C newSocket);\n        }\n      } catch (err) {\n        oncreate(err);\n      }\n    } else {\n      debug('CLIENT use net.createConnection'\x2C optsWithoutSignal);\n      this.onSocket(net.createConnection(optsWithoutSignal));\n    }\n  }\n}\nObjectSetPrototypeOf(ClientRequest.prototype\x2C OutgoingMessage.prototype);\nObjectSetPrototypeOf(ClientRequest\x2C OutgoingMessage);\n\nClientRequest.prototype._finish = function _finish() {\n  DTRACE_HTTP_CLIENT_REQUEST(this\x2C this.socket);\n  FunctionPrototypeCall(OutgoingMessage.prototype._finish\x2C this);\n};\n\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\n  if (this._header) {\n    throw new ERR_HTTP_HEADERS_SENT('render');\n  }\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\n                    this[kOutHeaders]);\n};\n\nClientRequest.prototype.abort = function abort() {\n  if (this.aborted) {\n    return;\n  }\n  this.aborted = true;\n  process.nextTick(emitAbortNT\x2C this);\n  this.destroy();\n};\n\nClientRequest.prototype.destroy = function destroy(err) {\n  if (this.destroyed) {\n    return this;\n  }\n  this.destroyed = true;\n\n  // If we're aborting\x2C we don't care about any more response data.\n  if (this.res) {\n    this.res._dump();\n  }\n\n  this[kError] = err;\n  this.socket?.destroy(err);\n\n  return this;\n};\n\nfunction emitAbortNT(req) {\n  req.emit('abort');\n}\n\nfunction ondrain() {\n  const msg = this._httpMessage;\n  if (msg && !msg.finished && msg[kNeedDrain]) {\n    msg[kNeedDrain] = false;\n    msg.emit('drain');\n  }\n}\n\nfunction socketCloseListener() {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('HTTP socket close');\n\n  // Pull through final chunk\x2C if anything is buffered.\n  // the ondata function will handle it properly\x2C and this\n  // is a no-op if no final chunk remains.\n  socket.read();\n\n  // NOTE: It's important to get parser here\x2C because it could be freed by\n  // the `socketOnData`.\n  const parser = socket.parser;\n  const res = req.res;\n\n  req.destroyed = true;\n  if (res) {\n    // Socket closed before we emitted 'end' below.\n    if (!res.complete) {\n      res.destroy(connResetException('aborted'));\n    }\n    req._closed = true;\n    req.emit('close');\n    if (!res.aborted && res.readable) {\n      res.push(null);\n    }\n  } else {\n    if (!req.socket._hadError) {\n      // This socket error fired before we started to\n      // receive a response. The error needs to\n      // fire on the request.\n      req.socket._hadError = true;\n      req.emit('error'\x2C connResetException('socket hang up'));\n    }\n    req._closed = true;\n    req.emit('close');\n  }\n\n  // Too bad.  That output wasn't getting written.\n  // This is pretty terrible that it doesn't raise an error.\n  // Fixed better in v0.10\n  if (req.outputData)\n    req.outputData.length = 0;\n\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction socketErrorListener(err) {\n  const socket = this;\n  const req = socket._httpMessage;\n  debug('SOCKET ERROR:'\x2C err.message\x2C err.stack);\n\n  if (req) {\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req.socket._hadError = true;\n    req.emit('error'\x2C err);\n  }\n\n  const parser = socket.parser;\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n\n  // Ensure that no further data will come out of the socket\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n  socket.destroy();\n}\n\nfunction socketOnEnd() {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  if (!req.res && !req.socket._hadError) {\n    // If we don't have a response then we know that the socket\n    // ended prematurely and we need to emit an error on the request.\n    req.socket._hadError = true;\n    req.emit('error'\x2C connResetException('socket hang up'));\n  }\n  if (parser) {\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n  }\n  socket.destroy();\n}\n\nfunction socketOnData(d) {\n  const socket = this;\n  const req = this._httpMessage;\n  const parser = this.parser;\n\n  assert(parser && parser.socket === socket);\n\n  const ret = parser.execute(d);\n  if (ret instanceof Error) {\n    prepareError(ret\x2C parser\x2C d);\n    debug('parse error'\x2C ret);\n    freeParser(parser\x2C req\x2C socket);\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.destroy();\n    req.socket._hadError = true;\n    req.emit('error'\x2C ret);\n  } else if (parser.incoming && parser.incoming.upgrade) {\n    // Upgrade (if status code 101) or CONNECT\n    const bytesParsed = ret;\n    const res = parser.incoming;\n    req.res = res;\n\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C req.timeoutCb);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n\n    parser.finish();\n    freeParser(parser\x2C req\x2C socket);\n\n    const bodyHead = TypedArrayPrototypeSlice(d\x2C bytesParsed\x2C d.length);\n\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\n    if (req.listenerCount(eventName) > 0) {\n      req.upgradeOrConnect = true;\n\n      // detach the socket\n      socket.emit('agentRemove');\n      socket.removeListener('close'\x2C socketCloseListener);\n      socket.removeListener('error'\x2C socketErrorListener);\n\n      socket._httpMessage = null;\n      socket.readableFlowing = null;\n\n      req.emit(eventName\x2C res\x2C socket\x2C bodyHead);\n      req.destroyed = true;\n      req._closed = true;\n      req.emit('close');\n    } else {\n      // Requested Upgrade or used CONNECT method\x2C but have no handler.\n      socket.destroy();\n    }\n  } else if (parser.incoming && parser.incoming.complete &&\n             // When the status code is informational (100\x2C 102-199)\x2C\n             // the server will send a final response after this client\n             // sends a request body\x2C so we must not free the parser.\n             // 101 (Switching Protocols) and all other status codes\n             // should be processed normally.\n             !statusIsInformational(parser.incoming.statusCode)) {\n    socket.removeListener('data'\x2C socketOnData);\n    socket.removeListener('end'\x2C socketOnEnd);\n    socket.removeListener('drain'\x2C ondrain);\n    freeParser(parser\x2C req\x2C socket);\n  }\n}\n\nfunction statusIsInformational(status) {\n  // 100 (Continue)    RFC7231 Section 6.2.1\n  // 102 (Processing)  RFC2518\n  // 103 (Early Hints) RFC8297\n  // 104-199 (Unassigned)\n  return (status < 200 && status >= 100 && status !== 101);\n}\n\n// client\nfunction parserOnIncomingClient(res\x2C shouldKeepAlive) {\n  const socket = this.socket;\n  const req = socket._httpMessage;\n\n  debug('AGENT incoming response!');\n\n  if (req.res) {\n    // We already have a response object\x2C this means the server\n    // sent a double response.\n    socket.destroy();\n    return 0;  // No special treatment.\n  }\n  req.res = res;\n\n  // Skip body and treat as Upgrade.\n  if (res.upgrade)\n    return 2;\n\n  // Responses to CONNECT request is handled as Upgrade.\n  const method = req.method;\n  if (method === 'CONNECT') {\n    res.upgrade = true;\n    return 2;  // Skip body and treat as Upgrade.\n  }\n\n  if (statusIsInformational(res.statusCode)) {\n    // Restart the parser\x2C as this is a 1xx informational message.\n    req.res = null; // Clear res so that we don't hit double-responses.\n    // Maintain compatibility by sending 100-specific events\n    if (res.statusCode === 100) {\n      req.emit('continue');\n    }\n    // Send information events to all 1xx responses except 101 Upgrade.\n    req.emit('information'\x2C {\n      statusCode: res.statusCode\x2C\n      statusMessage: res.statusMessage\x2C\n      httpVersion: res.httpVersion\x2C\n      httpVersionMajor: res.httpVersionMajor\x2C\n      httpVersionMinor: res.httpVersionMinor\x2C\n      headers: res.headers\x2C\n      rawHeaders: res.rawHeaders\n    });\n\n    return 1;  // Skip body but don't treat as Upgrade.\n  }\n\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\n    // Server MUST respond with Connection:keep-alive for us to enable it.\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\n    // keep the connection open.\n    req.shouldKeepAlive = false;\n  }\n\n  DTRACE_HTTP_CLIENT_RESPONSE(socket\x2C req);\n  req.res = res;\n  res.req = req;\n\n  // Add our listener first\x2C so that we guarantee socket cleanup\n  res.on('end'\x2C responseOnEnd);\n  req.on('prefinish'\x2C requestOnPrefinish);\n  socket.on('timeout'\x2C responseOnTimeout);\n\n  // If the user did not listen for the 'response' event\x2C then they\n  // can't possibly read the data\x2C so we ._dump() it into the void\n  // so that the socket doesn't hang there in a paused state.\n  if (req.aborted || !req.emit('response'\x2C res))\n    res._dump();\n\n  if (method === 'HEAD')\n    return 1;  // Skip body but don't treat as Upgrade.\n\n  if (res.statusCode === 304) {\n    res.complete = true;\n    return 1; // Skip body as there won't be any\n  }\n\n  return 0;  // No special treatment.\n}\n\n// client\nfunction responseKeepAlive(req) {\n  const socket = req.socket;\n\n  debug('AGENT socket keep-alive');\n  if (req.timeoutCb) {\n    socket.setTimeout(0\x2C req.timeoutCb);\n    req.timeoutCb = null;\n  }\n  socket.removeListener('close'\x2C socketCloseListener);\n  socket.removeListener('error'\x2C socketErrorListener);\n  socket.removeListener('data'\x2C socketOnData);\n  socket.removeListener('end'\x2C socketOnEnd);\n\n  // TODO(ronag): Between here and emitFreeNT the socket\n  // has no 'error' handler.\n\n  // There are cases where _handle === null. Avoid those. Passing undefined to\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\n  // Mark this socket as available\x2C AFTER user-added end\n  // handlers have a chance to run.\n  defaultTriggerAsyncIdScope(asyncId\x2C process.nextTick\x2C emitFreeNT\x2C req);\n\n  req.destroyed = true;\n  if (req.res) {\n    // Detach socket from IncomingMessage to avoid destroying the freed\n    // socket in IncomingMessage.destroy().\n    req.res.socket = null;\n  }\n}\n\nfunction responseOnEnd() {\n  const req = this.req;\n  const socket = req.socket;\n\n  if (socket) {\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C emitRequestTimeout);\n    socket.removeListener('timeout'\x2C responseOnTimeout);\n  }\n\n  req._ended = true;\n\n  if (!req.shouldKeepAlive) {\n    if (socket.writable) {\n      debug('AGENT socket.destroySoon()');\n      if (typeof socket.destroySoon === 'function')\n        socket.destroySoon();\n      else\n        socket.end();\n    }\n    assert(!socket.writable);\n  } else if (req.finished && !this.aborted) {\n    // We can assume `req.finished` means all data has been written since:\n    // - `'responseOnEnd'` means we have been assigned a socket.\n    // - when we have a socket we write directly to it without buffering.\n    // - `req.finished` means `end()` has been called and no further data.\n    //   can be written\n    responseKeepAlive(req);\n  }\n}\n\nfunction responseOnTimeout() {\n  const req = this._httpMessage;\n  if (!req) return;\n  const res = req.res;\n  if (!res) return;\n  res.emit('timeout');\n}\n\nfunction requestOnPrefinish() {\n  const req = this;\n\n  if (req.shouldKeepAlive && req._ended)\n    responseKeepAlive(req);\n}\n\nfunction emitFreeNT(req) {\n  req._closed = true;\n  req.emit('close');\n  if (req.socket) {\n    req.socket.emit('free');\n  }\n}\n\nfunction tickOnSocket(req\x2C socket) {\n  const parser = parsers.alloc();\n  req.socket = socket;\n  const lenient = req.insecureHTTPParser === undefined ?\n    isLenient() : req.insecureHTTPParser;\n  parser.initialize(HTTPParser.RESPONSE\x2C\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE'\x2C req)\x2C\n                    req.maxHeaderSize || 0\x2C\n                    lenient ? kLenientAll : kLenientNone\x2C\n                    0);\n  parser.socket = socket;\n  parser.outgoing = req;\n  req.parser = parser;\n\n  socket.parser = parser;\n  socket._httpMessage = req;\n\n  // Propagate headers limit from request object to parser\n  if (typeof req.maxHeadersCount === 'number') {\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\n  }\n\n  parser.onIncoming = parserOnIncomingClient;\n  socket.on('error'\x2C socketErrorListener);\n  socket.on('data'\x2C socketOnData);\n  socket.on('end'\x2C socketOnEnd);\n  socket.on('close'\x2C socketCloseListener);\n  socket.on('drain'\x2C ondrain);\n\n  if (\n    req.timeout !== undefined ||\n    (req.agent && req.agent.options && req.agent.options.timeout)\n  ) {\n    listenSocketTimeout(req);\n  }\n  req.emit('socket'\x2C socket);\n}\n\nfunction emitRequestTimeout() {\n  const req = this._httpMessage;\n  if (req) {\n    req.emit('timeout');\n  }\n}\n\nfunction listenSocketTimeout(req) {\n  if (req.timeoutCb) {\n    return;\n  }\n  // Set timeoutCb so it will get cleaned up on request end.\n  req.timeoutCb = emitRequestTimeout;\n  // Delegate socket timeout event.\n  if (req.socket) {\n    req.socket.once('timeout'\x2C emitRequestTimeout);\n  } else {\n    req.on('socket'\x2C (socket) => {\n      socket.once('timeout'\x2C emitRequestTimeout);\n    });\n  }\n}\n\nClientRequest.prototype.onSocket = function onSocket(socket\x2C err) {\n  // TODO(ronag): Between here and onSocketNT the socket\n  // has no 'error' handler.\n  process.nextTick(onSocketNT\x2C this\x2C socket\x2C err);\n};\n\nfunction onSocketNT(req\x2C socket\x2C err) {\n  if (req.destroyed || err) {\n    req.destroyed = true;\n\n    function _destroy(req\x2C err) {\n      if (!req.aborted && !err) {\n        err = connResetException('socket hang up');\n      }\n      if (err) {\n        req.emit('error'\x2C err);\n      }\n      req._closed = true;\n      req.emit('close');\n    }\n\n    if (socket) {\n      if (!err && req.agent && !socket.destroyed) {\n        socket.emit('free');\n      } else {\n        finished(socket.destroy(err || req[kError])\x2C (er) => {\n          _destroy(req\x2C er || err);\n        });\n        return;\n      }\n    }\n\n    _destroy(req\x2C err || req[kError]);\n  } else {\n    tickOnSocket(req\x2C socket);\n    req._flush();\n  }\n}\n\nClientRequest.prototype._deferToConnect = _deferToConnect;\nfunction _deferToConnect(method\x2C arguments_) {\n  // This function is for calls that need to happen once the socket is\n  // assigned to this request and writable. It's an important promisy\n  // thing for all the socket calls that happen either now\n  // (when a socket is assigned) or in the future (when a socket gets\n  // assigned out of the pool and is eventually writable).\n\n  const callSocketMethod = () => {\n    if (method)\n      ReflectApply(this.socket[method]\x2C this.socket\x2C arguments_);\n  };\n\n  const onSocket = () => {\n    if (this.socket.writable) {\n      callSocketMethod();\n    } else {\n      this.socket.once('connect'\x2C callSocketMethod);\n    }\n  };\n\n  if (!this.socket) {\n    this.once('socket'\x2C onSocket);\n  } else {\n    onSocket();\n  }\n}\n\nClientRequest.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\n  if (this._ended) {\n    return this;\n  }\n\n  listenSocketTimeout(this);\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n  if (callback) this.once('timeout'\x2C callback);\n\n  if (this.socket) {\n    setSocketTimeout(this.socket\x2C msecs);\n  } else {\n    this.once('socket'\x2C (sock) => setSocketTimeout(sock\x2C msecs));\n  }\n\n  return this;\n};\n\nfunction setSocketTimeout(sock\x2C msecs) {\n  if (sock.connecting) {\n    sock.once('connect'\x2C function() {\n      sock.setTimeout(msecs);\n    });\n  } else {\n    sock.setTimeout(msecs);\n  }\n}\n\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\n  this._deferToConnect('setNoDelay'\x2C [noDelay]);\n};\n\nClientRequest.prototype.setSocketKeepAlive =\n    function setSocketKeepAlive(enable\x2C initialDelay) {\n      this._deferToConnect('setKeepAlive'\x2C [enable\x2C initialDelay]);\n    };\n\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\n  this.setTimeout(0\x2C cb);\n};\n\nmodule.exports = {\n  ClientRequest\n};\n
code-source-info,0x3ba9b437230e,163,0,26076,C0O0C4O26076,,
code-creation,Function,10,246355,0x3ba9b43732ce,940, node:_http_client:1:1,0x3ba9b4372288,~
code-source-info,0x3ba9b43732ce
tick,0x7ff81f174126,246502,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31e5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ef90,246535,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9f09c31e5,0x10dd44be3,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9f09c2406,0x10dd47f1f,0x3ba9f09c179c,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,246676,0x3ba9b4375d86,88,Agent node:https:176:15,0x3ba9f09c2c20,~
code-source-info,0x3ba9b4375d86,131,4905,5281,C0O4919C2O4930C7O4953C12O4960C17O4979C18O4983C25O5005C34O4983C39O5034C43O5051C47O5060C49O5074C53O5118C58O5126C62O5111C66O5156C72O5193C74O5216C78O5226C82O5245C87O5280,,
code-creation,LazyCompile,10,246850,0x3ba9b4376d3e,18,8605 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92150,0x3ba9ddf34df8,~
code-source-info,0x3ba9b4376d3e,115,92224,92267,C0O92241C8O92251C12O92250C17O92266,,
code-creation,Eval,10,247035,0x3ba9b437710e,5, node:http:1:1,0x3ba9b4376f68,~
script-source,164,node:http,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst httpAgent = require('_http_agent');\nconst { ClientRequest } = require('_http_client');\nconst { methods } = require('_http_common');\nconst { IncomingMessage } = require('_http_incoming');\nconst {\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  OutgoingMessage\n} = require('_http_outgoing');\nconst {\n  _connectionListener\x2C\n  STATUS_CODES\x2C\n  Server\x2C\n  ServerResponse\n} = require('_http_server');\nlet maxHeaderSize;\n\n/**\n * Returns a new instance of `http.Server`.\n * @param {{\n *   IncomingMessage?: IncomingMessage;\n *   ServerResponse?: ServerResponse;\n *   insecureHTTPParser?: boolean;\n *   maxHeaderSize?: number;\n *   }} [opts]\n * @param {Function} [requestListener]\n * @returns {Server}\n */\nfunction createServer(opts\x2C requestListener) {\n  return new Server(opts\x2C requestListener);\n}\n\n/**\n * @typedef {Object} HTTPRequestOptions\n * @property {httpAgent.Agent | boolean} [agent]\n * @property {string} [auth]\n * @property {Function} [createConnection]\n * @property {number} [defaultPort]\n * @property {number} [family]\n * @property {Object} [headers]\n * @property {number} [hints]\n * @property {string} [host]\n * @property {string} [hostname]\n * @property {boolean} [insecureHTTPParser]\n * @property {string} [localAddress]\n * @property {number} [localPort]\n * @property {Function} [lookup]\n * @property {number} [maxHeaderSize]\n * @property {string} [method]\n * @property {string} [path]\n * @property {number} [port]\n * @property {string} [protocol]\n * @property {boolean} [setHost]\n * @property {string} [socketPath]\n * @property {number} [timeout]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * Makes an HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction request(url\x2C options\x2C cb) {\n  return new ClientRequest(url\x2C options\x2C cb);\n}\n\n/**\n * Makes a `GET` HTTP request.\n * @param {string | URL} url\n * @param {HTTPRequestOptions} [options]\n * @param {Function} [cb]\n * @returns {ClientRequest}\n */\nfunction get(url\x2C options\x2C cb) {\n  const req = request(url\x2C options\x2C cb);\n  req.end();\n  return req;\n}\n\nmodule.exports = {\n  _connectionListener\x2C\n  METHODS: ArrayPrototypeSort(ArrayPrototypeSlice(methods))\x2C\n  STATUS_CODES\x2C\n  Agent: httpAgent.Agent\x2C\n  ClientRequest\x2C\n  IncomingMessage\x2C\n  OutgoingMessage\x2C\n  Server\x2C\n  ServerResponse\x2C\n  createServer\x2C\n  validateHeaderName\x2C\n  validateHeaderValue\x2C\n  get\x2C\n  request\n};\n\nObjectDefineProperty(module.exports\x2C 'maxHeaderSize'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    if (maxHeaderSize === undefined) {\n      const { getOptionValue } = require('internal/options');\n      maxHeaderSize = getOptionValue('--max-http-header-size');\n    }\n\n    return maxHeaderSize;\n  }\n});\n\nObjectDefineProperty(module.exports\x2C 'globalAgent'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return httpAgent.globalAgent;\n  }\x2C\n  set(value) {\n    httpAgent.globalAgent = value;\n  }\n});\n
code-source-info,0x3ba9b437710e,164,0,4182,C0O0C4O4182,,
code-creation,Function,10,247487,0x3ba9b437762e,349, node:http:1:1,0x3ba9b4377088,~
code-source-info,0x3ba9b437762e,164,0,4182,C0O0C37O1159C42O1182C47O1204C52O1262C58O1262C62O1262C64O1312C70O1312C75O1294C81O1357C87O1357C92O1345C97O1410C103O1410C108O1390C113O1512C119O1512C124O1447C129O1469C134O1492C139O1617C145O1617C150O1549C155O1572C160O1588C166O1598C171O1646C172O1646C174O3354C181O3375C185O3426C191O3407C201O3459C209O3492C219O3501C225O3518C231O3537C237O3556C243O3566C249O3584C255O3600C261O3622C267O3645C273O3652C279O3369C283O3692C298O3764C306O3664C311O4007C326O4077C334O4126C342O3979C348O4181,,
tick,0x1083563b4,247552,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x3ba9ddf39dda,0x3ba9ddf21393,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9b4376d46,0x10dd47f1f,0x3ba9f09c17a7,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,247718,0x3ba9b4378126,43,get node:http:132:6,0x3ba9b4377230,~
code-source-info,0x3ba9b4378126,164,3767,3973,C0O3776C6O3844C12O3844C17O3825C22O3879C25O3895C32O3893C38O3948C42O3969,,
code-creation,LazyCompile,10,247774,0x3ba9b437870e,10,get node:http:145:6,0x3ba9b4377280,~
code-source-info,0x3ba9b437870e,164,4080,4122,C0O4089C5O4106C9O4118,,
code-creation,Function,11,247839,0x10dd47fc0,320, node:internal/bootstrap/loaders:273:15,0x3ba9e52233f8,^
code-source-info,0x10dd47fc0,9,8595,8700,,,
code-creation,Function,11,247884,0x10dd48160,920,n /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:76141,0x3ba9e5239168,^
code-source-info,0x10dd48160,115,76215,76365,,,
code-creation,Function,11,247920,0x10dd48560,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x3ba96094f658,^
code-source-info,0x10dd48560,9,7353,7449,,,
code-creation,Function,11,247948,0x10dd486c0,180,makeMethodProxy node:_tls_wrap:551:25,0x3ba9f09e32d0,^
code-source-info,0x10dd486c0,138,15534,15685,,,
code-creation,Function,11,247973,0x10dd487e0,180,makeSocketMethodProxy node:_tls_wrap:1014:31,0x3ba9f09e3438,^
code-source-info,0x10dd487e0,138,28729,28897,,,
code-creation,Function,11,247997,0x10dd48900,148, node:_tls_wrap:1033:4,0x3ba9f09e4288,^
code-source-info,0x10dd48900,138,29115,29193,,,
code-creation,Function,11,248025,0x10dd48a00,500,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x3ba9c5ada2c0,^
code-source-info,0x10dd48a00,98,1151,1431,,,
code-creation,LazyCompile,10,248108,0x3ba9b4378d26,18,4016 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92498,0x3ba9ddf351b0,~
code-source-info,0x3ba9b4378d26,115,92572,92614,C0O92589C8O92599C12O92598C17O92613,,
code-creation,LazyCompile,10,248224,0x3ba9b437909e,17,get node:tls:108:8,0x3ba9f09c52d8,~
code-source-info,0x3ba9b437909e,132,3744,3895,C0O3815C6O3838C9O3838C12O3867C16O3891,,
code-creation,LazyCompile,10,248270,0x3ba9b4379b96,29,cacheRootCertificates node:tls:101:31,0x3ba9f09c50a8,~
code-source-info,0x3ba9b4379b96,132,3576,3640,C0O3583C7O3615C10O3615C14O3602C21O3600C28O3639,,
code-creation,LazyCompile,10,248548,0x3ba9b4379cbe,18,6417 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92001,0x3ba9ddf34c60,~
code-source-info,0x3ba9b4379cbe,115,92075,92120,C0O92092C8O92102C12O92101C17O92119,,
code-creation,LazyCompile,10,248679,0x3ba9b437a2d6,18,get node:crypto:287:8,0x3ba9f09ea8f8,~
code-source-info,0x3ba9b437a2d6,139,6772,6834,C0O6777C8O6784C13O6824C17O6832,,
tick,0x7ff81f269ae6,248757,0,0x0,3,0x108a8eb80,0x108e8e1df,0x10dd46f67,0x10dd463a1,0x10dd4804b,0x1083acaa0,0x3ba9e522358a,0x3ba9ddf39e1d,0x10dd48bc3,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9b4379cc6,0x10dd47f1f,0x3ba9f09c17c8,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,248800,0x3ba9b437adbe,38,lazyRequire node:internal/crypto/util:67:21,0x3ba9f09d9620,~
code-source-info,0x3ba9b437adbe,135,1210,1345,C0O1231C7O1247C11O1257C13O1284C21O1315C26O1313C35O1332C37O1343,,
code-creation,Eval,10,249318,0x3ba9b437c3e6,5, node:internal/crypto/webcrypto:1:1,0x3ba9b437bff0,~
script-source,165,node:internal/crypto/webcrypto,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  JSONParse\x2C\n  JSONStringify\x2C\n  ObjectDefineProperties\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  StringPrototypeRepeat\x2C\n} = primordials;\n\nconst {\n  kWebCryptoKeyFormatRaw\x2C\n  kWebCryptoKeyFormatPKCS8\x2C\n  kWebCryptoKeyFormatSPKI\x2C\n  kWebCryptoCipherEncrypt\x2C\n  kWebCryptoCipherDecrypt\x2C\n} = internalBinding('crypto');\n\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\n} = require('internal/errors');\n\nconst {\n  CryptoKey\x2C\n  InternalCryptoKey\x2C\n  createSecretKey\x2C\n  isCryptoKey\x2C\n  isKeyObject\x2C\n} = require('internal/crypto/keys');\n\nconst {\n  asyncDigest\x2C\n} = require('internal/crypto/hash');\n\nconst {\n  getArrayBufferOrView\x2C\n  hasAnyNotIn\x2C\n  lazyRequire\x2C\n  normalizeAlgorithm\x2C\n  normalizeHashName\x2C\n  validateMaxBufferLength\x2C\n  kExportFormats\x2C\n  kHandle\x2C\n  kKeyObject\x2C\n} = require('internal/crypto/util');\n\nconst {\n  lazyDOMException\x2C\n} = require('internal/util');\n\nconst {\n  getRandomValues\x2C\n  randomUUID: _randomUUID\x2C\n} = require('internal/crypto/random');\n\nconst randomUUID = () => _randomUUID();\n\nasync function generateKey(\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  algorithm = normalizeAlgorithm(algorithm);\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n  switch (algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaKeyGenerate(algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      return lazyRequire('internal/crypto/ec')\n        .ecGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      return lazyRequire('internal/crypto/aes')\n        .aesGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n\n    // Following are Node.js specific extensions. Names must be prefixed\n    // with the `NODE-`\n    case 'NODE-DSA':\n      return lazyRequire('internal/crypto/dsa')\n        .dsaGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-DH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .dhGenerateKey(algorithm\x2C extractable\x2C keyUsages);\n    default:\n      throw lazyDOMException('Unrecognized name.');\n  }\n}\n\nasync function deriveBits(algorithm\x2C baseKey\x2C length) {\n  algorithm = normalizeAlgorithm(algorithm);\n  if (!isCryptoKey(baseKey))\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveBits')) {\n    throw lazyDOMException(\n      'baseKey does not have deriveBits usage'\x2C\n      'InvalidAccessError');\n  }\n  if (baseKey.algorithm.name !== algorithm.name)\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\n  switch (algorithm.name) {\n    case 'ECDH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\n    case 'HKDF':\n      return lazyRequire('internal/crypto/hkdf')\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'PBKDF2':\n      return lazyRequire('internal/crypto/pbkdf2')\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'NODE-SCRYPT':\n      return lazyRequire('internal/crypto/scrypt')\n        .scryptDeriveBits(algorithm\x2C baseKey\x2C length);\n    case 'NODE-DH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length);\n  }\n  throw lazyDOMException('Unrecognized name.');\n}\n\nasync function deriveKey(\n  algorithm\x2C\n  baseKey\x2C\n  derivedKeyAlgorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  algorithm = normalizeAlgorithm(algorithm);\n  derivedKeyAlgorithm = normalizeAlgorithm(derivedKeyAlgorithm);\n  if (!isCryptoKey(baseKey))\n    throw new ERR_INVALID_ARG_TYPE('baseKey'\x2C 'CryptoKey'\x2C baseKey);\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveKey')) {\n    throw lazyDOMException(\n      'baseKey does not have deriveKey usage'\x2C\n      'InvalidAccessError');\n  }\n  if (baseKey.algorithm.name !== algorithm.name)\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\n  validateObject(derivedKeyAlgorithm\x2C 'derivedKeyAlgorithm'\x2C {\n    allowArray: true\x2C allowFunction: true\x2C\n  });\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n\n  const { length } = derivedKeyAlgorithm;\n  let bits;\n  switch (algorithm.name) {\n    case 'ECDH':\n      bits = await lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsECDH(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'HKDF':\n      bits = await lazyRequire('internal/crypto/hkdf')\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'PBKDF2':\n      bits = await lazyRequire('internal/crypto/pbkdf2')\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'NODE-SCRYPT':\n      bits = await lazyRequire('internal/crypto/scrypt')\n        .scryptDeriveBits(algorithm\x2C baseKey\x2C length);\n      break;\n    case 'NODE-DH':\n      bits = await lazyRequire('internal/crypto/diffiehellman')\n        .asyncDeriveBitsDH(algorithm\x2C baseKey\x2C length);\n      break;\n    default:\n      throw lazyDOMException('Unrecognized name.');\n  }\n\n  return importKey('raw'\x2C bits\x2C derivedKeyAlgorithm\x2C extractable\x2C keyUsages);\n}\n\nasync function exportKeySpki(key) {\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/rsa')\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'NODE-DSA':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/dsa')\n          .dsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n    case 'NODE-DH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/diffiehellman')\n          .dhExportKey(key\x2C kWebCryptoKeyFormatSPKI);\n      }\n      break;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyPkcs8(key) {\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/rsa')\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'NODE-DSA':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/dsa')\n          .dsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n    case 'NODE-DH':\n      if (key.type === 'private') {\n        return lazyRequire('internal/crypto/diffiehellman')\n          .dhExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\n      }\n      break;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a pkcs8 ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyRaw(key) {\n  switch (key.algorithm.name) {\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\n      }\n      break;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      if (key.type === 'public') {\n        return lazyRequire('internal/crypto/ec')\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\n      }\n      break;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      // Fall through\n    case 'HMAC':\n      return key[kKeyObject].export().buffer;\n  }\n\n  throw lazyDOMException(\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\n    'InvalidAccessError');\n}\n\nasync function exportKeyJWK(key) {\n  const jwk = key[kKeyObject][kHandle].exportJwk({\n    key_ops: key.usages\x2C\n    ext: key.extractable\x2C\n  }\x2C true);\n  switch (key.algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsa);\n      return jwk;\n    case 'RSA-PSS':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsaPss);\n      return jwk;\n    case 'RSA-OAEP':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkRsaOaep);\n      return jwk;\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      jwk.crv ||= key.algorithm.namedCurve;\n      return jwk;\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      jwk.alg = lazyRequire('internal/crypto/aes')\n        .getAlgorithmName(key.algorithm.name\x2C key.algorithm.length);\n      return jwk;\n    case 'HMAC':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkHmac);\n      return jwk;\n    case 'NODE-DSA':\n      jwk.alg = normalizeHashName(\n        key.algorithm.hash.name\x2C\n        normalizeHashName.kContextJwkDsa);\n      return jwk;\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      return jwk;\n    default:\n      // Fall through\n  }\n\n  throw lazyDOMException('Not yet supported'\x2C 'NotSupportedError');\n}\n\nasync function exportKey(format\x2C key) {\n  validateString(format\x2C 'format');\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n\n  if (!key.extractable)\n    throw lazyDOMException('key is not extractable'\x2C 'InvalidAccessException');\n\n  switch (format) {\n    case 'node.keyObject': return key[kKeyObject];\n    case 'spki': return exportKeySpki(key);\n    case 'pkcs8': return exportKeyPkcs8(key);\n    case 'jwk': return exportKeyJWK(key);\n    case 'raw': return exportKeyRaw(key);\n  }\n  throw lazyDOMException(\n    'Export format is unsupported'\x2C 'NotSupportedError');\n}\n\nasync function importGenericSecretKey(\n  { name\x2C length }\x2C\n  format\x2C\n  keyData\x2C\n  extractable\x2C\n  keyUsages) {\n  const usagesSet = new SafeSet(keyUsages);\n  if (extractable)\n    throw lazyDOMException(`${name} keys are not extractable`\x2C 'SyntaxError');\n\n  if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n    throw lazyDOMException(\n      `Unsupported key usage for a ${name} key`\x2C\n      'SyntaxError');\n  }\n\n  switch (format) {\n    case 'node.keyObject': {\n      if (!isKeyObject(keyData))\n        throw new ERR_INVALID_ARG_TYPE('keyData'\x2C 'KeyObject'\x2C keyData);\n\n      if (keyData.type === 'secret')\n        return new InternalCryptoKey(keyData\x2C { name }\x2C keyUsages\x2C extractable);\n\n      break;\n    }\n    case 'raw':\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\n        throw lazyDOMException(\n          `Unsupported key usage for a ${name} key`\x2C\n          'SyntaxError');\n      }\n\n      const checkLength = keyData.byteLength * 8;\n\n      if (checkLength === 0 || length === 0)\n        throw lazyDOMException('Zero-length key is not supported'\x2C 'DataError');\n\n      // The Web Crypto spec allows for key lengths that are not multiples of\n      // 8. We don't. Our check here is stricter than that defined by the spec\n      // in that we require that algorithm.length match keyData.length * 8 if\n      // algorithm.length is specified.\n      if (length !== undefined && length !== checkLength) {\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\n      }\n\n      const keyObject = createSecretKey(keyData);\n      return new InternalCryptoKey(keyObject\x2C { name }\x2C keyUsages\x2C false);\n  }\n\n  throw lazyDOMException(\n    `Unable to import ${name} key with format ${format}`\x2C\n    'NotSupportedError');\n}\n\nasync function importKey(\n  format\x2C\n  keyData\x2C\n  algorithm\x2C\n  extractable\x2C\n  keyUsages) {\n  validateString(format\x2C 'format');\n  validateOneOf(format\x2C 'format'\x2C kExportFormats);\n  if (format !== 'node.keyObject' && format !== 'jwk')\n    keyData = getArrayBufferOrView(keyData\x2C 'keyData');\n  algorithm = normalizeAlgorithm(algorithm);\n  validateBoolean(extractable\x2C 'extractable');\n  validateArray(keyUsages\x2C 'keyUsages');\n  switch (algorithm.name) {\n    case 'RSASSA-PKCS1-v1_5':\n      // Fall through\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      // Fall through\n    case 'ECDH':\n      return lazyRequire('internal/crypto/ec')\n        .ecImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      // Fall through\n    case 'AES-KW':\n      return lazyRequire('internal/crypto/aes')\n        .aesImportKey(algorithm\x2C format\x2C keyData\x2C extractable\x2C keyUsages);\n    case 'HKDF':\n      // Fall through\n    case 'NODE-SCRYPT':\n      // Fall through\n    case 'PBKDF2':\n      return importGenericSecretKey(\n        algorithm\x2C\n        format\x2C\n        keyData\x2C\n        extractable\x2C\n        keyUsages);\n    case 'NODE-DSA':\n      return lazyRequire('internal/crypto/dsa')\n        .dsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n    case 'NODE-DH':\n      return lazyRequire('internal/crypto/diffiehellman')\n        .dhImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\n  }\n\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\n// subtle.wrapKey() is essentially a subtle.exportKey() followed\n// by a subtle.encrypt().\nasync function wrapKey(format\x2C key\x2C wrappingKey\x2C algorithm) {\n  algorithm = normalizeAlgorithm(algorithm);\n  let keyData = await exportKey(format\x2C key);\n\n  if (format === 'jwk') {\n    if (keyData == null || typeof keyData !== 'object')\n      throw lazyDOMException('Invalid exported JWK key'\x2C 'DataError');\n    const ec = new TextEncoder();\n    const raw = JSONStringify(keyData);\n    keyData = ec.encode(raw + StringPrototypeRepeat(' '\x2C 8 - (raw.length % 8)));\n  }\n\n  return cipherOrWrap(\n    kWebCryptoCipherEncrypt\x2C\n    algorithm\x2C\n    wrappingKey\x2C\n    keyData\x2C\n    'wrapKey');\n}\n\n// subtle.unwrapKey() is essentially a subtle.decrypt() followed\n// by a subtle.importKey().\nasync function unwrapKey(\n  format\x2C\n  wrappedKey\x2C\n  unwrappingKey\x2C\n  unwrapAlgo\x2C\n  unwrappedKeyAlgo\x2C\n  extractable\x2C\n  keyUsages) {\n  wrappedKey = getArrayBufferOrView(wrappedKey\x2C 'wrappedKey');\n\n  let keyData = await cipherOrWrap(\n    kWebCryptoCipherDecrypt\x2C\n    normalizeAlgorithm(unwrapAlgo)\x2C\n    unwrappingKey\x2C\n    wrappedKey\x2C\n    'unwrapKey');\n\n  if (format === 'jwk') {\n    // The fatal: true option is only supported in builds that have ICU.\n    const options = process.versions.icu !== undefined ?\n      { fatal: true } : undefined;\n    const dec = new TextDecoder('utf-8'\x2C options);\n    try {\n      keyData = JSONParse(dec.decode(keyData));\n    } catch {\n      throw lazyDOMException('Invalid imported JWK key'\x2C 'DataError');\n    }\n  }\n\n  return importKey(format\x2C keyData\x2C unwrappedKeyAlgo\x2C extractable\x2C keyUsages);\n}\n\nfunction signVerify(algorithm\x2C key\x2C data\x2C signature) {\n  algorithm = normalizeAlgorithm(algorithm);\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n  data = getArrayBufferOrView(data\x2C 'data');\n  let usage = 'sign';\n  if (signature !== undefined) {\n    signature = getArrayBufferOrView(signature\x2C 'signature');\n    usage = 'verify';\n  }\n\n  if (!ArrayPrototypeIncludes(key.usages\x2C usage) ||\n      algorithm.name !== key.algorithm.name) {\n    throw lazyDOMException(\n      `Unable to use this key to ${usage}`\x2C\n      'InvalidAccessError');\n  }\n\n  switch (algorithm.name) {\n    case 'RSA-PSS':\n      // Fall through\n    case 'RSASSA-PKCS1-v1_5':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'NODE-ED25519':\n      // Fall through\n    case 'NODE-ED448':\n      // Fall through\n    case 'ECDSA':\n      return lazyRequire('internal/crypto/ec')\n        .ecdsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    case 'HMAC':\n      return lazyRequire('internal/crypto/mac')\n        .hmacSignVerify(key\x2C data\x2C algorithm\x2C signature);\n    // The following are Node.js specific extensions. They must begin with\n    // the `NODE-` prefix\n    case 'NODE-DSA':\n      return lazyRequire('internal/crypto/dsa')\n        .dsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\n  }\n  throw lazyDOMException('Unrecognized named.'\x2C 'NotSupportedError');\n}\n\nasync function sign(algorithm\x2C key\x2C data) {\n  return signVerify(algorithm\x2C key\x2C data);\n}\n\nasync function verify(algorithm\x2C key\x2C signature\x2C data) {\n  return signVerify(algorithm\x2C key\x2C data\x2C signature);\n}\n\nasync function cipherOrWrap(mode\x2C algorithm\x2C key\x2C data\x2C op) {\n  algorithm = normalizeAlgorithm(algorithm);\n  // We use a Node.js style error here instead of a DOMException because\n  // the WebCrypto spec is not specific what kind of error is to be thrown\n  // in this case. Both Firefox and Chrome throw simple TypeErrors here.\n  if (!isCryptoKey(key))\n    throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\n  // The key algorithm and cipher algorithm must match\x2C and the\n  // key must have the proper usage.\n  if (key.algorithm.name !== algorithm.name ||\n      !ArrayPrototypeIncludes(key.usages\x2C op)) {\n    throw lazyDOMException(\n      'The requested operation is not valid for the provided key'\x2C\n      'InvalidAccessError');\n  }\n\n  // For the Web Crypto API\x2C the input data can be any ArrayBuffer\x2C\n  // TypedArray\x2C or DataView.\n  data = getArrayBufferOrView(data\x2C 'data');\n\n  // While WebCrypto allows for larger input buffer sizes\x2C we limit\n  // those to sizes that can fit within uint32_t because of limitations\n  // in the OpenSSL API.\n  validateMaxBufferLength(data\x2C 'data');\n\n  switch (algorithm.name) {\n    case 'RSA-OAEP':\n      return lazyRequire('internal/crypto/rsa')\n        .rsaCipher(mode\x2C key\x2C data\x2C algorithm);\n    case 'AES-CTR':\n      // Fall through\n    case 'AES-CBC':\n      // Fall through\n    case 'AES-GCM':\n      return lazyRequire('internal/crypto/aes')\n        .aesCipher(mode\x2C key\x2C data\x2C algorithm);\n    case 'AES-KW':\n      if (op === 'wrapKey' || op === 'unwrapKey') {\n        return lazyRequire('internal/crypto/aes')\n          .aesCipher(mode\x2C key\x2C data\x2C algorithm);\n      }\n  }\n  throw lazyDOMException('Unrecognized name.'\x2C 'NotSupportedError');\n}\n\nasync function encrypt(algorithm\x2C key\x2C data) {\n  return cipherOrWrap(kWebCryptoCipherEncrypt\x2C algorithm\x2C key\x2C data\x2C 'encrypt');\n}\n\nasync function decrypt(algorithm\x2C key\x2C data) {\n  return cipherOrWrap(kWebCryptoCipherDecrypt\x2C algorithm\x2C key\x2C data\x2C 'decrypt');\n}\n\n// The SubtleCrypto and Crypto classes are defined as part of the\n// Web Crypto API standard: https://www.w3.org/TR/WebCryptoAPI/\n\nclass SubtleCrypto {}\nconst subtle = new SubtleCrypto();\n\nclass Crypto {}\nconst crypto = new Crypto();\n\nObjectDefineProperties(\n  Crypto.prototype\x2C {\n    [SymbolToStringTag]: {\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n      value: 'Crypto'\x2C\n    }\x2C\n    subtle: {\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: subtle\x2C\n    }\x2C\n    getRandomValues: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: getRandomValues\x2C\n    }\x2C\n    randomUUID: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: randomUUID\x2C\n    }\x2C\n    CryptoKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: CryptoKey\x2C\n    }\n  });\n\nObjectDefineProperties(\n  SubtleCrypto.prototype\x2C {\n    [SymbolToStringTag]: {\n      enumerable: false\x2C\n      configurable: true\x2C\n      writable: false\x2C\n      value: 'SubtleCrypto'\x2C\n    }\x2C\n    encrypt: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: encrypt\x2C\n    }\x2C\n    decrypt: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: decrypt\x2C\n    }\x2C\n    sign: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: sign\x2C\n    }\x2C\n    verify: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: verify\x2C\n    }\x2C\n    digest: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: asyncDigest\x2C\n    }\x2C\n    generateKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: generateKey\x2C\n    }\x2C\n    deriveKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: deriveKey\x2C\n    }\x2C\n    deriveBits: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: deriveBits\x2C\n    }\x2C\n    importKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: importKey\x2C\n    }\x2C\n    exportKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: exportKey\x2C\n    }\x2C\n    wrapKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: wrapKey\x2C\n    }\x2C\n    unwrapKey: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      value: unwrapKey\x2C\n    }\n  });\n\nmodule.exports = {\n  Crypto\x2C\n  SubtleCrypto\x2C\n  crypto\x2C\n};\n
code-source-info,0x3ba9b437c3e6,165,0,22595,C0O0C4O22595,,
code-creation,Function,10,251655,0x3ba9b437d736,1061, node:internal/crypto/webcrypto:1:1,0x3ba9b437c360,~
code-source-info,0x3ba9b437d
tick,0x7ff81f29edad,251793,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b437add3,0x3ba9b437a2de,0x108e8e1df,0x10dd46f67,0x10dd463a1,0x10dd4804b,0x1083acaa0,0x3ba9e522358a,0x3ba9ddf39e1d,0x10dd48bc3,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9b4379cc6,0x10dd47f1f,0x3ba9f09c17c8,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f29ed43,251829,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9b437add3,0x3ba9b437a2de,0x108e8e1df,0x10dd46f67,0x10dd463a1,0x10dd4804b,0x1083acaa0,0x3ba9e522358a,0x3ba9ddf39e1d,0x10dd48bc3,0x3ba9ddf108c6,0x3ba9ddf104fa,0x3ba9ddf39ad6,0x3ba9b4379cc6,0x10dd47f1f,0x3ba9f09c17c8,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba9db100000,262144
code-creation,LazyCompile,10,251966,0x3ba9b437f9e6,2,SubtleCrypto node:internal/crypto/webcrypto:686:1,0x3ba9b437ca08,~
code-source-info,0x3ba9b437f9e6,165,20171,20171,C1O20171,,
code-creation,LazyCompile,10,252012,0x3ba9db102b0e,2,Crypto node:internal/crypto/webcrypto:689:1,0x3ba9b437ca58,~
code-source-info,0x3ba9db102b0e,165,20229,20229,C1O20229,,
code-creation,LazyCompile,10,252177,0x3ba9db102c96,18,8835 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92546,0x3ba9ddf35238,~
code-source-info,0x3ba9db102c96,115,92620,92662,C0O92637C8O92647C12O92646C17O92661,,
code-creation,Function,11,252296,0x10dd48c60,928,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x3ba96094f6d0,^
code-source-info,0x10dd48c60,9,7543,8215,,,
code-creation,Function,11,252344,0x10dd49060,1112,getESMFacade node:internal/bootstrap/loaders:264:15,0x3ba96094f748,^
code-source-info,0x10dd49060,9,8231,8860,,,
code-creation,Function,11,252372,0x10dd49520,104,require node:internal/modules/cjs/helpers:101:31,0x3ba9ddf378f8,^
code-source-info,0x10dd49520,98,3108,3154,,,
code-creation,Function,11,252418,0x10dd49600,1132,Module.require node:internal/modules/cjs/loader:997:36,0x3ba9c5ae07d8,^
code-source-info,0x10dd49600,99,31204,31495,,,
tick,0x7ff81f2b6284,252578,0,0x0,2,0x108a8eb80,0x10dd47f1f,0x3ba9f09c17ee,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,252709,0x3ba9db1041ee,286,7567 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:41754,0x3ba9ddf33cd8,~
code-source-info,0x3ba9db1041ee,115,41828,47400,C0O41828C59O41859C64O41859C68O41859C70O41869C75O41869C79O41869C81O41879C86O41879C90O41879C92O41910C97O41910C102O41900C108O41907C114O41920C118O41927C128O41927C133O41920C135O41949C142O41949C146O41949C148O41980C155O41980C159O41980C161O42005C168O42005C172O42005C174O42026C181O42026C185O42026C187O42046C194O42046C198O42046C200O42066C201O42066C203O42435C280O42444C285O47399,,
code-creation,LazyCompile,10,252797,0x3ba9db104636,18,8761 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92702,0x3ba9ddf353d0,~
code-source-info,0x3ba9db104636,115,92776,92819,C0O92793C8O92803C12O92802C17O92818,,
code-creation,Eval,10,253642,0x3ba9db105cc6,5, node:zlib:1:1,0x3ba9db1055e0,~
script-source,166,node:zlib,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBuffer\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  Error\x2C\n  FunctionPrototypeBind\x2C\n  MathMaxApply\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_BROTLI_INVALID_PARAM\x2C\n    ERR_BUFFER_TOO_LARGE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_ZLIB_INITIALIZATION_FAILED\x2C\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { Transform\x2C finished } = require('stream');\nconst {\n  deprecate\n} = require('internal/util');\nconst {\n  isArrayBufferView\x2C\n  isAnyArrayBuffer\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst binding = internalBinding('zlib');\nconst assert = require('internal/assert');\nconst {\n  Buffer\x2C\n  kMaxLength\n} = require('buffer');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n} = require('internal/validators');\n\nconst kFlushFlag = Symbol('kFlushFlag');\nconst kError = Symbol('kError');\n\nconst constants = internalBinding('constants').zlib;\nconst {\n  // Zlib flush levels\n  Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH\x2C\n  // Zlib option values\n  Z_MIN_CHUNK\x2C Z_MIN_WINDOWBITS\x2C Z_MAX_WINDOWBITS\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C\n  Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_CHUNK\x2C Z_DEFAULT_COMPRESSION\x2C\n  Z_DEFAULT_STRATEGY\x2C Z_DEFAULT_WINDOWBITS\x2C Z_DEFAULT_MEMLEVEL\x2C Z_FIXED\x2C\n  // Node's compression stream modes (node_zlib_mode)\n  DEFLATE\x2C DEFLATERAW\x2C INFLATE\x2C INFLATERAW\x2C GZIP\x2C GUNZIP\x2C UNZIP\x2C\n  BROTLI_DECODE\x2C BROTLI_ENCODE\x2C\n  // Brotli operations (~flush levels)\n  BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_FLUSH\x2C\n  BROTLI_OPERATION_FINISH\x2C BROTLI_OPERATION_EMIT_METADATA\x2C\n} = constants;\n\n// Translation table for return codes.\nconst codes = {\n  Z_OK: constants.Z_OK\x2C\n  Z_STREAM_END: constants.Z_STREAM_END\x2C\n  Z_NEED_DICT: constants.Z_NEED_DICT\x2C\n  Z_ERRNO: constants.Z_ERRNO\x2C\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR\x2C\n  Z_DATA_ERROR: constants.Z_DATA_ERROR\x2C\n  Z_MEM_ERROR: constants.Z_MEM_ERROR\x2C\n  Z_BUF_ERROR: constants.Z_BUF_ERROR\x2C\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\n};\n\nfor (const ckey of ObjectKeys(codes)) {\n  codes[codes[ckey]] = ckey;\n}\n\nfunction zlibBuffer(engine\x2C buffer\x2C callback) {\n  validateFunction(callback\x2C 'callback');\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\n  // Buffer without copying.\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\n    buffer = Buffer.from(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\n  } else if (isAnyArrayBuffer(buffer)) {\n    buffer = Buffer.from(buffer);\n  }\n  engine.buffers = null;\n  engine.nread = 0;\n  engine.cb = callback;\n  engine.on('data'\x2C zlibBufferOnData);\n  engine.on('error'\x2C zlibBufferOnError);\n  engine.on('end'\x2C zlibBufferOnEnd);\n  engine.end(buffer);\n}\n\nfunction zlibBufferOnData(chunk) {\n  if (!this.buffers)\n    this.buffers = [chunk];\n  else\n    ArrayPrototypePush(this.buffers\x2C chunk);\n  this.nread += chunk.length;\n  if (this.nread > this._maxOutputLength) {\n    this.close();\n    this.removeAllListeners('end');\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\n  }\n}\n\nfunction zlibBufferOnError(err) {\n  this.removeAllListeners('end');\n  this.cb(err);\n}\n\nfunction zlibBufferOnEnd() {\n  let buf;\n  if (this.nread === 0) {\n    buf = Buffer.alloc(0);\n  } else {\n    const bufs = this.buffers;\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs\x2C this.nread));\n  }\n  this.close();\n  if (this._info)\n    this.cb(null\x2C { buffer: buf\x2C engine: this });\n  else\n    this.cb(null\x2C buf);\n}\n\nfunction zlibBufferSync(engine\x2C buffer) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    if (isAnyArrayBuffer(buffer)) {\n      buffer = Buffer.from(buffer);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'buffer'\x2C\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n        buffer\n      );\n    }\n  }\n  buffer = processChunkSync(engine\x2C buffer\x2C engine._finishFlushFlag);\n  if (engine._info)\n    return { buffer\x2C engine };\n  return buffer;\n}\n\nfunction zlibOnError(message\x2C errno\x2C code) {\n  const self = this[owner_symbol];\n  // There is no way to cleanly recover.\n  // Continuing only obscures problems.\n\n  // eslint-disable-next-line no-restricted-syntax\n  const error = new Error(message);\n  error.errno = errno;\n  error.code = code;\n  self.destroy(error);\n  self[kError] = error;\n}\n\n// 1. Returns false for undefined and NaN\n// 2. Returns true for finite numbers\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\nconst checkFiniteNumber = hideStackFrames((number\x2C name) => {\n  // Common case\n  if (number === undefined) {\n    return false;\n  }\n\n  if (NumberIsFinite(number)) {\n    return true; // Is a valid number\n  }\n\n  if (NumberIsNaN(number)) {\n    return false;\n  }\n\n  validateNumber(number\x2C name);\n\n  // Infinite numbers\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\n});\n\n// 1. Returns def for number when it's undefined or NaN\n// 2. Returns number for finite numbers >= lower and <= upper\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\nconst checkRangesOrGetDefault = hideStackFrames(\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\n    if (!checkFiniteNumber(number\x2C name)) {\n      return def;\n    }\n    if (number < lower || number > upper) {\n      throw new ERR_OUT_OF_RANGE(name\x2C\n                                 `>= ${lower} and <= ${upper}`\x2C number);\n    }\n    return number;\n  }\n);\n\nconst FLUSH_BOUND = [\n  [ Z_NO_FLUSH\x2C Z_BLOCK ]\x2C\n  [ BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_EMIT_METADATA ]\x2C\n];\nconst FLUSH_BOUND_IDX_NORMAL = 0;\nconst FLUSH_BOUND_IDX_BROTLI = 1;\n\n// The base class for all Zlib-style streams.\nfunction ZlibBase(opts\x2C mode\x2C handle\x2C { flush\x2C finishFlush\x2C fullFlush }) {\n  let chunkSize = Z_DEFAULT_CHUNK;\n  let maxOutputLength = kMaxLength;\n  // The ZlibBase class is not exported to user land\x2C the mode should only be\n  // passed in by us.\n  assert(typeof mode === 'number');\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\n\n  let flushBoundIdx;\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\n  } else {\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\n  }\n\n  if (opts) {\n    chunkSize = opts.chunkSize;\n    if (!checkFiniteNumber(chunkSize\x2C 'options.chunkSize')) {\n      chunkSize = Z_DEFAULT_CHUNK;\n    } else if (chunkSize < Z_MIN_CHUNK) {\n      throw new ERR_OUT_OF_RANGE('options.chunkSize'\x2C\n                                 `>= ${Z_MIN_CHUNK}`\x2C chunkSize);\n    }\n\n    flush = checkRangesOrGetDefault(\n      opts.flush\x2C 'options.flush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C flush);\n\n    finishFlush = checkRangesOrGetDefault(\n      opts.finishFlush\x2C 'options.finishFlush'\x2C\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C\n      finishFlush);\n\n    maxOutputLength = checkRangesOrGetDefault(\n      opts.maxOutputLength\x2C 'options.maxOutputLength'\x2C\n      1\x2C kMaxLength\x2C kMaxLength);\n\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\n      opts = { ...opts };\n      opts.encoding = null;\n      opts.objectMode = false;\n      opts.writableObjectMode = false;\n    }\n  }\n\n  ReflectApply(Transform\x2C this\x2C [{ autoDestroy: true\x2C ...opts }]);\n  this[kError] = null;\n  this.bytesWritten = 0;\n  this._handle = handle;\n  handle[owner_symbol] = this;\n  // Used by processCallback() and zlibOnError()\n  handle.onerror = zlibOnError;\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\n  this._outOffset = 0;\n\n  this._chunkSize = chunkSize;\n  this._defaultFlushFlag = flush;\n  this._finishFlushFlag = finishFlush;\n  this._defaultFullFlushFlag = fullFlush;\n  this._info = opts && opts.info;\n  this._maxOutputLength = maxOutputLength;\n}\nObjectSetPrototypeOf(ZlibBase.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(ZlibBase\x2C Transform);\n\nObjectDefineProperty(ZlibBase.prototype\x2C '_closed'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return !this._handle;\n  }\n});\n\n// `bytesRead` made sense as a name when looking from the zlib engine's\n// perspective\x2C but it is inconsistent with all other streams exposed by Node.js\n// that have this concept\x2C where it stands for the number of bytes read\n// *from* the stream (that is\x2C net.Socket/tls.Socket & file system streams).\nObjectDefineProperty(ZlibBase.prototype\x2C 'bytesRead'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: deprecate(function() {\n    return this.bytesWritten;\n  }\x2C 'zlib.bytesRead is deprecated and will change its meaning in the ' +\n     'future. Use zlib.bytesWritten instead.'\x2C 'DEP0108')\x2C\n  set: deprecate(function(value) {\n    this.bytesWritten = value;\n  }\x2C 'Setting zlib.bytesRead is deprecated. ' +\n     'This feature will be removed in the future.'\x2C 'DEP0108')\n});\n\nZlibBase.prototype.reset = function() {\n  if (!this._handle)\n    assert(false\x2C 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class\x2C\n// internally\x2C when the last chunk has been written.\nZlibBase.prototype._flush = function(callback) {\n  this._transform(Buffer.alloc(0)\x2C ''\x2C callback);\n};\n\n// Force Transform compat behavior.\nZlibBase.prototype._final = function(callback) {\n  callback();\n};\n\n// If a flush is scheduled while another flush is still pending\x2C a way to figure\n// out which one is the "stronger" flush is needed.\n// This is currently only used to figure out which flush flag to use for the\n// last chunk.\n// Roughly\x2C the following holds:\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\nconst flushiness = [];\nlet i = 0;\nconst kFlushFlagList = [Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C\n                        Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH];\nfor (const flushFlag of kFlushFlagList) {\n  flushiness[flushFlag] = i++;\n}\n\nfunction maxFlush(a\x2C b) {\n  return flushiness[a] > flushiness[b] ? a : b;\n}\n\n// Set up a list of 'special' buffers that can be written using .write()\n// from the .flush() code as a way of introducing flushing operations into the\n// write sequence.\nconst kFlushBuffers = [];\n{\n  const dummyArrayBuffer = new ArrayBuffer();\n  for (const flushFlag of kFlushFlagList) {\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\n  }\n}\n\nZlibBase.prototype.flush = function(kind\x2C callback) {\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\n    callback = kind;\n    kind = this._defaultFullFlushFlag;\n  }\n\n  if (this.writableFinished) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (this.writableEnded) {\n    if (callback)\n      this.once('end'\x2C callback);\n  } else {\n    this.write(kFlushBuffers[kind]\x2C ''\x2C callback);\n  }\n};\n\nZlibBase.prototype.close = function(callback) {\n  if (callback) finished(this\x2C callback);\n  this.destroy();\n};\n\nZlibBase.prototype._destroy = function(err\x2C callback) {\n  _close(this);\n  callback(err);\n};\n\nZlibBase.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  let flushFlag = this._defaultFlushFlag;\n  // We use a 'fake' zero-length chunk to carry information about flushes from\n  // the public API to the actual stream implementation.\n  if (typeof chunk[kFlushFlag] === 'number') {\n    flushFlag = chunk[kFlushFlag];\n  }\n\n  // For the last chunk\x2C also apply `_finishFlushFlag`.\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\n    flushFlag = maxFlush(flushFlag\x2C this._finishFlushFlag);\n  }\n  processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n};\n\nZlibBase.prototype._processChunk = function(chunk\x2C flushFlag\x2C cb) {\n  // _processChunk() is left for backwards compatibility\n  if (typeof cb === 'function')\n    processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\n  else\n    return processChunkSync(this\x2C chunk\x2C flushFlag);\n};\n\nfunction processChunkSync(self\x2C chunk\x2C flushFlag) {\n  let availInBefore = chunk.byteLength;\n  let availOutBefore = self._chunkSize - self._outOffset;\n  let inOff = 0;\n  let availOutAfter;\n  let availInAfter;\n\n  let buffers = null;\n  let nread = 0;\n  let inputRead = 0;\n  const state = self._writeState;\n  const handle = self._handle;\n  let buffer = self._outBuffer;\n  let offset = self._outOffset;\n  const chunkSize = self._chunkSize;\n\n  let error;\n  self.on('error'\x2C function onError(er) {\n    error = er;\n  });\n\n  while (true) {\n    handle.writeSync(flushFlag\x2C\n                     chunk\x2C // in\n                     inOff\x2C // in_off\n                     availInBefore\x2C // in_len\n                     buffer\x2C // out\n                     offset\x2C // out_off\n                     availOutBefore); // out_len\n    if (error)\n      throw error;\n    else if (self[kError])\n      throw self[kError];\n\n    availOutAfter = state[0];\n    availInAfter = state[1];\n\n    const inDelta = (availInBefore - availInAfter);\n    inputRead += inDelta;\n\n    const have = availOutBefore - availOutAfter;\n    if (have > 0) {\n      const out = buffer.slice(offset\x2C offset + have);\n      offset += have;\n      if (!buffers)\n        buffers = [out];\n      else\n        ArrayPrototypePush(buffers\x2C out);\n      nread += out.byteLength;\n\n      if (nread > self._maxOutputLength) {\n        _close(self);\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\n      }\n\n    } else {\n      assert(have === 0\x2C 'have should not go down');\n    }\n\n    // Exhausted the output buffer\x2C or used all the input create a new one.\n    if (availOutAfter === 0 || offset >= chunkSize) {\n      availOutBefore = chunkSize;\n      offset = 0;\n      buffer = Buffer.allocUnsafe(chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done. Need to reprocess.\n      // Also\x2C update the availInBefore to the availInAfter value\x2C\n      // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n      // it'll have the correct byte counts.\n      inOff += inDelta;\n      availInBefore = availInAfter;\n    } else {\n      break;\n    }\n  }\n\n  self.bytesWritten = inputRead;\n  _close(self);\n\n  if (nread === 0)\n    return Buffer.alloc(0);\n\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C nread));\n}\n\nfunction processChunk(self\x2C chunk\x2C flushFlag\x2C cb) {\n  const handle = self._handle;\n  if (!handle) return process.nextTick(cb);\n\n  handle.buffer = chunk;\n  handle.cb = cb;\n  handle.availOutBefore = self._chunkSize - self._outOffset;\n  handle.availInBefore = chunk.byteLength;\n  handle.inOff = 0;\n  handle.flushFlag = flushFlag;\n\n  handle.write(flushFlag\x2C\n               chunk\x2C // in\n               0\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               handle.availOutBefore); // out_len\n}\n\nfunction processCallback() {\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\n  // important to null out the values once they are no longer needed since\n  // `_handle` can stay in memory long after the buffer is needed.\n  const handle = this;\n  const self = this[owner_symbol];\n  const state = self._writeState;\n\n  if (self.destroyed) {\n    this.buffer = null;\n    this.cb();\n    return;\n  }\n\n  const availOutAfter = state[0];\n  const availInAfter = state[1];\n\n  const inDelta = handle.availInBefore - availInAfter;\n  self.bytesWritten += inDelta;\n\n  const have = handle.availOutBefore - availOutAfter;\n  if (have > 0) {\n    const out = self._outBuffer.slice(self._outOffset\x2C self._outOffset + have);\n    self._outOffset += have;\n    self.push(out);\n  } else {\n    assert(have === 0\x2C 'have should not go down');\n  }\n\n  if (self.destroyed) {\n    this.cb();\n    return;\n  }\n\n  // Exhausted the output buffer\x2C or used all the input create a new one.\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\n    handle.availOutBefore = self._chunkSize;\n    self._outOffset = 0;\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\n  }\n\n  if (availOutAfter === 0) {\n    // Not actually done. Need to reprocess.\n    // Also\x2C update the availInBefore to the availInAfter value\x2C\n    // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\n    // it'll have the correct byte counts.\n    handle.inOff += inDelta;\n    handle.availInBefore = availInAfter;\n\n    this.write(handle.flushFlag\x2C\n               this.buffer\x2C // in\n               handle.inOff\x2C // in_off\n               handle.availInBefore\x2C // in_len\n               self._outBuffer\x2C // out\n               self._outOffset\x2C // out_off\n               self._chunkSize); // out_len\n    return;\n  }\n\n  if (availInAfter > 0) {\n    // If we have more input that should be written\x2C but we also have output\n    // space available\x2C that means that the compression library was not\n    // interested in receiving more data\x2C and in particular that the input\n    // stream has ended early.\n    // This applies to streams where we don't check data past the end of\n    // what was consumed; that is\x2C everything except Gunzip/Unzip.\n    self.push(null);\n  }\n\n  // Finished with the chunk.\n  this.buffer = null;\n  this.cb();\n}\n\nfunction _close(engine) {\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle)\n    return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nconst zlibDefaultOpts = {\n  flush: Z_NO_FLUSH\x2C\n  finishFlush: Z_FINISH\x2C\n  fullFlush: Z_FULL_FLUSH\n};\n// Base class for all streams actually backed by zlib and using zlib-specific\n// parameters.\nfunction Zlib(opts\x2C mode) {\n  let windowBits = Z_DEFAULT_WINDOWBITS;\n  let level = Z_DEFAULT_COMPRESSION;\n  let memLevel = Z_DEFAULT_MEMLEVEL;\n  let strategy = Z_DEFAULT_STRATEGY;\n  let dictionary;\n\n  if (opts) {\n    // windowBits is special. On the compression side\x2C 0 is an invalid value.\n    // But on the decompression side\x2C a value of 0 for windowBits tells zlib\n    // to use the window size in the zlib header of the compressed stream.\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\n        (mode === INFLATE ||\n         mode === GUNZIP ||\n         mode === UNZIP)) {\n      windowBits = 0;\n    } else {\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\n      windowBits = checkRangesOrGetDefault(\n        opts.windowBits\x2C 'options.windowBits'\x2C\n        min\x2C Z_MAX_WINDOWBITS\x2C Z_DEFAULT_WINDOWBITS);\n    }\n\n    level = checkRangesOrGetDefault(\n      opts.level\x2C 'options.level'\x2C\n      Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C Z_DEFAULT_COMPRESSION);\n\n    memLevel = checkRangesOrGetDefault(\n      opts.memLevel\x2C 'options.memLevel'\x2C\n      Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_MEMLEVEL);\n\n    strategy = checkRangesOrGetDefault(\n      opts.strategy\x2C 'options.strategy'\x2C\n      Z_DEFAULT_STRATEGY\x2C Z_FIXED\x2C Z_DEFAULT_STRATEGY);\n\n    dictionary = opts.dictionary;\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\n      if (isAnyArrayBuffer(dictionary)) {\n        dictionary = Buffer.from(dictionary);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.dictionary'\x2C\n          ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\n          dictionary\n        );\n      }\n    }\n  }\n\n  const handle = new binding.Zlib(mode);\n  // Ideally\x2C we could let ZlibBase() set up _writeState. I haven't been able\n  // to come up with a good solution that doesn't break our internal API\x2C\n  // and with it all supported npm versions at the time of writing.\n  this._writeState = new Uint32Array(2);\n  handle.init(windowBits\x2C\n              level\x2C\n              memLevel\x2C\n              strategy\x2C\n              this._writeState\x2C\n              processCallback\x2C\n              dictionary);\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C zlibDefaultOpts]);\n\n  this._level = level;\n  this._strategy = strategy;\n}\nObjectSetPrototypeOf(Zlib.prototype\x2C ZlibBase.prototype);\nObjectSetPrototypeOf(Zlib\x2C ZlibBase);\n\n// This callback is used by `.params()` to wait until a full flush happened\n// before adjusting the parameters. In particular\x2C the call to the native\n// `params()` function should not happen while a write is currently in progress\n// on the threadpool.\nfunction paramsAfterFlushCallback(level\x2C strategy\x2C callback) {\n  assert(this._handle\x2C 'zlib binding closed');\n  this._handle.params(level\x2C strategy);\n  if (!this.destroyed) {\n    this._level = level;\n    this._strategy = strategy;\n    if (callback) callback();\n  }\n}\n\nZlib.prototype.params = function params(level\x2C strategy\x2C callback) {\n  checkRangesOrGetDefault(level\x2C 'level'\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL);\n  checkRangesOrGetDefault(strategy\x2C 'strategy'\x2C Z_DEFAULT_STRATEGY\x2C Z_FIXED);\n\n  if (this._level !== level || this._strategy !== strategy) {\n    this.flush(Z_SYNC_FLUSH\x2C\n               FunctionPrototypeBind(paramsAfterFlushCallback\x2C this\x2C\n                                     level\x2C strategy\x2C callback));\n  } else {\n    process.nextTick(callback);\n  }\n};\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate))\n    return new Deflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATE]);\n}\nObjectSetPrototypeOf(Deflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Deflate\x2C Zlib);\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate))\n    return new Inflate(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATE]);\n}\nObjectSetPrototypeOf(Inflate.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Inflate\x2C Zlib);\n\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip))\n    return new Gzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GZIP]);\n}\nObjectSetPrototypeOf(Gzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gzip\x2C Zlib);\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip))\n    return new Gunzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GUNZIP]);\n}\nObjectSetPrototypeOf(Gunzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Gunzip\x2C Zlib);\n\nfunction DeflateRaw(opts) {\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\n  if (!(this instanceof DeflateRaw))\n    return new DeflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATERAW]);\n}\nObjectSetPrototypeOf(DeflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(DeflateRaw\x2C Zlib);\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw))\n    return new InflateRaw(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATERAW]);\n}\nObjectSetPrototypeOf(InflateRaw.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(InflateRaw\x2C Zlib);\n\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip))\n    return new Unzip(opts);\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C UNZIP]);\n}\nObjectSetPrototypeOf(Unzip.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Unzip\x2C Zlib);\n\nfunction createConvenienceMethod(ctor\x2C sync) {\n  if (sync) {\n    return function syncBufferWrapper(buffer\x2C opts) {\n      return zlibBufferSync(new ctor(opts)\x2C buffer);\n    };\n  }\n  return function asyncBufferWrapper(buffer\x2C opts\x2C callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    return zlibBuffer(new ctor(opts)\x2C buffer\x2C callback);\n  };\n}\n\nconst kMaxBrotliParam = MathMaxApply(ArrayPrototypeMap(\n  ObjectKeys(constants)\x2C\n  (key) => (StringPrototypeStartsWith(key\x2C 'BROTLI_PARAM_') ?\n    constants[key] :\n    0)\n));\n\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\n\nconst brotliDefaultOpts = {\n  flush: BROTLI_OPERATION_PROCESS\x2C\n  finishFlush: BROTLI_OPERATION_FINISH\x2C\n  fullFlush: BROTLI_OPERATION_FLUSH\n};\nfunction Brotli(opts\x2C mode) {\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\n\n  TypedArrayPrototypeFill(brotliInitParamsArray\x2C -1);\n  if (opts?.params) {\n    ArrayPrototypeForEach(ObjectKeys(opts.params)\x2C (origKey) => {\n      const key = +origKey;\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\n          (brotliInitParamsArray[key] | 0) !== -1) {\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\n      }\n\n      const value = opts.params[origKey];\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]'\x2C\n                                       'number'\x2C opts.params[origKey]);\n      }\n      brotliInitParamsArray[key] = value;\n    });\n  }\n\n  const handle = mode === BROTLI_DECODE ?\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\n\n  this._writeState = new Uint32Array(2);\n  // TODO(addaleax): Sometimes we generate better error codes in C++ land\x2C\n  // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with\n  // the current bindings setup\x2C though.\n  if (!handle.init(brotliInitParamsArray\x2C\n                   this._writeState\x2C\n                   processCallback)) {\n    throw new ERR_ZLIB_INITIALIZATION_FAILED();\n  }\n\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C brotliDefaultOpts]);\n}\nObjectSetPrototypeOf(Brotli.prototype\x2C Zlib.prototype);\nObjectSetPrototypeOf(Brotli\x2C Zlib);\n\nfunction BrotliCompress(opts) {\n  if (!(this instanceof BrotliCompress))\n    return new BrotliCompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_ENCODE]);\n}\nObjectSetPrototypeOf(BrotliCompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliCompress\x2C Brotli);\n\nfunction BrotliDecompress(opts) {\n  if (!(this instanceof BrotliDecompress))\n    return new BrotliDecompress(opts);\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_DECODE]);\n}\nObjectSetPrototypeOf(BrotliDecompress.prototype\x2C Brotli.prototype);\nObjectSetPrototypeOf(BrotliDecompress\x2C Brotli);\n\n\nfunction createProperty(ctor) {\n  return {\n    configurable: true\x2C\n    enumerable: true\x2C\n    value: function(options) {\n      return new ctor(options);\n    }\n  };\n}\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(binding.Zlib.prototype\x2C 'jsref'\x2C {\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\n});\n\nmodule.exports = {\n  Deflate\x2C\n  Inflate\x2C\n  Gzip\x2C\n  Gunzip\x2C\n  DeflateRaw\x2C\n  InflateRaw\x2C\n  Unzip\x2C\n  BrotliCompress\x2C\n  BrotliDecompress\x2C\n\n  // Convenience methods.\n  // compress/decompress a string or buffer in one step.\n  deflate: createConvenienceMethod(Deflate\x2C false)\x2C\n  deflateSync: createConvenienceMethod(Deflate\x2C true)\x2C\n  gzip: createConvenienceMethod(Gzip\x2C false)\x2C\n  gzipSync: createConvenienceMethod(Gzip\x2C true)\x2C\n  deflateRaw: createConvenienceMethod(DeflateRaw\x2C false)\x2C\n  deflateRawSync: createConvenienceMethod(DeflateRaw\x2C true)\x2C\n  unzip: createConvenienceMethod(Unzip\x2C false)\x2C\n  unzipSync: createConvenienceMethod(Unzip\x2C true)\x2C\n  inflate: createConvenienceMethod(Inflate\x2C false)\x2C\n  inflateSync: createConvenienceMethod(Inflate\x2C true)\x2C\n  gunzip: createConvenienceMethod(Gunzip\x2C false)\x2C\n  gunzipSync: createConvenienceMethod(Gunzip\x2C true)\x2C\n  inflateRaw: createConvenienceMethod(InflateRaw\x2C false)\x2C\n  inflateRawSync: createConvenienceMethod(InflateRaw\x2C true)\x2C\n  brotliCompress: createConvenienceMethod(BrotliCompress\x2C false)\x2C\n  brotliCompressSync: createConvenienceMethod(BrotliCompress\x2C true)\x2C\n  brotliDecompress: createConvenienceMethod(BrotliDecompress\x2C false)\x2C\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress\x2C true)\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  createDeflate: createProperty(Deflate)\x2C\n  createInflate: createProperty(Inflate)\x2C\n  createDeflateRaw: createProperty(DeflateRaw)\x2C\n  createInflateRaw: createProperty(InflateRaw)\x2C\n  createGzip: createProperty(Gzip)\x2C\n  createGunzip: createProperty(Gunzip)\x2C\n  createUnzip: createProperty(Unzip)\x2C\n  createBrotliCompress: createProperty(BrotliCompress)\x2C\n  createBrotliDecompress: createProperty(BrotliDecompress)\x2C\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  codes: {\n    enumerable: true\x2C\n    writable: false\x2C\n    value: ObjectFreeze(codes)\n  }\n});\n\n// These should be considered deprecated\n// expose all the zlib constants\nfor (const bkey of ObjectKeys(constants)) {\n  if (StringPrototypeStartsWith(bkey\x2C 'BROTLI')) continue;\n  ObjectDefineProperty(module.exports\x2C bkey\x2C {\n    enumerable: false\x2C value: constants[bkey]\x2C writable: false\n  });\n}\n
code-source-info,0x3ba9db105cc6,166,0,29391,C0O0C4O29391,,
code-creation,Function,10,256494,0x3ba9db107ad6,4132, node:zlib:1:1,0x3ba9db105c40,~
code-source-info,0x3ba9db107ad6,166,0,29391,C0O0C360O1159C365O1174C371O1199C376O1220C382O1242C388O1251C394O1276C399O1292C405O1310C411O1325C416O1351C421O1375C426O1391C432O1405C437O1429C443O1445C449O1474C454O1484C460O1511C466O1728C470O1728C476O1728C482O1565C488O1595C494O1621C500O1647C506O1669C512O1708C517O1788C521O1788C527O1764C533O1775C539O1831C543O1831C549O1817C554O1926C558O1926C564O1867C570O1888C576O1908C582O1974C586O1974C590O1974C592O2014C596O2014C600O2014C602O2077C606O2077C612O2052C618O2062C624O2121C628O2121C634O2152C640O2104C646O2212C650O2212C656O2172C662O2192C668O2264C672O2264C676O2264C678O2301C682O2301C686O2301C688O2338C692O2338C698O2366C702O2338C704O3035C708O2406C713O2418C718O2427C723O2444C729O2458C734O2472C739O2508C745O2521C751O2539C757O2557C763O2570C769O2585C775O2601C781O2617C787O2634C793O2659C799O2679C805O2701C811O2721C817O2786C823O2795C829O2807C835O2816C841O2828C847O2834C853O2842C859O2851C865O2866C871O2922C876O2948C882O2974C888O2999C894O3100C904O3120C916O3152C928O3191C940O3225C952O3262C964O3304C976O3343C988O3381C1000O3423C1011O3462C1015O3462C1049O3454C1080O3454C1083O3485C1085O3496C1092O3504C1099O3443C1170O5988C1176O5988C1180O5988C1182O6625C1188O6625C1192O6625C1194O6960C1214O6966C1224O6978C1249O6993C1259O7019C1271O6960C1273O7087C1274O7087C1276O7121C1278O7121C1280O9224C1284O9254C1294O9275C1300O9224C1305O9287C1313O9287C1318O9331C1322O9361C1338O9429C1346O9331C1351O9774C1355O9804C1371O9879C1383O10004C1392O9879C1401O10072C1413O10177C1425O10072C1443O9774C1453O10247C1457O10256C1467O10272C1475O10500C1479O10509C1489O10526C1497O10639C1501O10648C1511O10665C1519O11085C1523O11085C1525O11097C1528O11123C1542O11124C1556O11136C1570O11145C1584O11186C1598O11200C1612O11214C1623O11249C1659O11236C1702O11236C1705O11269C1711O11280C1725O11291C1736O11225C1815O11571C1819O11571C1821O11604C1823O11604C1835O11649C1871O11636C1914O11636C1917O11671C1925O11705C1935O11705C1945O11696C1953O11733C1959O11746C1973O11770C1984O11625C2063O11790C2067O11799C2077O11815C2085O12222C2089O12231C2099O12247C2107O12334C2111O12343C2121O12362C2129O12427C2133O12436C2143O12457C2151O12996C2155O13005C2165O13029C2173O18662C2184O18673C2194O18700C2204O18723C2214O18662C2216O21150C2220O21176C2234O21196C2240O21150C2250O21208C2258O21208C2268O21767C2272O21772C2286O21789C2294O22438C2298O22467C2312O22483C2322O22438C2332O22495C2340O22495C2350O22669C2354O22698C2368O22714C2378O22669C2388O22726C2396O22726C2406O22888C2410O22914C2424O22930C2434O22888C2444O22942C2452O22942C2462O23109C2466O23137C2480O23153C2490O23109C2500O23165C2508O23165C2518O23408C2522O23440C2536O23456C2546O23408C2556O23468C2564O23468C2574O23657C2578O23689C2592O23705C2602O23657C2612O23717C2620O23717C2630O23886C2634O23913C2648O23929C2658O23886C2668O23941C2676O23941C2686O24392C2694O24426C2710O24405C2722O24392C2730O24392C2732O24574C2738O24606C2748O24574C2758O24574C2760O24639C2771O24650C2781O24691C2791O24729C2801O24639C2803O26093C2807O26121C2821O26137C2831O26093C2841O26149C2849O26149C2859O26351C2863O26387C2877O26405C2887O26351C2897O26417C2905O26417C2915O26635C2919O26673C2933O26691C2943O26635C2953O26703C2961O26703C2971O27069C2975O27098C2985O27103C3008O27127C3020O27167C3032O27069C3042O27214C3053O27235C3063O27246C3073O27257C3083O27265C3093O27275C3103O27289C3113O27303C3123O27312C3133O27330C3148O27443C3173O27499C3198O27547C3223O27597C3248O27648C3273O27710C3298O27762C3323O27814C3348O27863C3373O27919C3398O27969C3423O28023C3448O28076C3473O28138C3498O28199C3523O28269C3548O28336C3573O28410C3593O27229C3601O28493C3624O28521C3644O28563C3664O28608C3684O28656C3704O28698C3724O28736C3744O28775C3764O28822C3784O28880C3800O28927C3811O28987C3829O29011C3838O29067C3864O28463C3874O29189C3882O29189C3928O29181C3971O29181C3974O29216C3982O29220C3997O29263C3999O29303C4009O29312C4024O29359C4041O29275C4051O29170C4131O29390,,
tick,0x7ff81f29ef74,256819,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd48dce,0x10dd48bc3,0x3ba9ddf108c6,0x10dd498a7,0x10dd49575,0x3ba9db10463e,0x10dd47f1f,0x3ba9db10422e,0x10dd47f1f,0x3ba9f09c17ee,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f267329,256852,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd48dce,0x10dd48bc3,0x3ba9ddf108c6,0x10dd498a7,0x10dd49575,0x3ba9db10463e,0x10dd47f1f,0x3ba9db10422e,0x10dd47f1f,0x3ba9f09c17ee,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f1742d3,256873,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd48dce,0x10dd48bc3,0x3ba9ddf108c6,0x10dd498a7,0x10dd49575,0x3ba9db10463e,0x10dd47f1f,0x3ba9db10422e,0x10dd47f1f,0x3ba9f09c17ee,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,257173,0x3ba9db10cffe,135,fromArrayBuffer node:buffer:448:25,0x3ba999224f90,~
code-source-info,0x3ba9db10cffe,18,12917,13590,C0O12982C4O13018C9O13049C11O13062C15O13079C20O13083C26O13114C29O13159C36O13170C40O13187C41O13201C46O13210C56O13216C61O13210C62O13259C66O13291C73O13373C75O13382C79O13395C80O13406C85O13419C87O13430C92O13451C102O13457C107O13451C110O13516C113O13541C129O13548C134O13588,,
code-creation,LazyCompile,10,257360,0x3ba9db10d766,29, node:zlib:805:3,0x3ba9db106bd8,~
code-source-info,0x3ba9db10d766,166,24451,24538,C0O24461C8O24461C17O24515C22O24524C28O24538,,
code-creation,LazyCompile,10,257486,0x3ba9db10f75e,23,createConvenienceMethod node:zlib:788:33,0x3ba9db1063b8,~
code-source-info,0x3ba9db10f75e,166,24009,24366,C0O24009C9O24026C13O24042C17O24151C18O24158C22O24364,,
code-creation,LazyCompile,10,257604,0x3ba9db10f9fe,25,createProperty node:zlib:873:24,0x3ba9db106528,~
tick,0x1089d3770,257626,0,0x0,2,0x108a8eb80,0x3ba9db1088fe,0x10dd44be3,0x10dd48dce,0x10dd48bc3,0x3ba9ddf108c6,0x10dd498a7,0x10dd49575,0x3ba9db10463e,0x10dd47f1f,0x3ba9db10422e,0x10dd47f1f,0x3ba9f09c17ee,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-source-info,0x3ba9db10f9fe,166,26776,26917,C0O26776C9O26787C14O26853C24O26915,,
code-creation,LazyCompile,10,258065,0x3ba9db110496,208,4847 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:36685,0x3ba9ddf33a30,~
code-source-info,0x3ba9db110496,115,36759,37838,C0O36759C36O36804C41O36804C46O36801C62O37489C71O37594C75O37491C80O37489C85O37603C93O37601C95O37617C102O37635C106O37637C116O37704C124O37715C128O37717C138O37626C157O37773C164O37791C172O37798C178O37814C186O37825C194O37834C200O37782C207O37837,,
code-creation,LazyCompile,10,258123,0x3ba9db11064e,24, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:37432,0x3ba9db1101d8,~
code-source-info,0x3ba9db11064e,115,37506,37594,C0O37515C9O37515C15O37560C17O37572C23O37560,,
code-creation,LazyCompile,10,258193,0x3ba9db110a26,71,9864 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:37770,0x3ba9ddf33ab8,~
code-source-info,0x3ba9db110a26,115,37844,38077,C0O37861C5O37982C12O37982C20O38015C27O38015C35O38048C39O38055C46O38055C55O38069C65O37870C70O38076,,
code-creation,LazyCompile,10,258264,0x3ba9db110d8e,5,get node:internal/bootstrap/pre_execution:327:8,0x3ba9c5adcd18,~
code-source-info,0x3ba9db110d8e,92,10330,10362,C0O10341C4O10356,,
code-creation,LazyCompile,10,258327,0x3ba9db110e66,73,alloc node:buffer:359:30,0x3ba999224c48,~
code-source-info,0x3ba9db110e66,18,10441,10672,C0O10468C5O10468C9O10488C14O10519C20O10533C25O10556C30O10556C35O10586C40O10617C54O10593C59O10635C60O10642C67O10649C72O10670,,
code-creation,LazyCompile,10,258485,0x3ba9db111566,78,8528 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:41418,0x3ba9ddf33c50,~
code-source-info,0x3ba9db111566,115,41492,41822,C0O41492C11O41517C18O41517C22O41517C24O41535C31O41535C35O41535C37O41550C52O41708C72O41559C77O41821,,
code-creation,LazyCompile,10,258577,0x3ba9db111776,92,fromObject node:buffer:494:20,0x3ba999225030,~
code-source-info,0x3ba9db111776,18,14007,14294,C0O14025C8O14049C11O14070C16O14049C22O14100C30O14129C35O14136C40O14153C41O14164C44O14171C48O14190C49O14206C56O14211C63O14227C66O14244C71O14227C77O14257C80O14282C85O14264C89O14288C91O14293,,
code-creation,LazyCompile,10,258655,0x3ba9db1118fe,159,fromArrayLike node:buffer:479:23,0x3ba999224fe0,~
code-source-info,0x3ba9db1118fe,18,13614,13986,C0O13632C6O13639C11O13649C16O13656C21O13673C22O13684C30O13701C34O13710C37O13691C42O13732C49O13742C54O13753C56O13751C59O13739C64O13772C67O13772C70O13800C77O13815C82O13826C85O13842C92O13800C98O13855C111O13855C116O13894C121O13912C131O13905C137O13924C140O13924C143O13941C145O13950C146O13957C153O13964C158O13984,,
tick,0x108a274f9,258869,0,0x0,2,0x108a8eb80,0x10dd47f1f,0x3ba9f09c17f9,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,258992,0x3ba9db112906,242,3091 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:47332,0x3ba9ddf33d60,~
code-source-info,0x3ba9db112906,115,47406,53499,C0O47406C41O47447C46O47447C51O47444C56O47457C61O47457C65O47457C67O47524C72O47524C77O47479C83O47494C89O47508C95O47521C101O47568C106O47568C111O47540C117O47556C123O47565C129O47612C134O47612C139O47595C145O47609C151O47771C236O47756C241O53498,,
code-creation,LazyCompile,10,259089,0x3ba9db112ce6,18,2413 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92447,0x3ba9ddf35128,~
code-source-info,0x3ba9db112ce6,115,92521,92566,C0O92538C8O92548C12O92547C17O92565,,
code-creation,LazyCompile,10,259185,0x3ba9db112fae,5,get node:stream:57:6,0x3ba99923e688,~
script-source,43,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst compose = require('internal/streams/compose');\nconst { pipeline } = require('internal/streams/pipeline');\nconst { destroyer } = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\nStream.isDisturbed = require('internal/streams/utils').isDisturbed;\nStream.Readable = require('internal/streams/readable');\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isUint8Array = require('internal/util/types').isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0x3ba9db112fae,43,2340,2369,C0O2349C4O2365,,
code-creation,LazyCompile,10,259572,0x3ba9db1136ce,139,1607 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:58314,0x3ba9ddf33ef8,~
code-source-info,0x3ba9db1136ce,115,58388,59287,C0O58388C16O58398C26O58998C35O59107C39O59000C44O58998C48O58998C50O59112C59O59137C64O59148C68O59134C70O59161C77O59190C81O59204C91O59170C110O59240C117O59269C125O59283C131O59249C138O59286,,
code-creation,LazyCompile,10,259636,0x3ba9db11382e,24, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:58941,0x3ba9db113480,~
code-source-info,0x3ba9db11382e,115,59015,59107,C0O59024C9O59024C15O59073C17O59085C23O59073,,
code-creation,LazyCompile,10,259883,0x3ba9db1142ee,230,2091 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:53431,0x3ba9ddf33de8,~
code-source-info,0x3ba9db1142ee,115,53505,56846,C0O53505C26O53552C31O53552C36O53549C42O53562C47O53562C51O53562C53O53587C58O53587C63O53584C69O53617C74O53617C79O53614C85O53645C90O53645C95O53631C101O53642C107O53655C111O53662C119O53662C124O53655C222O56834C224O56843C229O56845,,
code-creation,LazyCompile,10,260042,0x3ba9db114fee,167,5831 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:38009,0x3ba9ddf33b40,~
code-source-info,0x3ba9db114fee,115,38083,39082,C0O38083C17O38087C39O38168C61O38152C63O38235C85O38219C87O38371C109O38355C111O38421C133O38405C135O38502C140O38503C148O38932C159O39070C161O39079C166O39081,,
tick,0x1089e7972,260196,0,0x0,2,0x108a8eb80,0x10dd47f1f,0x3ba9f09c1851,0x10dd47f1f,0x3ba9e523e6fb,0x10dd47f1f,0x3ba9e5239694,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,260266,0x3ba9db1159c6,49,3071 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:39014,0x3ba9ddf33bc8,~
code-source-info,0x3ba9db1159c6,115,39088,41486,C0O39088C14O39113C18O39113C20O39425C25O39443C33O39712C43O39434C48O41485,,
code-creation,LazyCompile,10,260357,0x3ba9db115c36,71, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:71695,0x3ba9e523fe58,~
code-source-info,0x3ba9db115c36,115,71769,71877,C0O71785C7O71806C14O71809C18O71816C25O71831C28O71833C39O71816C44O71848C48O71855C55O71870C64O71855C70O71876,,
code-creation,LazyCompile,10,260446,0x3ba9db115db6,34, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:71890,0x3ba9e523fea8,~
code-source-info,0x3ba9db115db6,115,71964,72021,C0O71968C4O71975C11O71990C14O71992C19O72002C27O71975C33O72020,,
code-creation,LazyCompile,10,260540,0x3ba9db116086,68, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:71994,0x3ba9e523fef8,~
code-source-info,0x3ba9db116086,115,72068,72380,C0O72068C9O72072C13O72079C22O72094C25O72096C35O72111C45O72146C53O72246C61O72079C67O72379,,
code-creation,LazyCompile,10,260694,0x3ba9db11648e,52,5519 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:56778,0x3ba9ddf33e70,~
code-source-info,0x3ba9db11648e,115,56852,58382,C0O56852C26O56891C31O56891C36O56888C42O57118C46O57127C51O58381,,
code-creation,LazyCompile,10,260956,0x3ba9db11717e,232,58 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:59217,0x3ba9ddf33f80,~
code-source-info,0x3ba9db11717e,115,59291,63350,C0O59291C59O59322C64O59322C69O59345C74O59345C79O59342C85O59385C90O59385C95O59367C101O59382C107O59395C112O59395C116O59395C118O59405C123O59405C127O59405C129O59432C134O59432C139O59421C145O59429C151O59462C156O59462C161O59446C167O59459C173O59472C177O59472C179O59889C226O59874C231O63349,,
code-creation,LazyCompile,10,261228,0x3ba9db1184de,390,5370 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:72392,0x3ba9ddf34090,~
code-source-info,0x3ba9db1184de,115,72466,74676,C0O72466C27O72489C31O72496C42O72511C47O72496C72O72648C78O72627C84O72610C90O72592C96O72575C102O72563C106O72664C111O72664C116O72674C121O72674C125O72674C127O72684C132O72684C136O72684C138O72710C162O72692C164O72821C169O72841C176O72844C180O72860C187O73163C191O73180C195O73314C199O73321C209O73321C214O73314C216O73413C219O73430C223O73437C233O73496C241O73437C246O73429C253O73533C257O73540C269O73599C273O73540C278O73532C334O73603C336O74220C341O74245C386O74248C389O74675,,
code-creation,LazyCompile,10,261312,0x3ba9db118806,48, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:73263,0x3ba9db117910,~
code-source-info,0x3ba9db118806,115,73337,73410,C0O73337C8O73351C12O73364C17O73364C25O73351C30O73351C32O73375C37O73382C47O73409,,
code-creation,LazyCompile,10,261426,0x3ba9db118db6,67,1032 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:82631,0x3ba9ddf34570,~
code-source-info,0x3ba9db118db6,115,82705,82978,C0O82726C4O82733C12O82748C20O82733C26O82790C30O82814C59O82960C61O82975C66O82977,,
tick,0x1088077af,261568,0,0x0,3,0x108a8eb80,0x10dd47f1f,0x3ba9db11854d,0x10dd47f1f,0x3ba9e52396a4,0x3ba9ddf386db,0x3ba9e5238a3c,0x3ba9ddf386db,0x3ba9ddf39082,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,261604,0x3ba9db119646,140,4936 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:74608,0x3ba9ddf34118,~
code-source-info,0x3ba9db119646,115,74682,75790,C0O74682C11O74705C15O74712C23O74727C31O74712C38O74782C44O74767C48O74798C53O74798C57O74798C95O74806C97O75448C99O75462C105O75465C134O75478C139O75789,,
code-creation,LazyCompile,10,261877,0x3ba9db11a65e,361,7678 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:79028,0x3ba9ddf343d8,~
code-source-info,0x3ba9db11a65e
code-creation,LazyCompile,10,262104,0x3ba9db11b4d6,83,8986 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:81832,0x3ba9ddf34460,~
code-source-info,0x3ba9db11b4d6,115,81906,82543,C0O81927C4O81934C12O81949C20O81934C27O82024C33O82016C39O81996C45O81989C49O82032C53O82039C57O82111C61O82130C65O82200C69O82206C73O82339C77O82352C82O82542,,
code-creation,LazyCompile,10,262247,0x3ba9db11bb3e,96,7873 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:78752,0x3ba9ddf34350,~
code-source-info,0x3ba9db11bb3e,115,78826,79096,C0O78847C4O78854C12O78869C20O78854C27O78928C33O78911C37O78944C48O78944C54O79023C56O79039C65O79080C67O79083C75O79083C90O79071C95O79095,,
code-creation,LazyCompile,10,262385,0x3ba9db11c356,121,3915 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:86713,0x3ba9ddf34778,~
code-source-info,0x3ba9db11c356,115,86787,87666,C0O86787C9O86808C13O86815C24O86830C29O86815C42O86900C48O86880C57O86927C66O86934C115O86957C120O87665,,
code-creation,LazyCompile,10,262553,0x3ba9db11c9fe,379,1465 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:87598,0x3ba9ddf34800,~
code-source-info,0x3ba9db11c9fe
tick,0x108a1ffe7,262751,0,0x0,2,0x108a8eb80,0x10dd47f1f,0x3ba9db11ca9e,0x10dd47f1f,0x3ba9ddf390ac,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,262785,0x3ba9db11d45e,252,9597 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90298,0x3ba9ddf34a20,~
code-source-info,0x3ba9db11d45e,115,90372,91859,C0O90372C17O90399C21O90410C27O90428C31O90435C47O90399C49O90600C53O90611C59O90632C63O90639C79O90600C81O90750C85O90761C96O90934C100O90941C108O90956C116O90941C122O90994C126O91010C131O91010C135O91010C137O91020C142O91020C146O91020C148O91030C153O91030C157O91030C159O91040C164O91042C169O91040C173O91040C228O91802C230O91813C238O91832C246O91854C251O91858,,
code-creation,LazyCompile,10,262889,0x3ba9db11d8e6,18,2087 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92351,0x3ba9ddf35018,~
code-source-info,0x3ba9db11d8e6,115,92425,92466,C0O92442C8O92452C12O92451C17O92465,,
code-creation,Eval,10,263258,0x3ba9db11e3ce,5, node:os:1:1,0x3ba9db11e078,~
script-source,167,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  SymbolToPrimitive\x2C\n} = primordials;\n\nconst { safeGetenv } = internalBinding('credentials');\nconst constants = internalBinding('constants').os;\nconst isWindows = process.platform === 'win32';\n\nconst {\n  codes: {\n    ERR_SYSTEM_ERROR\n  }\x2C\n  hideStackFrames\n} = require('internal/errors');\nconst { validateInt32 } = require('internal/validators');\n\nconst {\n  getCPUs\x2C\n  getFreeMem\x2C\n  getHomeDirectory: _getHomeDirectory\x2C\n  getHostname: _getHostname\x2C\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\n  getLoadAvg\x2C\n  getPriority: _getPriority\x2C\n  getOSInformation: _getOSInformation\x2C\n  getTotalMem\x2C\n  getUserInfo\x2C\n  getUptime\x2C\n  isBigEndian\x2C\n  setPriority: _setPriority\n} = internalBinding('os');\n\nfunction getCheckedFunction(fn) {\n  return hideStackFrames(function checkError(...args) {\n    const ctx = {};\n    const ret = fn(...args\x2C ctx);\n    if (ret === undefined) {\n      throw new ERR_SYSTEM_ERROR(ctx);\n    }\n    return ret;\n  });\n}\n\nconst {\n  0: type\x2C\n  1: version\x2C\n  2: release\x2C\n} = _getOSInformation();\n\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\nconst getHostname = getCheckedFunction(_getHostname);\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\n/**\n * @returns {string}\n */\nconst getOSRelease = () => release;\n/**\n * @returns {string}\n */\nconst getOSType = () => type;\n/**\n * @returns {string}\n */\nconst getOSVersion = () => version;\n\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\ngetHostname[SymbolToPrimitive] = () => getHostname();\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\ngetOSType[SymbolToPrimitive] = () => getOSType();\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\ngetUptime[SymbolToPrimitive] = () => getUptime();\n\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\n\nconst avgValues = new Float64Array(3);\n\n/**\n * @returns {[number\x2C number\x2C number]}\n */\nfunction loadavg() {\n  getLoadAvg(avgValues);\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\n}\n\n/**\n * Returns an array of objects containing information about each\n * logical CPU core.\n *\n * @returns {Array<{\n *  model: string\n *  speed: number\n *  times: {\n *    user: number\n *    nice: number\n *    sys: number\n *    idle: number\n *    irq: number\n *  }\n * }>}\n */\nfunction cpus() {\n  // [] is a bugfix for a regression introduced in 51cea61\n  const data = getCPUs() || [];\n  const result = [];\n  let i = 0;\n  while (i < data.length) {\n    ArrayPrototypePush(result\x2C {\n      model: data[i++]\x2C\n      speed: data[i++]\x2C\n      times: {\n        user: data[i++]\x2C\n        nice: data[i++]\x2C\n        sys: data[i++]\x2C\n        idle: data[i++]\x2C\n        irq: data[i++]\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * @returns {string}\n */\nfunction arch() {\n  return process.arch;\n}\narch[SymbolToPrimitive] = () => process.arch;\n\n/**\n * @returns {string}\n */\nfunction platform() {\n  return process.platform;\n}\nplatform[SymbolToPrimitive] = () => process.platform;\n\n/**\n * @returns {string}\n */\nfunction tmpdir() {\n  var path;\n  if (isWindows) {\n    path = process.env.TEMP ||\n           process.env.TMP ||\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\n  } else {\n    path = safeGetenv('TMPDIR') ||\n           safeGetenv('TMP') ||\n           safeGetenv('TEMP') ||\n           '/tmp';\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\n  }\n\n  return path;\n}\ntmpdir[SymbolToPrimitive] = () => tmpdir();\n\n/**\n * @returns {'BE' | 'LE'}\n */\nfunction endianness() {\n  return kEndianness;\n}\nendianness[SymbolToPrimitive] = () => kEndianness;\n\n// Returns the number of ones in the binary representation of the decimal\n// number.\nfunction countBinaryOnes(n) {\n  // Count the number of bits set in parallel\x2C which is faster than looping\n  n = n - ((n >>> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction getCIDR(address\x2C netmask\x2C family) {\n  let ones = 0;\n  let split = '.';\n  let range = 10;\n  let groupLength = 8;\n  let hasZeros = false;\n\n  if (family === 'IPv6') {\n    split = ':';\n    range = 16;\n    groupLength = 16;\n  }\n\n  const parts = StringPrototypeSplit(netmask\x2C split);\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i] !== '') {\n      const binary = NumberParseInt(parts[i]\x2C range);\n      const tmp = countBinaryOnes(binary);\n      ones += tmp;\n      if (hasZeros) {\n        if (tmp !== 0) {\n          return null;\n        }\n      } else if (tmp !== groupLength) {\n        if ((binary & 1) !== 0) {\n          return null;\n        }\n        hasZeros = true;\n      }\n    }\n  }\n\n  return `${address}/${ones}`;\n}\n\n/**\n * @returns {Record<string\x2C Array<{\n *  address: string\n *  netmask: string\n *  family: 'IPv4' | 'IPv6'\n *  mac: string\n *  internal: boolean\n *  scopeid: number\n *  cidr: string | null\n * }>>}\n */\nfunction networkInterfaces() {\n  const data = getInterfaceAddresses();\n  const result = {};\n\n  if (data === undefined)\n    return result;\n  for (var i = 0; i < data.length; i += 7) {\n    const name = data[i];\n    const entry = {\n      address: data[i + 1]\x2C\n      netmask: data[i + 2]\x2C\n      family: data[i + 3]\x2C\n      mac: data[i + 4]\x2C\n      internal: data[i + 5]\x2C\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\n    };\n    const scopeid = data[i + 6];\n    if (scopeid !== -1)\n      entry.scopeid = scopeid;\n\n    const existing = result[name];\n    if (existing !== undefined)\n      ArrayPrototypePush(existing\x2C entry);\n    else\n      result[name] = [entry];\n  }\n\n  return result;\n}\n\n/**\n * @param {number} [pid=0]\n * @param {number} priority\n * @returns {void}\n */\nfunction setPriority(pid\x2C priority) {\n  if (priority === undefined) {\n    priority = pid;\n    pid = 0;\n  }\n\n  validateInt32(pid\x2C 'pid');\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\n\n  const ctx = {};\n\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\n    throw new ERR_SYSTEM_ERROR(ctx);\n}\n\n/**\n * @param {number} [pid=0]\n * @returns {number}\n */\nfunction getPriority(pid) {\n  if (pid === undefined)\n    pid = 0;\n  else\n    validateInt32(pid\x2C 'pid');\n\n  const ctx = {};\n  const priority = _getPriority(pid\x2C ctx);\n\n  if (priority === undefined)\n    throw new ERR_SYSTEM_ERROR(ctx);\n\n  return priority;\n}\n\n/**\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\n * be `Buffer` instances.\n * @returns {{\n *   uid: number\n *   gid: number\n *   username: string\n *   homedir: string\n *   shell: string | null\n * }}\n */\nfunction userInfo(options) {\n  if (typeof options !== 'object')\n    options = null;\n\n  const ctx = {};\n  const user = getUserInfo(options\x2C ctx);\n\n  if (user === undefined)\n    throw new ERR_SYSTEM_ERROR(ctx);\n\n  return user;\n}\n\nmodule.exports = {\n  arch\x2C\n  cpus\x2C\n  endianness\x2C\n  freemem: getFreeMem\x2C\n  getPriority\x2C\n  homedir: getHomeDirectory\x2C\n  hostname: getHostname\x2C\n  loadavg\x2C\n  networkInterfaces\x2C\n  platform\x2C\n  release: getOSRelease\x2C\n  setPriority\x2C\n  tmpdir\x2C\n  totalmem: getTotalMem\x2C\n  type: getOSType\x2C\n  userInfo\x2C\n  uptime: getUptime\x2C\n  version: getOSVersion\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n\n  EOL: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: isWindows ? '\\r\\n' : '\\n'\n  }\x2C\n\n  devNull: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    writable: false\x2C\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\n  }\n});\n
code-source-info,0x3ba9db11e3ce,167,0,9062,C0O0C4O9062,,
code-creation,Function,10,264176,0x3ba9db11f586,823, node:os:1:1,0x3ba9db11e348,~
code-source-info,0x3ba9db11f
tick,0x7ff81f269ae6,264331,1,0x10843a650,3,0x1085cff20,0x10dd44b1b,0x10dd48dce,0x10dd48bc3,0x3ba9ddf108c6,0x10dd498a7,0x10dd49575,0x3ba9db11d8ee,0x10dd47f1f,0x3ba9db11d4f7,0x10dd47f1f,0x3ba9db11ca9e,0x10dd47f1f,0x3ba9ddf390ac,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,264507,0x3ba9db1217e6,26,getCheckedFunction node:os:63:28,0x3ba9db11e400,~
code-source-info,0x3ba9db1217e6,167,2035,2249,C0O2035C9O2044C21O2051C25O2247,,
scavenge,begin,0,265025,1636629464079
new,MemoryChunk,0x3ba9c2f00000,262144
new,MemoryChunk,0x3ba985b80000,262144
new,MemoryChunk,0x3ba9d5580000,262144
tick,0x10879cf04,265268,0,0x0,1
scavenge,end,0,266195,1636629464080
code-creation,LazyCompile,10,265668,0x3ba9db122b86,119,n /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90709,0x3ba9db11cfb8,~
code-source-info,0x3ba9db122b86,115,90783,90933,C0O90787C4O90795C10O90806C12O90815C13O90821C15O90824C20O90848C33O90843C46O90843C47O90850C52O90859C58O90865C62O90872C67O90882C72O90897C77O90897C97O90908C105O90835C108O90917C111O90924C118O90932,,
code-creation,LazyCompile,10,265765,0x3ba9db122e46,57,s /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90376,0x3ba9db11ce70,~
code-source-info,0x3ba9db122e46,115,90450,90549,C0O90450C13O90460C22O90478C26O90485C31O90502C36O90523C50O90485C56O90548,,
code-creation,Function,11,265891,0x10dd49ae0,920,n /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90709,0x3ba9db11cfb8,^
code-source-info,0x10dd49ae0,115,90783,90933,,,
code-creation,Function,11,265937,0x10dd49ee0,284,FastBuffer node:internal/buffer:958:14,0x3ba999231a18,^
code-source-info,0x10dd49ee0,19,26364,26453,,,
code-creation,Function,11,265971,0x10dd4a060,288, node:zlib:805:3,0x3ba9db106bd8,^
code-source-info,0x10dd4a060,166,24451,24538,,,
code-creation,Function,11,265998,0x10dd4a1e0,264,createConvenienceMethod node:zlib:788:33,0x3ba9db1063b8,^
code-source-info,0x10dd4a1e0,166,24009,24366,,,
code-creation,Function,11,266024,0x10dd4a360,252,createProperty node:zlib:873:24,0x3ba9db106528,^
code-source-info,0x10dd4a360,166,26776,26917,,,
code-creation,Function,11,266051,0x10dd4a4c0,352,hideStackFrames node:internal/errors:382:25,0x3ba9609643c0,^
code-source-info,0x10dd4a4c0,11,10626,10850,,,
code-creation,Function,11,266080,0x10dd4a680,480,s /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90376,0x3ba9db11ce70,^
code-source-info,0x10dd4a680,115,90450,90549,,,
code-creation,LazyCompile,10,266151,0x3ba9db12364e,33,o /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90580,0x3ba9db11cf18,~
code-source-info,0x3ba9db12364e,115,90654,90719,C0O90660C4O90667C12O90682C19O90715C26O90667C32O90718,,
code-creation,LazyCompile,10,266256,0x3ba9db1238f6,66,8745 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89663,0x3ba9ddf34888,~
code-source-info,0x3ba9db1238f6,115,89737,89926,C0O89737C9O89758C13O89765C24O89780C29O89765C38O89825C45O89833C50O89869C60O89851C65O89925,,
code-creation,LazyCompile,10,266383,0x3ba9db123ab6,95,3783 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89858,0x3ba9ddf34910,~
code-source-info,0x3ba9db123ab6,115,89932,90185,C0O89955C4O89962C12O89977C20O89962C27O90042C33O90027C37O90058C42O90058C47O90083C60O90083C66O90080C70O90146C83O90146C89O90143C94O90184,,
code-creation,LazyCompile,10,266488,0x3ba9db123c56,118,join node:path:1166:7,0x3ba95c928540,~
code-source-info,0x3ba9db123c56,35,35667,36077,C0O35667C3O35692C9O35699C14O35712C16O35723C17O35732C19O35757C21O35769C25O35762C30O35802C32O35806C36O35817C44O35817C49O35860C55O35867C60O35882C64O35918C71O35955C76O35969C87O35779C92O35744C95O35994C99O36026C101O36037C102O36042C107O36055C112O36055C117O36073,,
code-creation,LazyCompile,10,266606,0x3ba9db123e46,159,normalize node:path:1127:12,0x3ba95c9284a0,~
code-source-info,0x3ba9db123e46,35,34767,35371,C0O34780C8O34780C13O34824C19O34831C24O34844C26O34855C27O34886C34O34886C42O34925C44O34921C48O34981C53O35018C57O35025C61O34981C69O35034C71O35030C75O35085C80O35115C91O35092C98O35169C104O35176C109O35191C113O35215C115O35226C116O35233C126O35271C127O35282C131O35311C141O35329C150O35353C158O35367,,
tick,0x7ff81f0c563c,266671,0,0x0,2,0x108a8eb80,0x3ba9db123cc6,0x3ba9db123af2,0x10dd47f1f,0x3ba9ddf390c8,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,266736,0x3ba9db1240fe,59,1446 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90117,0x3ba9ddf34998,~
code-source-info,0x3ba9db1240fe,115,90191,90358,C0O90191C8O90214C12O90221C20O90236C28O90221C34O90279C38O90295C43O90295C47O90295C49O90303C53O90319C58O90357,,
code-creation,LazyCompile,10,266822,0x3ba9db124426,8,t.BootloaderEnvironment /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:86901,0x3ba9db11bd70,~
code-source-info,0x3ba9db124426,115,86975,86997,C0O86979C2O86994C7O86996,,
code-creation,LazyCompile,10,266903,0x3ba9db124666,84,get inspectorOptions /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:87094,0x3ba9db11bf08,~
code-source-info,0x3ba9db124666,115,87168,87332,C0O87184C5O87195C10O87220C12O87226C13O87233C14O87243C22O87251C27O87243C33O87269C43O87270C49O87285C54O87294C58O87306C63O87306C68O87314C80O87324C81O87330C83O87331,,
code-creation,LazyCompile,10,266986,0x3ba9db1247ce,5, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:87202,0x3ba9db124568,~
code-source-info,0x3ba9db1247ce,115,87276,87282,C0O87279C4O87282,,
code-creation,LazyCompile,10,267062,0x3ba9db1248c6,36,info /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89795,0x3ba9db123740,~
code-source-info,0x3ba9db1248c6,115,89869,89924,C0O89869C3O89878C6O89880C11O89897C17O89906C21O89914C29O89914C35O89923,,
code-creation,LazyCompile,10,267134,0x3ba9db12504e,39,checkAll /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89595,0x3ba9db11c848,~
code-source-info,0x3ba9db12504e,115,89669,89704,C0O89669C9O89675C19O89678C22O89688C32O89688C38O89704,,
code-creation,LazyCompile,10,267192,0x3ba9db125166,9, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89620,0x3ba9db124f98,~
code-source-info,0x3ba9db125166,115,89694,89702,C0O89697C3O89698C8O89702,,
code-creation,LazyCompile,10,267247,0x3ba9db125276,65,checkIsNotNodeGyp /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89263,0x3ba9db11c7f8,~
code-source-info,0x3ba9db125276,115,89337,89431,C0O89344C6O89358C10O89366C15O89371C22O89377C32O89398C35O89405C40O89414C44O89422C51O89426C55O89405C60O89395C64O89431,,
code-creation,LazyCompile,10,267325,0x3ba9db1253ce,42,checkIsDebugMode /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:88042,0x3ba9db11c668,~
code-source-info,0x3ba9db1253ce,115,88116,88234,C0O88141C5O88128C15O88144C18O88153C23O88170C34O88170C41O88234,,
code-creation,LazyCompile,10,267386,0x3ba9db125516,61,checkLeaseFile /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:88224,0x3ba9db11c6b8,~
code-source-info,0x3ba9db125516,115,88298,88464,C0O88312C5O88325C9O88337C12O88350C17O88360C22O88360C32O88373C35O88382C40O88399C51O88399C60O88463,,
code-creation,LazyCompile,10,267450,0x3ba9db1256d6,88,checkNotElectron /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:88452,0x3ba9db11c708,~
code-source-info,0x3ba9db1256d6,115,88526,88668,C3O88535C42O88542C48O88557C51O88566C56O88583C67O88583C74O88648C86O88658C87O88666,,
code-creation,Eval,10,267517,0x3ba9db1258d6,5, :1:1,0x3ba9db125808,~
script-source,168,<unknown>,window
code-source-info,0x3ba9db1258d6,168,0,6,C0O0C4O6,,
code-creation,LazyCompile,10,267624,0x3ba9db125b36,181,checkProcessFilter /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:88662,0x3ba9db11c758,~
code-source-info,0x3ba9db125b36,115,88736,89039,C0O88744C2O88748C8O88755C16O88757C21O88782C26O88791C30O88799C37O88803C41O88783C50O88756C60O88817C64O88827C71O88831C80O88839C84O88854C95O88841C101O88875C106O88875C115O88840C125O88892C129O88897C135O88907C138O88916C143O88933C159O89006C169O89033C173O88933C180O89038,,
code-creation,LazyCompile,10,267710,0x3ba9db125e06,35,3121 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:91791,0x3ba9ddf34b50,~
code-source-info,0x3ba9db125e06,115,91865,92011,C0O91865C5O91963C9O91969C15O91986C23O91993C29O92008C34O92010,,
code-creation,LazyCompile,10,267783,0x3ba9db125fb6,36,t /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:91805,0x3ba9db125cc0,~
code-source-info,0x3ba9db125fb6,115,91879,91963,C0O91889C9O91921C15O91923C21O91889C27O91929C29O91941C35O91929,,
tick,0x1083565c3,267866,0,0x0,3,0x108a8eb80,0x3ba9db125b5f,0x3ba9db125169,0x108e65290,0x3ba9db12506e,0x3ba9ddf3954b,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,267916,0x3ba9db12618e,76,checkNotNpmPrefixCheckOnWindows /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:89050,0x3ba9db11c7a8,~
code-source-info,0x3ba9db12618e,115,89124,89240,C0O89137C4O89145C9O89150C12O89164C16O89159C26O89187C29O89194C36O89204C40O89194C45O89184C55O89222C58O89218C68O89235C71O89231C75O89239,,
code-creation,LazyCompile,10,267984,0x3ba9db1262de,18,5013 /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:92643,0x3ba9ddf35348,~
code-source-info,0x3ba9db1262de,115,92717,92770,C0O92734C8O92744C12O92743C17O92769,,
code-creation,LazyCompile,10,268094,0x3ba9db126596,9,get /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:83077,0x3ba9e5227f60,~
code-source-info,0x3ba9db126596,115,83151,83166,C0O83154C5O83162C8O83165,,
code-creation,LazyCompile,10,268222,0x3ba9db126786,239,writeFileSync node:fs:2142:23,0x3ba985fe1228,~
code-source-info,0x3ba9db126786,77,56685,57373,C0O56711C5O56732C10O56721C17O56791C22O56796C28O56827C36O56827C41O56881C46O56895C53O56900C56O56900C61O56922C70O56895C78O56971C87O57004C92O57004C97O57058C105O57076C108O57079C113O57108C124O57079C130O57131C132O57154C140O57192C141O57192C146O57221C151O57224C168O57224C174O57267C176O57277C183O57292C185O57302C192O57178C206O57335C211O57350C216O57353C221O57353C238O57372,,
code-creation,LazyCompile,10,268328,0x3ba9db126a16,67, node:internal/fs/utils:865:60,0x3ba985fea6f0,~
code-source-info,0x3ba9db126a16,78,23548,23920,C0O23570C6O23608C7O23615C8O23623C18O23703C28O23734C34O23734C41O23794C42O23801C43O23809C48O23845C61O23815C66O23809,,
code-creation,LazyCompile,10,268613,0x3ba9db126bae,213,writeSync node:fs:858:19,0x3ba985fdfa50,~
code-source-info,0x3ba9db126bae,77,21668,22554,C0O21711C5O21716C11O21750C13O21760C15O21770C20O21774C26O21807C30O21841C33O21862C38O21890C43O21921C56O21921C61O21969C67O22023C74O22034C79O22048C84O22097C95O22048C100O22114C105O22131C130O22131C138O22246C146O22246C151O22304C156O22304C161O22343C165O22375C168O22394C173O22411C195O22411C201O22507C206O22507C210O22538C212O22552,,
code-creation,LazyCompile,10,268704,0x3ba9db126dde,126, node:internal/fs/utils:651:3,0x3ba985fea330,~
code-source-info,0x3ba9db126dde,78,17695,18099,C0O17733C2O17744C7O17766C20O17809C30O17772C35O17766C36O17843C38O17867C41O17854C46O17885C59O17939C72O17891C77O17885C78O17971C79O17982C84O17995C100O18001C105O17995C106O18060C119O18060C125O18098,,
code-creation,LazyCompile,10,268902,0x3ba9db126f86,65,updateInspectorOption /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:87484,0x3ba9db11c020,~
code-source-info,0x3ba9db126f86,115,87558,87664,C0O87577C5O87594C7O87620C11O87627C16O87634C20O87641C27O87641C41O87656C45O87659C50O87627C57O87619C64O87663,,
code-creation,LazyCompile,10,269003,0x3ba9db1270fe,43,set inspectorOptions /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:87278,0x3ba9db11bf80,~
code-source-info,0x3ba9db1270fe,115,87352,87474,C0O87356C4O87379C15O87420C20O87456C24O87461C29O87461C35O87455C42O87473,,
tick,0x1093d0440,269138,0,0x0,0,0x108aa7630,0x108e9b28e,0x3ba9ddf395a0,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,269174,0x3ba9db127226,33,t.createTargetId /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:90246,0x3ba9db123fc8,~
code-source-info,0x3ba9db127226,115,90320,90357,C0O90342C5O90326C13O90326C19O90341C27O90342C32O90357,,
code-creation,LazyCompile,10,269309,0x3ba9db1273b6,130,randomBytes node:internal/crypto/random:90:21,0x3ba9f09ed700,~
code-source-info,0x3ba9db1273b6,140,1947,2458,C0O1947C12O1968C22O1998C29O1975C36O2011C40O2045C50O2045C54O2092C63O2092C68O2092C70O2117C74O2151C82O2170C92O2151C97O2192C99O2203C100O2279C108O2294C115O2305C123O2279C129O2457,,
code-creation,LazyCompile,10,269398,0x3ba9db12882e,131,assertSize node:internal/crypto/random:74:20,0x3ba9f09ed6b0,~
code-source-info,0x3ba9db12882e,140,1483,1925,C0O1523C8O1523C13O1555C15O1563C23O1579C28O1583C36O1611C38O1609C44O1638C49O1649C62O1729C74O1655C79O1649C80O1765C82O1774C88O1783C93O1799C106O1849C113O1864C119O1805C124O1799C125O1882C127O1894C130O1900,,
code-creation,LazyCompile,10,269507,0x3ba9db128a66,190,randomFillSync node:internal/crypto/random:110:24,0x3ba9f09ed778,~
code-source-info,0x3ba9db128a66,140,2483,3128,C16O2511C21O2516C29O2542C32O2542C38O2572C56O2578C61O2572C62O2702C71O2729C74O2776C85O2738C91O2792C95O2833C102O2844C108O2869C111O2918C125O2876C131O2938C132O2947C137O2958C139O2969C140O2985C147O3009C161O2985C167O3076C172O3076C178O3081C182O3088C184O3101C186O3101C187O3115C189O3126,,
code-creation,LazyCompile,10,269592,0x3ba9db128c7e,98,assertOffset node:internal/crypto/random:62:22,0x3ba9f09ed660,~
code-source-info,0x3ba9db128c7e,140,1117,1462,C0O1151C8O1151C13O1187C15O1197C23O1231C30O1247C33O1231C39O1270C44O1274C52O1304C58O1326C63O1337C76O1388C86O1343C91O1337C92O1417C94O1431C97O1437,,
code-creation,LazyCompile,10,269689,0x3ba9db128dde,12,slice node:buffer:669:12,0x3ba999226870,~
code-source-info,0x3ba9db128dde,18,19632,19677,C0O19657C5O19657C11O19677,,
code-creation,LazyCompile,10,269876,0x3ba9db1296b6,577, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:84546,0x3ba9ddf39258,~
code-source-info,0x3ba9db1296b
code-creation,LazyCompile,10,269975,0x3ba9db129b16,42, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:84830,0x3ba9db129220,~
code-source-info,0x3ba9db129b16,115,84904,85237,C0O84917C28O84946C29O84955C30O84967C35O85196C39O85200C40O85227C41O85235,,
code-creation,LazyCompile,10,270037,0x3ba9db129d16,81, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:84568,0x3ba9db1291d0,~
code-source-info,0x3ba9db129d16,115,84642,84743,C0O84646C4O84652C5O84661C9O84665C14O84674C21O84686C24O84688C29O84688C35O84674C41O84699C48O84709C51O84711C56O84711C62O84700C67O84723C79O84733C80O84741,,
code-creation,LazyCompile,10,270133,0x3ba9db129efe,118,readdirSync node:fs:1383:21,0x3ba985fe0368,~
code-source-info,0x3ba9db129efe,77,35059,35465,C0O35079C5O35100C7O35089C14O35116C19O35123C25O35161C32O35163C39O35188C44O35196C51O35204C54O35215C59O35215C65O35280C70O35300C82O35196C88O35367C93O35367C97O35413C105O35429C108O35429C117O35463,,
tick,0x7ff81f268162,270450,1,0x1083f5940,6,0x1085cff20,0x3ba9db129f50,0x3ba9db129d39,0x3ba9db1296c0,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,270571,0x3ba9db12a176,45, /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/ms-vscode.js-debug/src/bootloader.bundle.js:2:85191,0x3ba9db129258,~
code-source-info,0x3ba9db12a176,115,85265,85368,C0O85275C6O85295C7O85304C11O85308C16O85317C26O85317C31O85348C43O85358C44O85366,,
code-creation,LazyCompile,10,270652,0x3ba9db12a29e,45,inspectorOpen node:inspector:137:23,0x3ba9e5229600,~
code-source-info,0x3ba9db12a29e,125,3598,3749,C0O3621C5O3625C10O3644C15O3650C20O3644C21O3695C26O3695C31O3715C35O3729C40O3729C44O3748,,
tick,0x7ff81f269506,271484,1,0x1084ceab0,6,0x1085cff20,0x3ba9db12a2b8,0x3ba9db12973f,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
new,MemoryChunk,0x3ba931f80000,270336
code-creation,LazyCompile,10,272140,0x3ba9db12b01e,299,spawn node:child_process:690:15,0x3ba9ddf3add8,~
code-source-info,0x3ba9db12b01e,116,18050,19205,C0O18050C11O18076C25O18086C32O18134C37O18158C42O18134C46O18170C53O18198C61O18170C66O18246C71O18273C76O18246C80O18246C82O18302C89O18302C94O18302C96O18325C106O18325C111O18352C114O18358C119O18358C124O18389C130O18397C142O18424C154O18633C159O18424C164O18424C166O18648C171O18654C184O18654C192O18792C211O18829C215O18821C217O18841C220O18852C226O18869C231O18877C239O18877C246O18923C249O18930C260O18956C265O18930C270O18996C275O19002C288O19002C296O19190C298O19203,,
code-creation,LazyCompile,10,272431,0x3ba9db12b966,1130,normalizeSpawnArguments node:child_process:502:33,0x3ba9ddf3ad38,~
code-source-info,0x3ba9db12b966,116,12931,17281,C0O12957C8O12957C13O12999C19O13006C24O13017C41O13023C46O13017C47O13086C52O13090C58O13116C63O13123C71O13159C76O13183C82O13203C88O13239C104O13245C109O13239C110O13310C113O13330C117O13348C121O13379C126O13404C134O13404C139O13461C144O13504C147O13527C155O13533C161O13626C168O13650C173O13674C181O13650C186O13759C195O13775C198O13791C203O13775C209O13803C220O13866C228O13809C233O13803C234O13926C243O13942C246O13958C251O13942C257O13970C268O14033C276O13976C281O13970C282O14095C289O14133C297O14177C305O14203C318O14317C326O14209C331O14203C332O14377C339O14398C344O14421C352O14398C357O14504C364O14531C369O14555C377O14531C382O14657C387O14697C390O14741C398O14741C403O14859C409O14888C423O14908C429O14917C430O14917C490O14888C496O14980C499O14992C506O15001C511O15041C519O15084C527O15110C530O15125C535O15129C545O15203C555O15207C562O15273C575O15303C592O15324C596O15380C606O15394C617O15450C625O15493C633O15511C636O15523C643O15532C648O15555C654O15599C658O15623C668O15637C677O15679C685O15705C690O15741C695O15705C702O15764C707O15764C712O15826C721O15841C726O15865C729O16024C732O16036C737O16040C745O16067C748O16105C759O16067C766O16143C769O16174C774O16178C778O16164C782O16217C785O16291C799O16284C812O16284C813O16302C819O16302C828O16273C831O16343C834O16355C841O16364C853O16529C860O16529C865O16529C867O16548C878O16586C881O16586C892O16558C900O16863C924O16856C954O16856C957O16892C959O16895C963O16906C968O16939C976O16971C988O16978C994O16939C999O16845C1070O17001C1077O17104C1083O17114C1087O17143C1099O17157C1105O17171C1109O17204C1121O17249C1129O17279,,
code-creation,LazyCompile,10,272618,0x3ba9db12c126,99, node:internal/validators:153:3,0x3ba99921a0a8,~
code-source-info,0x3ba9db12c126,17,4365,4924,C0O4423C4O4463C9O4499C14O4537C21O4573C26O4609C33O4645C38O4659C46O4706C50O4720C53O4720C67O4795C75O4860C91O4866C96O4860C98O4923,,
code-creation,LazyCompile,10,272740,0x3ba9db12c2de,46,validateTimeout node:child_process:909:25,0x3ba9ddf3af98,~
tick,0x1089ea139,272764,0,0x0,2,0x108a8eb80,0x3ba9db12b048,0x3ba9db12981a,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-source-info,0x3ba9db12c2de,116,23698,23862,C0O23712C7O23737C10O23737C17O23773C22O23786C38O23792C43O23786C45O23861,,
code-creation,LazyCompile,10,272859,0x3ba9db12c3fe,48, node:internal/validators:226:45,0x3ba99921a340,~
code-source-info,0x3ba9db12c3fe,17,6945,7162,C0O6967C19O7077C24O7096C40O7102C45O7096C47O7161,,
code-creation,LazyCompile,10,272923,0x3ba9db12c586,53,sanitizeKillSignal node:child_process:925:28,0x3ba9ddf3b038,~
code-source-info,0x3ba9db12c586,116,24168,24504,C0O24185C12O24261C17O24268C21O24301C22O24311C27O24341C45O24347C50O24341C52O24503,,
code-creation,LazyCompile,10,273075,0x3ba9db12c88e,146,ChildProcess node:internal/child_process:251:22,0x3ba9c5affcb0,~
code-source-info,0x3ba9db12c88e,117,6501,7858,C0O6501C9O6508C20O6530C26O6508C31O6554C36O6573C40O6580C44O6596C48O6603C52O6618C56O6630C60O6646C64O6656C68O6670C72O6680C76O6692C80O6703C84O6718C88O6729C95O6748C98O6744C103O6742C107O6761C110O6766C119O6774C124O6788C128O6799C131O6804C140O6819C145O7857,,
code-creation,LazyCompile,10,273202,0x3ba9db12ee06,10, node:child_process:55:3,0x3ba9ddf3b088,~
code-source-info,0x3ba9db12ee06,116,1857,1886,C0O1871C2O1877C9O1885,,
code-creation,LazyCompile,10,273412,0x3ba9db12f246,1045,ChildProcess.spawn node:internal/child_process:346:40,0x3ba9e52015f8,~
code-source-info,0x3ba9db12f
code-creation,LazyCompile,10,273686,0x3ba9db12fac6,154,getValidStdio node:internal/child_process:945:23,0x3ba9e5201118,~
code-source-info,0x3ba9db12fac6,117,26588,29486,C0O26588C15O26610C16O26610C18O26621C19O26621C21O26667C27O26704C32O26712C40O26748C47O26753C53O26780C68O26786C73O26780C74O27064C81O27071C86O27076C95O27076C100O27051C103O27190C110O27219C121O27198C128O29455C135O29464C141O29471C147O29476C153O29484,,
code-creation,LazyCompile,10,273769,0x3ba9db12fcce,119,stdioStringToArray node:internal/child_process:234:28,0x3ba9c5affc60,~
code-source-info,0x3ba9db12fcce,117,6090,6478,C0O6127C3O6134C36O6210C53O6210C58O6260C60O6287C76O6287C81O6325C83O6351C96O6357C101O6351C102O6407C106O6420C111O6420C116O6461C118O6476,,
code-creation,LazyCompile,10,273925,0x3ba9db130146,628, node:internal/child_process:964:39,0x3ba9db12f990,~
code-source-info,0x3ba9db
tick,0x7ff81f29ed43,274063,0,0x0,3,0x108a8eb80,0x108e60df1,0x3ba9db12fb3f,0x3ba9db12f270,0x3ba9db12b095,0x3ba9db12981a,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f2674e4,275399,1,0x1084a1660,6,0x1085cff20,0x3ba9db12f370,0x3ba9db12b095,0x3ba9db12981a,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,276017,0x3ba9db130756,368,nextTick node:internal/process/task_queues:104:18,0x3ba96097bb18,~
script-source,25,node:internal/process/task_queues,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n} = primordials;\n\nconst {\n  // For easy access to the nextTick state in the C++ land\x2C\n  // and to avoid unnecessary calls into JS land.\n  tickInfo\x2C\n  // Used to run V8's micro task queue.\n  runMicrotasks\x2C\n  setTickCallback\x2C\n  enqueueMicrotask\n} = internalBinding('task_queue');\n\nconst {\n  setHasRejectionToWarn\x2C\n  hasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\n} = require('internal/process/promises');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\n} = require('internal/async_hooks');\nconst FixedQueue = require('internal/fixed_queue');\n\nconst {\n  validateCallback\x2C\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { AsyncResource } = require('async_hooks');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasTickScheduled = 0;\n\nfunction hasTickScheduled() {\n  return tickInfo[kHasTickScheduled] === 1;\n}\n\nfunction setHasTickScheduled(value) {\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\n}\n\nconst queue = new FixedQueue();\n\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\nfunction runNextTicks() {\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    runMicrotasks();\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    return;\n\n  processTicksAndRejections();\n}\n\nfunction processTicksAndRejections() {\n  let tock;\n  do {\n    while (tock = queue.shift()) {\n      const asyncId = tock[async_id_symbol];\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch (args.length) {\n            case 1: callback(args[0]); break;\n            case 2: callback(args[0]\x2C args[1]); break;\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\n            default: callback(...args);\n          }\n        }\n      } finally {\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n      }\n\n      emitAfter(asyncId);\n    }\n    runMicrotasks();\n  } while (!queue.isEmpty() || processPromiseRejections());\n  setHasTickScheduled(false);\n  setHasRejectionToWarn(false);\n}\n\n// `nextTick()` will not enqueue any callback when the process is about to\n// exit since the callback would not have a chance to be executed.\nfunction nextTick(callback) {\n  validateCallback(callback);\n\n  if (process._exiting)\n    return;\n\n  let args;\n  switch (arguments.length) {\n    case 1: break;\n    case 2: args = [arguments[1]]; break;\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\n    default:\n      args = new Array(arguments.length - 1);\n      for (let i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n  }\n\n  if (queue.isEmpty())\n    setHasTickScheduled(true);\n  const asyncId = newAsyncId();\n  const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    [async_id_symbol]: asyncId\x2C\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args\n  };\n  if (initHooksExist())\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n\nfunction runMicrotask() {\n  this.runInAsyncScope(() => {\n    const callback = this.callback;\n    try {\n      callback();\n    } finally {\n      this.emitDestroy();\n    }\n  });\n}\n\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\n\nfunction queueMicrotask(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  const asyncResource = new AsyncResource(\n    'Microtask'\x2C\n    defaultMicrotaskResourceOpts\n  );\n  asyncResource.callback = callback;\n\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\n}\n\nmodule.exports = {\n  setupTaskQueue() {\n    // Sets the per-isolate promise rejection callback\n    listenForRejections();\n    // Sets the callback to be run in every tick.\n    setTickCallback(processTicksAndRejections);\n    return {\n      nextTick\x2C\n      runNextTicks\n    };\n  }\x2C\n  queueMicrotask\n};\n
code-source-info,0x3ba9db
tick,0x108916cf5,276624,0,0x0,0,0x108a8eb80,0x3ba9db12f454,0x3ba9db12b095,0x3ba9db12981a,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,276663,0x3ba9db130fc6,21, node:internal/validators:221:42,0x3ba99921a2f0,~
code-source-info,0x3ba9db130fc6,17,6796,6897,C0O6814C6O6854C13O6860C18O6854C20O6896,,
code-creation,LazyCompile,10,276749,0x3ba9db1310c6,15,isEmpty node:internal/fixed_queue:95:10,0x3ba95c905b80,~
script-source,28,node:internal/fixed_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n
code-source-info,0x3ba9db1310c6,28,3637,3677,C0O3658C5O3663C10O3663C14O3673,,
code-creation,LazyCompile,10,277194,0x3ba9db13157e,13,isEmpty node:internal/fixed_queue:67:10,0x3ba95c9058c8,~
code-source-info,0x3ba9db13157e,28,3084,3129,C0O3105C5O3118C9O3109C12O3125,,
code-creation,LazyCompile,10,277242,0x3ba9db13166e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x3ba96097ba28,~
code-source-info,0x3ba9db13166e,25,1104,1162,C0O1116C7O1125C12O1146C19O1144C24O1161,,
code-creation,LazyCompile,10,277337,0x3ba9db131766,23,newAsyncId node:internal/async_hooks:415:20,0x3ba960979a80,~
script-source,24,node:internal/async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectDefineProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst async_wrap = internalBinding('async_wrap');\nconst { setCallbackTrampoline } = async_wrap;\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\n * hooks for each type.\n *\n * async_id_fields is a Float64Array wrapping the double array of\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\n * the various asynchronous states of the application. These are:\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\n *    current execution stack.\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\n *    the resource corresponding to the current execution stack.\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\n *    of retrieving the triggerAsyncId value is:\n *    1. the value passed directly to the constructor\n *    2. value set in kDefaultTriggerAsyncId\n *    3. executionAsyncId of the current resource.\n *\n * async_ids_stack is a Float64Array that contains part of the async ID\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\n * popAsyncContext() call removes two doubles from it.\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\n * side are used instead in pushAsyncContext() and popAsyncContext().\n */\nconst {\n  async_hook_fields\x2C\n  async_id_fields\x2C\n  execution_async_resources\n} = async_wrap;\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\n// responsible for the current execution stack. This is unwound as each resource\n// exits. In the case of a fatal exception this stack is emptied after calling\n// each hook's after() callback.\nconst {\n  pushAsyncContext: pushAsyncContext_\x2C\n  popAsyncContext: popAsyncContext_\x2C\n  executionAsyncResource: executionAsyncResource_\x2C\n  clearAsyncIdStack\x2C\n} = async_wrap;\n// For performance reasons\x2C only track Promises when a hook is enabled.\nconst { setPromiseHooks } = async_wrap;\n// Properties in active_hooks are used to keep track of the set of hooks being\n// executed in case another hook is enabled/disabled. The new set of hooks is\n// then restored once the active set of hooks is finished executing.\nconst active_hooks = {\n  // Array of all AsyncHooks that will be iterated whenever an async event\n  // fires. Using var instead of (preferably const) in order to assign\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\n  // execution.\n  array: []\x2C\n  // Use a counter to track nested calls of async hook callbacks and make sure\n  // the active_hooks.array isn't altered mid execution.\n  call_depth: 0\x2C\n  // Use to temporarily store and updated active_hooks.array if the user\n  // enables or disables a hook while hooks are being processed. If a hook is\n  // enabled() or disabled() during hook execution then the current set of\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\n  // subsequent changes are on the duplicated array. When all hooks have\n  // completed executing active_hooks.tmp_array is assigned to\n  // active_hooks.array.\n  tmp_array: null\x2C\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\n  // is written back to async_hook_fields when active_hooks.array is restored.\n  tmp_fields: null\n};\n\nconst { registerDestroyHook } = async_wrap;\nconst { enqueueMicrotask } = internalBinding('task_queue');\nconst { owner_symbol } = internalBinding('symbols');\n\n// Each constant tracks how many callbacks there are for any given step of\n// async execution. These are tracked so if the user didn't include callbacks\n// for a given step\x2C that step can bail out early.\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\n} = async_wrap.constants;\n\nconst { async_id_symbol\x2C\n        trigger_async_id_symbol } = internalBinding('symbols');\n\n// Lazy load of internal/util/inspect;\nlet inspect;\n\n// Used in AsyncHook and AsyncResource.\nconst init_symbol = Symbol('init');\nconst before_symbol = Symbol('before');\nconst after_symbol = Symbol('after');\nconst destroy_symbol = Symbol('destroy');\nconst promise_resolve_symbol = Symbol('promiseResolve');\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\nconst emitPromiseResolveNative =\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\n\nlet domain_cb;\nfunction useDomainTrampoline(fn) {\n  domain_cb = fn;\n}\n\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\n  const index = async_hook_fields[kStackLength] - 1;\n  execution_async_resources[index] = resource;\n\n  if (asyncId !== 0 && hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n\n  let result;\n  if (asyncId === 0 && typeof domain_cb === 'function') {\n    args.unshift(cb);\n    result = domain_cb.apply(this\x2C args);\n  } else {\n    result = cb.apply(this\x2C args);\n  }\n\n  if (asyncId !== 0 && hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  execution_async_resources.pop();\n  return result;\n}\n\nsetCallbackTrampoline(callbackTrampoline);\n\nconst topLevelResource = {};\n\nfunction executionAsyncResource() {\n  // Indicate to the native layer that this function is likely to be used\x2C\n  // in which case it will inform JS about the current async resource via\n  // the trampoline above.\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\n\n  const index = async_hook_fields[kStackLength] - 1;\n  if (index === -1) return topLevelResource;\n  const resource = execution_async_resources[index] ||\n    executionAsyncResource_(index);\n  return lookupPublicResource(resource);\n}\n\nfunction inspectExceptionValue(e) {\n  inspect ??= require('internal/util/inspect').inspect;\n  return { message: inspect(e) };\n}\n\n// Used to fatally abort the process if a callback throws.\nfunction fatalError(e) {\n  if (typeof e?.stack === 'string') {\n    process._rawDebug(e.stack);\n  } else {\n    const o = inspectExceptionValue(e);\n    ErrorCaptureStackTrace(o\x2C fatalError);\n    process._rawDebug(o.stack);\n  }\n\n  const { getOptionValue } = require('internal/options');\n  if (getOptionValue('--abort-on-uncaught-exception')) {\n    process.abort();\n  }\n  process.exit(1);\n}\n\nfunction lookupPublicResource(resource) {\n  if (typeof resource !== 'object' || resource === null) return resource;\n\n  const publicResource = resource[owner_symbol];\n\n  if (publicResource != null) {\n    return publicResource;\n  }\n\n  return resource;\n}\n\n// Emit From Native //\n\n// Used by C++ to call all init() callbacks. Because some state can be setup\n// from C++ there's no need to perform all the same operations as in\n// emitInitScript.\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  active_hooks.call_depth += 1;\n  resource = lookupPublicResource(resource);\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\n        active_hooks.array[i][init_symbol](\n          asyncId\x2C type\x2C triggerAsyncId\x2C\n          resource\n        );\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\n  // will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\n// Called from native. The asyncId stack handling is taken care of there\n// before this is called.\nfunction emitHook(symbol\x2C asyncId) {\n  active_hooks.call_depth += 1;\n  // Use a single try/catch for all hook to avoid setting up one per\n  // iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][symbol] === 'function') {\n        active_hooks.array[i][symbol](asyncId);\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case\n  // active_hooks.tmp_array will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\nfunction emitHookFactory(symbol\x2C name) {\n  const fn = emitHook.bind(undefined\x2C symbol);\n\n  // Set the name property of the function as it looks good in the stack trace.\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\n    value: name\n  });\n  return fn;\n}\n\n// Manage Active Hooks //\n\nfunction getHookArrays() {\n  if (active_hooks.call_depth === 0)\n    return [active_hooks.array\x2C async_hook_fields];\n  // If this hook is being enabled while in the middle of processing the array\n  // of currently active hooks then duplicate the current set of active hooks\n  // and store this there. This shouldn't fire until the next time hooks are\n  // processed.\n  if (active_hooks.tmp_array === null)\n    storeActiveHooks();\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\n}\n\n\nfunction storeActiveHooks() {\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\n  // 4. So do this the long way.\n  active_hooks.tmp_fields = [];\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\n}\n\nfunction copyHooks(destination\x2C source) {\n  destination[kInit] = source[kInit];\n  destination[kBefore] = source[kBefore];\n  destination[kAfter] = source[kAfter];\n  destination[kDestroy] = source[kDestroy];\n  destination[kPromiseResolve] = source[kPromiseResolve];\n}\n\n\n// Then restore the correct hooks array in case any hooks were added/removed\n// during hook callback execution.\nfunction restoreActiveHooks() {\n  active_hooks.array = active_hooks.tmp_array;\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\n\n  active_hooks.tmp_array = null;\n  active_hooks.tmp_fields = null;\n}\n\nfunction trackPromise(promise\x2C parent) {\n  if (promise[async_id_symbol]) {\n    return;\n  }\n\n  // Get trigger id from parent async id before making the async id of the\n  // child so if a new one must be made it will be lower than the child.\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\n    getDefaultTriggerAsyncId();\n\n  promise[async_id_symbol] = newAsyncId();\n  promise[trigger_async_id_symbol] = triggerAsyncId;\n}\n\nfunction promiseInitHook(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const triggerAsyncId = promise[trigger_async_id_symbol];\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\n}\n\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\n  promiseInitHook(promise\x2C parent);\n  destroyTracking(promise\x2C parent);\n}\n\nconst destroyedSymbol = Symbol('destroyed');\n\nfunction destroyTracking(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const destroyed = { destroyed: false };\n  promise[destroyedSymbol] = destroyed;\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\n}\n\nfunction promiseBeforeHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  const triggerId = promise[trigger_async_id_symbol];\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\n}\n\nfunction promiseAfterHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  if (hasHooks(kAfter)) {\n    emitAfterNative(asyncId);\n  }\n  if (asyncId === executionAsyncId()) {\n    // This condition might not be true if async_hooks was enabled during\n    // the promise callback execution.\n    // Popping it off the stack can be skipped in that case\x2C because it is\n    // known that it would correspond to exactly one call with\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\n    popAsyncContext(asyncId);\n  }\n}\n\nfunction promiseResolveHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  emitPromiseResolveNative(asyncId);\n}\n\nlet wantPromiseHook = false;\nfunction enableHooks() {\n  async_hook_fields[kCheck] += 1;\n}\n\nfunction updatePromiseHookMode() {\n  wantPromiseHook = true;\n  let initHook;\n  if (initHooksExist()) {\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\n      promiseInitHook;\n  } else if (destroyHooksExist()) {\n    initHook = destroyTracking;\n  }\n  setPromiseHooks(\n    initHook\x2C\n    promiseBeforeHook\x2C\n    promiseAfterHook\x2C\n    promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\n  );\n}\n\nfunction disableHooks() {\n  async_hook_fields[kCheck] -= 1;\n\n  wantPromiseHook = false;\n\n  // Delay the call to `disablePromiseHook()` because we might currently be\n  // between the `before` and `after` calls of a Promise.\n  enqueueMicrotask(disablePromiseHookIfNecessary);\n}\n\nfunction disablePromiseHookIfNecessary() {\n  if (!wantPromiseHook) {\n    setPromiseHooks(undefined\x2C undefined\x2C undefined\x2C undefined);\n  }\n}\n\n// Internal Embedder API //\n\n// Increment the internal id counter and return the value. Important that the\n// counter increment first. Since it's done the same way in\n// Environment::new_async_uid()\nfunction newAsyncId() {\n  return ++async_id_fields[kAsyncIdCounter];\n}\n\nfunction getOrSetAsyncId(object) {\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\n    return object[async_id_symbol];\n  }\n\n  return object[async_id_symbol] = newAsyncId();\n}\n\n\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\n// the user to safeguard this call and make sure it's zero'd out when the\n// constructor is complete.\nfunction getDefaultTriggerAsyncId() {\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\n  if (defaultTriggerAsyncId < 0)\n    return async_id_fields[kExecutionAsyncId];\n  return defaultTriggerAsyncId;\n}\n\n\nfunction clearDefaultTriggerAsyncId() {\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\n}\n\n\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\n  if (triggerAsyncId === undefined)\n    return block.apply(null\x2C args);\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\n  // CHECK(triggerAsyncId > 0)\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\n\n  try {\n    return block.apply(null\x2C args);\n  } finally {\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\n  }\n}\n\nfunction hasHooks(key) {\n  return async_hook_fields[key] > 0;\n}\n\nfunction enabledHooksExist() {\n  return hasHooks(kCheck);\n}\n\nfunction initHooksExist() {\n  return hasHooks(kInit);\n}\n\nfunction afterHooksExist() {\n  return hasHooks(kAfter);\n}\n\nfunction destroyHooksExist() {\n  return hasHooks(kDestroy);\n}\n\nfunction promiseResolveHooksExist() {\n  return hasHooks(kPromiseResolve);\n}\n\n\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  // Short circuit all checks for the common case. Which is that no hooks have\n  // been set. Do this to remove performance impact for embedders (and core).\n  if (!hasHooks(kInit))\n    return;\n\n  if (triggerAsyncId === null) {\n    triggerAsyncId = getDefaultTriggerAsyncId();\n  }\n\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n\n  if (hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n}\n\n\nfunction emitAfterScript(asyncId) {\n  if (hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  popAsyncContext(asyncId);\n}\n\n\nfunction emitDestroyScript(asyncId) {\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\n  if (!hasHooks(kDestroy) || asyncId <= 0)\n    return;\n  async_wrap.queueDestroyAsyncId(asyncId);\n}\n\n\nfunction hasAsyncIdStack() {\n  return hasHooks(kStackLength);\n}\n\n\n// This is the equivalent of the native push_async_ids() call.\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\n  const offset = async_hook_fields[kStackLength];\n  execution_async_resources[offset] = resource;\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\n  async_hook_fields[kStackLength]++;\n  async_id_fields[kExecutionAsyncId] = asyncId;\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\n}\n\n\n// This is the equivalent of the native pop_async_ids() call.\nfunction popAsyncContext(asyncId) {\n  const stackLength = async_hook_fields[kStackLength];\n  if (stackLength === 0) return false;\n\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\n    // Do the same thing as the native code (i.e. crash hard).\n    return popAsyncContext_(asyncId);\n  }\n\n  const offset = stackLength - 1;\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\n  execution_async_resources.pop();\n  async_hook_fields[kStackLength] = offset;\n  return offset > 0;\n}\n\n\nfunction executionAsyncId() {\n  return async_id_fields[kExecutionAsyncId];\n}\n\nfunction triggerAsyncId() {\n  return async_id_fields[kTriggerAsyncId];\n}\n\n\nmodule.exports = {\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  getHookArrays\x2C\n  symbols: {\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n    promise_resolve_symbol\x2C owner_symbol\n  }\x2C\n  constants: {\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\n  }\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getOrSetAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  afterHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit: emitInitScript\x2C\n  emitBefore: emitBeforeScript\x2C\n  emitAfter: emitAfterScript\x2C\n  emitDestroy: emitDestroyScript\x2C\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  registerDestroyHook\x2C\n  useDomainTrampoline\x2C\n  nativeHooks: {\n    init: emitInitNative\x2C\n    before: emitBeforeNative\x2C\n    after: emitAfterNative\x2C\n    destroy: emitDestroyNative\x2C\n    promise_resolve: emitPromiseResolveNative\n  }\n};\n
code-source-info,0x3ba9db131766,24,14326,14377,C0O14333C7O14358C16O14373C22O14375,,
code-creation,LazyCompile,10,279250,0x3ba9db132bd6,35,getDefaultTriggerAsyncId node:internal/async_hooks:431:34,0x3ba960979b20,~
code-source-info,0x3ba9db132bd6,24,14785,15042,C0O14822C7O14838C9O14837C13O14931C14O14957C19O14966C26O14989C28O14988C31O15008C32O15011C34O15040,,
tick,0x7ff81f26732d,279317,0,0x0,3,0x108a8eb80,0x3ba9db130852,0x3ba9db12f454,0x3ba9db12b095,0x3ba9db12981a,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269ae6,279361,0,0x0,3,0x108a8eb80,0x3ba9db130852,0x3ba9db12f454,0x3ba9db12b095,0x3ba9db12981a,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,279451,0x3ba9db132ce6,13,initHooksExist node:internal/async_hooks:468:24,0x3ba960979d10,~
code-source-info,0x3ba9db132ce6,24,15781,15813,C0O15788C5O15804C8O15795C12O15811,,
code-creation,LazyCompile,10,279520,0x3ba9db132dce,16,hasHooks node:internal/async_hooks:460:18,0x3ba960979c70,~
code-source-info,0x3ba9db132dce,24,15649,15695,C0O15659C7O15683C12O15689C15O15693,,
code-creation,LazyCompile,10,279579,0x3ba9db132ede,59,push node:internal/fixed_queue:99:7,0x3ba95c905bd0,~
code-source-info,0x3ba9db132ede,28,3685,3945,C0O3707C5O3712C10O3712C16O3871C23O3887C26O3883C32O3881C38O3864C42O3925C47O3930C52O3930C58O3944,,
code-creation,LazyCompile,10,279653,0x3ba9db133026,24,isFull node:internal/fixed_queue:71:9,0x3ba95c905930,~
code-source-info,0x3ba9db133026,28,3139,3200,C0O3162C4O3166C10O3173C12O3171C16O3189C20O3180C23O3196,,
code-creation,LazyCompile,10,279703,0x3ba9db133136,37,push node:internal/fixed_queue:75:7,0x3ba95c905998,~
code-source-info,0x3ba9db133136,28,3208,3291,C0O3226C5O3236C12O3241C16O3270C20O3274C26O3281C28O3279C31O3262C36O3290,,
code-creation,LazyCompile,10,279834,0x3ba9db13324e,22,ChildProcess.unref node:internal/child_process:519:40,0x3ba9e5201790,~
code-source-info,0x3ba9db13324e,117,13564,13612,C0O13580C6O13594C11O13602C16O13602C21O13611,,
code-creation,LazyCompile,10,279941,0x3ba9db133386,23,inspectorWaitForDebugger node:inspector:146:34,0x3ba9e5229650,~
code-source-info,0x3ba9db133386,125,3784,3858,C0O3791C5O3796C10O3819C15O3825C20O3819C22O3857,,
tick,0x7ff81f269506,280406,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,281672,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,282931,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,284204,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,285464,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,286738,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,287930,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,289184,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,290484,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,291719,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,292992,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,294245,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,295456,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,296705,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,297972,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,299232,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,300500,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,301759,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,303021,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,304280,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,305549,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,306807,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,308075,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,309335,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,310604,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,311864,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,313132,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,314392,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,315660,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,316921,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,318190,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,319452,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,320598,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,321867,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,323128,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,324390,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,325727,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,327035,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,328321,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,329552,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,330814,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,332072,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,333369,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,334628,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,335895,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,337155,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,338422,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,339697,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,340960,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,342217,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,343483,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,344746,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,346013,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,347291,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,348547,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,349837,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,351106,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,352366,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,353635,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,354892,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,356159,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,357419,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,358703,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,359952,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,361219,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,362477,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,363747,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,365009,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,366323,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,367577,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,368657,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,369910,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,371206,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,372547,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,373868,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,375117,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,376385,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,377646,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,378917,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,380177,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,381444,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,382714,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,383980,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,385242,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,386825,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,388026,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,389277,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,390545,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,391844,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,392861,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,394304,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,396612,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,396961,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,398457,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,399374,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,400645,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,401787,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,403050,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,404305,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,405571,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,406830,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,408097,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,409357,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,410622,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,411882,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,415898,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,416112,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,419731,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,419786,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,421003,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,422261,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,423527,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,424789,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,426079,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,427341,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,428628,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,429881,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,431153,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,433272,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,434610,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,435752,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,436664,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,438001,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,441876,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,443911,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,444103,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,445308,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,447189,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,449757,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,451141,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,451656,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,452478,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,453632,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,454881,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,456065,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,457334,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,463272,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,463387,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,464439,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,466005,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,467076,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,468364,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,469633,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,470904,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,472204,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,473469,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,474851,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,476149,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,477430,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,478696,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,479962,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,481241,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,482541,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,483807,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,484875,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,486179,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,487333,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,488623,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,490109,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,495466,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,495683,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,496681,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,498107,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,499926,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,500871,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,502558,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,503734,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,504962,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,506234,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,507383,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,508622,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,509857,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,511006,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,512056,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,513338,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,514901,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,515806,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,517161,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,518541,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,519877,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,521301,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,522577,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,523843,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,525086,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,526362,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,527584,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,528704,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,529980,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,531244,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,532509,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,533810,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,535075,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,536477,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,537634,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,538928,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,540189,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,541489,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,542788,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,544089,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,545353,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,546625,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,547889,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,549189,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,550455,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,551756,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,553028,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,554325,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,555595,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,556887,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,558188,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,559449,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,560752,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,562017,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,563321,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,564599,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,565862,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,567123,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,568427,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,569696,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,570982,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,572286,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,573549,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,574846,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,576128,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,577428,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,578518,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,579780,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,581054,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,582316,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,583589,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,584871,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,586137,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,587400,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,588710,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,589966,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,591231,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,592496,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,593798,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,596150,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,596525,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,597729,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,599078,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,600063,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,602660,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,603252,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,604643,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,605433,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,606701,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,607970,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,609457,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,610431,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,611710,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,614436,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,614537,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,615494,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,617762,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,619051,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,620393,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,621639,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,622908,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,624191,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,625627,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,626886,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,628234,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,630190,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,630922,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,632272,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,634531,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,637316,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,645882,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,647060,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,652608,0x3ba9db134c56,111,installConsoleExtensions node:internal/util/inspector:25:34,0x3ba95c90d3b8,~
code-source-info,0x3ba9db134c56,32,590,1132,C0O630C6O641C7O648C8O675C14O675C19O661C24O734C30O734C35O772C40O815C46O815C51O791C56O883C61O883C67O935C71O950C73O975C76O1011C81O1011C87O1048C92O975C97O973C101O1092C105O1090C110O1131,,
code-creation,LazyCompile,10,652944,0x3ba9db134e16,42,tryGetCwd node:internal/process/execution:30:19,0x3ba985fc7d98,~
script-source,75,node:internal/process/execution,'use strict';\n\nconst {\n  globalThis\x2C\n} = primordials;\n\nconst path = require('path');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET\x2C\n    ERR_EVAL_ESM_CANNOT_PRINT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  executionAsyncId\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  afterHooksExist\x2C\n  emitAfter\n} = require('internal/async_hooks');\n\n// shouldAbortOnUncaughtToggle is a typed array for faster\n// communication with JS.\nconst { shouldAbortOnUncaughtToggle } = internalBinding('util');\n\nfunction tryGetCwd() {\n  try {\n    return process.cwd();\n  } catch {\n    // getcwd(3) can fail if the current working directory has been deleted.\n    // Fall back to the directory name of the (absolute) executable path.\n    // It's not really correct but what are the alternatives?\n    return path.dirname(process.execPath);\n  }\n}\n\nfunction evalModule(source\x2C print) {\n  if (print) {\n    throw new ERR_EVAL_ESM_CANNOT_PRINT();\n  }\n  const { log } = require('internal/console/global');\n  const { loadESM } = require('internal/process/esm_loader');\n  const { handleMainPromise } = require('internal/modules/run_main');\n  return handleMainPromise(loadESM(async (loader) => {\n    const { result } = await loader.eval(source);\n    if (print) {\n      log(result);\n    }\n  }));\n}\n\nfunction evalScript(name\x2C body\x2C breakFirstLine\x2C print) {\n  const CJSModule = require('internal/modules/cjs/loader').Module;\n  const { kVmBreakFirstLineSymbol } = require('internal/util');\n  const { pathToFileURL } = require('url');\n\n  const cwd = tryGetCwd();\n  const origModule = globalThis.module;  // Set e.g. when called from the REPL.\n\n  const module = new CJSModule(name);\n  module.filename = path.join(cwd\x2C name);\n  module.paths = CJSModule._nodeModulePaths(cwd);\n\n  const asyncESM = require('internal/process/esm_loader');\n  const baseUrl = pathToFileURL(module.filename).href;\n\n  // Create wrapper for cache entry\n  const script = `\n    globalThis.module = module;\n    globalThis.exports = exports;\n    globalThis.__dirname = __dirname;\n    globalThis.require = require;\n    return (main) => main();\n  `;\n  globalThis.__filename = name;\n  const result = module._compile(script\x2C `${name}-wrapper`)(() =>\n    require('vm').runInThisContext(body\x2C {\n      filename: name\x2C\n      displayErrors: true\x2C\n      [kVmBreakFirstLineSymbol]: !!breakFirstLine\x2C\n      async importModuleDynamically(specifier) {\n        const loader = await asyncESM.esmLoader;\n        return loader.import(specifier\x2C baseUrl);\n      }\n    }));\n  if (print) {\n    const { log } = require('internal/console/global');\n    log(result);\n  }\n\n  if (origModule !== undefined)\n    globalThis.module = origModule;\n}\n\nconst exceptionHandlerState = {\n  captureFn: null\x2C\n  reportFlag: false\n};\n\nfunction setUncaughtExceptionCaptureCallback(fn) {\n  if (fn === null) {\n    exceptionHandlerState.captureFn = fn;\n    shouldAbortOnUncaughtToggle[0] = 1;\n    process.report.reportOnUncaughtException = exceptionHandlerState.reportFlag;\n    return;\n  }\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn'\x2C ['Function'\x2C 'null']\x2C fn);\n  }\n  if (exceptionHandlerState.captureFn !== null) {\n    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();\n  }\n  exceptionHandlerState.captureFn = fn;\n  shouldAbortOnUncaughtToggle[0] = 0;\n  exceptionHandlerState.reportFlag =\n    process.report.reportOnUncaughtException === true;\n  process.report.reportOnUncaughtException = false;\n}\n\nfunction hasUncaughtExceptionCaptureCallback() {\n  return exceptionHandlerState.captureFn !== null;\n}\n\nfunction noop() {}\n\n// XXX(joyeecheung): for some reason this cannot be defined at the top-level\n// and exported to be written to process._fatalException\x2C it has to be\n// returned as an *anonymous function* wrapped inside a factory function\x2C\n// otherwise it breaks the test-timers.setInterval async hooks test -\n// this may indicate that node::errors::TriggerUncaughtException() should\n// fix up the callback scope before calling into process._fatalException\x2C\n// or this function should take extra care of the async hooks before it\n// schedules a setImmediate.\nfunction createOnGlobalUncaughtException() {\n  // The C++ land node::errors::TriggerUncaughtException() will\n  // exit the process if it returns false\x2C and continue execution if it\n  // returns true (which indicates that the exception is handled by the user).\n  return (er\x2C fromPromise) => {\n    // It's possible that defaultTriggerAsyncId was set for a constructor\n    // call that threw and was never cleared. So clear it now.\n    clearDefaultTriggerAsyncId();\n\n    // If diagnostic reporting is enabled\x2C call into its handler to see\n    // whether it is interested in handling the situation.\n    // Ignore if the error is scoped inside a domain.\n    // use == in the checks as we want to allow for null and undefined\n    if (er == null || er.domain == null) {\n      try {\n        const report = internalBinding('report');\n        if (report != null && report.shouldReportOnUncaughtException()) {\n          report.writeReport(\n            typeof er?.message === 'string' ?\n              er.message :\n              'Exception'\x2C\n            'Exception'\x2C\n            null\x2C\n            er ? er : {});\n        }\n      } catch {}  // Ignore the exception. Diagnostic reporting is unavailable.\n    }\n\n    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';\n    process.emit('uncaughtExceptionMonitor'\x2C er\x2C type);\n    if (exceptionHandlerState.captureFn !== null) {\n      exceptionHandlerState.captureFn(er);\n    } else if (!process.emit('uncaughtException'\x2C er\x2C type)) {\n      // If someone handled it\x2C then great. Otherwise\x2C die in C++ land\n      // since that means that we'll exit the process\x2C emit the 'exit' event.\n      try {\n        if (!process._exiting) {\n          process._exiting = true;\n          process.exitCode = 1;\n          process.emit('exit'\x2C 1);\n        }\n      } catch {\n        // Nothing to be done about it at this point.\n      }\n      return false;\n    }\n\n    // If we handled an error\x2C then make sure any ticks get processed\n    // by ensuring that the next Immediate cycle isn't empty.\n    require('timers').setImmediate(noop);\n\n    // Emit the after() hooks now that the exception has been handled.\n    if (afterHooksExist()) {\n      do {\n        emitAfter(executionAsyncId());\n      } while (hasAsyncIdStack());\n    }\n    // And completely empty the id stack\x2C including anything that may be\n    // cached on the native side.\n    clearAsyncIdStack();\n\n    return true;\n  };\n}\n\nfunction readStdin(callback) {\n  process.stdin.setEncoding('utf8');\n\n  let code = '';\n  process.stdin.on('data'\x2C (d) => {\n    code += d;\n  });\n\n  process.stdin.on('end'\x2C () => {\n    callback(code);\n  });\n}\n\nmodule.exports = {\n  readStdin\x2C\n  tryGetCwd\x2C\n  evalModule\x2C\n  evalScript\x2C\n  onGlobalUncaughtException: createOnGlobalUncaughtException()\x2C\n  setUncaughtExceptionCaptureCallback\x2C\n  hasUncaughtExceptionCaptureCallback\n};\n
code-source-info,0x3ba9db134e16,75,584,896,C3O601C6O616C11O616C15O622C18O852C23O864C31O880C36O864C41O890,,
code-creation,Script,10,654188,0x3ba9db136036,18, :1:1,0x3ba9db135f60,~
script-source,169,,require('module').builtinModules\n//# sourceURL=eval-b5ac89ce.cdp\n
code-source-info,0x3ba9db136036,169,0,65,C0O0C7O0C12O17C17O65,,
code-creation,Eval,10,654415,0x3ba9db13634e,5, node:module:1:1,0x3ba9db136208,~
script-source,170,node:module,'use strict';\n\nconst { findSourceMap } = require('internal/source_map/source_map_cache');\nconst { Module } = require('internal/modules/cjs/loader');\nconst { SourceMap } = require('internal/source_map/source_map');\n\nModule.findSourceMap = findSourceMap;\nModule.SourceMap = SourceMap;\nmodule.exports = Module;\n
code-source-info,0x3ba9db13634e,170,0,308,C0O0C4O308,,
code-creation,Function,10,654503,0x3ba9db1363fe,59, node:module:1:1,0x3ba9db1362c8,~
code-source-info,0x3ba9db1363fe,170,0,308,C0O41C3O41C8O23C13O109C16O109C21O98C26O171C29O171C34O157C39O215C41O236C45O253C47O270C51O283C53O298C58O307,,
code-creation,Eval,10,655049,0x3ba9db136ebe,5, node:internal/source_map/source_map:1:1,0x3ba9db136b68,~
script-source,171,node:internal/source_map/source_map,// This file is a modified version of:\n// https://cs.chromium.org/chromium/src/v8/tools/SourceMap.js?rcl=dd10454c1d\n// from the V8 codebase. Logic specific to WebInspector is removed and linting\n// is made to match the Node.js style guide.\n\n// Copyright 2013 the V8 project authors. All rights reserved.\n// Redistribution and use in source and binary forms\x2C with or without\n// modification\x2C are permitted provided that the following conditions are\n// met:\n//\n//     * Redistributions of source code must retain the above copyright\n//       notice\x2C this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above\n//       copyright notice\x2C this list of conditions and the following\n//       disclaimer in the documentation and/or other materials provided\n//       with the distribution.\n//     * Neither the name of Google Inc. nor the names of its\n//       contributors may be used to endorse or promote products derived\n//       from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES\x2C INCLUDING\x2C BUT NOT\n// LIMITED TO\x2C THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT\x2C INDIRECT\x2C INCIDENTAL\x2C\n// SPECIAL\x2C EXEMPLARY\x2C OR CONSEQUENTIAL DAMAGES (INCLUDING\x2C BUT NOT\n// LIMITED TO\x2C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE\x2C\n// DATA\x2C OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY\x2C WHETHER IN CONTRACT\x2C STRICT LIABILITY\x2C OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE\x2C EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n// This is a copy from blink dev tools\x2C see:\n// http://src.chromium.org/viewvc/blink/trunk/Source/devtools/front_end/SourceMap.js\n// revision: 153407\n\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms\x2C with or without\n * modification\x2C are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice\x2C this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice\x2C this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES\x2C INCLUDING\x2C BUT NOT\n * LIMITED TO\x2C THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT\x2C INDIRECT\x2C INCIDENTAL\x2C\n * SPECIAL\x2C EXEMPLARY\x2C OR CONSEQUENTIAL DAMAGES (INCLUDING\x2C BUT NOT\n * LIMITED TO\x2C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE\x2C\n * DATA\x2C OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY\x2C WHETHER IN CONTRACT\x2C STRICT LIABILITY\x2C OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE\x2C EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  StringPrototypeCharAt\x2C\n} = primordials;\n\nconst {\n  ERR_INVALID_ARG_TYPE\n} = require('internal/errors').codes;\n\nlet base64Map;\n\nconst VLQ_BASE_SHIFT = 5;\nconst VLQ_BASE_MASK = (1 << 5) - 1;\nconst VLQ_CONTINUATION_MASK = 1 << 5;\n\nclass StringCharIterator {\n  /**\n   * @constructor\n   * @param {string} string\n   */\n  constructor(string) {\n    this._string = string;\n    this._position = 0;\n  }\n\n  /**\n   * @return {string}\n   */\n  next() {\n    return StringPrototypeCharAt(this._string\x2C this._position++);\n  }\n\n  /**\n   * @return {string}\n   */\n  peek() {\n    return StringPrototypeCharAt(this._string\x2C this._position);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasNext() {\n    return this._position < this._string.length;\n  }\n}\n\n/**\n * Implements Source Map V3 model.\n * See https://github.com/google/closure-compiler/wiki/Source-Maps\n * for format description.\n * @constructor\n * @param {string} sourceMappingURL\n * @param {SourceMapV3} payload\n */\nclass SourceMap {\n  #payload;\n  #mappings = [];\n  #sources = {};\n  #sourceContentByURL = {};\n\n  /**\n   * @constructor\n   * @param {SourceMapV3} payload\n   */\n  constructor(payload) {\n    if (!base64Map) {\n      const base64Digits =\n             'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      base64Map = {};\n      for (let i = 0; i < base64Digits.length; ++i)\n        base64Map[base64Digits[i]] = i;\n    }\n    this.#payload = cloneSourceMapV3(payload);\n    this.#parseMappingPayload();\n  }\n\n  /**\n   * @return {Object} raw source map v3 payload.\n   */\n  get payload() {\n    return cloneSourceMapV3(this.#payload);\n  }\n\n  /**\n   * @param {SourceMapV3} mappingPayload\n   */\n  #parseMappingPayload = () => {\n    if (this.#payload.sections) {\n      this.#parseSections(this.#payload.sections);\n    } else {\n      this.#parseMap(this.#payload\x2C 0\x2C 0);\n    }\n    ArrayPrototypeSort(this.#mappings\x2C compareSourceMapEntry);\n  }\n\n  /**\n   * @param {Array.<SourceMapV3.Section>} sections\n   */\n  #parseSections = (sections) => {\n    for (let i = 0; i < sections.length; ++i) {\n      const section = sections[i];\n      this.#parseMap(section.map\x2C section.offset.line\x2C section.offset.column);\n    }\n  }\n\n  /**\n   * @param {number} lineNumber in compiled resource\n   * @param {number} columnNumber in compiled resource\n   * @return {?Array}\n   */\n  findEntry(lineNumber\x2C columnNumber) {\n    let first = 0;\n    let count = this.#mappings.length;\n    while (count > 1) {\n      const step = count >> 1;\n      const middle = first + step;\n      const mapping = this.#mappings[middle];\n      if (lineNumber < mapping[0] ||\n          (lineNumber === mapping[0] && columnNumber < mapping[1])) {\n        count = step;\n      } else {\n        first = middle;\n        count -= step;\n      }\n    }\n    const entry = this.#mappings[first];\n    if (!first && entry && (lineNumber < entry[0] ||\n        (lineNumber === entry[0] && columnNumber < entry[1]))) {\n      return {};\n    } else if (!entry) {\n      return {};\n    }\n    return {\n      generatedLine: entry[0]\x2C\n      generatedColumn: entry[1]\x2C\n      originalSource: entry[2]\x2C\n      originalLine: entry[3]\x2C\n      originalColumn: entry[4]\x2C\n      name: entry[5]\x2C\n    };\n  }\n\n  /**\n   * @override\n   */\n  #parseMap(map\x2C lineNumber\x2C columnNumber) {\n    let sourceIndex = 0;\n    let sourceLineNumber = 0;\n    let sourceColumnNumber = 0;\n    let nameIndex = 0;\n\n    const sources = [];\n    const originalToCanonicalURLMap = {};\n    for (let i = 0; i < map.sources.length; ++i) {\n      const url = map.sources[i];\n      originalToCanonicalURLMap[url] = url;\n      ArrayPrototypePush(sources\x2C url);\n      this.#sources[url] = true;\n\n      if (map.sourcesContent && map.sourcesContent[i])\n        this.#sourceContentByURL[url] = map.sourcesContent[i];\n    }\n\n    const stringCharIterator = new StringCharIterator(map.mappings);\n    let sourceURL = sources[sourceIndex];\n    while (true) {\n      if (stringCharIterator.peek() === '\x2C')\n        stringCharIterator.next();\n      else {\n        while (stringCharIterator.peek() === ';') {\n          lineNumber += 1;\n          columnNumber = 0;\n          stringCharIterator.next();\n        }\n        if (!stringCharIterator.hasNext())\n          break;\n      }\n\n      columnNumber += decodeVLQ(stringCharIterator);\n      if (isSeparator(stringCharIterator.peek())) {\n        ArrayPrototypePush(this.#mappings\x2C [lineNumber\x2C columnNumber]);\n        continue;\n      }\n\n      const sourceIndexDelta = decodeVLQ(stringCharIterator);\n      if (sourceIndexDelta) {\n        sourceIndex += sourceIndexDelta;\n        sourceURL = sources[sourceIndex];\n      }\n      sourceLineNumber += decodeVLQ(stringCharIterator);\n      sourceColumnNumber += decodeVLQ(stringCharIterator);\n\n      let name;\n      if (!isSeparator(stringCharIterator.peek())) {\n        nameIndex += decodeVLQ(stringCharIterator);\n        name = map.names?.[nameIndex];\n      }\n\n      ArrayPrototypePush(\n        this.#mappings\x2C\n        [lineNumber\x2C columnNumber\x2C sourceURL\x2C sourceLineNumber\x2C\n         sourceColumnNumber\x2C name]\n      );\n    }\n  }\n}\n\n/**\n * @param {string} char\n * @return {boolean}\n */\nfunction isSeparator(char) {\n  return char === '\x2C' || char === ';';\n}\n\n/**\n * @param {SourceMap.StringCharIterator} stringCharIterator\n * @return {number}\n */\nfunction decodeVLQ(stringCharIterator) {\n  // Read unsigned value.\n  let result = 0;\n  let shift = 0;\n  let digit;\n  do {\n    digit = base64Map[stringCharIterator.next()];\n    result += (digit & VLQ_BASE_MASK) << shift;\n    shift += VLQ_BASE_SHIFT;\n  } while (digit & VLQ_CONTINUATION_MASK);\n\n  // Fix the sign.\n  const negative = result & 1;\n  // Use unsigned right shift\x2C so that the 32nd bit is properly shifted to the\n  // 31st\x2C and the 32nd becomes unset.\n  result >>>= 1;\n  if (!negative) {\n    return result;\n  }\n\n  // We need to OR here to ensure the 32nd bit (the sign bit in an Int32) is\n  // always set for negative numbers. If `result` were 1\x2C (meaning `negate` is\n  // true and all other bits were zeros)\x2C `result` would now be 0. But -0\n  // doesn't flip the 32nd bit as intended. All other numbers will successfully\n  // set the 32nd bit without issue\x2C so doing this is a noop for them.\n  return -result | (1 << 31);\n}\n\n/**\n * @param {SourceMapV3} payload\n * @return {SourceMapV3}\n */\nfunction cloneSourceMapV3(payload) {\n  if (typeof payload !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('payload'\x2C ['Object']\x2C payload);\n  }\n  payload = { ...payload };\n  for (const key in payload) {\n    if (ObjectPrototypeHasOwnProperty(payload\x2C key) &&\n        ArrayIsArray(payload[key])) {\n      payload[key] = ArrayPrototypeSlice(payload[key]);\n    }\n  }\n  return payload;\n}\n\n/**\n * @param {Array} entry1 source map entry [lineNumber\x2C columnNumber\x2C sourceURL\x2C\n *  sourceLineNumber\x2C sourceColumnNumber]\n * @param {Array} entry2 source map entry.\n * @return {number}\n */\nfunction compareSourceMapEntry(entry1\x2C entry2) {\n  const { 0: lineNumber1\x2C 1: columnNumber1 } = entry1;\n  const { 0: lineNumber2\x2C 1: columnNumber2 } = entry2;\n  if (lineNumber1 !== lineNumber2) {\n    return lineNumber1 - lineNumber2;\n  }\n  return columnNumber1 - columnNumber2;\n}\n\nmodule.exports = {\n  SourceMap\n};\n
code-source-info,0x3ba9db136ebe,171,0,10844,C0O0C4O10844,,
code-creation,Function,10,656481,0x3ba9db137796,333, node:internal/source_map/source_map:1:1,0x3ba9db136e38,~
code-source-info,0x3ba9db137796,171,0,10844,C0O0C65O3579C71O3595C77O3617C83O3640C89O3662C95O3695C101O3771C104O3771C109O3797C114O3746C120O3810C121O3810C123O3845C125O3845C127O3870C129O3870C131O3914C133O3914C171O3923C314O10810C321O10831C327O10825C332O10843,,
code-creation,Function,10,656535,0x3ba9db137a5e,93,<instance_members_initializer> node:internal/source_map/source_map:129:3,0x3ba9db1372d0,~
code-source-info,0x3ba9db137a5e,171,4664,5860,C0O4664C29O4688C42O4705C54O4733C66O5368C81O5673C92O5860,,
tick,0x7ff81f269506,656636,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108718978,656735,1,0x10843a650,6,0x1085cff20,0x10dd44b1b,0x10dd44865,0x3ba9db13641b,0x10dd44be3,0x10dd48dce,0x10dd48bc3,0x3ba9ddf108c6,0x10dd498a7,0x10dd49575,0x3ba9db13603d,0x1084cef30,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1089b4d10,669047,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40db9,675297,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40dce,680605,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40dce,690144,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40dce,703542,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40dce,703605,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x10859cf72,703637,1,0x1084cef30,5,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40dce,703668,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b40de0,705031,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x108b75d21,706166,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,707367,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,708485,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,709704,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,710967,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,712292,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,713298,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,714559,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,715822,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,717095,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,718361,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,720016,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,720705,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,721966,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,723338,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,724645,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,725895,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,727152,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,728345,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,729526,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,730643,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,731908,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,733111,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,734402,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,735669,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,737077,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,738078,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,739450,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,740633,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,741912,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,743192,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,744474,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,745592,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,746610,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,747739,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,749022,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,750058,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,751320,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,752590,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,753855,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,755132,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,756752,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,757672,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,758721,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,759989,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,761284,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,762514,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,764003,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,765303,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,766568,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,767687,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,768973,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,770311,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,771358,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,772487,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,773642,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,774777,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,776062,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,777331,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,778393,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,779415,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,780578,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,781874,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,783006,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,784286,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,785824,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,787009,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,788131,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,789213,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,790327,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,791357,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,792491,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,793750,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x7ff81f269506,795021,1,0x1084cef30,6,0x1085cff20,0x3ba9db13338b,0x3ba9db1298d3,0x3ba9ddf395ca,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
tick,0x1089386e2,796111,0,0x0,0,0x1087bc390,0x3ba9db12466b,0x3ba9db126f86,0x3ba9ddf395ed,0x3ba9ddf39123,0x3ba9ddf386db,0x3ba9ddf35f32,0x3ba9ddf3300f,0x3ba9ddf2a669,0x3ba9ddf22b8b,0x3ba9ddf21d3e,0x3ba9ddf1092f,0x3ba9ddf104fa,0x3ba9ddf0f9ab,0x3ba9ddf0f75d,0x3ba9c5ac21e8,0x3ba995f3bd9d
code-creation,LazyCompile,10,796298,0x3ba9d559b6ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:467:36,0x3ba995f3e390,~
code-source-info,0x3ba9d559b6ae,92,15005,15227,C0O15012C8O15016C14O15061C17O15069C28O15069C34O15181C40O15181C45O15218C49O15226,,
code-creation,LazyCompile,10,796434,0x3ba9d559b7d6,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x3ba9ddf0e978,~
code-source-info,0x3ba9d559b7d6,114,2320,2625,C7O2336C14O2340C22O2370C25O2370C30O2416C33O2416C38O2452C40O2476C45O2487C50O2476C56O2588C61O2595C73O2595C79O2624,,
code-creation,LazyCompile,10,796530,0x3ba9d559b94e,68,resolveMainPath node:internal/modules/run_main:11:25,0x3ba9ddf0e810,~
code-source-info,0x3ba9d559b94e,114,296,710,C0O468C5O475C12O485C15O490C20O490C30O475C36O520C38O539C39O546C40O579C48O579C53O625C55O656C60O667C65O692C67O708,,
code-creation,RegExp,3,796723,0x10dd4a8c0,1524,(?:^|\\/)\\.?\\.$
code-creation,LazyCompile,10,796893,0x3ba9d559bbb6,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x3ba9c5adfc18,~
code-source-info,0x3ba9d559bbb6,99,11501,11685,C0O11536C2O11548C6O11541C11O11584C16O11600C19O11594C23O11584C29O11619C31O11641C33O11657C34O11557C39O11523C42O11670C43O11683,,
code-creation,LazyCompile,10,796984,0x3ba9d559bce6,50,tryFile node:internal/modules/cjs/loader:384:17,0x3ba9c5adfb78,~
code-source-info,0x3ba9d559bce6,99,11077,11271,C0O11114C3O11114C8O11135C9O11142C14O11149C15O11156C16O11159C24O11184C26O11198C31O11210C36O11210C41O11231C42O11238C45O11245C49O11269,,
code-creation,LazyCompile,10,797151,0x3ba9d559be7e,109,shouldUseESMLoader node:internal/modules/run_main:26:28,0x3ba9ddf0e860,~
code-source-info,0x3ba9d559be7e,114,739,1299,C0O773C8O773C13O816C15O836C16O848C17O891C25O891C30O948C32O980C37O996C38O1008C39O1056C45O1072C51O1072C58O1119C59O1131C60O1134C66O1151C72O1151C79O1198C80O1211C81O1226C86O1226C91O1256C93O1274C98O1279C105O1284C108O1297,,
code-creation,LazyCompile,10,797507,0x3ba9d559c1b6,326, node:internal/process/execution:142:10,0x3ba985fc82a0,~
code-source-info,0x3ba9d559c1b6,75,4428,6574,C0O4592C5O4592C8O4883C13O4904C23O4957C29O4957C34O4992C37O5021C42O5021C48O5075C63O5109C74O5151C90O5243C96O5248C98O5075C109O5372C120O5434C123O5442C137O5442C142O5490C147O5516C153O5544C158O5566C163O5566C170O5592C173O5605C187O5605C197O5813C200O5826C206O5848C210O5865C214O5883C219O5900C223O5915C226O5923C237O5923C249O6034C250O6047C251O6191C257O6191C262O6208C270O6209C275O6305C280O6309C285O6349C292O6359C295O6359C299O6349C303O6395C308O6395C313O6336C316O6532C321O6532C324O6558C325O6570,,
code-creation,LazyCompile,10,797623,0x3ba9d559c476,18,clearDefaultTriggerAsyncId node:internal/async_hooks:440:36,0x3ba960979b70,~
code-source-info,0x3ba9d559c476,24,15080,15134,C0O15087C7O15103C12O15127C17O15133,,
tick,0x108809afe,797763,0,0x0,3
code-creation,LazyCompile,10,798548,0x3ba9d559c586,46,beforeInspector node:internal/errors:738:18,0x3ba960964ac8,~
code-source-info,0x3ba9d559c586,11,22107,22483,C0O22121C2O22138C4O22137C11O22205C15O22211C19O22317C21O22337C23O22336C27O22366C31O22329C41O22473C45O22479,,
tick,0x108800f8a,798750,0,0x0,3,0x108a8eb80,0x1085cf830,0x3ba9d559c591
code-creation,LazyCompile,10,798781,0x3ba9d559c806,343,prepareStackTrace node:internal/errors:90:27,0x3ba960963010,~
code-source-info,0x3ba9d559c
code-creation,LazyCompile,10,798965,0x3ba9d559cafe,70,maybeOverridePrepareStackTrace node:internal/errors:135:40,0x3ba960963e90,~
code-source-info,0x3ba9d559cafe,11,3693,4400,C0O3921C7O3926C18O3986C23O3992C28O3992C34O4024C35O4247C40O4275C48O4315C53O4339C58O4339C64O4371C65O4379C69O4398,,
tick,0x108b69220,799928,0,0x0,0
tick,0x108636430,801195,0,0x0,0
tick,0x10863b500,802321,0,0x0,0
tick,0x108b0d15b,804298,0,0x0,0
tick,0x7ff81f2b6262,804446,0,0x0,0
tick,0x7ff81f269506,806796,0,0x0,0
tick,0x7ff81f269506,807009,0,0x0,0
tick,0x7ff81f269506,808052,0,0x0,0
tick,0x7ff81f269506,809316,0,0x0,0
tick,0x7ff81f269506,810684,0,0x0,0
tick,0x7ff81f269506,811942,0,0x0,0
tick,0x7ff81f269506,813225,0,0x0,0
tick,0x1084b8280,814044,0,0x0,0
tick,0x108a32060,815148,0,0x0,0
code-creation,LazyCompile,10,816061,0x3ba9d55b94ce,243,afterInspector node:internal/errors:752:17,0x3ba960964b38,~
code-source-info,0x3ba9d55b94ce,11,22501,23889,C0O22543C5O22570C7O23052C10O23064C17O23073C22O23107C28O23107C33O23128C38O23129C43O23167C50O23185C55O23210C62O23185C70O23257C73O23167C79O23272C80O23279C86O23283C93O23296C101O23300C106O23319C108O23456C111O23456C115O23370C125O23426C130O23502C140O23536C145O23559C153O23560C161O23579C172O23611C177O23634C182O23635C194O23717C201O23734C207O23787C210O23803C215O23818C223O23787C232O23709C237O23837C240O23858C242O23879,,
code-creation,LazyCompile,10,816204,0x3ba9d55b9726,30,lazyInternalUtilInspect node:internal/errors:184:33,0x3ba960963f80,~
code-source-info,0x3ba9d55b9726,11,5224,5354,C0O5231C6O5263C12O5285C19O5283C25O5325C29O5352,,
code-creation,Eval,10,816540,0x3ba9d55b9e2e,5, node:internal/tty:1:1,0x3ba9d55b9bd8,~
script-source,172,node:internal/tty,// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the "Software")\x2C to deal\n// in the Software without restriction\x2C including without limitation the rights\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\n// copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSome\x2C\n  RegExpPrototypeTest\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst { validateInteger } = require('internal/validators');\n\nlet OSRelease;\n\nconst COLORS_2 = 1;\nconst COLORS_16 = 4;\nconst COLORS_256 = 8;\nconst COLORS_16m = 24;\n\n// Some entries were taken from `dircolors`\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\n// support more than 16 colors\x2C but this was not tested for.\n//\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\n// distribution of this file\x2C with or without modification\x2C are permitted\n// provided the copyright notice and this notice are preserved.\nconst TERM_ENVS = {\n  'eterm': COLORS_16\x2C\n  'cons25': COLORS_16\x2C\n  'console': COLORS_16\x2C\n  'cygwin': COLORS_16\x2C\n  'dtterm': COLORS_16\x2C\n  'gnome': COLORS_16\x2C\n  'hurd': COLORS_16\x2C\n  'jfbterm': COLORS_16\x2C\n  'konsole': COLORS_16\x2C\n  'kterm': COLORS_16\x2C\n  'mlterm': COLORS_16\x2C\n  'mosh': COLORS_16m\x2C\n  'putty': COLORS_16\x2C\n  'st': COLORS_16\x2C\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\n  'rxvt-unicode-24bit': COLORS_16m\x2C\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\n  'terminator': COLORS_16m\n};\n\nconst TERM_ENVS_REG_EXP = [\n  /ansi/\x2C\n  /color/\x2C\n  /linux/\x2C\n  /^con[0-9]*x[0-9]/\x2C\n  /^rxvt/\x2C\n  /^screen/\x2C\n  /^xterm/\x2C\n  /^vt100/\x2C\n];\n\nlet warned = false;\nfunction warnOnDeactivatedColors(env) {\n  if (warned)\n    return;\n  let name = '';\n  if (env.NODE_DISABLE_COLORS !== undefined)\n    name = 'NODE_DISABLE_COLORS';\n  if (env.NO_COLOR !== undefined) {\n    if (name !== '') {\n      name += "' and '";\n    }\n    name += 'NO_COLOR';\n  }\n\n  if (name !== '') {\n    process.emitWarning(\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\n      'Warning'\n    );\n    warned = true;\n  }\n}\n\n// The `getColorDepth` API got inspired by multiple sources such as\n// https://github.com/chalk/supports-color\x2C\n// https://github.com/isaacs/color-support.\nfunction getColorDepth(env = process.env) {\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\n  // consistency throughout the ecosystem.\n  if (env.FORCE_COLOR !== undefined) {\n    switch (env.FORCE_COLOR) {\n      case '':\n      case '1':\n      case 'true':\n        warnOnDeactivatedColors(env);\n        return COLORS_16;\n      case '2':\n        warnOnDeactivatedColors(env);\n        return COLORS_256;\n      case '3':\n        warnOnDeactivatedColors(env);\n        return COLORS_16m;\n      default:\n        return COLORS_2;\n    }\n  }\n\n  if (env.NODE_DISABLE_COLORS !== undefined ||\n      // See https://no-color.org/\n      env.NO_COLOR !== undefined ||\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\n      // ANSI color control codes.\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\n      env.TERM === 'dumb') {\n    return COLORS_2;\n  }\n\n  if (process.platform === 'win32') {\n    // Lazy load for startup performance.\n    if (OSRelease === undefined) {\n      const { release } = require('os');\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\n    }\n    // Windows 10 build 10586 is the first Windows release that supports 256\n    // colors. Windows 10 build 14931 is the first release that supports\n    // 16m/TrueColor.\n    if (+OSRelease[0] >= 10) {\n      const build = +OSRelease[2];\n      if (build >= 14931)\n        return COLORS_16m;\n      if (build >= 10586)\n        return COLORS_256;\n    }\n\n    return COLORS_16;\n  }\n\n  if (env.TMUX) {\n    return COLORS_256;\n  }\n\n  if (env.CI) {\n    if ('TRAVIS' in env || 'CIRCLECI' in env || 'APPVEYOR' in env ||\n      'GITLAB_CI' in env || env.CI_NAME === 'codeship') {\n      return COLORS_256;\n    }\n    return COLORS_2;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return RegExpPrototypeTest(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) ?\n      COLORS_16 : COLORS_2;\n  }\n\n  switch (env.TERM_PROGRAM) {\n    case 'iTerm.app':\n      if (!env.TERM_PROGRAM_VERSION ||\n        RegExpPrototypeTest(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION)\n      ) {\n        return COLORS_256;\n      }\n      return COLORS_16m;\n    case 'HyperTerm':\n    case 'MacTerm':\n      return COLORS_16m;\n    case 'Apple_Terminal':\n      return COLORS_256;\n  }\n\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\n    return COLORS_16m;\n  }\n\n  if (env.TERM) {\n    if (RegExpPrototypeTest(/^xterm-256/\x2C env.TERM)) {\n      return COLORS_256;\n    }\n\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\n\n    if (TERM_ENVS[termEnv]) {\n      return TERM_ENVS[termEnv];\n    }\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\n                           (term) => RegExpPrototypeTest(term\x2C termEnv))) {\n      return COLORS_16;\n    }\n  }\n  // Move 16 color COLORTERM below 16m and 256\n  if (env.COLORTERM) {\n    return COLORS_16;\n  }\n  return COLORS_2;\n}\n\nfunction hasColors(count\x2C env) {\n  if (env === undefined &&\n      (count === undefined || (typeof count === 'object' && count !== null))) {\n    env = count;\n    count = 16;\n  } else {\n    validateInteger(count\x2C 'count'\x2C 2);\n  }\n\n  return count <= 2 ** getColorDepth(env);\n}\n\nmodule.exports = {\n  getColorDepth\x2C\n  hasColors\n};\n
code-source-info,0x3ba9d55b9e2e,172,0,6367,C0O0C4O6367,,
code-creation,Function,10,817385,0x3ba9d55ba28e,358, node:internal/tty:1:1,0x3ba9d55b9da8,~
code-source-info,0x3ba9d55ba28e,172,0,6367,C0O0C69O1186C75O1208C81O1231C87O1255C93O1329C99O1329C104O1309C110O1366C111O1366C113O1395C115O1395C117O1416C119O1416C121O1438C123O1438C125O1460C127O1460C129O1877C136O1890C142O1913C148O1937C154O1960C160O1983C166O2005C172O2026C178O2050C184O2074C190O2096C196O2119C202O2140C208O2163C214O2182C220O2287C226O2379C232O1877C234O2420C328O2420C330O2541C331O2541C333O6316C340O6337C346O6354C352O6331C357O6366,,
code-creation,LazyCompile,10,817883,0x3ba9d55bad2e,63,hasColors node:internal/tty:215:19,0x3ba9d55b9f00,~
code-source-info,0x3ba9d55bad2e,172,6059,6314,C0O6076C18O6185C21O6202C27O6229C41O6229C46O6272C52O6293C56O6290C59O6285C62O6312,,
code-creation,LazyCompile,10,818125,0x3ba9d55bbaa6,636,getColorDepth node:internal/tty:106:23,0x3ba9d55b9eb0,~
code-source-info,0x3ba9d55bbaa6,172,3180,6039,C7O3195C16O3335C22O3380C64O3453C67O3453C71O3491C75O3508C76O3533C79O3533C83O3571C87O3589C88O3614C91O3614C95O3652C99O3670C100O3694C104O3710C105O3732C111O3814C117O4044C124O4049C129O4067C133O4083C134O4091C137O4103C144O4112C149O4173C155O4230C161O4230C166O4218C171O4251C176O4284C183O4263C191O4261C197O4483C203O4497C206O4487C211O4501C216O4530C223O4540C226O4530C229O4551C233O4561C238O4579C242O4597C243O4604C247O4614C252O4632C256O4650C257O4662C261O4679C262O4695C268O4707C272O4725C273O4741C279O4751C284O4764C294O4785C304O4806C314O4834C319O4848C326O4856C331O4880C335O4898C336O4909C340O4925C341O4933C346O4956C351O4970C361O5034C366O4977C375O5060C381O5072C383O5081C384O5101C419O5154C427O5186C435O5222C440O5186C447O5262C451O5280C452O5295C456O5313C457O5362C461O5380C462O5414C466O5432C467O5448C474O5458C479O5481C486O5491C491O5510C495O5528C496O5544C509O5556C521O5598C526O5560C533O5613C539O5631C540O5659C547O5690C552O5659C556O5659C558O5702C567O5715C572O5734C581O5750C584O5760C585O5771C596O5794C604O5775C611O5895C617O5912C620O5980C626O5997C630O6014C631O6021C635O6037,,
code-creation,LazyCompile,10,818326,0x3ba9d55bbf5e,5,get node:internal/util/inspect:345:6,0x3ba999214ef0,~
script-source,14,node:internal/util/inspect,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeUnshift\x2C\n  BigIntPrototypeValueOf\x2C\n  BooleanPrototypeValueOf\x2C\n  DatePrototypeGetTime\x2C\n  DatePrototypeToISOString\x2C\n  DatePrototypeToString\x2C\n  ErrorPrototypeToString\x2C\n  FunctionPrototypeCall\x2C\n  FunctionPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGetSize\x2C\n  MapPrototypeEntries\x2C\n  MathFloor\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathRound\x2C\n  MathSqrt\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseFloat\x2C\n  NumberParseInt\x2C\n  NumberPrototypeValueOf\x2C\n  Object\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectPrototypePropertyIsEnumerable\x2C\n  ObjectSeal\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectOwnKeys\x2C\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  RegExpPrototypeToString\x2C\n  SafeStringIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SetPrototypeGetSize\x2C\n  SetPrototypeValues\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeNormalize\x2C\n  StringPrototypePadEnd\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  StringPrototypeValueOf\x2C\n  SymbolPrototypeToString\x2C\n  SymbolPrototypeValueOf\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n  Uint8Array\x2C\n  globalThis\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst {\n  getOwnNonIndexProperties\x2C\n  getPromiseDetails\x2C\n  getProxyDetails\x2C\n  kPending\x2C\n  kRejected\x2C\n  previewEntries\x2C\n  getConstructorName: internalGetConstructorName\x2C\n  getExternalValue\x2C\n  propertyFilter: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\n  }\n} = internalBinding('util');\n\nconst {\n  customInspectSymbol\x2C\n  isError\x2C\n  join\x2C\n  removeColors\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\n  }\x2C\n  isStackOverflowError\n} = require('internal/errors');\n\nconst {\n  isAsyncFunction\x2C\n  isGeneratorFunction\x2C\n  isAnyArrayBuffer\x2C\n  isArrayBuffer\x2C\n  isArgumentsObject\x2C\n  isBoxedPrimitive\x2C\n  isDataView\x2C\n  isExternal\x2C\n  isMap\x2C\n  isMapIterator\x2C\n  isModuleNamespaceObject\x2C\n  isNativeError\x2C\n  isPromise\x2C\n  isSet\x2C\n  isSetIterator\x2C\n  isWeakMap\x2C\n  isWeakSet\x2C\n  isRegExp\x2C\n  isDate\x2C\n  isTypedArray\x2C\n  isStringObject\x2C\n  isNumberObject\x2C\n  isBooleanObject\x2C\n  isBigIntObject\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst { NativeModule } = require('internal/bootstrap/loaders');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nlet hexSlice;\n\nconst builtInObjects = new SafeSet(\n  ArrayPrototypeFilter(\n    ObjectGetOwnPropertyNames(globalThis)\x2C\n    (e) => RegExpPrototypeTest(/^[A-Z][a-zA-Z0-9]+$/\x2C e)\n  )\n);\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\n\n// These options must stay in sync with `getUserOptions`. So if any option will\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\nconst inspectDefaultOptions = ObjectSeal({\n  showHidden: false\x2C\n  depth: 2\x2C\n  colors: false\x2C\n  customInspect: true\x2C\n  showProxy: false\x2C\n  maxArrayLength: 100\x2C\n  maxStringLength: 10000\x2C\n  breakLength: 80\x2C\n  compact: 3\x2C\n  sorted: false\x2C\n  getters: false\n});\n\nconst kObjectType = 0;\nconst kArrayType = 1;\nconst kArrayExtrasType = 2;\n\n/* eslint-disable no-control-regex */\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]/;\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]/g;\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]/;\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]/g;\n/* eslint-enable no-control-regex */\n\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\n\nconst coreModuleRegExp = /^    at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\n\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\n\nconst kMinLineLength = 16;\n\n// Constants to map the iterator state.\nconst kWeak = 0;\nconst kIterator = 1;\nconst kMapEntries = 2;\n\n// Escaped control characters (plus the single quote and the backslash). Use\n// empty strings to fill up unused entries.\nconst meta = [\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\n];\n\n// Regex used for ansi escape code splitting\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\n// Matches all ansi escape code sequences in a string\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\nconst ansi = new RegExp(ansiPattern\x2C 'g');\n\nlet getStringWidth;\n\nfunction getUserOptions(ctx\x2C isCrossContext) {\n  const ret = {\n    stylize: ctx.stylize\x2C\n    showHidden: ctx.showHidden\x2C\n    depth: ctx.depth\x2C\n    colors: ctx.colors\x2C\n    customInspect: ctx.customInspect\x2C\n    showProxy: ctx.showProxy\x2C\n    maxArrayLength: ctx.maxArrayLength\x2C\n    maxStringLength: ctx.maxStringLength\x2C\n    breakLength: ctx.breakLength\x2C\n    compact: ctx.compact\x2C\n    sorted: ctx.sorted\x2C\n    getters: ctx.getters\x2C\n    ...ctx.userOptions\n  };\n\n  // Typically\x2C the target value will be an instance of `Object`. If that is\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\n  // to avoid passing it objects from this Context in that case\x2C so we remove\n  // the prototype from the returned object itself + the `stylize()` function\x2C\n  // and remove all other non-primitives\x2C including non-primitive user options.\n  if (isCrossContext) {\n    ObjectSetPrototypeOf(ret\x2C null);\n    for (const key of ObjectKeys(ret)) {\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\n          ret[key] !== null) {\n        delete ret[key];\n      }\n    }\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\n      let stylized;\n      try {\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\n      } catch {}\n\n      if (typeof stylized !== 'string') return value;\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\n      return stylized;\n    }\x2C null);\n  }\n\n  return ret;\n}\n\n/**\n * Echos the value of any input. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {any} value The value to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\nfunction inspect(value\x2C opts) {\n  // Default options\n  const ctx = {\n    budget: {}\x2C\n    indentationLvl: 0\x2C\n    seen: []\x2C\n    currentDepth: 0\x2C\n    stylize: stylizeNoColor\x2C\n    showHidden: inspectDefaultOptions.showHidden\x2C\n    depth: inspectDefaultOptions.depth\x2C\n    colors: inspectDefaultOptions.colors\x2C\n    customInspect: inspectDefaultOptions.customInspect\x2C\n    showProxy: inspectDefaultOptions.showProxy\x2C\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\n    breakLength: inspectDefaultOptions.breakLength\x2C\n    compact: inspectDefaultOptions.compact\x2C\n    sorted: inspectDefaultOptions.sorted\x2C\n    getters: inspectDefaultOptions.getters\n  };\n  if (arguments.length > 1) {\n    // Legacy...\n    if (arguments.length > 2) {\n      if (arguments[2] !== undefined) {\n        ctx.depth = arguments[2];\n      }\n      if (arguments.length > 3 && arguments[3] !== undefined) {\n        ctx.colors = arguments[3];\n      }\n    }\n    // Set user-specified options\n    if (typeof opts === 'boolean') {\n      ctx.showHidden = opts;\n    } else if (opts) {\n      const optKeys = ObjectKeys(opts);\n      for (let i = 0; i < optKeys.length; ++i) {\n        const key = optKeys[i];\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\n        // this function public or add a new API with a similar or better\n        // functionality.\n        if (\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\n          key === 'stylize') {\n          ctx[key] = opts[key];\n        } else if (ctx.userOptions === undefined) {\n          // This is required to pass through the actual user input.\n          ctx.userOptions = opts;\n        }\n      }\n    }\n  }\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n  return formatValue(ctx\x2C value\x2C 0);\n}\ninspect.custom = customInspectSymbol;\n\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\n  get() {\n    return inspectDefaultOptions;\n  }\x2C\n  set(options) {\n    validateObject(options\x2C 'options');\n    return ObjectAssign(inspectDefaultOptions\x2C options);\n  }\n});\n\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n// Each color consists of an array with the color code as first entry and the\n// reset code as second entry.\nconst defaultFG = 39;\nconst defaultBG = 49;\ninspect.colors = ObjectAssign(ObjectCreate(null)\x2C {\n  reset: [0\x2C 0]\x2C\n  bold: [1\x2C 22]\x2C\n  dim: [2\x2C 22]\x2C // Alias: faint\n  italic: [3\x2C 23]\x2C\n  underline: [4\x2C 24]\x2C\n  blink: [5\x2C 25]\x2C\n  // Swap foreground and background colors\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\n  hidden: [8\x2C 28]\x2C // Alias: conceal\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\n  black: [30\x2C defaultFG]\x2C\n  red: [31\x2C defaultFG]\x2C\n  green: [32\x2C defaultFG]\x2C\n  yellow: [33\x2C defaultFG]\x2C\n  blue: [34\x2C defaultFG]\x2C\n  magenta: [35\x2C defaultFG]\x2C\n  cyan: [36\x2C defaultFG]\x2C\n  white: [37\x2C defaultFG]\x2C\n  bgBlack: [40\x2C defaultBG]\x2C\n  bgRed: [41\x2C defaultBG]\x2C\n  bgGreen: [42\x2C defaultBG]\x2C\n  bgYellow: [43\x2C defaultBG]\x2C\n  bgBlue: [44\x2C defaultBG]\x2C\n  bgMagenta: [45\x2C defaultBG]\x2C\n  bgCyan: [46\x2C defaultBG]\x2C\n  bgWhite: [47\x2C defaultBG]\x2C\n  framed: [51\x2C 54]\x2C\n  overlined: [53\x2C 55]\x2C\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\n  redBright: [91\x2C defaultFG]\x2C\n  greenBright: [92\x2C defaultFG]\x2C\n  yellowBright: [93\x2C defaultFG]\x2C\n  blueBright: [94\x2C defaultFG]\x2C\n  magentaBright: [95\x2C defaultFG]\x2C\n  cyanBright: [96\x2C defaultFG]\x2C\n  whiteBright: [97\x2C defaultFG]\x2C\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\n  bgRedBright: [101\x2C defaultBG]\x2C\n  bgGreenBright: [102\x2C defaultBG]\x2C\n  bgYellowBright: [103\x2C defaultBG]\x2C\n  bgBlueBright: [104\x2C defaultBG]\x2C\n  bgMagentaBright: [105\x2C defaultBG]\x2C\n  bgCyanBright: [106\x2C defaultBG]\x2C\n  bgWhiteBright: [107\x2C defaultBG]\x2C\n});\n\nfunction defineColorAlias(target\x2C alias) {\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\n    get() {\n      return this[target];\n    }\x2C\n    set(value) {\n      this[target] = value;\n    }\x2C\n    configurable: true\x2C\n    enumerable: false\n  });\n}\n\ndefineColorAlias('gray'\x2C 'grey');\ndefineColorAlias('gray'\x2C 'blackBright');\ndefineColorAlias('bgGray'\x2C 'bgGrey');\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\ndefineColorAlias('dim'\x2C 'faint');\ndefineColorAlias('strikethrough'\x2C 'crossedout');\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\ndefineColorAlias('hidden'\x2C 'conceal');\ndefineColorAlias('inverse'\x2C 'swapColors');\ndefineColorAlias('inverse'\x2C 'swapcolors');\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\n\n// TODO(BridgeAR): Add function style support for more complex styles.\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = ObjectAssign(ObjectCreate(null)\x2C {\n  special: 'cyan'\x2C\n  number: 'yellow'\x2C\n  bigint: 'yellow'\x2C\n  boolean: 'yellow'\x2C\n  undefined: 'grey'\x2C\n  null: 'bold'\x2C\n  string: 'green'\x2C\n  symbol: 'green'\x2C\n  date: 'magenta'\x2C\n  // "name": intentionally not styling\n  // TODO(BridgeAR): Highlight regular expressions properly.\n  regexp: 'red'\x2C\n  module: 'underline'\n});\n\nfunction addQuotes(str\x2C quotes) {\n  if (quotes === -1) {\n    return `"${str}"`;\n  }\n  if (quotes === -2) {\n    return `\\`${str}\\``;\n  }\n  return `'${str}'`;\n}\n\nconst escapeFn = (str) => meta[StringPrototypeCharCodeAt(str)];\n\n// Escape control characters\x2C single quotes and the backslash.\n// This is similar to JSON stringify escaping.\nfunction strEscape(str) {\n  let escapeTest = strEscapeSequencesRegExp;\n  let escapeReplace = strEscapeSequencesReplacer;\n  let singleQuote = 39;\n\n  // Check for double quotes. If not present\x2C do not escape single quotes and\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\n  // backticks. If they do not exist\x2C use those as fallback instead of the\n  // double quotes.\n  if (StringPrototypeIncludes(str\x2C "'")) {\n    // This invalidates the charCode and therefore can not be matched for\n    // anymore.\n    if (!StringPrototypeIncludes(str\x2C '"')) {\n      singleQuote = -1;\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\n               !StringPrototypeIncludes(str\x2C '${')) {\n      singleQuote = -2;\n    }\n    if (singleQuote !== 39) {\n      escapeTest = strEscapeSequencesRegExpSingle;\n      escapeReplace = strEscapeSequencesReplacerSingle;\n    }\n  }\n\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\n  if (str.length < 5000 && !RegExpPrototypeTest(escapeTest\x2C str))\n    return addQuotes(str\x2C singleQuote);\n  if (str.length > 100) {\n    str = StringPrototypeReplace(str\x2C escapeReplace\x2C escapeFn);\n    return addQuotes(str\x2C singleQuote);\n  }\n\n  let result = '';\n  let last = 0;\n  const lastIndex = str.length;\n  for (let i = 0; i < lastIndex; i++) {\n    const point = StringPrototypeCharCodeAt(str\x2C i);\n    if (point === singleQuote ||\n        point === 92 ||\n        point < 32 ||\n        (point > 126 && point < 160)) {\n      if (last === i) {\n        result += meta[point];\n      } else {\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\n      }\n      last = i + 1;\n    }\n  }\n\n  if (last !== lastIndex) {\n    result += StringPrototypeSlice(str\x2C last);\n  }\n  return addQuotes(result\x2C singleQuote);\n}\n\nfunction stylizeWithColor(str\x2C styleType) {\n  const style = inspect.styles[styleType];\n  if (style !== undefined) {\n    const color = inspect.colors[style];\n    if (color !== undefined)\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\n  }\n  return str;\n}\n\nfunction stylizeNoColor(str) {\n  return str;\n}\n\n// Return a new empty array to push in the results of the default formatter.\nfunction getEmptyFormatArray() {\n  return [];\n}\n\nfunction isInstanceof(object\x2C proto) {\n  try {\n    return object instanceof proto;\n  } catch {\n    return false;\n  }\n}\n\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\n  let firstProto;\n  const tmp = obj;\n  while (obj || isUndetectableObject(obj)) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '' &&\n        isInstanceof(tmp\x2C descriptor.value)) {\n      if (protoProps !== undefined &&\n         (firstProto !== obj ||\n         !builtInObjects.has(descriptor.value.name))) {\n        addPrototypeProperties(\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\n      }\n      return descriptor.value.name;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n    if (firstProto === undefined) {\n      firstProto = obj;\n    }\n  }\n\n  if (firstProto === null) {\n    return null;\n  }\n\n  const res = internalGetConstructorName(tmp);\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return `${res} <Complex prototype>`;\n  }\n\n  const protoConstr = getConstructorName(\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\n\n  if (protoConstr === null) {\n    return `${res} <${inspect(firstProto\x2C {\n      ...ctx\x2C\n      customInspect: false\x2C\n      depth: -1\n    })}>`;\n  }\n\n  return `${res} <${protoConstr}>`;\n}\n\n// This function has the side effect of adding prototype properties to the\n// `output` argument (which is an array). This is intended to highlight user\n// defined prototype properties.\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\n  let depth = 0;\n  let keys;\n  let keySet;\n  do {\n    if (depth !== 0 || main === obj) {\n      obj = ObjectGetPrototypeOf(obj);\n      // Stop as soon as a null prototype is encountered.\n      if (obj === null) {\n        return;\n      }\n      // Stop as soon as a built-in object type is detected.\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n      if (descriptor !== undefined &&\n          typeof descriptor.value === 'function' &&\n          builtInObjects.has(descriptor.value.name)) {\n        return;\n      }\n    }\n\n    if (depth === 0) {\n      keySet = new SafeSet();\n    } else {\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\n    }\n    // Get all own property names and symbols.\n    keys = ReflectOwnKeys(obj);\n    ArrayPrototypePush(ctx.seen\x2C main);\n    for (const key of keys) {\n      // Ignore the `constructor` property and keys that exist on layers above.\n      if (key === 'constructor' ||\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\n          (depth !== 0 && keySet.has(key))) {\n        continue;\n      }\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n      if (typeof desc.value === 'function') {\n        continue;\n      }\n      const value = formatProperty(\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\n      if (ctx.colors) {\n        // Faint!\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\n      } else {\n        ArrayPrototypePush(output\x2C value);\n      }\n    }\n    ArrayPrototypePop(ctx.seen);\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\n  // is not a good choice here\x2C because it's as if the properties are declared\n  // on the current object from the users perspective.\n  } while (++depth !== 3);\n}\n\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\n  if (constructor === null) {\n    if (tag !== '' && fallback !== tag) {\n      return `[${fallback}${size}: null prototype] [${tag}] `;\n    }\n    return `[${fallback}${size}: null prototype] `;\n  }\n\n  if (tag !== '' && constructor !== tag) {\n    return `${constructor}${size} [${tag}] `;\n  }\n  return `${constructor}${size} `;\n}\n\n// Look up the keys of the object.\nfunction getKeys(value\x2C showHidden) {\n  let keys;\n  const symbols = ObjectGetOwnPropertySymbols(value);\n  if (showHidden) {\n    keys = ObjectGetOwnPropertyNames(value);\n    if (symbols.length !== 0)\n      ArrayPrototypePushApply(keys\x2C symbols);\n  } else {\n    // This might throw if `value` is a Module Namespace Object from an\n    // unevaluated module\x2C but we don't want to perform the actual type\n    // check because it's expensive.\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\n    // and modify this logic as needed.\n    try {\n      keys = ObjectKeys(value);\n    } catch (err) {\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\n             isModuleNamespaceObject(value));\n      keys = ObjectGetOwnPropertyNames(value);\n    }\n    if (symbols.length !== 0) {\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\n    }\n  }\n  return keys;\n}\n\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\n  let fallback = '';\n  if (constructor === null) {\n    fallback = internalGetConstructorName(value);\n    if (fallback === tag) {\n      fallback = 'Object';\n    }\n  }\n  return getPrefix(constructor\x2C tag\x2C fallback);\n}\n\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\n  }\n  recurseTimes += 1;\n  ctx.indentationLvl += 2;\n  const res = [\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\n  ];\n  ctx.indentationLvl -= 2;\n  return reduceToSingleString(\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\n}\n\n// Note: using `formatValue` directly requires the indentation level to be\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\n// value afterwards again.\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\n  // Primitive types cannot have properties.\n  if (typeof value !== 'object' &&\n      typeof value !== 'function' &&\n      !isUndetectableObject(value)) {\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\n  }\n  if (value === null) {\n    return ctx.stylize('null'\x2C 'null');\n  }\n\n  // Memorize the context for custom inspection on proxies.\n  const context = value;\n  // Always check for proxies to prevent side effects and to prevent triggering\n  // any proxy handlers.\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\n  if (proxy !== undefined) {\n    if (ctx.showProxy) {\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\n    }\n    value = proxy;\n  }\n\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it.\n  if (ctx.customInspect) {\n    const maybeCustom = value[customInspectSymbol];\n    if (typeof maybeCustom === 'function' &&\n        // Filter out the util module\x2C its inspect function is special.\n        maybeCustom !== inspect &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)) {\n      // This makes sure the recurseTimes are reported as before while using\n      // a counter internally.\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\n      const isCrossContext =\n        proxy !== undefined || !(context instanceof Object);\n      const ret = FunctionPrototypeCall(\n        maybeCustom\x2C context\x2C depth\x2C getUserOptions(ctx\x2C isCrossContext));\n      // If the custom inspection method returned `this`\x2C don't go into\n      // infinite recursion.\n      if (ret !== context) {\n        if (typeof ret !== 'string') {\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\n        }\n        return ret.replace(/\\n/g\x2C `\\n${' '.repeat(ctx.indentationLvl)}`);\n      }\n    }\n  }\n\n  // Using an array here is actually better for the average case than using\n  // a Set. `seen` will only check for the depth and will never grow too large.\n  if (ctx.seen.includes(value)) {\n    let index = 1;\n    if (ctx.circular === undefined) {\n      ctx.circular = new SafeMap();\n      ctx.circular.set(value\x2C index);\n    } else {\n      index = ctx.circular.get(value);\n      if (index === undefined) {\n        index = ctx.circular.size + 1;\n        ctx.circular.set(value\x2C index);\n      }\n    }\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\n  }\n\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\n}\n\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\n  let keys;\n  let protoProps;\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\n    protoProps = [];\n  }\n\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\n  // Reset the variable to check for this later on.\n  if (protoProps !== undefined && protoProps.length === 0) {\n    protoProps = undefined;\n  }\n\n  let tag = value[SymbolToStringTag];\n  // Only list the tag in case it's non-enumerable / not an own property.\n  // Otherwise we'd print this twice.\n  if (typeof tag !== 'string' ||\n      (tag !== '' &&\n      (ctx.showHidden ?\n        ObjectPrototypeHasOwnProperty :\n        ObjectPrototypePropertyIsEnumerable)(\n        value\x2C SymbolToStringTag\n      ))) {\n    tag = '';\n  }\n  let base = '';\n  let formatter = getEmptyFormatArray;\n  let braces;\n  let noIterator = true;\n  let i = 0;\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n\n  let extrasType = kObjectType;\n\n  // Iterators and the rest are split to reduce checks.\n  // We have to check all values in case the constructor is set to null.\n  // Otherwise it would not possible to identify all types properly.\n  if (value[SymbolIterator] || constructor === null) {\n    noIterator = false;\n    if (ArrayIsArray(value)) {\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\n      const prefix = (constructor !== 'Array' || tag !== '') ?\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\n        '';\n      keys = getOwnNonIndexProperties(value\x2C filter);\n      braces = [`${prefix}[`\x2C ']'];\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\n        return `${braces[0]}]`;\n      extrasType = kArrayExtrasType;\n      formatter = formatArray;\n    } else if (isSet(value)) {\n      const size = SetPrototypeGetSize(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\n      keys = getKeys(value\x2C ctx.showHidden);\n      formatter = constructor !== null ?\n        formatSet.bind(null\x2C value) :\n        formatSet.bind(null\x2C SetPrototypeValues(value));\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\n        return `${prefix}{}`;\n      braces = [`${prefix}{`\x2C '}'];\n    } else if (isMap(value)) {\n      const size = MapPrototypeGetSize(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\n      keys = getKeys(value\x2C ctx.showHidden);\n      formatter = constructor !== null ?\n        formatMap.bind(null\x2C value) :\n        formatMap.bind(null\x2C MapPrototypeEntries(value));\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\n        return `${prefix}{}`;\n      braces = [`${prefix}{`\x2C '}'];\n    } else if (isTypedArray(value)) {\n      keys = getOwnNonIndexProperties(value\x2C filter);\n      let bound = value;\n      let fallback = '';\n      if (constructor === null) {\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\n        // Reconstruct the array information.\n        bound = new primordials[fallback](value);\n      }\n      const size = TypedArrayPrototypeGetLength(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\n      braces = [`${prefix}[`\x2C ']'];\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\n        return `${braces[0]}]`;\n      // Special handle the value. The original value is required below. The\n      // bound function is required to reconstruct missing information.\n      formatter = formatTypedArray.bind(null\x2C bound\x2C size);\n      extrasType = kArrayExtrasType;\n    } else if (isMapIterator(value)) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = getIteratorBraces('Map'\x2C tag);\n      // Add braces to the formatter parameters.\n      formatter = formatIterator.bind(null\x2C braces);\n    } else if (isSetIterator(value)) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = getIteratorBraces('Set'\x2C tag);\n      // Add braces to the formatter parameters.\n      formatter = formatIterator.bind(null\x2C braces);\n    } else {\n      noIterator = true;\n    }\n  }\n  if (noIterator) {\n    keys = getKeys(value\x2C ctx.showHidden);\n    braces = ['{'\x2C '}'];\n    if (constructor === 'Object') {\n      if (isArgumentsObject(value)) {\n        braces[0] = '[Arguments] {';\n      } else if (tag !== '') {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\n      }\n      if (keys.length === 0 && protoProps === undefined) {\n        return `${braces[0]}}`;\n      }\n    } else if (typeof value === 'function') {\n      base = getFunctionBase(value\x2C constructor\x2C tag);\n      if (keys.length === 0 && protoProps === undefined)\n        return ctx.stylize(base\x2C 'special');\n    } else if (isRegExp(value)) {\n      // Make RegExps say that they are RegExps\n      base = RegExpPrototypeToString(\n        constructor !== null ? value : new RegExp(value)\n      );\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\n      if (prefix !== 'RegExp ')\n        base = `${prefix}${base}`;\n      if ((keys.length === 0 && protoProps === undefined) ||\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\n        return ctx.stylize(base\x2C 'regexp');\n      }\n    } else if (isDate(value)) {\n      // Make dates with properties first say the date\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\n        DatePrototypeToString(value) :\n        DatePrototypeToISOString(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\n      if (prefix !== 'Date ')\n        base = `${prefix}${base}`;\n      if (keys.length === 0 && protoProps === undefined) {\n        return ctx.stylize(base\x2C 'date');\n      }\n    } else if (isError(value)) {\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\n      if (keys.length === 0 && protoProps === undefined)\n        return base;\n    } else if (isAnyArrayBuffer(value)) {\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\n      // Can't do the same for DataView because it has a non-primitive\n      // .buffer property that we need to recurse for.\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\n        'SharedArrayBuffer';\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\n      if (typedArray === undefined) {\n        formatter = formatArrayBuffer;\n      } else if (keys.length === 0 && protoProps === undefined) {\n        return prefix +\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength)} }`;\n      }\n      braces[0] = `${prefix}{`;\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\n    } else if (isDataView(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\n      // .buffer goes last\x2C it's not a primitive like the others.\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\n    } else if (isPromise(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\n      formatter = formatPromise;\n    } else if (isWeakSet(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\n    } else if (isWeakMap(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\n    } else if (isModuleNamespaceObject(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\n      // Special handle keys for namespace objects.\n      formatter = formatNamespaceObject.bind(null\x2C keys);\n    } else if (isBoxedPrimitive(value)) {\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\n      if (keys.length === 0 && protoProps === undefined) {\n        return base;\n      }\n    } else {\n      if (keys.length === 0 && protoProps === undefined) {\n        if (isExternal(value)) {\n          const address = getExternalValue(value).toString(16);\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\n        }\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\n      }\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\n    }\n  }\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    let constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\n    if (constructor !== null)\n      constructorName = `[${constructorName}]`;\n    return ctx.stylize(constructorName\x2C 'special');\n  }\n  recurseTimes += 1;\n\n  ctx.seen.push(value);\n  ctx.currentDepth = recurseTimes;\n  let output;\n  const indentationLvl = ctx.indentationLvl;\n  try {\n    output = formatter(ctx\x2C value\x2C recurseTimes);\n    for (i = 0; i < keys.length; i++) {\n      output.push(\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType));\n    }\n    if (protoProps !== undefined) {\n      output.push(...protoProps);\n    }\n  } catch (err) {\n    const constructorName = getCtxStyle(value\x2C constructor\x2C tag).slice(0\x2C -1);\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\n  }\n  if (ctx.circular !== undefined) {\n    const index = ctx.circular.get(value);\n    if (index !== undefined) {\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\n      // Add reference always to the very beginning of the output.\n      if (ctx.compact !== true) {\n        base = base === '' ? reference : `${reference} ${base}`;\n      } else {\n        braces[0] = `${reference} ${braces[0]}`;\n      }\n    }\n  }\n  ctx.seen.pop();\n\n  if (ctx.sorted) {\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\n    if (extrasType === kObjectType) {\n      output = output.sort(comparator);\n    } else if (keys.length > 1) {\n      const sorted = output.slice(output.length - keys.length).sort(comparator);\n      output.splice(output.length - keys.length\x2C keys.length\x2C ...sorted);\n    }\n  }\n\n  const res = reduceToSingleString(\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\n  const newLength = budget + res.length;\n  ctx.budget[ctx.indentationLvl] = newLength;\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\n  // This limit also makes sure that huge objects don't block the event loop\n  // significantly.\n  if (newLength > 2 ** 27) {\n    ctx.depth = -1;\n  }\n  return res;\n}\n\nfunction getIteratorBraces(type\x2C tag) {\n  if (tag !== `${type} Iterator`) {\n    if (tag !== '')\n      tag += '] [';\n    tag += `${type} Iterator`;\n  }\n  return [`[${tag}] {`\x2C '}'];\n}\n\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\n  let fn;\n  let type;\n  if (isNumberObject(value)) {\n    fn = NumberPrototypeValueOf;\n    type = 'Number';\n  } else if (isStringObject(value)) {\n    fn = StringPrototypeValueOf;\n    type = 'String';\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\n    // since they just noisy up the output and are redundant\n    // Make boxed primitive Strings look like such\n    keys.splice(0\x2C value.length);\n  } else if (isBooleanObject(value)) {\n    fn = BooleanPrototypeValueOf;\n    type = 'Boolean';\n  } else if (isBigIntObject(value)) {\n    fn = BigIntPrototypeValueOf;\n    type = 'BigInt';\n  } else {\n    fn = SymbolPrototypeValueOf;\n    type = 'Symbol';\n  }\n  let base = `[${type}`;\n  if (type !== constructor) {\n    if (constructor === null) {\n      base += ' (null prototype)';\n    } else {\n      base += ` (${constructor})`;\n    }\n  }\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\n  if (tag !== '' && tag !== constructor) {\n    base += ` [${tag}]`;\n  }\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\n    return base;\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\n}\n\nfunction getClassBase(value\x2C constructor\x2C tag) {\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\n  const name = (hasName && value.name) || '(anonymous)';\n  let base = `class ${name}`;\n  if (constructor !== 'Function' && constructor !== null) {\n    base += ` [${constructor}]`;\n  }\n  if (tag !== '' && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  if (constructor !== null) {\n    const superName = ObjectGetPrototypeOf(value).name;\n    if (superName) {\n      base += ` extends ${superName}`;\n    }\n  } else {\n    base += ' extends [null prototype]';\n  }\n  return `[${base}]`;\n}\n\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\n  const stringified = FunctionPrototypeToString(value);\n  if (stringified.slice(0\x2C 5) === 'class' && stringified.endsWith('}')) {\n    const slice = stringified.slice(5\x2C -1);\n    const bracketIndex = slice.indexOf('{');\n    if (bracketIndex !== -1 &&\n        (!slice.slice(0\x2C bracketIndex).includes('(') ||\n          // Slow path to guarantee that it's indeed a class.\n          classRegExp.test(slice.replace(stripCommentsRegExp)))) {\n      return getClassBase(value\x2C constructor\x2C tag);\n    }\n  }\n  let type = 'Function';\n  if (isGeneratorFunction(value)) {\n    type = `Generator${type}`;\n  }\n  if (isAsyncFunction(value)) {\n    type = `Async${type}`;\n  }\n  let base = `[${type}`;\n  if (constructor === null) {\n    base += ' (null prototype)';\n  }\n  if (value.name === '') {\n    base += ' (anonymous)';\n  } else {\n    base += `: ${value.name}`;\n  }\n  base += ']';\n  if (constructor !== type && constructor !== null) {\n    base += ` ${constructor}`;\n  }\n  if (tag !== '' && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  return base;\n}\n\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\n  const name = err.name != null ? String(err.name) : 'Error';\n  let len = name.length;\n  let stack = err.stack ? String(err.stack) : ErrorPrototypeToString(err);\n\n  // Do not "duplicate" error properties that are already included in the output\n  // otherwise.\n  if (!ctx.showHidden && keys.length !== 0) {\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\n      const index = keys.indexOf(name);\n      // Only hide the property in case it's part of the original stack\n      if (index !== -1 && stack.includes(err[name])) {\n        keys.splice(index\x2C 1);\n      }\n    }\n  }\n\n  // A stack trace may contain arbitrary data. Only manipulate the output\n  // for "regular errors" (errors that "look normal") for now.\n  if (constructor === null ||\n      (name.endsWith('Error') &&\n      stack.startsWith(name) &&\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\n    let fallback = 'Error';\n    if (constructor === null) {\n      const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/) ||\n        stack.match(/^([a-z_A-Z0-9-]*Error)$/);\n      fallback = (start && start[1]) || '';\n      len = fallback.length;\n      fallback = fallback || 'Error';\n    }\n    const prefix = getPrefix(constructor\x2C tag\x2C fallback).slice(0\x2C -1);\n    if (name !== prefix) {\n      if (prefix.includes(name)) {\n        if (len === 0) {\n          stack = `${prefix}: ${stack}`;\n        } else {\n          stack = `${prefix}${stack.slice(len)}`;\n        }\n      } else {\n        stack = `${prefix} [${name}]${stack.slice(len)}`;\n      }\n    }\n  }\n  // Ignore the error message if it's contained in the stack.\n  let pos = (err.message && stack.indexOf(err.message)) || -1;\n  if (pos !== -1)\n    pos += err.message.length;\n  // Wrap the error in brackets in case it has no stack trace.\n  const stackStart = stack.indexOf('\\n    at'\x2C pos);\n  if (stackStart === -1) {\n    stack = `[${stack}]`;\n  } else if (ctx.colors) {\n    // Highlight userland code and node modules.\n    let newStack = stack.slice(0\x2C stackStart);\n    const lines = stack.slice(stackStart + 1).split('\\n');\n    for (const line of lines) {\n      const core = line.match(coreModuleRegExp);\n      if (core !== null && NativeModule.exists(core[1])) {\n        newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\n      } else {\n        // This adds underscores to all node_modules to quickly identify them.\n        let nodeModule;\n        newStack += '\\n';\n        let pos = 0;\n        while (nodeModule = nodeModulesRegExp.exec(line)) {\n          // '/node_modules/'.length === 14\n          newStack += line.slice(pos\x2C nodeModule.index + 14);\n          newStack += ctx.stylize(nodeModule[1]\x2C 'module');\n          pos = nodeModule.index + nodeModule[0].length;\n        }\n        newStack += pos === 0 ? line : line.slice(pos);\n      }\n    }\n    stack = newStack;\n  }\n  // The message and the stack have to be indented as well!\n  if (ctx.indentationLvl !== 0) {\n    const indentation = ' '.repeat(ctx.indentationLvl);\n    stack = stack.replace(/\\n/g\x2C `\\n${indentation}`);\n  }\n  return stack;\n}\n\nfunction groupArrayElements(ctx\x2C output\x2C value) {\n  let totalLength = 0;\n  let maxLength = 0;\n  let i = 0;\n  let outputLength = output.length;\n  if (ctx.maxArrayLength < output.length) {\n    // This makes sure the "... n more items" part is not taken into account.\n    outputLength--;\n  }\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\n  const dataLen = new Array(outputLength);\n  // Calculate the total length of all output entries and the individual max\n  // entries length of all output entries. We have to remove colors first\x2C\n  // otherwise the length would not be calculated properly.\n  for (; i < outputLength; i++) {\n    const len = getStringWidth(output[i]\x2C ctx.colors);\n    dataLen[i] = len;\n    totalLength += len + separatorSpace;\n    if (maxLength < len)\n      maxLength = len;\n  }\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\n  // in-between two entries.\n  const actualMax = maxLength + separatorSpace;\n  // Check if at least three entries fit next to each other and prevent grouping\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\n  // space in-between small entries would be enormous.\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\n\n    const approxCharHeights = 2.5;\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\n    // Dynamically check how many columns seem possible.\n    const columns = MathMin(\n      // Ideally a square should be drawn. We expect a character to be about 2.5\n      // times as high as wide. This is the area formula to calculate a square\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\n      // Divide that by `actualMax` to receive the correct number of columns.\n      // The added bias increases the columns for short entries.\n      MathRound(\n        MathSqrt(\n          approxCharHeights * biasedMax * outputLength\n        ) / biasedMax\n      )\x2C\n      // Do not exceed the breakLength.\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\n      // Limit array grouping for small `compact` modes as the user requested\n      // minimal grouping.\n      ctx.compact * 4\x2C\n      // Limit the columns to a maximum of fifteen.\n      15\n    );\n    // Return with the original output if no grouping should happen.\n    if (columns <= 1) {\n      return output;\n    }\n    const tmp = [];\n    const maxLineLength = [];\n    for (let i = 0; i < columns; i++) {\n      let lineMaxLength = 0;\n      for (let j = i; j < output.length; j += columns) {\n        if (dataLen[j] > lineMaxLength)\n          lineMaxLength = dataLen[j];\n      }\n      lineMaxLength += separatorSpace;\n      maxLineLength[i] = lineMaxLength;\n    }\n    let order = StringPrototypePadStart;\n    if (value !== undefined) {\n      for (let i = 0; i < output.length; i++) {\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\n          order = StringPrototypePadEnd;\n          break;\n        }\n      }\n    }\n    // Each iteration creates a single line of grouped entries.\n    for (let i = 0; i < outputLength; i += columns) {\n      // The last lines may contain less entries than columns.\n      const max = MathMin(i + columns\x2C outputLength);\n      let str = '';\n      let j = i;\n      for (; j < max - 1; j++) {\n        // Calculate extra color padding in case it's active. This has to be\n        // done line by line as some lines might contain more colors than\n        // others.\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\n      }\n      if (order === StringPrototypePadStart) {\n        const padding = maxLineLength[j - i] +\n                        output[j].length -\n                        dataLen[j] -\n                        separatorSpace;\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\n      } else {\n        str += output[j];\n      }\n      ArrayPrototypePush(tmp\x2C str);\n    }\n    if (ctx.maxArrayLength < output.length) {\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\n    }\n    output = tmp;\n  }\n  return output;\n}\n\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\n  if (isStackOverflowError(err)) {\n    ctx.seen.pop();\n    ctx.indentationLvl = indentationLvl;\n    return ctx.stylize(\n      `[${constructorName}: Inspection interrupted ` +\n        'prematurely. Maximum call stack size exceeded.]'\x2C\n      'special'\n    );\n  }\n  /* c8 ignore next */\n  assert.fail(err.stack);\n}\n\nfunction formatNumber(fn\x2C value) {\n  // Format -0 as '-0'. Checking `value === -0` won't distinguish 0 from -0.\n  return fn(ObjectIs(value\x2C -0) ? '-0' : `${value}`\x2C 'number');\n}\n\nfunction formatBigInt(fn\x2C value) {\n  return fn(`${value}n`\x2C 'bigint');\n}\n\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\n  if (typeof value === 'string') {\n    let trailer = '';\n    if (value.length > ctx.maxStringLength) {\n      const remaining = value.length - ctx.maxStringLength;\n      value = value.slice(0\x2C ctx.maxStringLength);\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\n    }\n    if (ctx.compact !== true &&\n        // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n        // function.\n        value.length > kMinLineLength &&\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\n      return value\n        .split(/(?<=\\n)/)\n        .map((line) => fn(strEscape(line)\x2C 'string'))\n        .join(` +\\n${' '.repeat(ctx.indentationLvl + 2)}`) + trailer;\n    }\n    return fn(strEscape(value)\x2C 'string') + trailer;\n  }\n  if (typeof value === 'number')\n    return formatNumber(fn\x2C value);\n  if (typeof value === 'bigint')\n    return formatBigInt(fn\x2C value);\n  if (typeof value === 'boolean')\n    return fn(`${value}`\x2C 'boolean');\n  if (typeof value === 'undefined')\n    return fn('undefined'\x2C 'undefined');\n  // es6 symbol primitive\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\n}\n\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\n  const output = new Array(keys.length);\n  for (let i = 0; i < keys.length; i++) {\n    try {\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\n                                 kObjectType);\n    } catch (err) {\n      assert(isNativeError(err) && err.name === 'ReferenceError');\n      // Use the existing functionality. This makes sure the indentation and\n      // line breaks are always correct. Otherwise it is very difficult to keep\n      // this aligned\x2C even though this is a hacky way of dealing with this.\n      const tmp = { [keys[i]]: '' };\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\n      const pos = output[i].lastIndexOf(' ');\n      // We have to find the last whitespace and have to replace that value as\n      // it will be visualized as a regular string.\n      output[i] = output[i].slice(0\x2C pos + 1) +\n                  ctx.stylize('<uninitialized>'\x2C 'special');\n    }\n  }\n  // Reset the keys to an empty array. This prevents duplicated inspection.\n  keys.length = 0;\n  return output;\n}\n\n// The array is sparse and/or has extra keys\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\n  const keys = ObjectKeys(value);\n  let index = i;\n  for (; i < keys.length && output.length < maxLength; i++) {\n    const key = keys[i];\n    const tmp = +key;\n    // Arrays can only have up to 2^32 - 1 entries\n    if (tmp > 2 ** 32 - 2) {\n      break;\n    }\n    if (`${index}` !== key) {\n      if (!numberRegExp.test(key)) {\n        break;\n      }\n      const emptyItems = tmp - index;\n      const ending = emptyItems > 1 ? 's' : '';\n      const message = `<${emptyItems} empty item${ending}>`;\n      output.push(ctx.stylize(message\x2C 'undefined'));\n      index = tmp;\n      if (output.length === maxLength) {\n        break;\n      }\n    }\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\n    index++;\n  }\n  const remaining = value.length - index;\n  if (output.length !== maxLength) {\n    if (remaining > 0) {\n      const ending = remaining > 1 ? 's' : '';\n      const message = `<${remaining} empty item${ending}>`;\n      output.push(ctx.stylize(message\x2C 'undefined'));\n    }\n  } else if (remaining > 0) {\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  }\n  return output;\n}\n\nfunction formatArrayBuffer(ctx\x2C value) {\n  let buffer;\n  try {\n    buffer = new Uint8Array(value);\n  } catch {\n    return [ctx.stylize('(detached)'\x2C 'special')];\n  }\n  if (hexSlice === undefined)\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\n  let str = StringPrototypeTrim(StringPrototypeReplace(\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\n    /(.{2})/g\x2C '$1 '));\n  const remaining = buffer.length - ctx.maxArrayLength;\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\n}\n\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\n  const valLen = value.length;\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    // Special handle sparse arrays.\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\n    }\n    output.push(formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\n  }\n  if (remaining > 0)\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  return output;\n}\n\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = value.length - maxLength;\n  const output = new Array(maxLength);\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\n    formatNumber :\n    formatBigInt;\n  for (let i = 0; i < maxLength; ++i)\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]);\n  if (remaining > 0) {\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\n  }\n  if (ctx.showHidden) {\n    // .buffer goes last\x2C it's not a primitive like the others.\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\n    ctx.indentationLvl += 2;\n    for (const key of [\n      'BYTES_PER_ELEMENT'\x2C\n      'length'\x2C\n      'byteLength'\x2C\n      'byteOffset'\x2C\n      'buffer'\x2C\n    ]) {\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\n    }\n    ctx.indentationLvl -= 2;\n  }\n  return output;\n}\n\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const output = [];\n  ctx.indentationLvl += 2;\n  for (const v of value) {\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\n  }\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const output = [];\n  ctx.indentationLvl += 2;\n  for (const { 0: k\x2C 1: v } of value) {\n    output.push(\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\n    );\n  }\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\n  const output = new Array(maxLength);\n  ctx.indentationLvl += 2;\n  for (let i = 0; i < maxLength; i++) {\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\n  }\n  ctx.indentationLvl -= 2;\n  if (state === kWeak && !ctx.sorted) {\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    ArrayPrototypeSort(output);\n  }\n  const remaining = entries.length - maxLength;\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C\n                       `... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  }\n  return output;\n}\n\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\n  const len = entries.length / 2;\n  const remaining = len - maxArrayLength;\n  const maxLength = MathMin(maxArrayLength\x2C len);\n  let output = new Array(maxLength);\n  let i = 0;\n  ctx.indentationLvl += 2;\n  if (state === kWeak) {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      output[i] =\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\n    }\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    if (!ctx.sorted)\n      output = output.sort();\n  } else {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      const res = [\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\n      ];\n      output[i] = reduceToSingleString(\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\n    }\n  }\n  ctx.indentationLvl -= 2;\n  if (remaining > 0) {\n    output.push(`... ${remaining} more item${remaining > 1 ? 's' : ''}`);\n  }\n  return output;\n}\n\nfunction formatWeakCollection(ctx) {\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\n}\n\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\n  const entries = previewEntries(value);\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\n  const entries = previewEntries(value);\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\n  if (isKeyValue) {\n    // Mark entry iterators as such.\n    braces[0] = braces[0].replace(/ Iterator] {$/\x2C ' Entries] {');\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\n  }\n\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\n}\n\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\n  let output;\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\n  if (state === kPending) {\n    output = [ctx.stylize('<pending>'\x2C 'special')];\n  } else {\n    ctx.indentationLvl += 2;\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\n    ctx.indentationLvl -= 2;\n    output = [\n      state === kRejected ?\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\n        str\x2C\n    ];\n  }\n  return output;\n}\n\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\n                        original = value) {\n  let name\x2C str;\n  let extra = ' ';\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\n    { value: value[key]\x2C enumerable: true };\n  if (desc.value !== undefined) {\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\n    ctx.indentationLvl += diff;\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\n      extra = `\\n${' '.repeat(ctx.indentationLvl)}`;\n    }\n    ctx.indentationLvl -= diff;\n  } else if (desc.get !== undefined) {\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\n    const s = ctx.stylize;\n    const sp = 'special';\n    if (ctx.getters && (ctx.getters === true ||\n          (ctx.getters === 'get' && desc.set === undefined) ||\n          (ctx.getters === 'set' && desc.set !== undefined))) {\n      try {\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\n        ctx.indentationLvl += 2;\n        if (tmp === null) {\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\n        } else if (typeof tmp === 'object') {\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\n        } else {\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\n        }\n        ctx.indentationLvl -= 2;\n      } catch (err) {\n        const message = `<Inspection threw (${err.message})>`;\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\n      }\n    } else {\n      str = ctx.stylize(`[${label}]`\x2C sp);\n    }\n  } else if (desc.set !== undefined) {\n    str = ctx.stylize('[Setter]'\x2C 'special');\n  } else {\n    str = ctx.stylize('undefined'\x2C 'undefined');\n  }\n  if (type === kArrayType) {\n    return str;\n  }\n  if (typeof key === 'symbol') {\n    const tmp = StringPrototypeReplace(\n      SymbolPrototypeToString(key)\x2C\n      strEscapeSequencesReplacer\x2C escapeFn\n    );\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\n  } else if (key === '__proto__') {\n    name = "['__proto__']";\n  } else if (desc.enumerable === false) {\n    const tmp = StringPrototypeReplace(key\x2C\n                                       strEscapeSequencesReplacer\x2C escapeFn);\n    name = `[${tmp}]`;\n  } else if (RegExpPrototypeTest(keyStrRegExp\x2C key)) {\n    name = ctx.stylize(key\x2C 'name');\n  } else {\n    name = ctx.stylize(strEscape(key)\x2C 'string');\n  }\n  return `${name}:${extra}${str}`;\n}\n\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\n  // length of at least `output.length`. In addition\x2C some cases have a\n  // whitespace in-between each other that is added to the total as well.\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n  // function. Check the performance overhead and make it an opt-in in case it's\n  // significant.\n  let totalLength = output.length + start;\n  if (totalLength + output.length > ctx.breakLength)\n    return false;\n  for (let i = 0; i < output.length; i++) {\n    if (ctx.colors) {\n      totalLength += removeColors(output[i]).length;\n    } else {\n      totalLength += output[i].length;\n    }\n    if (totalLength > ctx.breakLength) {\n      return false;\n    }\n  }\n  // Do not line up properties on the same line if `base` contains line breaks.\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\n}\n\nfunction reduceToSingleString(\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\n  if (ctx.compact !== true) {\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\n      // Memorize the original output length. In case the output is grouped\x2C\n      // prevent lining up the entries on a single line.\n      const entries = output.length;\n      // Group array elements together if the array contains at least six\n      // separate entries.\n      if (extrasType === kArrayExtrasType && entries > 6) {\n        output = groupArrayElements(ctx\x2C output\x2C value);\n      }\n      // `ctx.currentDepth` is set to the most inner depth of the currently\n      // inspected object part while `recurseTimes` is the actual current depth\n      // that is inspected.\n      //\n      // Example:\n      //\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\n      //\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\n      // depth of 1.\n      //\n      // Consolidate all entries of the local most inner depth up to\n      // `ctx.compact`\x2C as long as the properties are smaller than\n      // `ctx.breakLength`.\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\n          entries === output.length) {\n        // Line up all entries on a single line in case the entries do not\n        // exceed `breakLength`. Add 10 as constant to start next to all other\n        // factors that may reduce `breakLength`.\n        const start = output.length + ctx.indentationLvl +\n                      braces[0].length + base.length + 10;\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\n          return `${base ? `${base} ` : ''}${braces[0]} ${join(output\x2C '\x2C ')}` +\n            ` ${braces[1]}`;\n        }\n      }\n    }\n    // Line up each entry on an individual line.\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\n  }\n  // Line up all entries on a single line in case the entries do not exceed\n  // `breakLength`.\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\n      braces[1];\n  }\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\n  // we need to force the first item to be on the next line or the\n  // items will not line up correctly.\n  const ln = base === '' && braces[0].length === 1 ?\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\n  // Line up each entry on an individual line.\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\n}\n\nfunction hasBuiltInToString(value) {\n  // Prevent triggering proxy traps.\n  const getFullProxy = false;\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\n  if (proxyTarget !== undefined) {\n    value = proxyTarget;\n  }\n\n  // Count objects that have no `toString` function as built-in.\n  if (typeof value.toString !== 'function') {\n    return true;\n  }\n\n  // The object has a own `toString` property. Thus it's not not a built-in one.\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\n    return false;\n  }\n\n  // Find the object that has the `toString` property as own property in the\n  // prototype chain.\n  let pointer = value;\n  do {\n    pointer = ObjectGetPrototypeOf(pointer);\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\n\n  // Check closer if the object is a built-in.\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\n  return descriptor !== undefined &&\n    typeof descriptor.value === 'function' &&\n    builtInObjects.has(descriptor.value.name);\n}\n\nconst firstErrorLine = (error) =>\n  StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\nlet CIRCULAR_ERROR_MESSAGE;\nfunction tryStringify(arg) {\n  try {\n    return JSONStringify(arg);\n  } catch (err) {\n    // Populate the circular error message lazily\n    if (!CIRCULAR_ERROR_MESSAGE) {\n      try {\n        const a = {}; a.a = a; JSONStringify(a);\n      } catch (err) {\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(err);\n      }\n    }\n    if (err.name === 'TypeError' &&\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\n      return '[Circular]';\n    }\n    throw err;\n  }\n}\n\nfunction format(...args) {\n  return formatWithOptionsInternal(undefined\x2C args);\n}\n\nfunction formatWithOptions(inspectOptions\x2C ...args) {\n  if (typeof inspectOptions !== 'object' || inspectOptions === null) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'inspectOptions'\x2C 'object'\x2C inspectOptions);\n  }\n  return formatWithOptionsInternal(inspectOptions\x2C args);\n}\n\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\n  const first = args[0];\n  let a = 0;\n  let str = '';\n  let join = '';\n\n  if (typeof first === 'string') {\n    if (args.length === 1) {\n      return first;\n    }\n    let tempStr;\n    let lastPos = 0;\n\n    for (let i = 0; i < first.length - 1; i++) {\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\n        if (a + 1 !== args.length) {\n          switch (nextChar) {\n            case 115: // 's'\n              const tempArg = args[++a];\n              if (typeof tempArg === 'number') {\n                tempStr = formatNumber(stylizeNoColor\x2C tempArg);\n              } else if (typeof tempArg === 'bigint') {\n                tempStr = `${tempArg}n`;\n              } else if (typeof tempArg !== 'object' ||\n                         tempArg === null ||\n                         !hasBuiltInToString(tempArg)) {\n                tempStr = String(tempArg);\n              } else {\n                tempStr = inspect(tempArg\x2C {\n                  ...inspectOptions\x2C\n                  compact: 3\x2C\n                  colors: false\x2C\n                  depth: 0\n                });\n              }\n              break;\n            case 106: // 'j'\n              tempStr = tryStringify(args[++a]);\n              break;\n            case 100: // 'd'\n              const tempNum = args[++a];\n              if (typeof tempNum === 'bigint') {\n                tempStr = `${tempNum}n`;\n              } else if (typeof tempNum === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumber(stylizeNoColor\x2C Number(tempNum));\n              }\n              break;\n            case 79: // 'O'\n              tempStr = inspect(args[++a]\x2C inspectOptions);\n              break;\n            case 111: // 'o'\n              tempStr = inspect(args[++a]\x2C {\n                ...inspectOptions\x2C\n                showHidden: true\x2C\n                showProxy: true\x2C\n                depth: 4\n              });\n              break;\n            case 105: // 'i'\n              const tempInteger = args[++a];\n              if (typeof tempInteger === 'bigint') {\n                tempStr = `${tempInteger}n`;\n              } else if (typeof tempInteger === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumber(stylizeNoColor\x2C\n                                       NumberParseInt(tempInteger));\n              }\n              break;\n            case 102: // 'f'\n              const tempFloat = args[++a];\n              if (typeof tempFloat === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumber(stylizeNoColor\x2C\n                                       NumberParseFloat(tempFloat));\n              }\n              break;\n            case 99: // 'c'\n              a += 1;\n              tempStr = '';\n              break;\n            case 37: // '%'\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\n              lastPos = i + 1;\n              continue;\n            default: // Any other character is not a correct placeholder\n              continue;\n          }\n          if (lastPos !== i - 1) {\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\n          }\n          str += tempStr;\n          lastPos = i + 1;\n        } else if (nextChar === 37) {\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\n          lastPos = i + 1;\n        }\n      }\n    }\n    if (lastPos !== 0) {\n      a++;\n      join = ' ';\n      if (lastPos < first.length) {\n        str += StringPrototypeSlice(first\x2C lastPos);\n      }\n    }\n  }\n\n  while (a < args.length) {\n    const value = args[a];\n    str += join;\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\n    join = ' ';\n    a++;\n  }\n  return str;\n}\n\nif (internalBinding('config').hasIntl) {\n  const icu = internalBinding('icu');\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\n  // best thing possible at the moment\x2C since it's difficult to know what\n  // the receiving end supports.\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\n    let width = 0;\n\n    if (removeControlChars)\n      str = stripVTControlCharacters(str);\n    for (let i = 0; i < str.length; i++) {\n      // Try to avoid calling into C++ by first handling the ASCII portion of\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\n      const code = str.charCodeAt(i);\n      if (code >= 127) {\n        width += icu.getStringWidth(str.slice(i).normalize('NFC'));\n        break;\n      }\n      width += code >= 32 ? 1 : 0;\n    }\n    return width;\n  };\n} else {\n  /**\n   * Returns the number of columns required to display the given string.\n   */\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\n    let width = 0;\n\n    if (removeControlChars)\n      str = stripVTControlCharacters(str);\n    str = StringPrototypeNormalize(str\x2C 'NFC');\n    for (const char of new SafeStringIterator(str)) {\n      const code = StringPrototypeCodePointAt(char\x2C 0);\n      if (isFullWidthCodePoint(code)) {\n        width += 2;\n      } else if (!isZeroWidthCodePoint(code)) {\n        width++;\n      }\n    }\n\n    return width;\n  };\n\n  /**\n   * Returns true if the character represented by a given\n   * Unicode code point is full-width. Otherwise returns false.\n   */\n  const isFullWidthCodePoint = (code) => {\n    // Code points are partially derived from:\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n    return code >= 0x1100 && (\n      code <= 0x115f ||  // Hangul Jamo\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n      (code >= 0x3250 && code <= 0x4dbf) ||\n      // CJK Unified Ideographs .. Yi Radicals\n      (code >= 0x4e00 && code <= 0xa4c6) ||\n      // Hangul Jamo Extended-A\n      (code >= 0xa960 && code <= 0xa97c) ||\n      // Hangul Syllables\n      (code >= 0xac00 && code <= 0xd7a3) ||\n      // CJK Compatibility Ideographs\n      (code >= 0xf900 && code <= 0xfaff) ||\n      // Vertical Forms\n      (code >= 0xfe10 && code <= 0xfe19) ||\n      // CJK Compatibility Forms .. Small Form Variants\n      (code >= 0xfe30 && code <= 0xfe6b) ||\n      // Halfwidth and Fullwidth Forms\n      (code >= 0xff01 && code <= 0xff60) ||\n      (code >= 0xffe0 && code <= 0xffe6) ||\n      // Kana Supplement\n      (code >= 0x1b000 && code <= 0x1b001) ||\n      // Enclosed Ideographic Supplement\n      (code >= 0x1f200 && code <= 0x1f251) ||\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\n      // Emoticons 0x1f600 - 0x1f64f\n      (code >= 0x1f300 && code <= 0x1f64f) ||\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n      (code >= 0x20000 && code <= 0x3fffd)\n    );\n  };\n\n  const isZeroWidthCodePoint = (code) => {\n    return code <= 0x1F || // C0 control codes\n      (code >= 0x7F && code <= 0x9F) || // C1 control codes\n      (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\n      (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\n      // Combining Diacritical Marks for Symbols\n      (code >= 0x20D0 && code <= 0x20FF) ||\n      (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\n      (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\n      (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\n  };\n}\n\n/**\n * Remove all VT control characters. Use to estimate displayed string width.\n */\nfunction stripVTControlCharacters(str) {\n  validateString(str\x2C 'str');\n\n  return str.replace(ansi\x2C '');\n}\n\nmodule.exports = {\n  inspect\x2C\n  format\x2C\n  formatWithOptions\x2C\n  getStringWidth\x2C\n  inspectDefaultOptions\x2C\n  stripVTControlCharacters\n};\n
code-source-info,0x3ba9d55bbf5e,14,10110,10152,C0O10119C4O10148,,
tick,0x1086e5e01,827695,0,0x0,0,0x108a989a0,0x3ba9d55ba30f,0x10dd44be3,0x10dd44865,0x3ba9d55b957a
tick,0x7ff81f29ef20,827732,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x7ff81f29ed86,827759,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x10882c7cc,827782,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x7ff81f267316,827795,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x7ff81f29eec6,827805,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x7ff81f29ed3e,827815,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x7ff81f17428b,827825,0,0x0,3,0x108a8eb80,0x3ba9d55b95a0
tick,0x1087efe2b,827835,0,0x0,3,0x108a8eb80,0x3ba9d55b95b6
code-creation,LazyCompile,10,827850,0x3ba9d55bc2b6,382,inspect node:internal/util/inspect:286:17,0x3ba999214ea0,~
code-source-info,0x3ba9d55bc2b6,14,8068,10015,C0O8068C2O8119C9O8208C15O8240C18O8262C28O8285C31O8307C41O8326C44O8348C54O8375C57O8397C67O8427C70O8449C80O8480C83O8502C93O8539C96O8561C106O8595C109O8617C119O8643C122O8665C132O8686C135O8708C145O8729C148O8751C159O8780C166O8787C171O8829C178O8836C183O8849C185O8862C190O8891C192O8912C195O8901C199O8945C206O8952C213O8968C218O8997C220O9019C223O9008C227O9076C233O9115C235O9130C241O9149C245O9183C250O9183C255O9220C257O9235C261O9225C266O9270C268O9277C272O9471C279O9516C282O9486C291O9561C296O9588C298O9603C301O9597C307O9633C313O9741C315O9757C319O9245C324O9207C327O9803C333O9811C335O9823C339O9853C345O9899C348O9897C352O9919C358O9967C361O9965C365O9979C376O9986C381O10013,,
code-creation,LazyCompile,10,828220,0x3ba9d55bc816,460,formatValue node:internal/util/inspect:726:21,0x3ba9992154c0,~
code-source-info,0x3ba9d55bc
code-creation,LazyCompile,10,828928,0x3ba9d55bd2ae,3322,formatRaw node:internal/util/inspect:796:19,0x3ba999215510,~
code-source-info,0x3ba9d55bd2ae
code-creation,LazyCompile,10,829516,0x3ba9d55be636,311,getConstructorName node:internal/util/inspect:548:28,0x3ba9992152e0,~
code-source-info,0x3ba9d55be
code-creation,LazyCompile,10,829633,0x3ba9d55be8fe,13,isInstanceof node:internal/util/inspect:540:22,0x3ba999215290,~
code-source-info,0x3ba9d55be8fe,14,15846,15943,C3O15876C5O15890C8O15907C11O15924C12O15937,,
code-creation,LazyCompile,10,829750,0x3ba9d55beb06,223,getKeys node:internal/util/inspect:669:17,0x3ba9992153d0,~
code-source-info,0x3ba9d55beb06,14,19667,20642,C0O19667C9O19695C11O19719C21O19719C26O19757C30O19779C40O19786C45O19836C51O19843C56O19856C63O19856C73O20216C83O20223C91O20221C101O20268C112O20275C118O20275C127O20301C134O20306C143O20343C151O20343C156O20268C160O20382C172O20389C179O20445C185O20452C190O20482C195O20546C206O20576C209O20576C215O20546C220O20628C222O20640,,
code-creation,LazyCompile,10,829845,0x3ba9d55bed46,19,isError node:internal/util:80:17,0x3ba960969c18,~
code-source-info,0x3ba9d55bed46,12,1846,2080,C0O2032C5O2039C13O2072C15O2061C18O2078,,
code-creation,LazyCompile,10,830112,0x3ba9d55bf146,1166,formatError node:internal/util/inspect:1165:21,0x3ba9992156a0,~
code-source-info,0x3ba9d55bf
code-creation,LazyCompile,10,830388,0x3ba9d55bf8fe,158,getPrefix node:internal/util/inspect:654:19,0x3ba999215380,~
code-source-info,0x3ba9d55bf8fe,14,19245,19614,C20O19289C24O19321C26O19329C33O19348C38O19365C43O19376C50O19387C63O19413C73O19421C74O19432C79O19443C86O19454C96O19479C97O19487C99O19495C106O19517C111O19532C117O19556C130O19565C140O19573C141O19580C147O19604C157O19612,,
tick,0x7ff81f269ae6,830457,0,0x0,3,0x108a8eb80,0x3ba9d55bc9dc,0x3ba9d55bc42e,0x3ba9d55b95b6
tick,0x7ff81f29ed34,830492,0,0x0,3,0x108a8eb80,0x3ba9d55bd8ce,0x3ba9d55bc9dc,0x3ba9d55bc42e,0x3ba9d55b95b6
code-creation,LazyCompile,10,830596,0x3ba9d55bfaae,21,exists node:internal/bootstrap/loaders:236:16,0x3ba96094f5f0,~
code-source-info,0x3ba9d55bfaae,9,7275,7322,C0O7286C5O7306C10O7310C15O7310C20O7318,,
code-creation,LazyCompile,10,830685,0x3ba9d55bfc06,82,stylizeWithColor node:internal/util/inspect:521:26,0x3ba9992151a0,~
code-source-info,0x3ba9d55bfc06,14,15408,15649,C0O15443C3O15451C10O15457C14O15472C16O15517C19O15525C26O15531C30O15544C32O15575C36O15597C52O15604C65O15622C78O15629C79O15636C81O15647,,
code-creation,LazyCompile,10,830795,0x3ba9d55bfd3e,6,get node:internal/util/inspect:409:8,0x3ba999214f90,~
code-source-info,0x3ba9d55bfd3e,14,12107,12144,C0O12118C2O12129C5O12138,,
code-creation,RegExp,3,830972,0x10dd4af20,2052,^    at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$
code-creation,LazyCompile,10,831056,0x3ba9d55bfe3e,3,getEmptyFormatArray node:internal/util/inspect:536:29,0x3ba999215240,~
code-source-info,0x3ba9d55bfe3e,14,15804,15823,C0O15811C2O15821,,
code-creation,LazyCompile,10,831336,0x3ba9db13f3fe,1000,formatProperty node:internal/util/inspect:1672:24,0x3ba999215ce0,~
code-source-info,0x3ba9db13f3fe
code-creation,LazyCompile,10,831563,0x3ba9db13f9fe,11,isUndetectableObject node:internal/util/inspect:156:30,0x3ba999212de0,~
code-source-info,0x3ba9db13f9fe,14,3085,3135,C0O3117C9O3122C10O3135,,
code-creation,LazyCompile,10,831713,0x3ba9db13fc86,364,formatPrimitive node:internal/util/inspect:1382:25,0x3ba999215830,~
code-source-info,0x3ba9db13fc86,14,45832,46991,C0O45832C9O45853C15O45904C18O45922C23O45935C27O45929C32O45984C37O45997C41O45991C45O46034C52O46047C57O46034C65O46071C70O46088C83O46125C99O46161C105O46169C110O46296C119O46305C121O46303C126O46337C131O46350C136O46368C140O46362C143O46383C146O46344C151O46418C161O46418C167O46443C177O46444C183O46497C194O46514C199O46525C203O46540C207O46514C217O46498C225O46548C228O46558C229O46569C237O46579C245O46576C253O46607C256O46617C257O46624C263O46659C271O46666C276O46690C277O46693C283O46728C291O46735C296O46759C297O46762C303O46798C308O46811C313O46805C318O46831C319O46834C325O46872C334O46879C339O46908C340O46937C347O46947C350O46947C358O46944C363O46989,,
code-creation,LazyCompile,10,831967,0x3ba985bbec4e,359,strEscape node:internal/util/inspect:465:19,0x3ba999215150,~
code-source-info,0x3ba985bbec4e
code-creation,LazyCompile,10,832134,0x3ba985bbef66,62,addQuotes node:internal/util/inspect:451:19,0x3ba9992150b0,~
code-source-info,0x3ba985bbef66,14,13279,13419,C0O13297C2O13308C7O13322C12O13333C22O13340C23O13347C25O13358C30O13372C35O13384C45O13392C46O13399C51O13410C61O13417,,
code-creation,RegExp,3,832303,0x10dd4b7a0,964,^[a-zA-Z_][a-zA-Z_0-9]*$
tick,0x1088334e6,832367,0,0x0,3,0x108a8eb80,0x3ba9d55bdcc9,0x3ba9d55bc9dc,0x3ba9d55bc42e,0x3ba9d55b95b6
code-creation,LazyCompile,10,832489,0x3ba985bbf196,575,reduceToSingleString node:internal/util/inspect:1764:30,0x3ba999215d80,~
code-source-info,0x3ba985bbf
code-creation,LazyCompile,10,832676,0x3ba985bbf5de,134,isBelowBreakLength node:internal/util/inspect:1740:28,0x3ba999215d30,~
code-source-info,0x3ba985bbf5de,14,58228,59159,C0O58681C7O58688C11O58724C15O58715C19O58737C23O58731C28O58754C29O58767C30O58783C32O58797C36O58788C41O58824C47O58840C49O58855C54O58874C58O58855C63O58878C76O58906C78O58927C82O58931C93O58971C97O58965C102O58992C103O59005C104O58806C109O58770C112O59098C114O59110C121O59121C127O59121C133O59157,,
tick,0x108ea0720,832835,0,0x0,0,0x3ba9d55bdf39,0x3ba9d55bc9dc,0x3ba9d55bc42e,0x3ba9d55b95b6
code-creation,LazyCompile,10,833210,0x3ba985bbf796,75,join node:internal/util:378:14,0x3ba96096a450,~
code-source-info,0x3ba985bbf796,12,10457,10766,C0O10491C3O10508C9O10515C14O10553C18O10560C22O10582C24O10587C26O10587C31O10669C33O10682C43O10693C45O10700C52O10601C57O10569C60O10721C62O10734C72O10753C74O10764,,
tick,0x7ff81f269ae6,834319,0,0x0,0
